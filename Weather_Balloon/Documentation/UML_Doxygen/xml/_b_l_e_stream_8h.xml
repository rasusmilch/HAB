<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_b_l_e_stream_8h" kind="file" language="C++">
    <compoundname>BLEStream.h</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes local="no">BLEPeripheral.h</includes>
    <incdepgraph>
      <node id="799">
        <label>BLEPeripheral.h</label>
      </node>
      <node id="798">
        <label>Arduino.h</label>
      </node>
      <node id="797">
        <label>Weather_Balloon/library/Firmata/utility/BLEStream.h</label>
        <link refid="BLEStream.h"/>
        <childnode refid="798" relation="include">
        </childnode>
        <childnode refid="799" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_b_l_e_stream" prot="public">BLEStream</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_b_l_e_stream_8h_1ad3db4206b1c246fdf1f42e7aa4dccdf8" prot="public" static="no">
        <name>_MAX_ATTR_DATA_LEN_</name>
        <initializer>BLE_ATTRIBUTE_MAX_VALUE_LENGTH</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/utility/BLEStream.h" line="19" column="12" bodyfile="Weather_Balloon/library/Firmata/utility/BLEStream.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_b_l_e_stream_8h_1a4a57a8ae20f942b0efd99e670d66dad0" prot="public" static="no">
        <name>BLESTREAM_TXBUFFER_FLUSH_INTERVAL</name>
        <initializer>80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/utility/BLEStream.h" line="22" column="9" bodyfile="Weather_Balloon/library/Firmata/utility/BLEStream.h" bodystart="22" bodyend="-1"/>
        <referencedby refid="class_b_l_e_stream_1aa12f9098b653a30c2a152f647ab8bdfa" compoundref="_b_l_e_stream_8h" startline="78" endline="99">BLEStream::BLEStream</referencedby>
      </memberdef>
      <memberdef kind="define" id="_b_l_e_stream_8h_1a2b68e96a5633949348a489d1ac2ef025" prot="public" static="no">
        <name>BLESTREAM_MIN_FLUSH_INTERVAL</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/utility/BLEStream.h" line="23" column="9" bodyfile="Weather_Balloon/library/Firmata/utility/BLEStream.h" bodystart="23" bodyend="-1"/>
        <referencedby refid="class_b_l_e_stream_1ab05a77032b59c6d3525390e7e6a768ab" compoundref="_b_l_e_stream_8h" startline="217" endline="222">BLEStream::setFlushInterval</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>BLEStream.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Based<sp/>on<sp/>BLESerial.cpp<sp/>by<sp/>Voita<sp/>Molda</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>https://github.com/sandeepmistry/arduino-BLEPeripheral/blob/master/examples/serial/BLESerial.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Last<sp/>updated<sp/>April<sp/>4th,<sp/>2016</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_BLE_STREAM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_BLE_STREAM_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_VARIANT_ARDUINO_101_X_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CurieBLE.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MAX_ATTR_DATA_LEN_<sp/>BLE_MAX_ATTR_DATA_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;BLEPeripheral.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="_b_l_e_stream_8h_1ad3db4206b1c246fdf1f42e7aa4dccdf8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MAX_ATTR_DATA_LEN_<sp/>BLE_ATTRIBUTE_MAX_VALUE_LENGTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="_b_l_e_stream_8h_1a4a57a8ae20f942b0efd99e670d66dad0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLESTREAM_TXBUFFER_FLUSH_INTERVAL<sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_b_l_e_stream_8h_1a2b68e96a5633949348a489d1ac2ef025" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLESTREAM_MIN_FLUSH_INTERVAL<sp/>8<sp/>//<sp/>minimum<sp/>interval<sp/>for<sp/>flushing<sp/>the<sp/>TX<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>BLE_SERIAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_b_l_e_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_l_e_stream" kindref="compound">BLEStream</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>BLEPeripheral,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Stream</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_e_stream_1aa12f9098b653a30c2a152f647ab8bdfa" kindref="member">BLEStream</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>req<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rdy<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rst<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a7cef0d2f7dc431608483c3911e68bb56" kindref="member">begin</ref>(...);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a58d4d0684a7c9f5434736af31ea2ab98" kindref="member">poll</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a2f571566304b41339d8a74cee6f98d2d" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1ab05a77032b59c6d3525390e7e6a768ab" kindref="member">setFlushInterval</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a9b8dd79faf553535df6b68a8d572c8e2" kindref="member">available</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a932edda09fadf9530e2b87bed4d88bed" kindref="member">peek</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a607238a23059d0dbe133c3358e7c42ca" kindref="member">read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1af22a00b80511025785543d107422874a" kindref="member">flush</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1ad3e299ba3ad439d077f1b7bb74617698" kindref="member">write</ref>(uint8_t<sp/>byte);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Print::write;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_connected;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>_flushed;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_flushInterval;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream" kindref="compound">BLEStream</ref>*<sp/>_instance;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_rxHead;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_rxTail;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_rxCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>_rxBuffer[256];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_txCount;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>_txBuffer[<ref refid="_b_l_e_stream_8h_1ad3db4206b1c246fdf1f42e7aa4dccdf8" kindref="member">_MAX_ATTR_DATA_LEN_</ref>];</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>BLEService<sp/>_uartService<sp/>=<sp/>BLEService(</highlight><highlight class="stringliteral">&quot;6E400001-B5A3-F393-E0A9-E50E24DCCA9E&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>BLEDescriptor<sp/>_uartNameDescriptor<sp/>=<sp/>BLEDescriptor(</highlight><highlight class="stringliteral">&quot;2901&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UART&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>BLECharacteristic<sp/>_rxCharacteristic<sp/>=<sp/>BLECharacteristic(</highlight><highlight class="stringliteral">&quot;6E400002-B5A3-F393-E0A9-E50E24DCCA9E&quot;</highlight><highlight class="normal">,<sp/>BLEWriteWithoutResponse,<sp/><ref refid="_b_l_e_stream_8h_1ad3db4206b1c246fdf1f42e7aa4dccdf8" kindref="member">_MAX_ATTR_DATA_LEN_</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>BLEDescriptor<sp/>_rxNameDescriptor<sp/>=<sp/>BLEDescriptor(</highlight><highlight class="stringliteral">&quot;2901&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;RX<sp/>-<sp/>Receive<sp/>Data<sp/>(Write)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>BLECharacteristic<sp/>_txCharacteristic<sp/>=<sp/>BLECharacteristic(</highlight><highlight class="stringliteral">&quot;6E400003-B5A3-F393-E0A9-E50E24DCCA9E&quot;</highlight><highlight class="normal">,<sp/>BLENotify,<sp/><ref refid="_b_l_e_stream_8h_1ad3db4206b1c246fdf1f42e7aa4dccdf8" kindref="member">_MAX_ATTR_DATA_LEN_</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>BLEDescriptor<sp/>_txNameDescriptor<sp/>=<sp/>BLEDescriptor(</highlight><highlight class="stringliteral">&quot;2901&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;TX<sp/>-<sp/>Transfer<sp/>Data<sp/>(Notify)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_received(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_received(BLECentral&amp;<sp/></highlight><highlight class="comment">/*central*/</highlight><highlight class="normal">,<sp/>BLECharacteristic&amp;<sp/>rxCharacteristic);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>BLEStream.cpp</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>Copied<sp/>here<sp/>as<sp/>a<sp/>hack<sp/>to<sp/>avoid<sp/>having<sp/>to<sp/>install<sp/>the<sp/>BLEPeripheral<sp/>libarary<sp/>even<sp/>if<sp/>it&apos;s</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>not<sp/>needed.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="class_b_l_e_stream" kindref="compound">BLEStream</ref>*<sp/>BLEStream::_instance<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_b_l_e_stream_1aa12f9098b653a30c2a152f647ab8bdfa" refkind="member"><highlight class="normal"><ref refid="class_b_l_e_stream_1aa12f9098b653a30c2a152f647ab8bdfa" kindref="member">BLEStream::BLEStream</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>req,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rdy,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>rst)<sp/>:</highlight></codeline>
<codeline lineno="79"><highlight class="normal">#if<sp/>defined(_VARIANT_ARDUINO_101_X_)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>BLEPeripheral()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">#else</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>BLEPeripheral(req,<sp/>rdy,<sp/>rst)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>this-&gt;_txCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>this-&gt;_rxHead<sp/>=<sp/>this-&gt;_rxTail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>this-&gt;_flushed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>this-&gt;_flushInterval<sp/>=<sp/><ref refid="_b_l_e_stream_8h_1a4a57a8ae20f942b0efd99e670d66dad0" kindref="member">BLESTREAM_TXBUFFER_FLUSH_INTERVAL</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>BLEStream::_instance<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>addAttribute(this-&gt;_uartService);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>addAttribute(this-&gt;_uartNameDescriptor);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>setAdvertisedServiceUuid(this-&gt;_uartService.uuid());</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>addAttribute(this-&gt;_rxCharacteristic);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>addAttribute(this-&gt;_rxNameDescriptor);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>this-&gt;_rxCharacteristic.setEventHandler(BLEWritten,<sp/>BLEStream::_received);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>addAttribute(this-&gt;_txCharacteristic);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>addAttribute(this-&gt;_txNameDescriptor);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_b_l_e_stream_1a7cef0d2f7dc431608483c3911e68bb56" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a7cef0d2f7dc431608483c3911e68bb56" kindref="member">BLEStream::begin</ref>(...)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>BLEPeripheral::begin();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLE_SERIAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;BLEStream::begin()&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_b_l_e_stream_1a58d4d0684a7c9f5434736af31ea2ab98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a58d4d0684a7c9f5434736af31ea2ab98" kindref="member">BLEStream::poll</ref>()</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BLEPeripheral::poll<sp/>is<sp/>called<sp/>each<sp/>time<sp/>connected()<sp/>is<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>this-&gt;_connected<sp/>=<sp/>BLEPeripheral::connected();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(millis()<sp/>&gt;<sp/>this-&gt;_flushed<sp/>+<sp/>this-&gt;_flushInterval)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_e_stream_1af22a00b80511025785543d107422874a" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;_connected;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_b_l_e_stream_1a2f571566304b41339d8a74cee6f98d2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a2f571566304b41339d8a74cee6f98d2d" kindref="member">BLEStream::end</ref>()</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>this-&gt;_rxCharacteristic.setEventHandler(BLEWritten,<sp/>NULL);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>this-&gt;_rxHead<sp/>=<sp/>this-&gt;_rxTail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_e_stream_1af22a00b80511025785543d107422874a" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>BLEPeripheral::disconnect();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_b_l_e_stream_1a9b8dd79faf553535df6b68a8d572c8e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a9b8dd79faf553535df6b68a8d572c8e2" kindref="member">BLEStream::available</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BLEPeripheral::poll<sp/>only<sp/>calls<sp/>delay(1)<sp/>in<sp/>CurieBLE<sp/>so<sp/>skipping<sp/>it<sp/>here<sp/>to<sp/>avoid<sp/>the<sp/>delay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_VARIANT_ARDUINO_101_X_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Need<sp/>to<sp/>do<sp/>more<sp/>testing<sp/>to<sp/>determine<sp/>if<sp/>all<sp/>of<sp/>these<sp/>calls<sp/>to<sp/>BLEPeripheral::poll<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>actually<sp/>necessary.<sp/>Seems<sp/>to<sp/>run<sp/>fine<sp/>without<sp/>them,<sp/>but<sp/>only<sp/>minimal<sp/>testing<sp/>so<sp/>far.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>BLEPeripheral::poll();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>(this-&gt;_rxHead<sp/>-<sp/>this-&gt;_rxTail<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;_rxBuffer))<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;_rxBuffer);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLE_SERIAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;BLEStream::available()<sp/>=<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(retval);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_b_l_e_stream_1a932edda09fadf9530e2b87bed4d88bed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a932edda09fadf9530e2b87bed4d88bed" kindref="member">BLEStream::peek</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_VARIANT_ARDUINO_101_X_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>BLEPeripheral::poll();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_rxTail<sp/>==<sp/>this-&gt;_rxHead)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>this-&gt;_rxBuffer[this-&gt;_rxTail];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLE_SERIAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;BLEStream::peek()<sp/>=<sp/>0x&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>Serial.println(byte,<sp/>HEX);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>byte;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_b_l_e_stream_1a607238a23059d0dbe133c3358e7c42ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1a607238a23059d0dbe133c3358e7c42ca" kindref="member">BLEStream::read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_VARIANT_ARDUINO_101_X_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>BLEPeripheral::poll();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_rxTail<sp/>==<sp/>this-&gt;_rxHead)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>this-&gt;_rxTail<sp/>=<sp/>(this-&gt;_rxTail<sp/>+<sp/>1)<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;_rxBuffer);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>uint8_t<sp/>byte<sp/>=<sp/>this-&gt;_rxBuffer[this-&gt;_rxTail];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLE_SERIAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;BLEStream::read()<sp/>=<sp/>0x&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>Serial.println(byte,<sp/>HEX);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>byte;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_b_l_e_stream_1af22a00b80511025785543d107422874a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1af22a00b80511025785543d107422874a" kindref="member">BLEStream::flush</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_txCount<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_VARIANT_ARDUINO_101_X_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>there<sp/>are<sp/>available<sp/>packets<sp/>before<sp/>sending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!this-&gt;_txCharacteristic.canNotify())<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>BLEPeripheral::poll();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>this-&gt;_txCharacteristic.setValue(this-&gt;_txBuffer,<sp/>this-&gt;_txCount);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>this-&gt;_flushed<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>this-&gt;_txCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLE_SERIAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;BLEStream::flush()&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="class_b_l_e_stream_1ad3e299ba3ad439d077f1b7bb74617698" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1ad3e299ba3ad439d077f1b7bb74617698" kindref="member">BLEStream::write</ref>(uint8_t<sp/>byte)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_VARIANT_ARDUINO_101_X_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>BLEPeripheral::poll();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_txCharacteristic.subscribed()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>this-&gt;_txBuffer[this-&gt;_txCount++]<sp/>=<sp/>byte;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;_txCount<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;_txBuffer))<sp/><ref refid="class_b_l_e_stream_1af22a00b80511025785543d107422874a" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLE_SERIAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;BLEStream::write(<sp/>0x&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>Serial.print(byte,<sp/>HEX);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;)<sp/>=<sp/>1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="class_b_l_e_stream_1aded76dc2283104566c13fed9755e21f5" refkind="member"><highlight class="normal">BLEStream::operator<sp/>bool()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>this-&gt;_connected<sp/>=<sp/>BLEPeripheral::connected();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLE_SERIAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;BLEStream::operator<sp/>bool()<sp/>=<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>Serial.println(retval);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="class_b_l_e_stream_1ab05a77032b59c6d3525390e7e6a768ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_l_e_stream_1ab05a77032b59c6d3525390e7e6a768ab" kindref="member">BLEStream::setFlushInterval</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interval)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interval<sp/>&gt;<sp/><ref refid="_b_l_e_stream_8h_1a2b68e96a5633949348a489d1ac2ef025" kindref="member">BLESTREAM_MIN_FLUSH_INTERVAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_flushInterval<sp/>=<sp/>interval;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BLEStream::_received(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>size;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_rxHead<sp/>=<sp/>(this-&gt;_rxHead<sp/>+<sp/>1)<sp/>%<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(this-&gt;_rxBuffer);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;_rxBuffer[this-&gt;_rxHead]<sp/>=<sp/>data[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BLE_SERIAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;BLEStream::received(&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>size;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>Serial.print(data[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>],<sp/>HEX);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BLEStream::_received(BLECentral&amp;<sp/></highlight><highlight class="comment">/*central*/</highlight><highlight class="normal">,<sp/>BLECharacteristic&amp;<sp/>rxCharacteristic)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>BLEStream::_instance-&gt;_received(rxCharacteristic.value(),<sp/>rxCharacteristic.valueLength());</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_BLE_STREAM_H_</highlight></codeline>
    </programlisting>
    <location file="Weather_Balloon/library/Firmata/utility/BLEStream.h"/>
  </compounddef>
</doxygen>
