<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_boards_8h" kind="file" language="C++">
    <compoundname>Boards.h</compoundname>
    <includes local="no">inttypes.h</includes>
    <includes local="yes">WProgram.h</includes>
    <includedby refid="_firmata_8h" local="yes">Weather_Balloon/library/Firmata/Firmata.h</includedby>
    <incdepgraph>
      <node id="758">
        <label>WProgram.h</label>
      </node>
      <node id="756">
        <label>Weather_Balloon/library/Firmata/Boards.h</label>
        <link refid="Boards.h"/>
        <childnode refid="757" relation="include">
        </childnode>
        <childnode refid="758" relation="include">
        </childnode>
      </node>
      <node id="757">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="762">
        <label>Weather_Balloon/library/Firmata/utility/FirmataFeature.h</label>
        <link refid="_firmata_feature_8h"/>
        <childnode refid="763" relation="include">
        </childnode>
      </node>
      <node id="764">
        <label>Weather_Balloon/library/Firmata/utility/SerialFirmata.cpp</label>
        <link refid="_serial_firmata_8cpp"/>
      </node>
      <node id="761">
        <label>Weather_Balloon/library/Firmata/Firmata.cpp</label>
        <link refid="_firmata_8cpp"/>
      </node>
      <node id="760">
        <label>Weather_Balloon/library/Firmata/Firmata.h</label>
        <link refid="_firmata_8h"/>
        <childnode refid="761" relation="include">
        </childnode>
        <childnode refid="762" relation="include">
        </childnode>
        <childnode refid="763" relation="include">
        </childnode>
      </node>
      <node id="759">
        <label>Weather_Balloon/library/Firmata/Boards.h</label>
        <link refid="Boards.h"/>
        <childnode refid="760" relation="include">
        </childnode>
      </node>
      <node id="763">
        <label>Weather_Balloon/library/Firmata/utility/SerialFirmata.h</label>
        <link refid="_serial_firmata_8h"/>
        <childnode refid="764" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_boards_8h_1a4259c40a55e489ed25c9f3cbb3be05ab" prot="public" static="no">
        <name>MAX_SERVOS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/Boards.h" line="32" column="9" bodyfile="Weather_Balloon/library/Firmata/Boards.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_boards_8h_1a11c7376fac4b3bbbee0287ec2f25f0b1" prot="public" static="no">
        <name>digitalPinHasPWM</name>
        <param><defname>p</defname></param>
        <initializer>IS_PIN_DIGITAL(p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/Boards.h" line="141" column="9" bodyfile="Weather_Balloon/library/Firmata/Boards.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_boards_8h_1a8a60c5a77f46ac40521843cb5648ddd6" prot="public" static="no">
        <name>IS_PIN_SPI</name>
        <param><defname>p</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/Boards.h" line="743" column="9" bodyfile="Weather_Balloon/library/Firmata/Boards.h" bodystart="743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_boards_8h_1a1ad05c1c9edb5c67ecfc8f43e2899aea" prot="public" static="no">
        <name>IS_PIN_SERIAL</name>
        <param><defname>p</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/Boards.h" line="747" column="9" bodyfile="Weather_Balloon/library/Firmata/Boards.h" bodystart="747" bodyend="-1"/>
        <referencedby refid="class_serial_firmata_1af383474fc3a6d1d372489046bbcabc3b" compoundref="_serial_firmata_8cpp" startline="44" endline="50">SerialFirmata::handleCapability</referencedby>
      </memberdef>
      <memberdef kind="define" id="_boards_8h_1a8a23467a2dc1293fa6f5d2c636504567" prot="public" static="no">
        <name>DEFAULT_PWM_RESOLUTION</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/Boards.h" line="751" column="9" bodyfile="Weather_Balloon/library/Firmata/Boards.h" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_boards_8h_1ac09e90aa2c3b346c4b2be2346c4550db" prot="public" static="no">
        <name>TOTAL_PORTS</name>
        <initializer>((TOTAL_PINS + 7) / 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/Boards.h" line="831" column="9" bodyfile="Weather_Balloon/library/Firmata/Boards.h" bodystart="831" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_boards_8h_1a753371ccf3e1bf98d7fdba9bffc5bf46" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>static unsigned char unused</definition>
        <argsstring></argsstring>
        <name>unused</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/Boards.h" line="758" column="1" bodyfile="Weather_Balloon/library/Firmata/Boards.h" bodystart="758" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_boards_8h_1ac95f08e7e967b198a0b67ab1926fd884" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char</type>
        <definition>static unsigned char readPort</definition>
        <argsstring>(byte, byte) __attribute__((always_inline</argsstring>
        <name>readPort</name>
        <param>
          <type>byte</type>
          <defname>port</defname>
        </param>
        <param>
          <type>byte</type>
          <defname>bitmask</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/Boards.h" line="758" column="1" bodyfile="Weather_Balloon/library/Firmata/Boards.h" bodystart="759" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="_boards_8h_1a6aa7f860c21192d4f30fbee577db003f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned char</type>
        <definition>static unsigned char writePort</definition>
        <argsstring>(byte, byte, byte) __attribute__((always_inline</argsstring>
        <name>writePort</name>
        <param>
          <type>byte</type>
          <defname>port</defname>
        </param>
        <param>
          <type>byte</type>
          <defname>value</defname>
        </param>
        <param>
          <type>byte</type>
          <defname>bitmask</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Firmata/Boards.h" line="784" column="1" bodyfile="Weather_Balloon/library/Firmata/Boards.h" bodystart="785" bodyend="825"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Boards.h<sp/>-<sp/>Hardware<sp/>Abstraction<sp/>Layer<sp/>for<sp/>Firmata<sp/>library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2006-2008<sp/>Hans-Christoph<sp/>Steiner.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Copyright<sp/>(C)<sp/>2009-2016<sp/>Jeff<sp/>Hoefs.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>See<sp/>file<sp/>LICENSE.txt<sp/>for<sp/>further<sp/>informations<sp/>on<sp/>licensing<sp/>terms.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>Last<sp/>updated<sp/>October<sp/>16th,<sp/>2016</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Firmata_Boards_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Firmata_Boards_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARDUINO)<sp/>&amp;&amp;<sp/>ARDUINO<sp/>&gt;=<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>digitalRead,<sp/>digitalWrite,<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;WProgram.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normally<sp/>Servo.h<sp/>must<sp/>be<sp/>included<sp/>before<sp/>Firmata.h<sp/>(which<sp/>then<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>file).<sp/><sp/>If<sp/>Servo.h<sp/>wasn&apos;t<sp/>included,<sp/>this<sp/>allows<sp/>the<sp/>code<sp/>to<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compile,<sp/>but<sp/>without<sp/>support<sp/>for<sp/>any<sp/>Servos.<sp/><sp/>Hopefully<sp/>that&apos;s<sp/>what<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>user<sp/>intended<sp/>by<sp/>not<sp/>including<sp/>Servo.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MAX_SERVOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="_boards_8h_1a4259c40a55e489ed25c9f3cbb3be05ab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/>Firmata<sp/>Hardware<sp/>Abstraction<sp/>Layer</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment">Firmata<sp/>is<sp/>built<sp/>on<sp/>top<sp/>of<sp/>the<sp/>hardware<sp/>abstraction<sp/>functions<sp/>of<sp/>Arduino,</highlight></codeline>
<codeline lineno="39"><highlight class="comment">specifically<sp/>digitalWrite,<sp/>digitalRead,<sp/>analogWrite,<sp/>analogRead,<sp/>and</highlight></codeline>
<codeline lineno="40"><highlight class="comment">pinMode.<sp/><sp/>While<sp/>these<sp/>functions<sp/>offer<sp/>simple<sp/>integer<sp/>pin<sp/>numbers,<sp/>Firmata</highlight></codeline>
<codeline lineno="41"><highlight class="comment">needs<sp/>more<sp/>information<sp/>than<sp/>is<sp/>provided<sp/>by<sp/>Arduino.<sp/><sp/>This<sp/>file<sp/>provides</highlight></codeline>
<codeline lineno="42"><highlight class="comment">all<sp/>other<sp/>hardware<sp/>specific<sp/>details.<sp/><sp/>To<sp/>make<sp/>Firmata<sp/>support<sp/>a<sp/>new<sp/>board,</highlight></codeline>
<codeline lineno="43"><highlight class="comment">only<sp/>this<sp/>file<sp/>should<sp/>require<sp/>editing.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment">The<sp/>key<sp/>concept<sp/>is<sp/>every<sp/>&quot;pin&quot;<sp/>implemented<sp/>by<sp/>Firmata<sp/>may<sp/>be<sp/>mapped<sp/>to</highlight></codeline>
<codeline lineno="46"><highlight class="comment">any<sp/>pin<sp/>as<sp/>implemented<sp/>by<sp/>Arduino.<sp/><sp/>Usually<sp/>a<sp/>simple<sp/>1-to-1<sp/>mapping<sp/>is</highlight></codeline>
<codeline lineno="47"><highlight class="comment">best,<sp/>but<sp/>such<sp/>mapping<sp/>should<sp/>not<sp/>be<sp/>assumed.<sp/><sp/>This<sp/>hardware<sp/>abstraction</highlight></codeline>
<codeline lineno="48"><highlight class="comment">layer<sp/>allows<sp/>Firmata<sp/>to<sp/>implement<sp/>any<sp/>number<sp/>of<sp/>pins<sp/>which<sp/>map<sp/>onto<sp/>the</highlight></codeline>
<codeline lineno="49"><highlight class="comment">Arduino<sp/>implemented<sp/>pins<sp/>in<sp/>almost<sp/>any<sp/>arbitrary<sp/>way.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"></highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight></codeline>
<codeline lineno="52"><highlight class="comment">General<sp/>Constants:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">These<sp/>constants<sp/>provide<sp/>basic<sp/>information<sp/>Firmata<sp/>requires.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">TOTAL_PINS:<sp/>The<sp/>total<sp/>number<sp/>of<sp/>pins<sp/>Firmata<sp/>implemented<sp/>by<sp/>Firmata.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>Usually<sp/>this<sp/>will<sp/>match<sp/>the<sp/>number<sp/>of<sp/>pins<sp/>the<sp/>Arduino<sp/>functions</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/>implement,<sp/>including<sp/>any<sp/>pins<sp/>pins<sp/>capable<sp/>of<sp/>analog<sp/>or<sp/>digital.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/>However,<sp/>Firmata<sp/>may<sp/>implement<sp/>any<sp/>number<sp/>of<sp/>pins.<sp/><sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/>on<sp/>Arduino<sp/>Mini<sp/>with<sp/>8<sp/>analog<sp/>inputs,<sp/>6<sp/>of<sp/>these<sp/>may<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>digital<sp/>functions,<sp/>and<sp/>2<sp/>are<sp/>analog<sp/>only.<sp/><sp/>On<sp/>such<sp/>boards,</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/>Firmata<sp/>can<sp/>implement<sp/>more<sp/>pins<sp/>than<sp/>Arduino&apos;s<sp/>pinMode()</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>function,<sp/>in<sp/>order<sp/>to<sp/>accommodate<sp/>those<sp/>special<sp/>pins.<sp/><sp/>The</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/>Firmata<sp/>protocol<sp/>supports<sp/>a<sp/>maximum<sp/>of<sp/>128<sp/>pins,<sp/>so<sp/>this</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>constant<sp/>must<sp/>not<sp/>exceed<sp/>128.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight></codeline>
<codeline lineno="67"><highlight class="comment">TOTAL_ANALOG_PINS:<sp/>The<sp/>total<sp/>number<sp/>of<sp/>analog<sp/>input<sp/>pins<sp/>implemented.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>Firmata<sp/>protocol<sp/>allows<sp/>up<sp/>to<sp/>16<sp/>analog<sp/>inputs,<sp/>accessed</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>using<sp/>offsets<sp/>0<sp/>to<sp/>15.<sp/><sp/>Because<sp/>Firmata<sp/>presents<sp/>the<sp/>analog</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>inputs<sp/>using<sp/>different<sp/>offsets<sp/>than<sp/>the<sp/>actual<sp/>pin<sp/>numbers</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>(a<sp/>legacy<sp/>of<sp/>Arduino&apos;s<sp/>analogRead<sp/>function,<sp/>and<sp/>the<sp/>way<sp/>the</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>analog<sp/>input<sp/>capable<sp/>pins<sp/>are<sp/>physically<sp/>labeled<sp/>on<sp/>all</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>Arduino<sp/>boards),<sp/>the<sp/>total<sp/>number<sp/>of<sp/>analog<sp/>input<sp/>signals</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>must<sp/>be<sp/>specified.<sp/><sp/>16<sp/>is<sp/>the<sp/>maximum.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">VERSION_BLINK_PIN:<sp/>When<sp/>Firmata<sp/>starts<sp/>up,<sp/>it<sp/>will<sp/>blink<sp/>the<sp/>version</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>number.<sp/><sp/>This<sp/>constant<sp/>is<sp/>the<sp/>Arduino<sp/>pin<sp/>number<sp/>where<sp/>a</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>LED<sp/>is<sp/>connected.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"></highlight></codeline>
<codeline lineno="80"><highlight class="comment"></highlight></codeline>
<codeline lineno="81"><highlight class="comment">Pin<sp/>Mapping<sp/>Macros:</highlight></codeline>
<codeline lineno="82"><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment">These<sp/>macros<sp/>provide<sp/>the<sp/>mapping<sp/>between<sp/>pins<sp/>as<sp/>implemented<sp/>by</highlight></codeline>
<codeline lineno="84"><highlight class="comment">Firmata<sp/>protocol<sp/>and<sp/>the<sp/>actual<sp/>pin<sp/>numbers<sp/>used<sp/>by<sp/>the<sp/>Arduino</highlight></codeline>
<codeline lineno="85"><highlight class="comment">functions.<sp/><sp/>Even<sp/>though<sp/>such<sp/>mappings<sp/>are<sp/>often<sp/>simple,<sp/>pin</highlight></codeline>
<codeline lineno="86"><highlight class="comment">numbers<sp/>received<sp/>by<sp/>Firmata<sp/>protocol<sp/>should<sp/>always<sp/>be<sp/>used<sp/>as</highlight></codeline>
<codeline lineno="87"><highlight class="comment">input<sp/>to<sp/>these<sp/>macros,<sp/>and<sp/>the<sp/>result<sp/>of<sp/>the<sp/>macro<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="88"><highlight class="comment">used<sp/>with<sp/>with<sp/>any<sp/>Arduino<sp/>function.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">When<sp/>Firmata<sp/>is<sp/>extended<sp/>to<sp/>support<sp/>a<sp/>new<sp/>pin<sp/>mode<sp/>or<sp/>feature,</highlight></codeline>
<codeline lineno="91"><highlight class="comment">a<sp/>pair<sp/>of<sp/>macros<sp/>should<sp/>be<sp/>added<sp/>and<sp/>used<sp/>for<sp/>all<sp/>hardware</highlight></codeline>
<codeline lineno="92"><highlight class="comment">access.<sp/><sp/>For<sp/>simple<sp/>1:1<sp/>mapping,<sp/>these<sp/>macros<sp/>add<sp/>no<sp/>actual</highlight></codeline>
<codeline lineno="93"><highlight class="comment">overhead,<sp/>yet<sp/>their<sp/>consistent<sp/>use<sp/>allows<sp/>source<sp/>code<sp/>which</highlight></codeline>
<codeline lineno="94"><highlight class="comment">uses<sp/>them<sp/>consistently<sp/>to<sp/>be<sp/>easily<sp/>adapted<sp/>to<sp/>all<sp/>other<sp/>boards</highlight></codeline>
<codeline lineno="95"><highlight class="comment">with<sp/>different<sp/>requirements.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">IS_PIN_XXXX(pin):<sp/>The<sp/>IS_PIN<sp/>macros<sp/>resolve<sp/>to<sp/>true<sp/>or<sp/>non-zero</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>a<sp/>pin<sp/>as<sp/>implemented<sp/>by<sp/>Firmata<sp/>corresponds<sp/>to<sp/>a<sp/>pin</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/>that<sp/>actually<sp/>implements<sp/>the<sp/>named<sp/>feature.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"></highlight></codeline>
<codeline lineno="101"><highlight class="comment">PIN_TO_XXXX(pin):<sp/>The<sp/>PIN_TO<sp/>macros<sp/>translate<sp/>pin<sp/>numbers<sp/>as</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/>implemented<sp/>by<sp/>Firmata<sp/>to<sp/>the<sp/>pin<sp/>numbers<sp/>needed<sp/>as<sp/>inputs</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>Arduino<sp/>functions.<sp/><sp/>The<sp/>corresponding<sp/>IS_PIN<sp/>macro</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>should<sp/>always<sp/>be<sp/>tested<sp/>before<sp/>using<sp/>a<sp/>PIN_TO<sp/>macro,<sp/>so</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/>these<sp/>macros<sp/>only<sp/>need<sp/>to<sp/>handle<sp/>valid<sp/>Firmata<sp/>pin</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/>numbers<sp/>for<sp/>the<sp/>named<sp/>feature.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">Port<sp/>Access<sp/>Inline<sp/>Funtions:</highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment">For<sp/>efficiency,<sp/>Firmata<sp/>protocol<sp/>provides<sp/>access<sp/>to<sp/>digital</highlight></codeline>
<codeline lineno="112"><highlight class="comment">input<sp/>and<sp/>output<sp/>pins<sp/>grouped<sp/>by<sp/>8<sp/>bit<sp/>ports.<sp/><sp/>When<sp/>these</highlight></codeline>
<codeline lineno="113"><highlight class="comment">groups<sp/>of<sp/>8<sp/>correspond<sp/>to<sp/>actual<sp/>8<sp/>bit<sp/>ports<sp/>as<sp/>implemented</highlight></codeline>
<codeline lineno="114"><highlight class="comment">by<sp/>the<sp/>hardware,<sp/>these<sp/>inline<sp/>functions<sp/>can<sp/>provide<sp/>high</highlight></codeline>
<codeline lineno="115"><highlight class="comment">speed<sp/>direct<sp/>port<sp/>access.<sp/><sp/>Otherwise,<sp/>a<sp/>default<sp/>implementation</highlight></codeline>
<codeline lineno="116"><highlight class="comment">using<sp/>8<sp/>calls<sp/>to<sp/>digitalWrite<sp/>or<sp/>digitalRead<sp/>is<sp/>used.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment">When<sp/>porting<sp/>Firmata<sp/>to<sp/>a<sp/>new<sp/>board,<sp/>it<sp/>is<sp/>recommended<sp/>to</highlight></codeline>
<codeline lineno="119"><highlight class="comment">use<sp/>the<sp/>default<sp/>functions<sp/>first<sp/>and<sp/>focus<sp/>only<sp/>on<sp/>the<sp/>constants</highlight></codeline>
<codeline lineno="120"><highlight class="comment">and<sp/>macros<sp/>above.<sp/><sp/>When<sp/>those<sp/>are<sp/>working,<sp/>if<sp/>optimized<sp/>port</highlight></codeline>
<codeline lineno="121"><highlight class="comment">access<sp/>is<sp/>desired,<sp/>these<sp/>inline<sp/>functions<sp/>may<sp/>be<sp/>extended.</highlight></codeline>
<codeline lineno="122"><highlight class="comment">The<sp/>recommended<sp/>approach<sp/>defines<sp/>a<sp/>symbol<sp/>indicating<sp/>which</highlight></codeline>
<codeline lineno="123"><highlight class="comment">optimization<sp/>to<sp/>use,<sp/>and<sp/>then<sp/>conditional<sp/>complication<sp/>is</highlight></codeline>
<codeline lineno="124"><highlight class="comment">used<sp/>within<sp/>these<sp/>functions.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment">readPort(port,<sp/>bitmask):<sp/><sp/>Read<sp/>an<sp/>8<sp/>bit<sp/>port,<sp/>returning<sp/>the<sp/>value.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>port:<sp/><sp/><sp/><sp/>The<sp/>port<sp/>number,<sp/>Firmata<sp/>pins<sp/>port*8<sp/>to<sp/>port*8+7</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>bitmask:<sp/>The<sp/>actual<sp/>pins<sp/>to<sp/>read,<sp/>indicated<sp/>by<sp/>1<sp/>bits.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">writePort(port,<sp/>value,<sp/>bitmask):<sp/><sp/>Write<sp/>an<sp/>8<sp/>bit<sp/>port.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/>port:<sp/><sp/><sp/><sp/>The<sp/>port<sp/>number,<sp/>Firmata<sp/>pins<sp/>port*8<sp/>to<sp/>port*8+7</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/>value:<sp/><sp/><sp/>The<sp/>8<sp/>bit<sp/>value<sp/>to<sp/>write</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/>bitmask:<sp/>The<sp/>actual<sp/>pins<sp/>to<sp/>write,<sp/>indicated<sp/>by<sp/>1<sp/>bits.</highlight></codeline>
<codeline lineno="134"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">/*==============================================================================</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>Board<sp/>Specific<sp/>Configuration</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>digitalPinHasPWM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="_boards_8h_1a11c7376fac4b3bbbee0287ec2f25f0b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>digitalPinHasPWM(p)<sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arduino<sp/>Duemilanove,<sp/>Diecimila,<sp/>and<sp/>NG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR_ATmega168__)<sp/>||<sp/>defined(__AVR_ATmega328P__)<sp/>||<sp/>defined(__AVR_ATmega328__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(NUM_ANALOG_INPUTS)<sp/>&amp;&amp;<sp/>NUM_ANALOG_INPUTS<sp/>==<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20<sp/>//<sp/>14<sp/>digital<sp/>+<sp/>6<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>22<sp/>//<sp/>14<sp/>digital<sp/>+<sp/>8<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>14<sp/>+<sp/>TOTAL_ANALOG_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IS_PIN_DIGITAL(p)<sp/>&amp;&amp;<sp/>(p)<sp/>-<sp/>2<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>18<sp/>||<sp/>(p)<sp/>==<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUINO_PINOUT_OPTIMIZE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wiring<sp/>(and<sp/>board)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(WIRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>WLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>FIRST_ANALOG_PIN<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>(FIRST_ANALOG_PIN+TOTAL_ANALOG_PINS))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SDA<sp/>||<sp/>(p)<sp/>==<sp/>SCL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>FIRST_ANALOG_PIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>old<sp/>Arduinos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__AVR_ATmega8__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20<sp/>//<sp/>14<sp/>digital<sp/>+<sp/>6<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IS_PIN_DIGITAL(p)<sp/>&amp;&amp;<sp/>(p)<sp/>-<sp/>2<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>18<sp/>||<sp/>(p)<sp/>==<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUINO_PINOUT_OPTIMIZE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arduino<sp/>Mega</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__AVR_ATmega1280__)<sp/>||<sp/>defined(__AVR_ATmega2560__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>70<sp/>//<sp/>54<sp/>digital<sp/>+<sp/>16<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>54<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>-<sp/>2<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>20<sp/>||<sp/>(p)<sp/>==<sp/>21)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;<sp/>13<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>54)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arduino<sp/>DUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__SAM3X8E__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>66<sp/>//<sp/>54<sp/>digital<sp/>+<sp/>12<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>54<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>-<sp/>2<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>20<sp/>||<sp/>(p)<sp/>==<sp/>21)<sp/>//<sp/>70<sp/>71</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;<sp/>13<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>54)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arduino/Genuino<sp/>MKR1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(ARDUINO_SAMD_MKR1000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>22<sp/>//<sp/>8<sp/>digital<sp/>+<sp/>3<sp/>spi<sp/>+<sp/>2<sp/>i2c<sp/>+<sp/>2<sp/>uart<sp/>+<sp/>7<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>21)<sp/>&amp;&amp;<sp/>!IS_PIN_SERIAL(p))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>15<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>15<sp/>+<sp/>TOTAL_ANALOG_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IS_PIN_DIGITAL(p)<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)<sp/>//<sp/>deprecated<sp/>since<sp/>v2.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>11<sp/>||<sp/>(p)<sp/>==<sp/>12)<sp/>//<sp/>SDA<sp/>=<sp/>11,<sp/>SCL<sp/>=<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>PIN_SERIAL1_RX<sp/>||<sp/>(p)<sp/>==<sp/>PIN_SERIAL1_TX)<sp/>//defined<sp/>in<sp/>variant.h<sp/><sp/>RX<sp/>=<sp/>13,<sp/>TX<sp/>=<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)<sp/>//<sp/>deprecated<sp/>since<sp/>v2.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arduino<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>this<sp/>will<sp/>work<sp/>with<sp/>an<sp/>Arduino<sp/>Zero<sp/>Pro,<sp/>but<sp/>not<sp/>with<sp/>an<sp/>Arduino<sp/>M0<sp/>Pro</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arduino<sp/>M0<sp/>Pro<sp/>does<sp/>not<sp/>properly<sp/>map<sp/>pins<sp/>to<sp/>the<sp/>board<sp/>labeled<sp/>pin<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_VARIANT_ARDUINO_ZERO_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>25<sp/>//<sp/>14<sp/>digital<sp/>+<sp/>6<sp/>analog<sp/>+<sp/>2<sp/>i2c<sp/>+<sp/>3<sp/>spi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PORTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/>//<sp/>set<sp/>when<sp/>TOTAL_PINS<sp/>&gt;<sp/>num<sp/>digitial<sp/>I/O<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LED_BUILTIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>//<sp/>already<sp/>defined<sp/>in<sp/>zero<sp/>core<sp/>variant.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>//<sp/>already<sp/>defined<sp/>in<sp/>zero<sp/>core<sp/>variant.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>14<sp/>+<sp/>TOTAL_ANALOG_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IS_PIN_DIGITAL(p)<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)<sp/>//<sp/>deprecated<sp/>since<sp/>v2.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>20<sp/>||<sp/>(p)<sp/>==<sp/>21)<sp/>//<sp/>SDA<sp/>=<sp/>20,<sp/>SCL<sp/>=<sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)<sp/>//<sp/>SS<sp/>=<sp/>A2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>0<sp/>||<sp/>(p)<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)<sp/>//<sp/>deprecated<sp/>since<sp/>v2.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arduino<sp/>101</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_VARIANT_ARDUINO_101_X_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_ANALOG_INPUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>15<sp/>digital<sp/>(including<sp/>ATN<sp/>pin)<sp/>+<sp/>6<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>LED_BUILTIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>14<sp/>+<sp/>TOTAL_ANALOG_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)<sp/>//<sp/>3,<sp/>5,<sp/>6,<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IS_PIN_DIGITAL(p)<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)<sp/>//<sp/>deprecated<sp/>since<sp/>v2.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SDA<sp/>||<sp/>(p)<sp/>==<sp/>SCL)<sp/>//<sp/>SDA<sp/>=<sp/>18,<sp/>SCL<sp/>=<sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>0<sp/>||<sp/>(p)<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)<sp/>//<sp/>deprecated<sp/>since<sp/>v2.4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Teensy<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__AVR_AT90USB162__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>21<sp/>//<sp/>21<sp/>digital<sp/>+<sp/>no<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>2<sp/>||<sp/>(p)<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Teensy<sp/>2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__AVR_ATmega32U4__)<sp/>&amp;&amp;<sp/>defined(CORE_TEENSY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>25<sp/>//<sp/>11<sp/>digital<sp/>+<sp/>12<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>11<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>22)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>5<sp/>||<sp/>(p)<sp/>==<sp/>6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>7<sp/>||<sp/>(p)<sp/>==<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&lt;<sp/>22)<sp/>?<sp/>21<sp/>-<sp/>(p)<sp/>:<sp/>11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Teensy<sp/>3.5<sp/>and<sp/>3.6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reference:<sp/>https://github.com/PaulStoffregen/cores/blob/master/teensy3/pins_arduino.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__MK64FX512__)<sp/>||<sp/>defined(__MK66FX1M0__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>27<sp/>//<sp/>3.5<sp/>has<sp/>27<sp/>and<sp/>3.6<sp/>has<sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>70<sp/>//<sp/>43<sp/>digital<sp/>+<sp/>21<sp/>analog-digital<sp/>+<sp/>6<sp/>analog<sp/>(64-69)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>2<sp/>UARTs<sp/>are<sp/>not<sp/>yet<sp/>available<sp/>via<sp/>SerialFirmata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL4_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL5_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL6_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>34</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL6_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>63)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>23)<sp/>||<sp/>((p)<sp/>&gt;=<sp/>31<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>39)<sp/>||<sp/>((p)<sp/>&gt;=<sp/>49<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>50)<sp/>||<sp/>((p)<sp/>&gt;=<sp/>64<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>69))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>18<sp/>||<sp/>(p)<sp/>==<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&gt;<sp/>6<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>11)<sp/>||<sp/>((p)<sp/>==<sp/>0<sp/>||<sp/>(p)<sp/>==<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A0-A9<sp/>=<sp/>D14-D23;<sp/>A12-A20<sp/>=<sp/>D31-D39;<sp/>A23-A24<sp/>=<sp/>D49-D50;<sp/>A10-A11<sp/>=<sp/>D64-D65;<sp/>A21-A22<sp/>=<sp/>D66-D67;<sp/>A25-A26<sp/>=<sp/>D68-D69</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&lt;=<sp/>23)<sp/>?<sp/>(p)<sp/>-<sp/>14<sp/>:<sp/>(((p)<sp/>&lt;=<sp/>39)<sp/>?<sp/>(p)<sp/>-<sp/>19<sp/>:<sp/>(((p)<sp/>&lt;=<sp/>50)<sp/>?<sp/>(p)<sp/>-<sp/>26<sp/>:<sp/>(((p)<sp/>&lt;=<sp/>65)<sp/>?<sp/>(p)<sp/>-<sp/>55<sp/>:<sp/>(((p)<sp/>&lt;=<sp/>67)<sp/>?<sp/>(p)<sp/>-<sp/>45<sp/>:<sp/>(p)<sp/>-<sp/>43)))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Teensy<sp/>3.0,<sp/>3.1<sp/>and<sp/>3.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__MK20DX128__)<sp/>||<sp/>defined(__MK20DX256__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>38<sp/>//<sp/>24<sp/>digital<sp/>+<sp/>10<sp/>analog-digital<sp/>+<sp/>4<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>33)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>23)<sp/>||<sp/>((p)<sp/>&gt;=<sp/>34<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>38))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>18<sp/>||<sp/>(p)<sp/>==<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&gt;<sp/>6<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>11)<sp/>||<sp/>((p)<sp/>==<sp/>0<sp/>||<sp/>(p)<sp/>==<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&lt;=<sp/>23)<sp/>?<sp/>(p)<sp/>-<sp/>14<sp/>:<sp/>(p)<sp/>-<sp/>24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Teensy-LC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__MKL26Z64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>27<sp/>//<sp/>27<sp/>digital<sp/>+<sp/>13<sp/>analog-digital</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL2_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL3_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>26)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>18<sp/>||<sp/>(p)<sp/>==<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&gt;<sp/>6<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>11)<sp/>||<sp/>((p)<sp/>==<sp/>0<sp/>||<sp/>(p)<sp/>==<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Teensy++<sp/>1.0<sp/>and<sp/>2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__AVR_AT90USB646__)<sp/>||<sp/>defined(__AVR_AT90USB1286__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>46<sp/>//<sp/>38<sp/>digital<sp/>+<sp/>8<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>38<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>0<sp/>||<sp/>(p)<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>2<sp/>||<sp/>(p)<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>38)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Leonardo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__AVR_ATmega32U4__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30<sp/>//<sp/>14<sp/>digital<sp/>+<sp/>12<sp/>analog<sp/>+<sp/>4<sp/>SPI<sp/>(D14-D17<sp/>on<sp/>ISP<sp/>header)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>18<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>3<sp/>||<sp/>(p)<sp/>==<sp/>5<sp/>||<sp/>(p)<sp/>==<sp/>6<sp/>||<sp/>(p)<sp/>==<sp/>9<sp/>||<sp/>(p)<sp/>==<sp/>10<sp/>||<sp/>(p)<sp/>==<sp/>11<sp/>||<sp/>(p)<sp/>==<sp/>13)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>2<sp/>||<sp/>(p)<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>0<sp/>||<sp/>(p)<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)<sp/>-<sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Intel<sp/>Galileo<sp/>Board<sp/>(gen<sp/>1<sp/>and<sp/>2)<sp/>and<sp/>Intel<sp/>Edison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(ARDUINO_LINUX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20<sp/>//<sp/>14<sp/>digital<sp/>+<sp/>6<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>19)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IS_PIN_DIGITAL(p)<sp/>&amp;&amp;<sp/>(p)<sp/>-<sp/>2<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SDA<sp/>||<sp/>(p)<sp/>==<sp/>SCL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>0<sp/>||<sp/>(p)<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>RedBearLab<sp/>BLE<sp/>Nano<sp/>with<sp/>factory<sp/>switch<sp/>settings<sp/>(S1<sp/>-<sp/>S10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(BLE_NANO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15<sp/>//<sp/>9<sp/>digital<sp/>+<sp/>3<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>8<sp/>||<sp/>(p)<sp/>==<sp/>9<sp/>||<sp/>(p)<sp/>==<sp/>10<sp/>||<sp/>(p)<sp/>==<sp/>11<sp/>||<sp/>(p)<sp/>==<sp/>12<sp/>||<sp/>(p)<sp/>==<sp/>14)<sp/>//A0~A5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>3<sp/>||<sp/>(p)<sp/>==<sp/>5<sp/>||<sp/>(p)<sp/>==<sp/>6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SDA<sp/>||<sp/>(p)<sp/>==<sp/>SCL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>CS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sanguino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__AVR_ATmega644P__)<sp/>||<sp/>defined(__AVR_ATmega644__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32<sp/>//<sp/>24<sp/>digital<sp/>+<sp/>8<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>24<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>16<sp/>||<sp/>(p)<sp/>==<sp/>17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Illuminato</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__AVR_ATmega645__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>42<sp/>//<sp/>36<sp/>digital<sp/>+<sp/>6<sp/>analog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>36<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>TOTAL_PINS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>4<sp/>||<sp/>(p)<sp/>==<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>36)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pic32<sp/>chipKIT<sp/>FubarinoSD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BOARD_FUBARINO_SD_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_ANALOG_PINS<sp/><sp/>//<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>45,<sp/>All<sp/>pins<sp/>can<sp/>be<sp/>digital</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_LED1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>30<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>44)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>1<sp/>||<sp/>(p)<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(14<sp/>-<sp/>(p<sp/>-<sp/>30))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pic32<sp/>chipKIT<sp/>FubarinoMini</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note,<sp/>FubarinoMini<sp/>analog<sp/>pin<sp/>20<sp/>will<sp/>not<sp/>function<sp/>in<sp/>Firmata<sp/>as<sp/>analog<sp/>input<sp/>due<sp/>to<sp/>limitation<sp/>in<sp/>analog<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BOARD_FUBARINO_MINI_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>14<sp/>//<sp/>We<sp/>have<sp/>to<sp/>fake<sp/>this<sp/>because<sp/>of<sp/>the<sp/>poor<sp/>analog<sp/>pin<sp/>mapping<sp/>planning<sp/>in<sp/>FubarinoMini</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_LED1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>!=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>!=<sp/>15<sp/>&amp;&amp;<sp/>(p)<sp/>!=<sp/>31<sp/>&amp;&amp;<sp/>(p)<sp/>!=<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>0<sp/>||<sp/>((p)<sp/>&gt;=<sp/>3<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>13))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>25<sp/>||<sp/>(p)<sp/>==<sp/>26)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pic32<sp/>chipKIT<sp/>UNO32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BOARD_UNO_)<sp/>&amp;&amp;<sp/>defined(__PIC32)<sp/><sp/>//<sp/>NOTE:<sp/>no<sp/>_BOARD_UNO32_<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_ANALOG_PINS<sp/>//<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>47<sp/>All<sp/>pins<sp/>can<sp/>be<sp/>digital</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>All<sp/>pins<sp/>can<sp/>be<sp/>servo<sp/>with<sp/>SoftPWMservo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_LED1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>45<sp/>||<sp/>(p)<sp/>==<sp/>46)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pic32<sp/>chipKIT<sp/>DP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BOARD_DP32_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>15<sp/><sp/>//<sp/>Really<sp/>only<sp/>has<sp/>9,<sp/>but<sp/>have<sp/>to<sp/>override<sp/>because<sp/>of<sp/>mistake<sp/>in<sp/>variant<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>All<sp/>pins<sp/>can<sp/>be<sp/>servo<sp/>with<sp/>SoftPWMservo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_LED1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>!=<sp/>1)<sp/>&amp;&amp;<sp/>((p)<sp/>!=<sp/>4)<sp/>&amp;&amp;<sp/>((p)<sp/>!=<sp/>5)<sp/>&amp;&amp;<sp/>((p)<sp/>!=<sp/>15)<sp/>&amp;&amp;<sp/>((p)<sp/>!=<sp/>16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>6<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>2<sp/>||<sp/>(p)<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pic32<sp/>chipKIT<sp/>uC32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BOARD_UC32_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_ANALOG_PINS<sp/><sp/>//<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>47<sp/>All<sp/>pins<sp/>can<sp/>be<sp/>digital</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>All<sp/>pins<sp/>can<sp/>be<sp/>servo<sp/>with<sp/>SoftPWMservo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_LED1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>45<sp/>||<sp/>(p)<sp/>==<sp/>46)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pic32<sp/>chipKIT<sp/>WF32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BOARD_WF32_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_ANALOG_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_LED1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>49)<sp/><sp/><sp/><sp/><sp/>//<sp/>Accounts<sp/>for<sp/>SD<sp/>and<sp/>WiFi<sp/>dedicated<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>34<sp/>||<sp/>(p)<sp/>==<sp/>35)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pic32<sp/>chipKIT<sp/>WiFire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BOARD_WIFIRE_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_ANALOG_PINS<sp/><sp/>//<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>71</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_LED1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>47)<sp/><sp/><sp/><sp/><sp/>//<sp/>Accounts<sp/>for<sp/>SD<sp/>and<sp/>WiFi<sp/>dedicated<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>25)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>34<sp/>||<sp/>(p)<sp/>==<sp/>35)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&lt;=<sp/>25<sp/>?<sp/>((p)<sp/>-<sp/>14)<sp/>:<sp/>(p)<sp/>-<sp/>36)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pic32<sp/>chipKIT<sp/>MAX32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BOARD_MEGA_)<sp/>&amp;&amp;<sp/>defined(__PIC32)<sp/><sp/>//<sp/>NOTE:<sp/>no<sp/>_BOARD_MAX32_<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_ANALOG_PINS<sp/><sp/>//<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>87</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_LED1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>54<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>69)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>34<sp/>||<sp/>(p)<sp/>==<sp/>35)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>54)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pic32<sp/>chipKIT<sp/>Pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BOARD_CHIPKIT_PI_)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_SERVOS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_LED1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&gt;=<sp/>2)<sp/>&amp;&amp;<sp/>((p)<sp/>&lt;=<sp/>3)<sp/>||<sp/>(((p)<sp/>&gt;=<sp/>8)<sp/>&amp;&amp;<sp/>((p)<sp/>&lt;=<sp/>13))<sp/>||<sp/>(((p)<sp/>&gt;=<sp/>14)<sp/>&amp;&amp;<sp/>((p)<sp/>&lt;=<sp/>17)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>16<sp/>||<sp/>(p)<sp/>==<sp/>17)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&lt;=<sp/>15<sp/>?<sp/>(p)<sp/>-<sp/>14<sp/>:<sp/>(p)<sp/>-<sp/>12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&lt;=<sp/>16)<sp/>?<sp/>((p)<sp/>-<sp/>14)<sp/>:<sp/>((p)<sp/>-<sp/>16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pinoccio<sp/>Scout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>digital<sp/>pins<sp/>9-16<sp/>are<sp/>usable<sp/>but<sp/>not<sp/>labeled<sp/>on<sp/>the<sp/>board<sp/>numerically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SS=9,<sp/>MOSI=10,<sp/>MISO=11,<sp/>SCK=12,<sp/>RX1=13,<sp/>TX1=14,<sp/>SCL=15,<sp/>SDA=16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(ARDUINO_PINOCCIO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_DIGITAL_PINS<sp/>//<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERSION_BLINK_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL1_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&gt;=<sp/>2)<sp/>&amp;&amp;<sp/>((p)<sp/>&lt;=<sp/>16))<sp/>||<sp/>(((p)<sp/>&gt;=<sp/>24)<sp/>&amp;&amp;<sp/>((p)<sp/>&lt;=<sp/>31))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>24<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>31)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IS_PIN_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SCL<sp/>||<sp/>(p)<sp/>==<sp/>SDA)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>13<sp/>||<sp/>(p)<sp/>==<sp/>14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>24)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ESP8266</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="comment">//<sp/>note:<sp/>boot<sp/>mode<sp/>GPIOs<sp/>0,<sp/>2<sp/>and<sp/>15<sp/>can<sp/>be<sp/>used<sp/>as<sp/>outputs,<sp/>GPIOs<sp/>6-11<sp/>are<sp/>in<sp/>use<sp/>for<sp/>flash<sp/>IO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(ESP8266)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_ANALOG_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_ANALOG_INPUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PINS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A0<sp/>+<sp/>NUM_ANALOG_INPUTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL_RX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_SERIAL_TX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((p)<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;=<sp/>5)<sp/>||<sp/>((p)<sp/>&gt;=<sp/>12<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>A0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>&gt;=<sp/>A0<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>A0<sp/>+<sp/>NUM_ANALOG_INPUTS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalPinHasPWM(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(IS_PIN_DIGITAL(p)<sp/>&amp;&amp;<sp/>(p)<sp/>&lt;<sp/>MAX_SERVOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_I2C(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SDA<sp/>||<sp/>(p)<sp/>==<sp/>SCL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>SS<sp/>||<sp/>(p)<sp/>==<sp/>MOSI<sp/>||<sp/>(p)<sp/>==<sp/>MISO<sp/>||<sp/>(p)<sp/>==<sp/>SCK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_INTERRUPT(p)<sp/><sp/><sp/><sp/><sp/>(digitalPinToInterrupt(p)<sp/>&gt;<sp/>NOT_AN_INTERRUPT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>==<sp/>PIN_SERIAL_RX<sp/>||<sp/>(p)<sp/>==<sp/>PIN_SERIAL_TX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_DIGITAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_ANALOG(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((p)<sp/>-<sp/>A0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_PWM(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PIN_TO_DIGITAL(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIN_TO_SERVO(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_PWM_RESOLUTION<sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="comment">//<sp/>anything<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Please<sp/>edit<sp/>Boards.h<sp/>with<sp/>a<sp/>hardware<sp/>abstraction<sp/>for<sp/>this<sp/>board&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>long<sp/>this<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>all<sp/>boards:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IS_PIN_SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="_boards_8h_1a8a60c5a77f46ac40521843cb5648ddd6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SPI(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IS_PIN_SERIAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="_boards_8h_1a1ad05c1c9edb5c67ecfc8f43e2899aea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_PIN_SERIAL(p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DEFAULT_PWM_RESOLUTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="_boards_8h_1a8a23467a2dc1293fa6f5d2c636504567" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_PWM_RESOLUTION<sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">/*==============================================================================</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/>*<sp/>readPort()<sp/>-<sp/>Read<sp/>an<sp/>8<sp/>bit<sp/>port</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>*============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="_boards_8h_1a753371ccf3e1bf98d7fdba9bffc5bf46" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>readPort(byte,<sp/>byte)<sp/>__attribute__((always_inline,<sp/><ref refid="_boards_8h_1a753371ccf3e1bf98d7fdba9bffc5bf46" kindref="member">unused</ref>));</highlight></codeline>
<codeline lineno="759"><highlight class="normal">static<sp/>inline<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>readPort(byte<sp/>port,<sp/>byte<sp/>bitmask)</highlight></codeline>
<codeline lineno="760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARDUINO_PINOUT_OPTIMIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(PIND<sp/>&amp;<sp/>0xFC)<sp/>&amp;<sp/>bitmask;<sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>Rx/Tx<sp/>0/1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((PINB<sp/>&amp;<sp/>0x3F)<sp/>|<sp/>((PINC<sp/>&amp;<sp/>0x03)<sp/>&lt;&lt;<sp/>6))<sp/>&amp;<sp/>bitmask;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>==<sp/>2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((PINC<sp/>&amp;<sp/>0x3C)<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>bitmask;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>0,<sp/>pin<sp/>=<sp/>port<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IS_PIN_DIGITAL(pin<sp/>+<sp/>0)<sp/>&amp;&amp;<sp/>(bitmask<sp/>&amp;<sp/>0x01)<sp/>&amp;&amp;<sp/>digitalRead(PIN_TO_DIGITAL(pin<sp/>+<sp/>0)))<sp/>out<sp/>|=<sp/>0x01;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IS_PIN_DIGITAL(pin<sp/>+<sp/>1)<sp/>&amp;&amp;<sp/>(bitmask<sp/>&amp;<sp/>0x02)<sp/>&amp;&amp;<sp/>digitalRead(PIN_TO_DIGITAL(pin<sp/>+<sp/>1)))<sp/>out<sp/>|=<sp/>0x02;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IS_PIN_DIGITAL(pin<sp/>+<sp/>2)<sp/>&amp;&amp;<sp/>(bitmask<sp/>&amp;<sp/>0x04)<sp/>&amp;&amp;<sp/>digitalRead(PIN_TO_DIGITAL(pin<sp/>+<sp/>2)))<sp/>out<sp/>|=<sp/>0x04;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IS_PIN_DIGITAL(pin<sp/>+<sp/>3)<sp/>&amp;&amp;<sp/>(bitmask<sp/>&amp;<sp/>0x08)<sp/>&amp;&amp;<sp/>digitalRead(PIN_TO_DIGITAL(pin<sp/>+<sp/>3)))<sp/>out<sp/>|=<sp/>0x08;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IS_PIN_DIGITAL(pin<sp/>+<sp/>4)<sp/>&amp;&amp;<sp/>(bitmask<sp/>&amp;<sp/>0x10)<sp/>&amp;&amp;<sp/>digitalRead(PIN_TO_DIGITAL(pin<sp/>+<sp/>4)))<sp/>out<sp/>|=<sp/>0x10;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IS_PIN_DIGITAL(pin<sp/>+<sp/>5)<sp/>&amp;&amp;<sp/>(bitmask<sp/>&amp;<sp/>0x20)<sp/>&amp;&amp;<sp/>digitalRead(PIN_TO_DIGITAL(pin<sp/>+<sp/>5)))<sp/>out<sp/>|=<sp/>0x20;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IS_PIN_DIGITAL(pin<sp/>+<sp/>6)<sp/>&amp;&amp;<sp/>(bitmask<sp/>&amp;<sp/>0x40)<sp/>&amp;&amp;<sp/>digitalRead(PIN_TO_DIGITAL(pin<sp/>+<sp/>6)))<sp/>out<sp/>|=<sp/>0x40;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IS_PIN_DIGITAL(pin<sp/>+<sp/>7)<sp/>&amp;&amp;<sp/>(bitmask<sp/>&amp;<sp/>0x80)<sp/>&amp;&amp;<sp/>digitalRead(PIN_TO_DIGITAL(pin<sp/>+<sp/>7)))<sp/>out<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="comment">/*==============================================================================</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/>*<sp/>writePort()<sp/>-<sp/>Write<sp/>an<sp/>8<sp/>bit<sp/>port,<sp/>only<sp/>touch<sp/>pins<sp/>specified<sp/>by<sp/>a<sp/>bitmask</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/>*============================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>writePort(byte,<sp/>byte,<sp/>byte)<sp/>__attribute__((always_inline,<sp/><ref refid="_boards_8h_1a753371ccf3e1bf98d7fdba9bffc5bf46" kindref="member">unused</ref>));</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>writePort(byte<sp/>port,<sp/>byte<sp/>value,<sp/>byte<sp/>bitmask)</highlight></codeline>
<codeline lineno="786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARDUINO_PINOUT_OPTIMIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmask<sp/>=<sp/>bitmask<sp/>&amp;<sp/>0xFC;<sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>touch<sp/>Tx<sp/>&amp;<sp/>Rx<sp/>pins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>valD<sp/>=<sp/>value<sp/>&amp;<sp/>bitmask;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>maskD<sp/>=<sp/>~bitmask;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTD<sp/>=<sp/>(PORTD<sp/>&amp;<sp/>maskD)<sp/>|<sp/>valD;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>valB<sp/>=<sp/>(value<sp/>&amp;<sp/>bitmask)<sp/>&amp;<sp/>0x3F;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>valC<sp/>=<sp/>(value<sp/>&amp;<sp/>bitmask)<sp/>&gt;&gt;<sp/>6;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>maskB<sp/>=<sp/>~(bitmask<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>maskC<sp/>=<sp/>~((bitmask<sp/>&amp;<sp/>0xC0)<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTB<sp/>=<sp/>(PORTB<sp/>&amp;<sp/>maskB)<sp/>|<sp/>valB;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTC<sp/>=<sp/>(PORTC<sp/>&amp;<sp/>maskC)<sp/>|<sp/>valC;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>bitmask<sp/>=<sp/>bitmask<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>valC<sp/>=<sp/>(value<sp/>&amp;<sp/>bitmask)<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>maskC<sp/>=<sp/>~(bitmask<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTC<sp/>=<sp/>(PORTC<sp/>&amp;<sp/>maskC)<sp/>|<sp/>valC;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>byte<sp/>pin<sp/>=<sp/>port<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bitmask<sp/>&amp;<sp/>0x01))<sp/>digitalWrite(PIN_TO_DIGITAL(pin<sp/>+<sp/>0),<sp/>(value<sp/>&amp;<sp/>0x01));</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bitmask<sp/>&amp;<sp/>0x02))<sp/>digitalWrite(PIN_TO_DIGITAL(pin<sp/>+<sp/>1),<sp/>(value<sp/>&amp;<sp/>0x02));</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bitmask<sp/>&amp;<sp/>0x04))<sp/>digitalWrite(PIN_TO_DIGITAL(pin<sp/>+<sp/>2),<sp/>(value<sp/>&amp;<sp/>0x04));</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bitmask<sp/>&amp;<sp/>0x08))<sp/>digitalWrite(PIN_TO_DIGITAL(pin<sp/>+<sp/>3),<sp/>(value<sp/>&amp;<sp/>0x08));</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bitmask<sp/>&amp;<sp/>0x10))<sp/>digitalWrite(PIN_TO_DIGITAL(pin<sp/>+<sp/>4),<sp/>(value<sp/>&amp;<sp/>0x10));</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bitmask<sp/>&amp;<sp/>0x20))<sp/>digitalWrite(PIN_TO_DIGITAL(pin<sp/>+<sp/>5),<sp/>(value<sp/>&amp;<sp/>0x20));</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bitmask<sp/>&amp;<sp/>0x40))<sp/>digitalWrite(PIN_TO_DIGITAL(pin<sp/>+<sp/>6),<sp/>(value<sp/>&amp;<sp/>0x40));</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((bitmask<sp/>&amp;<sp/>0x80))<sp/>digitalWrite(PIN_TO_DIGITAL(pin<sp/>+<sp/>7),<sp/>(value<sp/>&amp;<sp/>0x80));</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TOTAL_PORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="_boards_8h_1ac09e90aa2c3b346c4b2be2346c4550db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_PORTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((TOTAL_PINS<sp/>+<sp/>7)<sp/>/<sp/>8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>Firmata_Boards_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="Weather_Balloon/library/Firmata/Boards.h"/>
  </compounddef>
</doxygen>
