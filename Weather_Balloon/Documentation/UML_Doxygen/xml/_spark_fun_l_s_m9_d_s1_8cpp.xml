<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_spark_fun_l_s_m9_d_s1_8cpp" kind="file" language="C++">
    <compoundname>SparkFunLSM9DS1.cpp</compoundname>
    <includes refid="_spark_fun_l_s_m9_d_s1_8h" local="yes">SparkFunLSM9DS1.h</includes>
    <includes refid="_l_s_m9_d_s1___registers_8h" local="yes">LSM9DS1_Registers.h</includes>
    <includes refid="_l_s_m9_d_s1___types_8h" local="yes">LSM9DS1_Types.h</includes>
    <includes local="no">Wire.h</includes>
    <includes local="no">SPI.h</includes>
    <includes local="yes">WProgram.h</includes>
    <incdepgraph>
      <node id="988">
        <label>SPI.h</label>
      </node>
      <node id="984">
        <label>pins_arduino.h</label>
      </node>
      <node id="981">
        <label>Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp</label>
        <link refid="SparkFunLSM9DS1.cpp"/>
        <childnode refid="982" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="983" relation="include">
        </childnode>
      </node>
      <node id="985">
        <label>LSM9DS1_Registers.h</label>
        <link refid="_l_s_m9_d_s1___registers_8h"/>
      </node>
      <node id="983">
        <label>WProgram.h</label>
      </node>
      <node id="982">
        <label>SparkFunLSM9DS1.h</label>
        <link refid="_spark_fun_l_s_m9_d_s1_8h"/>
        <childnode refid="983" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
      </node>
      <node id="987">
        <label>Wire.h</label>
      </node>
      <node id="986">
        <label>LSM9DS1_Types.h</label>
        <link refid="_l_s_m9_d_s1___types_8h"/>
        <childnode refid="985" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_spark_fun_l_s_m9_d_s1_8cpp_1ab99dc8f2f400e97f7a5d70823788aeea" prot="public" static="no">
        <name>LSM9DS1_COMMUNICATION_TIMEOUT</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp" line="36" column="9" bodyfile="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp" bodystart="36" bodyend="-1"/>
        <referencedby refid="class_l_s_m9_d_s1_1a7fc046d4b335494331905fdeb5c81c9e" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="1104" endline="1121">LSM9DS1::I2CreadByte</referencedby>
        <referencedby refid="class_l_s_m9_d_s1_1adfc9a22290daddd7787e8023fa8f12cc" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="1123" endline="1146">LSM9DS1::I2CreadBytes</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_spark_fun_l_s_m9_d_s1_8cpp_1abe1225b90f8c6d3ee7956881ea427fc3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float magSensitivity[4]</definition>
        <argsstring>[4]</argsstring>
        <name>magSensitivity</name>
        <initializer>= {0.00014, 0.00029, 0.00043, 0.00058}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp" line="38" column="1" bodyfile="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp" bodystart="38" bodyend="-1"/>
        <referencedby refid="class_l_s_m9_d_s1_1a830dfc95c7e2d8524720d78357b053cb" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="753" endline="772">LSM9DS1::calcmRes</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">SFE_LSM9DS1.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment">SFE_LSM9DS1<sp/>Library<sp/>Source<sp/>File</highlight></codeline>
<codeline lineno="4"><highlight class="comment">Jim<sp/>Lindblom<sp/>@<sp/>SparkFun<sp/>Electronics</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Original<sp/>Creation<sp/>Date:<sp/>February<sp/>27,<sp/>2015</highlight></codeline>
<codeline lineno="6"><highlight class="comment">https://github.com/sparkfun/LSM9DS1_Breakout</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">This<sp/>file<sp/>implements<sp/>all<sp/>functions<sp/>of<sp/>the<sp/>LSM9DS1<sp/>class.<sp/>Functions<sp/>here<sp/>range</highlight></codeline>
<codeline lineno="9"><highlight class="comment">from<sp/>higher<sp/>level<sp/>stuff,<sp/>like<sp/>reading/writing<sp/>LSM9DS1<sp/>registers<sp/>to<sp/>low-level,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">hardware<sp/>reads<sp/>and<sp/>writes.<sp/>Both<sp/>SPI<sp/>and<sp/>I2C<sp/>handler<sp/>functions<sp/>can<sp/>be<sp/>found</highlight></codeline>
<codeline lineno="11"><highlight class="comment">towards<sp/>the<sp/>bottom<sp/>of<sp/>this<sp/>file.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">Development<sp/>environment<sp/>specifics:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>IDE:<sp/>Arduino<sp/>1.6</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>Hardware<sp/>Platform:<sp/>Arduino<sp/>Uno</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>LSM9DS1<sp/>Breakout<sp/>Version:<sp/>1.0</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">This<sp/>code<sp/>is<sp/>beerware;<sp/>if<sp/>you<sp/>see<sp/>me<sp/>(or<sp/>any<sp/>other<sp/>SparkFun<sp/>employee)<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="19"><highlight class="comment">local,<sp/>and<sp/>you&apos;ve<sp/>found<sp/>our<sp/>code<sp/>helpful,<sp/>please<sp/>buy<sp/>us<sp/>a<sp/>round!</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">Distributed<sp/>as-is;<sp/>no<sp/>warranty<sp/>is<sp/>given.</highlight></codeline>
<codeline lineno="22"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spark_fun_l_s_m9_d_s1_8h" kindref="compound">SparkFunLSM9DS1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_l_s_m9_d_s1___registers_8h" kindref="compound">LSM9DS1_Registers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_l_s_m9_d_s1___types_8h" kindref="compound">LSM9DS1_Types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Wire.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Wire<sp/>library<sp/>is<sp/>used<sp/>for<sp/>I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SPI.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>library<sp/>is<sp/>used<sp/>for...SPI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARDUINO)<sp/>&amp;&amp;<sp/>ARDUINO<sp/>&gt;=<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;WProgram.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_spark_fun_l_s_m9_d_s1_8cpp_1ab99dc8f2f400e97f7a5d70823788aeea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSM9DS1_COMMUNICATION_TIMEOUT<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_spark_fun_l_s_m9_d_s1_8cpp_1abe1225b90f8c6d3ee7956881ea427fc3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_spark_fun_l_s_m9_d_s1_8cpp_1abe1225b90f8c6d3ee7956881ea427fc3" kindref="member">magSensitivity</ref>[4]<sp/>=<sp/>{0.00014,<sp/>0.00029,<sp/>0.00043,<sp/>0.00058};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_l_s_m9_d_s1_1a399a80ee541823b301e81d1afab32b28" refkind="member"><highlight class="normal"><ref refid="class_l_s_m9_d_s1_1a399a80ee541823b301e81d1afab32b28" kindref="member">LSM9DS1::LSM9DS1</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aa4f74e09e93c0133dc30545d4492849e" kindref="member">init</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" kindref="member">IMU_MODE_I2C</ref>,<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1a8f6c770035b14543322ec58e37247c7b" kindref="member">LSM9DS1_AG_ADDR</ref>(1),<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1a46328ac68fd42bb3f38d05dc8bdd468a" kindref="member">LSM9DS1_M_ADDR</ref>(1));</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_l_s_m9_d_s1_1ab62923063ffc49dca82e6f311c5c8764" refkind="member"><highlight class="normal"><ref refid="class_l_s_m9_d_s1_1a399a80ee541823b301e81d1afab32b28" kindref="member">LSM9DS1::LSM9DS1</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adf" kindref="member">interface_mode</ref><sp/>interface,<sp/>uint8_t<sp/>xgAddr,<sp/>uint8_t<sp/>mAddr)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aa4f74e09e93c0133dc30545d4492849e" kindref="member">init</ref>(interface,<sp/>xgAddr,<sp/>mAddr);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_l_s_m9_d_s1_1aa4f74e09e93c0133dc30545d4492849e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1aa4f74e09e93c0133dc30545d4492849e" kindref="member">LSM9DS1::init</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adf" kindref="member">interface_mode</ref><sp/>interface,<sp/>uint8_t<sp/>xgAddr,<sp/>uint8_t<sp/>mAddr)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>=<sp/>interface;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a2f43ac785e01fcbcfaf8436885f638ab" kindref="member">agAddress</ref><sp/>=<sp/>xgAddr;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1aec4e1d3e3f38b4e3e0f74f1640e16faa" kindref="member">mAddress</ref><sp/>=<sp/>mAddr;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1ac9c769eeefed971baac74a7b81b25e7b" kindref="member">enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a7c1000d1151579743faa376d49751f1d" kindref="member">enableX</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a4d6ea95b7a52daab6d48dc128c83f3d8" kindref="member">enableY</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a86a86182fd841bd651672d43803b5c63" kindref="member">enableZ</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gyro<sp/>scale<sp/>can<sp/>be<sp/>245,<sp/>500,<sp/>or<sp/>2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref><sp/>=<sp/>245;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gyro<sp/>sample<sp/>rate:<sp/>value<sp/>between<sp/>1-6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>14.9<sp/><sp/><sp/><sp/>4<sp/>=<sp/>238</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>=<sp/>59.5<sp/><sp/><sp/><sp/>5<sp/>=<sp/>476</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>=<sp/>119<sp/><sp/><sp/><sp/><sp/>6<sp/>=<sp/>952</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a58ebac4d1f242d6b129570396a7355b0" kindref="member">sampleRate</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gyro<sp/>cutoff<sp/>frequency:<sp/>value<sp/>between<sp/>0-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>value<sp/>of<sp/>cutoff<sp/>frequency<sp/>depends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>sample<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1ac3f0782333ec55165c1f589d445ba374" kindref="member">bandwidth</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a296a167235d876fa79afc471399e763b" kindref="member">lowPowerEnable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1aa7aa5eba55588e4bcfc0be9ea9b6ed8d" kindref="member">HPFEnable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gyro<sp/>HPF<sp/>cutoff<sp/>frequency:<sp/>value<sp/>between<sp/>0-9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Actual<sp/>value<sp/>depends<sp/>on<sp/>sample<sp/>rate.<sp/>Only<sp/>applies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>gyroHPFEnable<sp/>is<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a7357a9b858fdf515e969ae4e06459f37" kindref="member">HPFCutoff</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a877b529e39287bed155acbca97a75540" kindref="member">flipX</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a2137659e07899a0efccc941e003c07e0" kindref="member">flipY</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a94c92be9f7c56dd9cd21120307d7373f" kindref="member">flipZ</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a33239fd5c4a0fd74670455008c2701ee" kindref="member">orientation</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a3eb9f52cae013b107fbc5059220f9333" kindref="member">latchInterrupt</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a6ecaf7abfbaf7e74c6986fd93798ad4b" kindref="member">enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a8cd5546cda8657ad2405d378fc815b9a" kindref="member">enableX</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3f9ff5abfde83c5a59808faeb5ad4c6c" kindref="member">enableY</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1abdb5ee5fb9a802315d8340ea5d83b587" kindref="member">enableZ</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accel<sp/>scale<sp/>can<sp/>be<sp/>2,<sp/>4,<sp/>8,<sp/>or<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accel<sp/>sample<sp/>rate<sp/>can<sp/>be<sp/>1-6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>10<sp/>Hz<sp/><sp/><sp/><sp/>4<sp/>=<sp/>238<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>=<sp/>50<sp/>Hz<sp/><sp/><sp/><sp/>5<sp/>=<sp/>476<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>=<sp/>119<sp/>Hz<sp/><sp/><sp/>6<sp/>=<sp/>952<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a51704cb40f1e72ec298f601fedcc6092" kindref="member">sampleRate</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accel<sp/>cutoff<sp/>freqeuncy<sp/>can<sp/>be<sp/>any<sp/>value<sp/>between<sp/>-1<sp/>-<sp/>3.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1<sp/>=<sp/>bandwidth<sp/>determined<sp/>by<sp/>sample<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>408<sp/>Hz<sp/><sp/><sp/>2<sp/>=<sp/>105<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>211<sp/>Hz<sp/><sp/><sp/>3<sp/>=<sp/>50<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1ab64c80f62ecfeb3041744febaed9407b" kindref="member">bandwidth</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1ad165444ae7996ff6160be01d77d33b62" kindref="member">highResEnable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accelHighResBandwidth<sp/>can<sp/>be<sp/>any<sp/>value<sp/>between<sp/>0-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LP<sp/>cutoff<sp/>is<sp/>set<sp/>to<sp/>a<sp/>factor<sp/>of<sp/>sample<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>ODR/50<sp/><sp/><sp/><sp/>2<sp/>=<sp/>ODR/9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>ODR/100<sp/><sp/><sp/>3<sp/>=<sp/>ODR/400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3925a8342b5a4b3caecd187e729954f3" kindref="member">highResBandwidth</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a97f8e5c4baf3fc9a662f84fedb188f3c" kindref="member">enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mag<sp/>scale<sp/>can<sp/>be<sp/>4,<sp/>8,<sp/>12,<sp/>or<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mag<sp/>data<sp/>rate<sp/>can<sp/>be<sp/>0-7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>0.625<sp/>Hz<sp/><sp/>4<sp/>=<sp/>10<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>1.25<sp/>Hz<sp/><sp/><sp/>5<sp/>=<sp/>20<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>=<sp/>2.5<sp/>Hz<sp/><sp/><sp/><sp/>6<sp/>=<sp/>40<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>=<sp/>5<sp/>Hz<sp/><sp/><sp/><sp/><sp/><sp/>7<sp/>=<sp/>80<sp/>Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1aca3dbf81e533dce344e618a3df199c1e" kindref="member">sampleRate</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1afcfa1e532fa140e42dc34a4abd7926ae" kindref="member">tempCompensationEnable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>magPerformance<sp/>can<sp/>be<sp/>any<sp/>value<sp/>between<sp/>0-3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>Low<sp/>power<sp/>mode<sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>=<sp/>high<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>medium<sp/>performance<sp/><sp/>3<sp/>=<sp/>ultra-high<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1ad36c7bb251858fb289841c91fb615a5f" kindref="member">XYPerformance</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a0ab41f0670a3fd20ce1a43332f6fe949" kindref="member">ZPerformance</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1abd59df268c0798fceacea68b956009df" kindref="member">lowPowerEnable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>magOperatingMode<sp/>can<sp/>be<sp/>0-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>=<sp/>continuous<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>=<sp/>single-conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>=<sp/>power<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1ae3f0044de2fbdff6d7b830c36f26c450" kindref="member">operatingMode</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a55a77555f1843c186db02080078632f2" kindref="member">temp</ref>.<ref refid="structtemperature_settings_1aeb258e2620d85e2f72fc057dbffa9715" kindref="member">enabled</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>=0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>&lt;3;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8c0354ee78e029b6715ee7110bcd8753" kindref="member">gBias</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1abe998fcc50cfe729c13ab535337849c7" kindref="member">aBias</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aab3753b958a1eaabfb48ffaf837dfadc" kindref="member">mBias</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ab2e59e0460cf88a12765238506031f2a" kindref="member">gBiasRaw</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ae42dc2f2b9f2df223c853e233191313a" kindref="member">aBiasRaw</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ad0e3ab0b7eeee5378ab91dd20270a9b5" kindref="member">mBiasRaw</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8460d00ea0bb496c5d49190a34e54588" kindref="member">_autoCalc</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="class_l_s_m9_d_s1_1a8728e560c76bd120b3711af15a6ecbd6" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="class_l_s_m9_d_s1_1a8728e560c76bd120b3711af15a6ecbd6" kindref="member">LSM9DS1::begin</ref>()</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref><sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a2f43ac785e01fcbcfaf8436885f638ab" kindref="member">agAddress</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref><sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1aec4e1d3e3f38b4e3e0f74f1640e16faa" kindref="member">mAddress</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a5aadcd09cf9157de817c359e49304ca7" kindref="member">constrainScales</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>we<sp/>have<sp/>the<sp/>scale<sp/>values,<sp/>we<sp/>can<sp/>calculate<sp/>the<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>each<sp/>sensor.<sp/>That&apos;s<sp/>what<sp/>these<sp/>functions<sp/>are<sp/>for.<sp/>One<sp/>for<sp/>each<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a303e0dd33e000579dc3917aecedb6e63" kindref="member">calcgRes</ref>();<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>DPS<sp/>/<sp/>ADC<sp/>tick,<sp/>stored<sp/>in<sp/>gRes<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a830dfc95c7e2d8524720d78357b053cb" kindref="member">calcmRes</ref>();<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>Gs<sp/>/<sp/>ADC<sp/>tick,<sp/>stored<sp/>in<sp/>mRes<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a31597c9ae6c5a7de64a50cbbbcd24297" kindref="member">calcaRes</ref>();<sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>g<sp/>/<sp/>ADC<sp/>tick,<sp/>stored<sp/>in<sp/>aRes<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>initialize<sp/>our<sp/>hardware<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" kindref="member">IMU_MODE_I2C</ref>)<sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>using<sp/>I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ae60332c2836bd3f19846b7a44c015ddd" kindref="member">initI2C</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfae45ea9c51bf9ae045499f04550e356c0" kindref="member">IMU_MODE_SPI</ref>)<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else,<sp/>if<sp/>we&apos;re<sp/>using<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a4286d5803ab028c657e007ae99acc60a" kindref="member">initSPI</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>verify<sp/>communication,<sp/>we<sp/>can<sp/>read<sp/>from<sp/>the<sp/>WHO_AM_I<sp/>register<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>device.<sp/>Store<sp/>those<sp/>in<sp/>a<sp/>variable<sp/>so<sp/>we<sp/>can<sp/>return<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>mTest<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1ae4e470321567e4f93fc09f4cc6cd9efa" kindref="member">mReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a6f922f874e6ca9b05008b5ada8fd35a5" kindref="member">WHO_AM_I_M</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>gyro<sp/>WHO_AM_I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>xgTest<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a2429bbf601523e5054cc3ef3de989449" kindref="member">WHO_AM_I_XG</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>accel/mag<sp/>WHO_AM_I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>whoAmICombined<sp/>=<sp/>(xgTest<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>mTest;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whoAmICombined<sp/>!=<sp/>((<ref refid="_l_s_m9_d_s1___registers_8h_1a8dbbb5c2aaadc877fb71ea4eda9fcbf5" kindref="member">WHO_AM_I_AG_RSP</ref><sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="_l_s_m9_d_s1___registers_8h_1a895e051d061b2d053680ab832048b2ad" kindref="member">WHO_AM_I_M_RSP</ref>))</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gyro<sp/>initialization<sp/>stuff:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a66a7b02acb28964ffc9362f25988e270" kindref="member">initGyro</ref>();<sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>&quot;turn<sp/>on&quot;<sp/>the<sp/>gyro.<sp/>Setting<sp/>up<sp/>interrupts,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Accelerometer<sp/>initialization<sp/>stuff:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a143ff5abf4f7ba8e1c42325859106f84" kindref="member">initAccel</ref>();<sp/></highlight><highlight class="comment">//<sp/>&quot;Turn<sp/>on&quot;<sp/>all<sp/>axes<sp/>of<sp/>the<sp/>accel.<sp/>Set<sp/>up<sp/>interrupts,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Magnetometer<sp/>initialization<sp/>stuff:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a492aa6edcf891f273d932636e3cc470d" kindref="member">initMag</ref>();<sp/></highlight><highlight class="comment">//<sp/>&quot;Turn<sp/>on&quot;<sp/>all<sp/>axes<sp/>of<sp/>the<sp/>mag.<sp/>Set<sp/>up<sp/>interrupts,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>everything<sp/>is<sp/>initialized,<sp/>return<sp/>the<sp/>WHO_AM_I<sp/>registers<sp/>we<sp/>read:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>whoAmICombined;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="class_l_s_m9_d_s1_1a66a7b02acb28964ffc9362f25988e270" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a66a7b02acb28964ffc9362f25988e270" kindref="member">LSM9DS1::initGyro</ref>()</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG1_G<sp/>(Default<sp/>value:<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[ODR_G2][ODR_G1][ODR_G0][FS_G1][FS_G0][0][BW_G1][BW_G0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ODR_G[2:0]<sp/>-<sp/>Output<sp/>data<sp/>rate<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FS_G[1:0]<sp/>-<sp/>Gyroscope<sp/>full-scale<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW_G[1:0]<sp/>-<sp/>Gyroscope<sp/>bandwidth<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>disable<sp/>gyro,<sp/>set<sp/>sample<sp/>rate<sp/>bits<sp/>to<sp/>0.<sp/>We&apos;ll<sp/>only<sp/>set<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rate<sp/>if<sp/>the<sp/>gyro<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1ac9c769eeefed971baac74a7b81b25e7b" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a58ebac4d1f242d6b129570396a7355b0" kindref="member">sampleRate</ref><sp/>&amp;<sp/>0x07)<sp/>&lt;&lt;<sp/>5;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>500:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x1<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2000:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x3<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we&apos;ll<sp/>set<sp/>it<sp/>to<sp/>245<sp/>dps<sp/>(0x0<sp/>&lt;&lt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1ac3f0782333ec55165c1f589d445ba374" kindref="member">bandwidth</ref><sp/>&amp;<sp/>0x3);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1aaadaf884e55b59323b03b8c05f80cc4f" kindref="member">CTRL_REG1_G</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG2_G<sp/>(Default<sp/>value:<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[0][0][0][0][INT_SEL1][INT_SEL0][OUT_SEL1][OUT_SEL0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>INT_SEL[1:0]<sp/>-<sp/>INT<sp/>selection<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OUT_SEL[1:0]<sp/>-<sp/>Out<sp/>selection<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a9f8fb3996b44c977ce54f85950599c78" kindref="member">CTRL_REG2_G</ref>,<sp/>0x00);<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG3_G<sp/>(Default<sp/>value:<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[LP_mode][HP_EN][0][0][HPCF3_G][HPCF2_G][HPCF1_G][HPCF0_G]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LP_mode<sp/>-<sp/>Low-power<sp/>mode<sp/>enable<sp/>(0:<sp/>disabled,<sp/>1:<sp/>enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HP_EN<sp/>-<sp/>HPF<sp/>enable<sp/>(0:disabled,<sp/>1:<sp/>enabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HPCF_G[3:0]<sp/>-<sp/>HPF<sp/>cutoff<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a296a167235d876fa79afc471399e763b" kindref="member">lowPowerEnable</ref><sp/>?<sp/>(1&lt;&lt;7)<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1aa7aa5eba55588e4bcfc0be9ea9b6ed8d" kindref="member">HPFEnable</ref>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;6)<sp/>|<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a7357a9b858fdf515e969ae4e06459f37" kindref="member">HPFCutoff</ref><sp/>&amp;<sp/>0x0F);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a9803391f389c4e31709daa1ef3c2c59c" kindref="member">CTRL_REG3_G</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG4<sp/>(Default<sp/>value:<sp/>0x38)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[0][0][Zen_G][Yen_G][Xen_G][0][LIR_XL1][4D_XL1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zen_G<sp/>-<sp/>Z-axis<sp/>output<sp/>enable<sp/>(0:disable,<sp/>1:enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Yen_G<sp/>-<sp/>Y-axis<sp/>output<sp/>enable<sp/>(0:disable,<sp/>1:enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Xen_G<sp/>-<sp/>X-axis<sp/>output<sp/>enable<sp/>(0:disable,<sp/>1:enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LIR_XL1<sp/>-<sp/>Latched<sp/>interrupt<sp/>(0:not<sp/>latched,<sp/>1:latched)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4D_XL1<sp/>-<sp/>4D<sp/>option<sp/>on<sp/>interrupt<sp/>(0:6D<sp/>used,<sp/>1:4D<sp/>used)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a86a86182fd841bd651672d43803b5c63" kindref="member">enableZ</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;5);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a4d6ea95b7a52daab6d48dc128c83f3d8" kindref="member">enableY</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;4);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a7c1000d1151579743faa376d49751f1d" kindref="member">enableX</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;3);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a3eb9f52cae013b107fbc5059220f9333" kindref="member">latchInterrupt</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;1);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a36c532b0a660c101907dcad7ee399fbd" kindref="member">CTRL_REG4</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ORIENT_CFG_G<sp/>(Default<sp/>value:<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[0][0][SignX_G][SignY_G][SignZ_G][Orient_2][Orient_1][Orient_0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SignX_G<sp/>-<sp/>Pitch<sp/>axis<sp/>(X)<sp/>angular<sp/>rate<sp/>sign<sp/>(0:<sp/>positive,<sp/>1:<sp/>negative)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Orient<sp/>[2:0]<sp/>-<sp/>Directional<sp/>user<sp/>orientation<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a877b529e39287bed155acbca97a75540" kindref="member">flipX</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;5);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a2137659e07899a0efccc941e003c07e0" kindref="member">flipY</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;4);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a94c92be9f7c56dd9cd21120307d7373f" kindref="member">flipZ</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;3);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ae694283e32d90de27691b389cf028efc" kindref="member">ORIENT_CFG_G</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_l_s_m9_d_s1_1a143ff5abf4f7ba8e1c42325859106f84" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a143ff5abf4f7ba8e1c42325859106f84" kindref="member">LSM9DS1::initAccel</ref>()</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>CTRL_REG5_XL<sp/>(0x1F)<sp/>(Default<sp/>value:<sp/>0x38)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>[DEC_1][DEC_0][Zen_XL][Yen_XL][Zen_XL][0][0][0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>DEC[0:1]<sp/>-<sp/>Decimation<sp/>of<sp/>accel<sp/>data<sp/>on<sp/>OUT<sp/>REG<sp/>and<sp/>FIFO.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>00:<sp/>None,<sp/>01:<sp/>2<sp/>samples,<sp/>10:<sp/>4<sp/>samples<sp/>11:<sp/>8<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Zen_XL<sp/>-<sp/>Z-axis<sp/>output<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Yen_XL<sp/>-<sp/>Y-axis<sp/>output<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Xen_XL<sp/>-<sp/>X-axis<sp/>output<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1abdb5ee5fb9a802315d8340ea5d83b587" kindref="member">enableZ</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;5);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3f9ff5abfde83c5a59808faeb5ad4c6c" kindref="member">enableY</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;4);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a8cd5546cda8657ad2405d378fc815b9a" kindref="member">enableX</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;3);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ab4fc4d4ec521f1e02a72eef873e447b8" kindref="member">CTRL_REG5_XL</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG6_XL<sp/>(0x20)<sp/>(Default<sp/>value:<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[ODR_XL2][ODR_XL1][ODR_XL0][FS1_XL][FS0_XL][BW_SCAL_ODR][BW_XL1][BW_XL0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ODR_XL[2:0]<sp/>-<sp/>Output<sp/>data<sp/>rate<sp/>&amp;<sp/>power<sp/>mode<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FS_XL[1:0]<sp/>-<sp/>Full-scale<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW_SCAL_ODR<sp/>-<sp/>Bandwidth<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BW_XL[1:0]<sp/>-<sp/>Anti-aliasing<sp/>filter<sp/>bandwidth<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>disable<sp/>the<sp/>accel,<sp/>set<sp/>the<sp/>sampleRate<sp/>bits<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a6ecaf7abfbaf7e74c6986fd93798ad4b" kindref="member">enabled</ref>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a51704cb40f1e72ec298f601fedcc6092" kindref="member">sampleRate</ref><sp/>&amp;<sp/>0x07)<sp/>&lt;&lt;<sp/>5;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x2<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x3<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x1<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>it&apos;ll<sp/>be<sp/>set<sp/>to<sp/>2g<sp/>(0x0<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1ab64c80f62ecfeb3041744febaed9407b" kindref="member">bandwidth</ref><sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;2);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>BW_SCAL_ODR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1ab64c80f62ecfeb3041744febaed9407b" kindref="member">bandwidth</ref><sp/>&amp;<sp/>0x03);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a3f5b6fd3806c3e13590cc9746410265d" kindref="member">CTRL_REG6_XL</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG7_XL<sp/>(0x21)<sp/>(Default<sp/>value:<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[HR][DCF1][DCF0][0][0][FDS][0][HPIS1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HR<sp/>-<sp/>High<sp/>resolution<sp/>mode<sp/>(0:<sp/>disable,<sp/>1:<sp/>enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DCF[1:0]<sp/>-<sp/>Digital<sp/>filter<sp/>cutoff<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FDS<sp/>-<sp/>Filtered<sp/>data<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HPIS1<sp/>-<sp/>HPF<sp/>enabled<sp/>for<sp/>interrupt<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1ad165444ae7996ff6160be01d77d33b62" kindref="member">highResEnable</ref>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;7);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>HR<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3925a8342b5a4b3caecd187e729954f3" kindref="member">highResBandwidth</ref><sp/>&amp;<sp/>0x3)<sp/>&lt;&lt;<sp/>5;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a3b06f7bf6d694ff6e4c59271f3399e84" kindref="member">CTRL_REG7_XL</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>function<sp/>that<sp/>uses<sp/>the<sp/>FIFO<sp/>to<sp/>accumulate<sp/>sample<sp/>of<sp/>accelerometer<sp/>and<sp/>gyro<sp/>data,<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>them,<sp/>scales<sp/>them<sp/>to<sp/><sp/>gs<sp/>and<sp/>deg/s,<sp/>respectively,<sp/>and<sp/>then<sp/>passes<sp/>the<sp/>biases<sp/>to<sp/>the<sp/>main<sp/>sketch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>subtraction<sp/>from<sp/>all<sp/>subsequent<sp/>data.<sp/>There<sp/>are<sp/>no<sp/>gyro<sp/>and<sp/>accelerometer<sp/>bias<sp/>registers<sp/>to<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>data<sp/>as<sp/>there<sp/>are<sp/>in<sp/>the<sp/>ADXL345,<sp/>a<sp/>precursor<sp/>to<sp/>the<sp/>LSM9DS0,<sp/>or<sp/>the<sp/>MPU-9150,<sp/>so<sp/>we<sp/>have<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>subtract<sp/>the<sp/>biases<sp/>ourselves.<sp/>This<sp/>results<sp/>in<sp/>a<sp/>more<sp/>accurate<sp/>measurement<sp/>in<sp/>general<sp/>and<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>remove<sp/>errors<sp/>due<sp/>to<sp/>imprecise<sp/>or<sp/>varying<sp/>initial<sp/>placement.<sp/>Calibration<sp/>of<sp/>sensor<sp/>data<sp/>in<sp/>this<sp/>manner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>good<sp/>practice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="class_l_s_m9_d_s1_1a97939cb15fcb7e33abcd6d3a9230d943" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a97939cb15fcb7e33abcd6d3a9230d943" kindref="member">LSM9DS1::calibrate</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoCalc)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[6]<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>samples<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>aBiasRawTemp[3]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>gBiasRawTemp[3]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>on<sp/>FIFO<sp/>and<sp/>set<sp/>threshold<sp/>to<sp/>32<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a5f01141131318697838f15d7e5d10f2c" kindref="member">enableFIFO</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a0ec4a93a34545af1acc336bae9b360f1" kindref="member">setFIFO</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1abd0fd05ddd88dadb906475b36c8266dbada3b77d422419e73618e6e9ad2bd797c" kindref="member">FIFO_THS</ref>,<sp/>0x1F);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(samples<sp/>&lt;<sp/>0x1F)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples<sp/>=<sp/>(<ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a8ff327dd2e3548068a66bffdc932d5ad" kindref="member">FIFO_SRC</ref>)<sp/>&amp;<sp/>0x3F);<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>number<sp/>of<sp/>stored<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>samples<sp/>;<sp/>ii++)<sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>gyro<sp/>data<sp/>stored<sp/>in<sp/>the<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a56e9710cb538a4c7f7ab94c2ca256ce9" kindref="member">readGyro</ref>();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gBiasRawTemp[0]<sp/>+=<sp/><ref refid="class_l_s_m9_d_s1_1abf02b4544b5d529036adbac02e7b9f02" kindref="member">gx</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gBiasRawTemp[1]<sp/>+=<sp/><ref refid="class_l_s_m9_d_s1_1a0c351823fd094ff24ff245dd951cf783" kindref="member">gy</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gBiasRawTemp[2]<sp/>+=<sp/><ref refid="class_l_s_m9_d_s1_1ad4d0f0585398ff917afcba1b4a73e519" kindref="member">gz</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a9953684a1ff652a7d3a4d91e72bccaa1" kindref="member">readAccel</ref>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aBiasRawTemp[0]<sp/>+=<sp/><ref refid="class_l_s_m9_d_s1_1adac13514d176cfb54aed8cda9a056335" kindref="member">ax</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aBiasRawTemp[1]<sp/>+=<sp/><ref refid="class_l_s_m9_d_s1_1a978a357dedfa574d6e0fad33ad71e23f" kindref="member">ay</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aBiasRawTemp[2]<sp/>+=<sp/><ref refid="class_l_s_m9_d_s1_1aa631c8a90b90130b5be147dd4fae0841" kindref="member">az</ref><sp/>-<sp/>(int16_t)(1./<ref refid="class_l_s_m9_d_s1_1acdc1f9b300b3c349e17dd21c9bb37c40" kindref="member">aRes</ref>);<sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>sensor<sp/>facing<sp/>up!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>3;<sp/>ii++)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ab2e59e0460cf88a12765238506031f2a" kindref="member">gBiasRaw</ref>[ii]<sp/>=<sp/>gBiasRawTemp[ii]<sp/>/<sp/>samples;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8c0354ee78e029b6715ee7110bcd8753" kindref="member">gBias</ref>[ii]<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1a76707323565bc4170ea8e27a932c95e4" kindref="member">calcGyro</ref>(<ref refid="class_l_s_m9_d_s1_1ab2e59e0460cf88a12765238506031f2a" kindref="member">gBiasRaw</ref>[ii]);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ae42dc2f2b9f2df223c853e233191313a" kindref="member">aBiasRaw</ref>[ii]<sp/>=<sp/>aBiasRawTemp[ii]<sp/>/<sp/>samples;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1abe998fcc50cfe729c13ab535337849c7" kindref="member">aBias</ref>[ii]<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1a54e2a7888b67b47cf0dd986c5b91a3c5" kindref="member">calcAccel</ref>(<ref refid="class_l_s_m9_d_s1_1ae42dc2f2b9f2df223c853e233191313a" kindref="member">aBiasRaw</ref>[ii]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a5f01141131318697838f15d7e5d10f2c" kindref="member">enableFIFO</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a0ec4a93a34545af1acc336bae9b360f1" kindref="member">setFIFO</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1abd0fd05ddd88dadb906475b36c8266dbac872bd466c3f62c86a9efe3f29fb18f9" kindref="member">FIFO_OFF</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(autoCalc)<sp/><ref refid="class_l_s_m9_d_s1_1a8460d00ea0bb496c5d49190a34e54588" kindref="member">_autoCalc</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="class_l_s_m9_d_s1_1afb45f0bcbcbeb15d4bd1a28821b24d14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1afb45f0bcbcbeb15d4bd1a28821b24d14" kindref="member">LSM9DS1::calibrateMag</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadIn)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>magMin[3]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>magMax[3]<sp/>=<sp/>{0,<sp/>0,<sp/>0};<sp/></highlight><highlight class="comment">//<sp/>The<sp/>road<sp/>warrior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;128;<sp/>i++)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="class_l_s_m9_d_s1_1a85afd29e95bead7b3f0083a9a235d1df" kindref="member">magAvailable</ref>())</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ae127cf75aa5f3c5421e49363795dcd38" kindref="member">readMag</ref>();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>magTemp[3]<sp/>=<sp/>{0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magTemp[0]<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1a0e68eb9e44969070b6d84a93ba252f71" kindref="member">mx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magTemp[1]<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1a773f80f9b7cdf8375c84a4209895d732" kindref="member">my</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magTemp[2]<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1aafe23993500ece9efd161e564787dce2" kindref="member">mz</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magTemp[j]<sp/>&gt;<sp/>magMax[j])<sp/>magMax[j]<sp/>=<sp/>magTemp[j];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(magTemp[j]<sp/>&lt;<sp/>magMin[j])<sp/>magMin[j]<sp/>=<sp/>magTemp[j];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>3;<sp/>j++)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ad0e3ab0b7eeee5378ab91dd20270a9b5" kindref="member">mBiasRaw</ref>[j]<sp/>=<sp/>(magMax[j]<sp/>+<sp/>magMin[j])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aab3753b958a1eaabfb48ffaf837dfadc" kindref="member">mBias</ref>[j]<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1a7d0b0740497b1a10cd3e46a282a143ec" kindref="member">calcMag</ref>(<ref refid="class_l_s_m9_d_s1_1ad0e3ab0b7eeee5378ab91dd20270a9b5" kindref="member">mBiasRaw</ref>[j]);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(loadIn)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a0d461614bd058b082c94481dc916c18b" kindref="member">magOffset</ref>(j,<sp/><ref refid="class_l_s_m9_d_s1_1ad0e3ab0b7eeee5378ab91dd20270a9b5" kindref="member">mBiasRaw</ref>[j]);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396" refid="class_l_s_m9_d_s1_1a0d461614bd058b082c94481dc916c18b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a0d461614bd058b082c94481dc916c18b" kindref="member">LSM9DS1::magOffset</ref>(uint8_t<sp/>axis,<sp/>int16_t<sp/>offset)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axis<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>msb,<sp/>lsb;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>msb<sp/>=<sp/>(offset<sp/>&amp;<sp/>0xFF00)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>lsb<sp/>=<sp/>offset<sp/>&amp;<sp/>0x00FF;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a043bf20b279c3ad248ff196af6a1daab" kindref="member">OFFSET_X_REG_L_M</ref><sp/>+<sp/>(2<sp/>*<sp/>axis),<sp/>lsb);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1aeb2fc84bba390310b1316f0945727306" kindref="member">OFFSET_X_REG_H_M</ref><sp/>+<sp/>(2<sp/>*<sp/>axis),<sp/>msb);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="class_l_s_m9_d_s1_1a492aa6edcf891f273d932636e3cc470d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a492aa6edcf891f273d932636e3cc470d" kindref="member">LSM9DS1::initMag</ref>()</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG1_M<sp/>(Default<sp/>value:<sp/>0x10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[TEMP_COMP][OM1][OM0][DO2][DO1][DO0][0][ST]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TEMP_COMP<sp/>-<sp/>Temperature<sp/>compensation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OM[1:0]<sp/>-<sp/>X<sp/>&amp;<sp/>Y<sp/>axes<sp/>op<sp/>mode<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>00:low-power,<sp/>01:medium<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>10:<sp/>high<sp/>performance,<sp/>11:ultra-high<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DO[2:0]<sp/>-<sp/>Output<sp/>data<sp/>rate<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ST<sp/>-<sp/>Self-test<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1afcfa1e532fa140e42dc34a4abd7926ae" kindref="member">tempCompensationEnable</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;7);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1ad36c7bb251858fb289841c91fb615a5f" kindref="member">XYPerformance</ref><sp/>&amp;<sp/>0x3)<sp/>&lt;&lt;<sp/>5;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1aca3dbf81e533dce344e618a3df199c1e" kindref="member">sampleRate</ref><sp/>&amp;<sp/>0x7)<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a681825dec9359e9d82698edcfec6c24d" kindref="member">CTRL_REG1_M</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG2_M<sp/>(Default<sp/>value<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[0][FS1][FS0][0][REBOOT][SOFT_RST][0][0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FS[1:0]<sp/>-<sp/>Full-scale<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>REBOOT<sp/>-<sp/>Reboot<sp/>memory<sp/>content<sp/>(0:normal,<sp/>1:reboot)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SOFT_RST<sp/>-<sp/>Reset<sp/>config<sp/>and<sp/>user<sp/>registers<sp/>(0:default,<sp/>1:reset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x1<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x2<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x3<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we&apos;ll<sp/>default<sp/>to<sp/>4<sp/>gauss<sp/>(00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a86d82a48866508ca682353988132e0d8" kindref="member">CTRL_REG2_M</ref>,<sp/>tempRegValue);<sp/></highlight><highlight class="comment">//<sp/>+/-4Gauss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG3_M<sp/>(Default<sp/>value:<sp/>0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[I2C_DISABLE][0][LP][0][0][SIM][MD1][MD0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I2C_DISABLE<sp/>-<sp/>Disable<sp/>I2C<sp/>interace<sp/>(0:enable,<sp/>1:disable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LP<sp/>-<sp/>Low-power<sp/>mode<sp/>cofiguration<sp/>(1:enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SIM<sp/>-<sp/>SPI<sp/>mode<sp/>selection<sp/>(0:write-only,<sp/>1:read/write<sp/>enable)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MD[1:0]<sp/>-<sp/>Operating<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>00:continuous<sp/>conversion,<sp/>01:single-conversion,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>10,11:<sp/>Power-down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1abd59df268c0798fceacea68b956009df" kindref="member">lowPowerEnable</ref>)<sp/>tempRegValue<sp/>|=<sp/>(1&lt;&lt;5);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1ae3f0044de2fbdff6d7b830c36f26c450" kindref="member">operatingMode</ref><sp/>&amp;<sp/>0x3);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ac1890f3762169150ac5efdba82735976" kindref="member">CTRL_REG3_M</ref>,<sp/>tempRegValue);<sp/></highlight><highlight class="comment">//<sp/>Continuous<sp/>conversion<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG4_M<sp/>(Default<sp/>value:<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[0][0][0][0][OMZ1][OMZ0][BLE][0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OMZ[1:0]<sp/>-<sp/>Z-axis<sp/>operative<sp/>mode<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>00:low-power<sp/>mode,<sp/>01:medium<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>10:high<sp/>performance,<sp/>10:ultra-high<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BLE<sp/>-<sp/>Big/little<sp/>endian<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a0ab41f0670a3fd20ce1a43332f6fe949" kindref="member">ZPerformance</ref><sp/>&amp;<sp/>0x3)<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ae732f3952adf7b6691e302d7446041a0" kindref="member">CTRL_REG4_M</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CTRL_REG5_M<sp/>(Default<sp/>value:<sp/>0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[0][BDU][0][0][0][0][0][0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BDU<sp/>-<sp/>Block<sp/>data<sp/>update<sp/>for<sp/>magnetic<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>0:continuous,<sp/>1:not<sp/>updated<sp/>until<sp/>MSB/LSB<sp/>are<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a75b063b95134015d2f927762f3bc7dad" kindref="member">CTRL_REG5_M</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="class_l_s_m9_d_s1_1a515ce6f5c199a86c6aa5be353b2a3a13" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a515ce6f5c199a86c6aa5be353b2a3a13" kindref="member">LSM9DS1::accelAvailable</ref>()</highlight></codeline>
<codeline lineno="477"><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>status<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a665c442790206fcce4058d958ca5ec1e" kindref="member">STATUS_REG_1</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(status<sp/>&amp;<sp/>(1&lt;&lt;0));</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="class_l_s_m9_d_s1_1a65b71a03a30f4e8ed1ffd46de3db0560" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a65b71a03a30f4e8ed1ffd46de3db0560" kindref="member">LSM9DS1::gyroAvailable</ref>()</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>status<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a665c442790206fcce4058d958ca5ec1e" kindref="member">STATUS_REG_1</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((status<sp/>&amp;<sp/>(1&lt;&lt;1))<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="class_l_s_m9_d_s1_1aaf6683c6f3f0281d5222b74f580f321b" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1aaf6683c6f3f0281d5222b74f580f321b" kindref="member">LSM9DS1::tempAvailable</ref>()</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>status<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a665c442790206fcce4058d958ca5ec1e" kindref="member">STATUS_REG_1</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((status<sp/>&amp;<sp/>(1&lt;&lt;2))<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="class_l_s_m9_d_s1_1a85afd29e95bead7b3f0083a9a235d1df" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a85afd29e95bead7b3f0083a9a235d1df" kindref="member">LSM9DS1::magAvailable</ref>(<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>status;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1ae4e470321567e4f93fc09f4cc6cd9efa" kindref="member">mReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1acdc5b337c11e6ad00f5c1a1653d80cea" kindref="member">STATUS_REG_M</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((status<sp/>&amp;<sp/>(1&lt;&lt;axis))<sp/>&gt;&gt;<sp/>axis);</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="class_l_s_m9_d_s1_1a9953684a1ff652a7d3a4d91e72bccaa1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a9953684a1ff652a7d3a4d91e72bccaa1" kindref="member">LSM9DS1::readAccel</ref>()</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp[6];<sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>read<sp/>six<sp/>bytes<sp/>from<sp/>the<sp/>accelerometer<sp/>into<sp/>temp<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ae0a9cbfd74b1f4676f091c2d8e491d77" kindref="member">xgReadBytes</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a938cc6d814aee02d7f4e983d8b2bc6bd" kindref="member">OUT_X_L_XL</ref>,<sp/>temp,<sp/>6);<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>6<sp/>bytes,<sp/>beginning<sp/>at<sp/>OUT_X_L_XL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1adac13514d176cfb54aed8cda9a056335" kindref="member">ax</ref><sp/>=<sp/>(temp[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[0];<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>x-axis<sp/>values<sp/>into<sp/>ax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a978a357dedfa574d6e0fad33ad71e23f" kindref="member">ay</ref><sp/>=<sp/>(temp[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[2];<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>y-axis<sp/>values<sp/>into<sp/>ay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aa631c8a90b90130b5be147dd4fae0841" kindref="member">az</ref><sp/>=<sp/>(temp[5]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[4];<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>z-axis<sp/>values<sp/>into<sp/>az</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8460d00ea0bb496c5d49190a34e54588" kindref="member">_autoCalc</ref>)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1adac13514d176cfb54aed8cda9a056335" kindref="member">ax</ref><sp/>-=<sp/><ref refid="class_l_s_m9_d_s1_1ae42dc2f2b9f2df223c853e233191313a" kindref="member">aBiasRaw</ref>[<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a93ed1386222f87948b972889ad82cd33" kindref="member">X_AXIS</ref>];</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a978a357dedfa574d6e0fad33ad71e23f" kindref="member">ay</ref><sp/>-=<sp/><ref refid="class_l_s_m9_d_s1_1ae42dc2f2b9f2df223c853e233191313a" kindref="member">aBiasRaw</ref>[<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164aa1ec9649c0a631b27ad7280af3522dd0" kindref="member">Y_AXIS</ref>];</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aa631c8a90b90130b5be147dd4fae0841" kindref="member">az</ref><sp/>-=<sp/><ref refid="class_l_s_m9_d_s1_1ae42dc2f2b9f2df223c853e233191313a" kindref="member">aBiasRaw</ref>[<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a4b8a53bafca6b43388660925049d734f" kindref="member">Z_AXIS</ref>];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="class_l_s_m9_d_s1_1acbe3bfc0b8db7fe3f77893d22c394594" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_l_s_m9_d_s1_1a9953684a1ff652a7d3a4d91e72bccaa1" kindref="member">LSM9DS1::readAccel</ref>(<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis)</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp[2];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>value;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ae0a9cbfd74b1f4676f091c2d8e491d77" kindref="member">xgReadBytes</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a938cc6d814aee02d7f4e983d8b2bc6bd" kindref="member">OUT_X_L_XL</ref><sp/>+<sp/>(2<sp/>*<sp/>axis),<sp/>temp,<sp/>2);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(temp[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[0];</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8460d00ea0bb496c5d49190a34e54588" kindref="member">_autoCalc</ref>)</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>-=<sp/><ref refid="class_l_s_m9_d_s1_1ae42dc2f2b9f2df223c853e233191313a" kindref="member">aBiasRaw</ref>[axis];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="class_l_s_m9_d_s1_1ae127cf75aa5f3c5421e49363795dcd38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ae127cf75aa5f3c5421e49363795dcd38" kindref="member">LSM9DS1::readMag</ref>()</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp[6];<sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>read<sp/>six<sp/>bytes<sp/>from<sp/>the<sp/>mag<sp/>into<sp/>temp<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1acfdf9862cad1e66c9fb61a17bfbe7477" kindref="member">mReadBytes</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1abab698c56e01e1fd410398c4e7beaaf3" kindref="member">OUT_X_L_M</ref>,<sp/>temp,<sp/>6);<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>6<sp/>bytes,<sp/>beginning<sp/>at<sp/>OUT_X_L_M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a0e68eb9e44969070b6d84a93ba252f71" kindref="member">mx</ref><sp/>=<sp/>(temp[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[0];<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>x-axis<sp/>values<sp/>into<sp/>mx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a773f80f9b7cdf8375c84a4209895d732" kindref="member">my</ref><sp/>=<sp/>(temp[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[2];<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>y-axis<sp/>values<sp/>into<sp/>my</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aafe23993500ece9efd161e564787dce2" kindref="member">mz</ref><sp/>=<sp/>(temp[5]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[4];<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>z-axis<sp/>values<sp/>into<sp/>mz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="class_l_s_m9_d_s1_1a615fd3ab32a9af833ef9899663100330" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_l_s_m9_d_s1_1ae127cf75aa5f3c5421e49363795dcd38" kindref="member">LSM9DS1::readMag</ref>(<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp[2];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1acfdf9862cad1e66c9fb61a17bfbe7477" kindref="member">mReadBytes</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1abab698c56e01e1fd410398c4e7beaaf3" kindref="member">OUT_X_L_M</ref><sp/>+<sp/>(2<sp/>*<sp/>axis),<sp/>temp,<sp/>2);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(temp[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[0];</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="class_l_s_m9_d_s1_1aca21a51dc79a1287b97ed9c326e2080b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1aca21a51dc79a1287b97ed9c326e2080b" kindref="member">LSM9DS1::readTemp</ref>()</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp[2];<sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>read<sp/>two<sp/>bytes<sp/>from<sp/>the<sp/>temperature<sp/>sensor<sp/>into<sp/>temp<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ae0a9cbfd74b1f4676f091c2d8e491d77" kindref="member">xgReadBytes</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a99d7b40624fe2b229cc4e1ab62552ea2" kindref="member">OUT_TEMP_L</ref>,<sp/>temp,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>2<sp/>bytes,<sp/>beginning<sp/>at<sp/>OUT_TEMP_L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a92791effe47c0f8c93505e53496266e5" kindref="member">temperature</ref><sp/>=<sp/>((int16_t)temp[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[0];</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="class_l_s_m9_d_s1_1a56e9710cb538a4c7f7ab94c2ca256ce9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a56e9710cb538a4c7f7ab94c2ca256ce9" kindref="member">LSM9DS1::readGyro</ref>()</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp[6];<sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>read<sp/>six<sp/>bytes<sp/>from<sp/>the<sp/>gyro<sp/>into<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ae0a9cbfd74b1f4676f091c2d8e491d77" kindref="member">xgReadBytes</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a591468875c279c327dbfb8ddd51a2e36" kindref="member">OUT_X_L_G</ref>,<sp/>temp,<sp/>6);<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>6<sp/>bytes,<sp/>beginning<sp/>at<sp/>OUT_X_L_G</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1abf02b4544b5d529036adbac02e7b9f02" kindref="member">gx</ref><sp/>=<sp/>(temp[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[0];<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>x-axis<sp/>values<sp/>into<sp/>gx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a0c351823fd094ff24ff245dd951cf783" kindref="member">gy</ref><sp/>=<sp/>(temp[3]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[2];<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>y-axis<sp/>values<sp/>into<sp/>gy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ad4d0f0585398ff917afcba1b4a73e519" kindref="member">gz</ref><sp/>=<sp/>(temp[5]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[4];<sp/></highlight><highlight class="comment">//<sp/>Store<sp/>z-axis<sp/>values<sp/>into<sp/>gz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8460d00ea0bb496c5d49190a34e54588" kindref="member">_autoCalc</ref>)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1abf02b4544b5d529036adbac02e7b9f02" kindref="member">gx</ref><sp/>-=<sp/><ref refid="class_l_s_m9_d_s1_1ab2e59e0460cf88a12765238506031f2a" kindref="member">gBiasRaw</ref>[<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a93ed1386222f87948b972889ad82cd33" kindref="member">X_AXIS</ref>];</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a0c351823fd094ff24ff245dd951cf783" kindref="member">gy</ref><sp/>-=<sp/><ref refid="class_l_s_m9_d_s1_1ab2e59e0460cf88a12765238506031f2a" kindref="member">gBiasRaw</ref>[<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164aa1ec9649c0a631b27ad7280af3522dd0" kindref="member">Y_AXIS</ref>];</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ad4d0f0585398ff917afcba1b4a73e519" kindref="member">gz</ref><sp/>-=<sp/><ref refid="class_l_s_m9_d_s1_1ab2e59e0460cf88a12765238506031f2a" kindref="member">gBiasRaw</ref>[<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a4b8a53bafca6b43388660925049d734f" kindref="member">Z_AXIS</ref>];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="class_l_s_m9_d_s1_1adc1b37609a6c850328b16da4f911cefd" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_l_s_m9_d_s1_1a56e9710cb538a4c7f7ab94c2ca256ce9" kindref="member">LSM9DS1::readGyro</ref>(<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp[2];</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>value;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1ae0a9cbfd74b1f4676f091c2d8e491d77" kindref="member">xgReadBytes</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a591468875c279c327dbfb8ddd51a2e36" kindref="member">OUT_X_L_G</ref><sp/>+<sp/>(2<sp/>*<sp/>axis),<sp/>temp,<sp/>2);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(temp[1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>temp[0];</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8460d00ea0bb496c5d49190a34e54588" kindref="member">_autoCalc</ref>)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>-=<sp/><ref refid="class_l_s_m9_d_s1_1ab2e59e0460cf88a12765238506031f2a" kindref="member">gBiasRaw</ref>[axis];</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="class_l_s_m9_d_s1_1a76707323565bc4170ea8e27a932c95e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a76707323565bc4170ea8e27a932c95e4" kindref="member">LSM9DS1::calcGyro</ref>(int16_t<sp/>gyro)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>gyro<sp/>raw<sp/>reading<sp/>times<sp/>our<sp/>pre-calculated<sp/>DPS<sp/>/<sp/>(ADC<sp/>tick):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a2d8654ebb35177088a67e67a944bd998" kindref="member">gRes</ref><sp/>*<sp/>gyro;<sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="class_l_s_m9_d_s1_1a54e2a7888b67b47cf0dd986c5b91a3c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a54e2a7888b67b47cf0dd986c5b91a3c5" kindref="member">LSM9DS1::calcAccel</ref>(int16_t<sp/>accel)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>accel<sp/>raw<sp/>reading<sp/>times<sp/>our<sp/>pre-calculated<sp/>g&apos;s<sp/>/<sp/>(ADC<sp/>tick):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1acdc1f9b300b3c349e17dd21c9bb37c40" kindref="member">aRes</ref><sp/>*<sp/>accel;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="class_l_s_m9_d_s1_1a7d0b0740497b1a10cd3e46a282a143ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a7d0b0740497b1a10cd3e46a282a143ec" kindref="member">LSM9DS1::calcMag</ref>(int16_t<sp/>mag)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>mag<sp/>raw<sp/>reading<sp/>times<sp/>our<sp/>pre-calculated<sp/>Gs<sp/>/<sp/>(ADC<sp/>tick):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1aac7ae43adf399e8052464b966aec8472" kindref="member">mRes</ref><sp/>*<sp/>mag;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604" refid="class_l_s_m9_d_s1_1a115d304ebcdc8c701f3e5a5d397250aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a115d304ebcdc8c701f3e5a5d397250aa" kindref="member">LSM9DS1::setGyroScale</ref>(uint16_t<sp/>gScl)</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>current<sp/>value<sp/>of<sp/>CTRL_REG1_G:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ctrl1RegValue<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1aaadaf884e55b59323b03b8c05f80cc4f" kindref="member">CTRL_REG1_G</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mask<sp/>out<sp/>scale<sp/>bits<sp/>(3<sp/>&amp;<sp/>4):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>ctrl1RegValue<sp/>&amp;=<sp/>0xE7;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(gScl)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>500:</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl1RegValue<sp/>|=<sp/>(0x1<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref><sp/>=<sp/>500;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2000:</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrl1RegValue<sp/>|=<sp/>(0x3<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref><sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we&apos;ll<sp/>set<sp/>it<sp/>to<sp/>245<sp/>dps<sp/>(0x0<sp/>&lt;&lt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref><sp/>=<sp/>245;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1aaadaf884e55b59323b03b8c05f80cc4f" kindref="member">CTRL_REG1_G</ref>,<sp/>ctrl1RegValue);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a303e0dd33e000579dc3917aecedb6e63" kindref="member">calcgRes</ref>();<sp/></highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="class_l_s_m9_d_s1_1a8656d2de1ff9cc4cb76214e4561d02c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a8656d2de1ff9cc4cb76214e4561d02c4" kindref="member">LSM9DS1::setAccelScale</ref>(uint8_t<sp/>aScl)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>preserve<sp/>the<sp/>other<sp/>bytes<sp/>in<sp/>CTRL_REG6_XL.<sp/>So,<sp/>first<sp/>read<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tempRegValue<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a3f5b6fd3806c3e13590cc9746410265d" kindref="member">CTRL_REG6_XL</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mask<sp/>out<sp/>accel<sp/>scale<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>tempRegValue<sp/>&amp;=<sp/>0xE7;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(aScl)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x2<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x3<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempRegValue<sp/>|=<sp/>(0x1<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>it&apos;ll<sp/>be<sp/>set<sp/>to<sp/>2g<sp/>(0x0<sp/>&lt;&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a3f5b6fd3806c3e13590cc9746410265d" kindref="member">CTRL_REG6_XL</ref>,<sp/>tempRegValue);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>calculate<sp/>a<sp/>new<sp/>aRes,<sp/>which<sp/>relies<sp/>on<sp/>aScale<sp/>being<sp/>set<sp/>correctly:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a31597c9ae6c5a7de64a50cbbbcd24297" kindref="member">calcaRes</ref>();</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="class_l_s_m9_d_s1_1ad7604159a07b0d088cdfb6ba4a0093b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ad7604159a07b0d088cdfb6ba4a0093b0" kindref="member">LSM9DS1::setMagScale</ref>(uint8_t<sp/>mScl)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>preserve<sp/>the<sp/>other<sp/>bytes<sp/>in<sp/>CTRL_REG6_XM.<sp/>So,<sp/>first<sp/>read<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1ae4e470321567e4f93fc09f4cc6cd9efa" kindref="member">mReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a86d82a48866508ca682353988132e0d8" kindref="member">CTRL_REG2_M</ref>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>mask<sp/>out<sp/>the<sp/>mag<sp/>scale<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>&amp;=<sp/>0xFF^(0x3<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mScl)</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>|=<sp/>(0x1<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>|=<sp/>(0x2<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>|=<sp/>(0x3<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we&apos;ll<sp/>default<sp/>to<sp/>4<sp/>gauss<sp/>(00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>write<sp/>the<sp/>new<sp/>register<sp/>value<sp/>back<sp/>into<sp/>CTRL_REG6_XM:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a86d82a48866508ca682353988132e0d8" kindref="member">CTRL_REG2_M</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>updated<sp/>the<sp/>sensor,<sp/>but<sp/>we<sp/>also<sp/>need<sp/>to<sp/>update<sp/>our<sp/>class<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>update<sp/>mScale:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mScale<sp/>=<sp/>mScl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>calculate<sp/>a<sp/>new<sp/>mRes,<sp/>which<sp/>relies<sp/>on<sp/>mScale<sp/>being<sp/>set<sp/>correctly:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a830dfc95c7e2d8524720d78357b053cb" kindref="member">calcmRes</ref>();</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696" refid="class_l_s_m9_d_s1_1ab8fc33c8da4fc5c379e880ff57d331fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ab8fc33c8da4fc5c379e880ff57d331fa" kindref="member">LSM9DS1::setGyroODR</ref>(uint8_t<sp/>gRate)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>do<sp/>this<sp/>if<sp/>gRate<sp/>is<sp/>not<sp/>0<sp/>(which<sp/>would<sp/>disable<sp/>the<sp/>gyro)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gRate<sp/>&amp;<sp/>0x07)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>preserve<sp/>the<sp/>other<sp/>bytes<sp/>in<sp/>CTRL_REG1_G.<sp/>So,<sp/>first<sp/>read<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1aaadaf884e55b59323b03b8c05f80cc4f" kindref="member">CTRL_REG1_G</ref>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>mask<sp/>out<sp/>the<sp/>gyro<sp/>ODR<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>&amp;=<sp/>0xFF^(0x7<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>|=<sp/>(gRate<sp/>&amp;<sp/>0x07)<sp/>&lt;&lt;<sp/>5;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>our<sp/>settings<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a58ebac4d1f242d6b129570396a7355b0" kindref="member">sampleRate</ref><sp/>=<sp/>gRate<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>write<sp/>the<sp/>new<sp/>register<sp/>value<sp/>back<sp/>into<sp/>CTRL_REG1_G:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1aaadaf884e55b59323b03b8c05f80cc4f" kindref="member">CTRL_REG1_G</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="class_l_s_m9_d_s1_1a76d72839cdecc3f1c4ee6fff578182c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a76d72839cdecc3f1c4ee6fff578182c5" kindref="member">LSM9DS1::setAccelODR</ref>(uint8_t<sp/>aRate)</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>do<sp/>this<sp/>if<sp/>aRate<sp/>is<sp/>not<sp/>0<sp/>(which<sp/>would<sp/>disable<sp/>the<sp/>accel)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((aRate<sp/>&amp;<sp/>0x07)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>preserve<sp/>the<sp/>other<sp/>bytes<sp/>in<sp/>CTRL_REG1_XM.<sp/>So,<sp/>first<sp/>read<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a3f5b6fd3806c3e13590cc9746410265d" kindref="member">CTRL_REG6_XL</ref>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>mask<sp/>out<sp/>the<sp/>accel<sp/>ODR<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>&amp;=<sp/>0x1F;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>shift<sp/>in<sp/>our<sp/>new<sp/>ODR<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>|=<sp/>((aRate<sp/>&amp;<sp/>0x07)<sp/>&lt;&lt;<sp/>5);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a51704cb40f1e72ec298f601fedcc6092" kindref="member">sampleRate</ref><sp/>=<sp/>aRate<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>write<sp/>the<sp/>new<sp/>register<sp/>value<sp/>back<sp/>into<sp/>CTRL_REG1_XM:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a3f5b6fd3806c3e13590cc9746410265d" kindref="member">CTRL_REG6_XL</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="class_l_s_m9_d_s1_1a8bc672fba680edc468a643fd58046b41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a8bc672fba680edc468a643fd58046b41" kindref="member">LSM9DS1::setMagODR</ref>(uint8_t<sp/>mRate)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>preserve<sp/>the<sp/>other<sp/>bytes<sp/>in<sp/>CTRL_REG5_XM.<sp/>So,<sp/>first<sp/>read<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1ae4e470321567e4f93fc09f4cc6cd9efa" kindref="member">mReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a681825dec9359e9d82698edcfec6c24d" kindref="member">CTRL_REG1_M</ref>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>mask<sp/>out<sp/>the<sp/>mag<sp/>ODR<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>&amp;=<sp/>0xFF^(0x7<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>shift<sp/>in<sp/>our<sp/>new<sp/>ODR<sp/>bits:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>|=<sp/>((mRate<sp/>&amp;<sp/>0x07)<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1aca3dbf81e533dce344e618a3df199c1e" kindref="member">sampleRate</ref><sp/>=<sp/>mRate<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>write<sp/>the<sp/>new<sp/>register<sp/>value<sp/>back<sp/>into<sp/>CTRL_REG5_XM:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a681825dec9359e9d82698edcfec6c24d" kindref="member">CTRL_REG1_M</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="class_l_s_m9_d_s1_1a303e0dd33e000579dc3917aecedb6e63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a303e0dd33e000579dc3917aecedb6e63" kindref="member">LSM9DS1::calcgRes</ref>()</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a2d8654ebb35177088a67e67a944bd998" kindref="member">gRes</ref><sp/>=<sp/>((float)<sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref>)<sp/>/<sp/>32768.0;</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748" refid="class_l_s_m9_d_s1_1a31597c9ae6c5a7de64a50cbbbcd24297" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a31597c9ae6c5a7de64a50cbbbcd24297" kindref="member">LSM9DS1::calcaRes</ref>()</highlight></codeline>
<codeline lineno="749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1acdc1f9b300b3c349e17dd21c9bb37c40" kindref="member">aRes</ref><sp/>=<sp/>((float)<sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref>)<sp/>/<sp/>32768.0;</highlight></codeline>
<codeline lineno="751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753" refid="class_l_s_m9_d_s1_1a830dfc95c7e2d8524720d78357b053cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a830dfc95c7e2d8524720d78357b053cb" kindref="member">LSM9DS1::calcmRes</ref>()</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mRes<sp/>=<sp/>((float)<sp/>settings.mag.scale)<sp/>/<sp/>32768.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref>)</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aac7ae43adf399e8052464b966aec8472" kindref="member">mRes</ref><sp/>=<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8cpp_1abe1225b90f8c6d3ee7956881ea427fc3" kindref="member">magSensitivity</ref>[0];</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aac7ae43adf399e8052464b966aec8472" kindref="member">mRes</ref><sp/>=<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8cpp_1abe1225b90f8c6d3ee7956881ea427fc3" kindref="member">magSensitivity</ref>[1];</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>12:</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aac7ae43adf399e8052464b966aec8472" kindref="member">mRes</ref><sp/>=<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8cpp_1abe1225b90f8c6d3ee7956881ea427fc3" kindref="member">magSensitivity</ref>[2];</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1aac7ae43adf399e8052464b966aec8472" kindref="member">mRes</ref><sp/>=<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8cpp_1abe1225b90f8c6d3ee7956881ea427fc3" kindref="member">magSensitivity</ref>[3];</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="class_l_s_m9_d_s1_1a5b6948b9d4caf57cfe9e0559a0c7f54c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a5b6948b9d4caf57cfe9e0559a0c7f54c" kindref="member">LSM9DS1::configInt</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1a6261e8b8f54e4b66959cf92f93141a40" kindref="member">interrupt_select</ref><sp/>interrupt,<sp/>uint8_t<sp/>generator,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_l_s_m9_d_s1___types_8h_1ac99a793e4542699cb1b621bdac865ba7" kindref="member">h_lactive</ref><sp/>activeLow,<sp/><ref refid="_l_s_m9_d_s1___types_8h_1a60d66fa4435ec836a2f1e82fa6b10053" kindref="member">pp_od</ref><sp/>pushPull)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>to<sp/>INT1_CTRL<sp/>or<sp/>INT2_CTRL.<sp/>[interupt]<sp/>should<sp/>already<sp/>be<sp/>one<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>those<sp/>two<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[generator]<sp/>should<sp/>be<sp/>an<sp/>OR&apos;d<sp/>list<sp/>of<sp/>values<sp/>from<sp/>the<sp/>interrupt_generators<sp/>enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(interrupt,<sp/>generator);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>CTRL_REG8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a9c0a349bd992b6f67c98ba9ff7fc4310" kindref="member">CTRL_REG8</ref>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activeLow)<sp/>temp<sp/>|=<sp/>(1&lt;&lt;5);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>temp<sp/>&amp;=<sp/>~(1&lt;&lt;5);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pushPull)<sp/>temp<sp/>&amp;=<sp/>~(1&lt;&lt;4);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>temp<sp/>|=<sp/>(1&lt;&lt;4);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a9c0a349bd992b6f67c98ba9ff7fc4310" kindref="member">CTRL_REG8</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795" refid="class_l_s_m9_d_s1_1a1e318c5e7c1d500c3ab2602c46265354" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a1e318c5e7c1d500c3ab2602c46265354" kindref="member">LSM9DS1::configInactivity</ref>(uint8_t<sp/>duration,<sp/>uint8_t<sp/>threshold,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sleepOn)</highlight></codeline>
<codeline lineno="796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>threshold<sp/>&amp;<sp/>0x7F;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sleepOn)<sp/>temp<sp/>|=<sp/>(1&lt;&lt;7);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1aa7b862d228fc4821ad9e80ea404b6211" kindref="member">ACT_THS</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a4a2254de4b303d28b4c0857ecf40a19c" kindref="member">ACT_DUR</ref>,<sp/>duration);</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806" refid="class_l_s_m9_d_s1_1a9dab029d1d24e49709258d893042d28f" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a9dab029d1d24e49709258d893042d28f" kindref="member">LSM9DS1::getInactivity</ref>()</highlight></codeline>
<codeline lineno="807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1aef1145d8518c8fd83c853e927fb44801" kindref="member">STATUS_REG_0</ref>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>&amp;=<sp/>(0x10);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813" refid="class_l_s_m9_d_s1_1a1e8ebc6c1e3876d8936197dc93f76717" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a1e8ebc6c1e3876d8936197dc93f76717" kindref="member">LSM9DS1::configAccelInt</ref>(uint8_t<sp/>generator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>andInterrupts)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>variables<sp/>from<sp/>accel_interrupt_generator,<sp/>OR&apos;d<sp/>together<sp/>to<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>[generator]value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/>generator;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(andInterrupts)<sp/>temp<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a79e53784ade0dbe2317b862854b16526" kindref="member">INT_GEN_CFG_XL</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822" refid="class_l_s_m9_d_s1_1acebcf64ab4e6ea7ed7a23c09ef16afe9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1acebcf64ab4e6ea7ed7a23c09ef16afe9" kindref="member">LSM9DS1::configAccelThs</ref>(uint8_t<sp/>threshold,<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis,<sp/>uint8_t<sp/>duration,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>threshold<sp/>value<sp/>to<sp/>INT_GEN_THS_?_XL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>will<sp/>be<sp/>0,<sp/>1,<sp/>or<sp/>2<sp/>(x,<sp/>y,<sp/>z<sp/>respectively)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ac101c65560ff469831215ab2491cf760" kindref="member">INT_GEN_THS_X_XL</ref><sp/>+<sp/>axis,<sp/>threshold);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>duration<sp/>and<sp/>wait<sp/>to<sp/>INT_GEN_DUR_XL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(duration<sp/>&amp;<sp/>0x7F);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait)<sp/>temp<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ad2a0facf510793a8bc708244b3578569" kindref="member">INT_GEN_DUR_XL</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="833"><highlight class="normal">}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835" refid="class_l_s_m9_d_s1_1ae42ae3b368370f977d090ba0e53c7f5c" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1ae42ae3b368370f977d090ba0e53c7f5c" kindref="member">LSM9DS1::getAccelIntSrc</ref>()</highlight></codeline>
<codeline lineno="836"><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>intSrc<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a3b3a09387105483a4a5ae85600b07364" kindref="member">INT_GEN_SRC_XL</ref>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>IA_XL<sp/>(interrupt<sp/>active)<sp/>bit<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intSrc<sp/>&amp;<sp/>(1&lt;&lt;6))</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(intSrc<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="class_l_s_m9_d_s1_1a19a341728c4e5b454de045c8a531cf06" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a19a341728c4e5b454de045c8a531cf06" kindref="member">LSM9DS1::configGyroInt</ref>(uint8_t<sp/>generator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aoi,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>latch)</highlight></codeline>
<codeline lineno="849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>variables<sp/>from<sp/>accel_interrupt_generator,<sp/>OR&apos;d<sp/>together<sp/>to<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>[generator]value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/>generator;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aoi)<sp/>temp<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(latch)<sp/>temp<sp/>|=<sp/>0x40;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1acc6f2bdcd6a987d9e996b0f147d52a08" kindref="member">INT_GEN_CFG_G</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858" refid="class_l_s_m9_d_s1_1ad865cc972960ed476fabd54f698adf6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ad865cc972960ed476fabd54f698adf6e" kindref="member">LSM9DS1::configGyroThs</ref>(int16_t<sp/>threshold,<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis,<sp/>uint8_t<sp/>duration,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait)</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buffer[2];</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/>(threshold<sp/>&amp;<sp/>0x7F00)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[1]<sp/>=<sp/>(threshold<sp/>&amp;<sp/>0x00FF);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>threshold<sp/>value<sp/>to<sp/>INT_GEN_THS_?H_G<sp/>and<sp/><sp/>INT_GEN_THS_?L_G.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>axis<sp/>will<sp/>be<sp/>0,<sp/>1,<sp/>or<sp/>2<sp/>(x,<sp/>y,<sp/>z<sp/>respectively)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ad004b4050288dc635e68ac2c6a3866a2" kindref="member">INT_GEN_THS_XH_G</ref><sp/>+<sp/>(axis<sp/>*<sp/>2),<sp/>buffer[0]);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ad004b4050288dc635e68ac2c6a3866a2" kindref="member">INT_GEN_THS_XH_G</ref><sp/>+<sp/>1<sp/>+<sp/>(axis<sp/>*<sp/>2),<sp/>buffer[1]);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>duration<sp/>and<sp/>wait<sp/>to<sp/>INT_GEN_DUR_XL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(duration<sp/>&amp;<sp/>0x7F);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait)<sp/>temp<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a494192ebaf76143c9d377cae11f95d54" kindref="member">INT_GEN_DUR_G</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875" refid="class_l_s_m9_d_s1_1aaba6696754df62a411a6a190100f9ca3" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1aaba6696754df62a411a6a190100f9ca3" kindref="member">LSM9DS1::getGyroIntSrc</ref>()</highlight></codeline>
<codeline lineno="876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>intSrc<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ae225422f108611ebbad5dde6b8438357" kindref="member">INT_GEN_SRC_G</ref>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>IA_G<sp/>(interrupt<sp/>active)<sp/>bit<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intSrc<sp/>&amp;<sp/>(1&lt;&lt;6))</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(intSrc<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888" refid="class_l_s_m9_d_s1_1a54a521668eb63d504d227c6d460723e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a54a521668eb63d504d227c6d460723e0" kindref="member">LSM9DS1::configMagInt</ref>(uint8_t<sp/>generator,<sp/><ref refid="_l_s_m9_d_s1___types_8h_1ac99a793e4542699cb1b621bdac865ba7" kindref="member">h_lactive</ref><sp/>activeLow,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>latch)</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mask<sp/>out<sp/>non-generator<sp/>bits<sp/>(0-4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>config<sp/>=<sp/>(generator<sp/>&amp;<sp/>0xE0);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IEA<sp/>bit<sp/>is<sp/>0<sp/>for<sp/>active-low,<sp/>1<sp/>for<sp/>active-high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(activeLow<sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1ac99a793e4542699cb1b621bdac865ba7a7c5c74ecf9a0ae6739fe2a9e4cd76a2f" kindref="member">INT_ACTIVE_HIGH</ref>)<sp/>config<sp/>|=<sp/>(1&lt;&lt;2);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IEL<sp/>bit<sp/>is<sp/>0<sp/>for<sp/>latched,<sp/>1<sp/>for<sp/>not-latched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!latch)<sp/>config<sp/>|=<sp/>(1&lt;&lt;1);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>long<sp/>as<sp/>we<sp/>have<sp/>at<sp/>least<sp/>1<sp/>generator,<sp/>enable<sp/>the<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(generator<sp/>!=<sp/>0)<sp/>config<sp/>|=<sp/>(1&lt;&lt;0);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a4f5eea68b1f2ce72d284eea60e4553fb" kindref="member">INT_CFG_M</ref>,<sp/>config);</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902" refid="class_l_s_m9_d_s1_1a87cf3dd3a4d9ca79106eb7c1c866a224" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a87cf3dd3a4d9ca79106eb7c1c866a224" kindref="member">LSM9DS1::configMagThs</ref>(uint16_t<sp/>threshold)</highlight></codeline>
<codeline lineno="903"><highlight class="normal">{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>high<sp/>eight<sp/>bits<sp/>of<sp/>[threshold]<sp/>to<sp/>INT_THS_H_M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a947fca65e458b8a0876fb2081fb3d160" kindref="member">INT_THS_H_M</ref>,<sp/>uint8_t((threshold<sp/>&amp;<sp/>0x7F00)<sp/>&gt;&gt;<sp/>8));</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>low<sp/>eight<sp/>bits<sp/>of<sp/>[threshold]<sp/>to<sp/>INT_THS_L_M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1acefeab011ea4e58c1713737ec1b74532" kindref="member">INT_THS_L_M</ref>,<sp/>uint8_t(threshold<sp/>&amp;<sp/>0x00FF));</highlight></codeline>
<codeline lineno="908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910" refid="class_l_s_m9_d_s1_1a2bc92a37db982059b89e0a06e7d05a95" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a2bc92a37db982059b89e0a06e7d05a95" kindref="member">LSM9DS1::getMagIntSrc</ref>()</highlight></codeline>
<codeline lineno="911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>intSrc<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1ae4e470321567e4f93fc09f4cc6cd9efa" kindref="member">mReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a5a42ea617d3bb38574b2a19b553b1e1a" kindref="member">INT_SRC_M</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>INT<sp/>(interrupt<sp/>active)<sp/>bit<sp/>is<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intSrc<sp/>&amp;<sp/>(1&lt;&lt;0))</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(intSrc<sp/>&amp;<sp/>0xFE);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923" refid="class_l_s_m9_d_s1_1a13b61812069b399547f177b0b0af8fe3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a13b61812069b399547f177b0b0af8fe3" kindref="member">LSM9DS1::sleepGyro</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="924"><highlight class="normal">{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ab2caeb21f8e14a7d5657c523b2553843" kindref="member">CTRL_REG9</ref>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>temp<sp/>|=<sp/>(1&lt;&lt;6);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>temp<sp/>&amp;=<sp/>~(1&lt;&lt;6);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ab2caeb21f8e14a7d5657c523b2553843" kindref="member">CTRL_REG9</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931" refid="class_l_s_m9_d_s1_1a5f01141131318697838f15d7e5d10f2c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a5f01141131318697838f15d7e5d10f2c" kindref="member">LSM9DS1::enableFIFO</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)</highlight></codeline>
<codeline lineno="932"><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp<sp/>=<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ab2caeb21f8e14a7d5657c523b2553843" kindref="member">CTRL_REG9</ref>);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enable)<sp/>temp<sp/>|=<sp/>(1&lt;&lt;1);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>temp<sp/>&amp;=<sp/>~(1&lt;&lt;1);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1ab2caeb21f8e14a7d5657c523b2553843" kindref="member">CTRL_REG9</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939" refid="class_l_s_m9_d_s1_1a0ec4a93a34545af1acc336bae9b360f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a0ec4a93a34545af1acc336bae9b360f1" kindref="member">LSM9DS1::setFIFO</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1abd0fd05ddd88dadb906475b36c8266db" kindref="member">fifoMode_type</ref><sp/>fifoMode,<sp/>uint8_t<sp/>fifoThs)</highlight></codeline>
<codeline lineno="940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>threshold<sp/>-<sp/>0x1F<sp/>(31)<sp/>is<sp/>the<sp/>maximum.<sp/>If<sp/>more<sp/>than<sp/>that<sp/>was<sp/>asked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limit<sp/>it<sp/>to<sp/>the<sp/>maximum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>threshold<sp/>=<sp/>fifoThs<sp/>&lt;=<sp/>0x1F<sp/>?<sp/>fifoThs<sp/>:<sp/>0x1F;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1adcd8d113c8791a336768b8da70010ea7" kindref="member">FIFO_CTRL</ref>,<sp/>((fifoMode<sp/>&amp;<sp/>0x7)<sp/>&lt;&lt;<sp/>5)<sp/>|<sp/>(threshold<sp/>&amp;<sp/>0x1F));</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947" refid="class_l_s_m9_d_s1_1ac03ef2ff928a25c4a80af7707cd92dc8" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1ac03ef2ff928a25c4a80af7707cd92dc8" kindref="member">LSM9DS1::getFIFOSamples</ref>()</highlight></codeline>
<codeline lineno="948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(<ref refid="_l_s_m9_d_s1___registers_8h_1a8ff327dd2e3548068a66bffdc932d5ad" kindref="member">FIFO_SRC</ref>)<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952" refid="class_l_s_m9_d_s1_1a5aadcd09cf9157de817c359e49304ca7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a5aadcd09cf9157de817c359e49304ca7" kindref="member">LSM9DS1::constrainScales</ref>()</highlight></codeline>
<codeline lineno="953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref><sp/>!=<sp/>245)<sp/>&amp;&amp;<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref><sp/>!=<sp/>500)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref><sp/>!=<sp/>2000))</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1afab65feef7d0ca778b035a8805b1e4bf" kindref="member">gyro</ref>.<ref refid="structgyro_settings_1a70ced5c47e97d4dd6770954117ad3a9f" kindref="member">scale</ref><sp/>=<sp/>245;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>!=<sp/>2)<sp/>&amp;&amp;<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>!=<sp/>4)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>!=<sp/>8)<sp/>&amp;&amp;<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>!=<sp/>16))</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aa8c7bf392c70397ae02ee1f5ad0ea474" kindref="member">accel</ref>.<ref refid="structaccel_settings_1a3a0a38e5e32ad21fcf8e880f37c0de1e" kindref="member">scale</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>!=<sp/>4)<sp/>&amp;&amp;<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>!=<sp/>8)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>!=<sp/>12)<sp/>&amp;&amp;<sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>!=<sp/>16))</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1aca08359dfa3b8120aa687680d6c06ba7" kindref="member">mag</ref>.<ref refid="structmag_settings_1a5966915104376cb76d9eb787bab024bc" kindref="member">scale</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973" refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">LSM9DS1::xgWriteByte</ref>(uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>we&apos;re<sp/>using<sp/>I2C<sp/>or<sp/>SPI,<sp/>write<sp/>a<sp/>byte<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gyro-specific<sp/>I2C<sp/>address<sp/>or<sp/>SPI<sp/>CS<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" kindref="member">IMU_MODE_I2C</ref>)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a8e66108a002cc15ec4c0db0a608d20c6" kindref="member">I2CwriteByte</ref>(<ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref>,<sp/>subAddress,<sp/>data);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfae45ea9c51bf9ae045499f04550e356c0" kindref="member">IMU_MODE_SPI</ref>)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a83321c9d6ec50f6b9944907d2be482cd" kindref="member">SPIwriteByte</ref>(<ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref>,<sp/>subAddress,<sp/>data);</highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983" refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">LSM9DS1::mWriteByte</ref>(uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>we&apos;re<sp/>using<sp/>I2C<sp/>or<sp/>SPI,<sp/>write<sp/>a<sp/>byte<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accelerometer-specific<sp/>I2C<sp/>address<sp/>or<sp/>SPI<sp/>CS<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" kindref="member">IMU_MODE_I2C</ref>)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a8e66108a002cc15ec4c0db0a608d20c6" kindref="member">I2CwriteByte</ref>(<ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>,<sp/>subAddress,<sp/>data);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfae45ea9c51bf9ae045499f04550e356c0" kindref="member">IMU_MODE_SPI</ref>)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a83321c9d6ec50f6b9944907d2be482cd" kindref="member">SPIwriteByte</ref>(<ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>,<sp/>subAddress,<sp/>data);</highlight></codeline>
<codeline lineno="991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993" refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">LSM9DS1::xgReadByte</ref>(uint8_t<sp/>subAddress)</highlight></codeline>
<codeline lineno="994"><highlight class="normal">{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>we&apos;re<sp/>using<sp/>I2C<sp/>or<sp/>SPI,<sp/>read<sp/>a<sp/>byte<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gyro-specific<sp/>I2C<sp/>address<sp/>or<sp/>SPI<sp/>CS<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" kindref="member">IMU_MODE_I2C</ref>)</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a7fc046d4b335494331905fdeb5c81c9e" kindref="member">I2CreadByte</ref>(<ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref>,<sp/>subAddress);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfae45ea9c51bf9ae045499f04550e356c0" kindref="member">IMU_MODE_SPI</ref>)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a6f0f50bb5e9b702d5a19c7441a3f9d8b" kindref="member">SPIreadByte</ref>(<ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref>,<sp/>subAddress);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003" refid="class_l_s_m9_d_s1_1ae0a9cbfd74b1f4676f091c2d8e491d77" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ae0a9cbfd74b1f4676f091c2d8e491d77" kindref="member">LSM9DS1::xgReadBytes</ref>(uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>*<sp/>dest,<sp/>uint8_t<sp/>count)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>we&apos;re<sp/>using<sp/>I2C<sp/>or<sp/>SPI,<sp/>read<sp/>multiple<sp/>bytes<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gyro-specific<sp/>I2C<sp/>address<sp/>or<sp/>SPI<sp/>CS<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" kindref="member">IMU_MODE_I2C</ref>)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1adfc9a22290daddd7787e8023fa8f12cc" kindref="member">I2CreadBytes</ref>(<ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref>,<sp/>subAddress,<sp/>dest,<sp/>count);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfae45ea9c51bf9ae045499f04550e356c0" kindref="member">IMU_MODE_SPI</ref>)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a26c0f164454eba84e6486033b7061d11" kindref="member">SPIreadBytes</ref>(<ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref>,<sp/>subAddress,<sp/>dest,<sp/>count);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013" refid="class_l_s_m9_d_s1_1ae4e470321567e4f93fc09f4cc6cd9efa" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1ae4e470321567e4f93fc09f4cc6cd9efa" kindref="member">LSM9DS1::mReadByte</ref>(uint8_t<sp/>subAddress)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>we&apos;re<sp/>using<sp/>I2C<sp/>or<sp/>SPI,<sp/>read<sp/>a<sp/>byte<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accelerometer-specific<sp/>I2C<sp/>address<sp/>or<sp/>SPI<sp/>CS<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" kindref="member">IMU_MODE_I2C</ref>)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a7fc046d4b335494331905fdeb5c81c9e" kindref="member">I2CreadByte</ref>(<ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>,<sp/>subAddress);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfae45ea9c51bf9ae045499f04550e356c0" kindref="member">IMU_MODE_SPI</ref>)</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a6f0f50bb5e9b702d5a19c7441a3f9d8b" kindref="member">SPIreadByte</ref>(<ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>,<sp/>subAddress);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023" refid="class_l_s_m9_d_s1_1acfdf9862cad1e66c9fb61a17bfbe7477" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1acfdf9862cad1e66c9fb61a17bfbe7477" kindref="member">LSM9DS1::mReadBytes</ref>(uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>*<sp/>dest,<sp/>uint8_t<sp/>count)</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>we&apos;re<sp/>using<sp/>I2C<sp/>or<sp/>SPI,<sp/>read<sp/>multiple<sp/>bytes<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accelerometer-specific<sp/>I2C<sp/>address<sp/>or<sp/>SPI<sp/>CS<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" kindref="member">IMU_MODE_I2C</ref>)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1adfc9a22290daddd7787e8023fa8f12cc" kindref="member">I2CreadBytes</ref>(<ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>,<sp/>subAddress,<sp/>dest,<sp/>count);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>==<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfae45ea9c51bf9ae045499f04550e356c0" kindref="member">IMU_MODE_SPI</ref>)</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a26c0f164454eba84e6486033b7061d11" kindref="member">SPIreadBytes</ref>(<ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>,<sp/>subAddress,<sp/>dest,<sp/>count);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033" refid="class_l_s_m9_d_s1_1a4286d5803ab028c657e007ae99acc60a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a4286d5803ab028c657e007ae99acc60a" kindref="member">LSM9DS1::initSPI</ref>()</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(<ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(<ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>SPI<sp/>frequency<sp/>is<sp/>10MHz,<sp/>could<sp/>divide<sp/>by<sp/>2<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setClockDivider(SPI_CLOCK_DIV2);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>is<sp/>read<sp/>and<sp/>written<sp/>MSb<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setBitOrder(MSBFIRST);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Data<sp/>is<sp/>captured<sp/>on<sp/>rising<sp/>edge<sp/>of<sp/>clock<sp/>(CPHA<sp/>=<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Base<sp/>value<sp/>of<sp/>the<sp/>clock<sp/>is<sp/>HIGH<sp/>(CPOL<sp/>=<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setDataMode(SPI_MODE0);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050" refid="class_l_s_m9_d_s1_1a83321c9d6ec50f6b9944907d2be482cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a83321c9d6ec50f6b9944907d2be482cd" kindref="member">LSM9DS1::SPIwriteByte</ref>(uint8_t<sp/>csPin,<sp/>uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(csPin,<sp/>LOW);<sp/></highlight><highlight class="comment">//<sp/>Initiate<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>write,<sp/>bit<sp/>0<sp/>(MSB)<sp/>should<sp/>be<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>single<sp/>write,<sp/>bit<sp/>1<sp/>should<sp/>be<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.transfer(subAddress<sp/>&amp;<sp/>0x3F);<sp/></highlight><highlight class="comment">//<sp/>Send<sp/>Address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.transfer(data);<sp/></highlight><highlight class="comment">//<sp/>Send<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(csPin,<sp/>HIGH);<sp/></highlight><highlight class="comment">//<sp/>Close<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062" refid="class_l_s_m9_d_s1_1a6f0f50bb5e9b702d5a19c7441a3f9d8b" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a6f0f50bb5e9b702d5a19c7441a3f9d8b" kindref="member">LSM9DS1::SPIreadByte</ref>(uint8_t<sp/>csPin,<sp/>uint8_t<sp/>subAddress)</highlight></codeline>
<codeline lineno="1063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>multiple<sp/>read<sp/>function<sp/>to<sp/>read<sp/>1<sp/>byte.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Value<sp/>is<sp/>returned<sp/>to<sp/>`temp`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a26c0f164454eba84e6486033b7061d11" kindref="member">SPIreadBytes</ref>(csPin,<sp/>subAddress,<sp/>&amp;temp,<sp/>1);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071" refid="class_l_s_m9_d_s1_1a26c0f164454eba84e6486033b7061d11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a26c0f164454eba84e6486033b7061d11" kindref="member">LSM9DS1::SPIreadBytes</ref>(uint8_t<sp/>csPin,<sp/>uint8_t<sp/>subAddress,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>dest,<sp/>uint8_t<sp/>count)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>indicate<sp/>a<sp/>read,<sp/>set<sp/>bit<sp/>0<sp/>(msb)<sp/>of<sp/>first<sp/>byte<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>rAddress<sp/>=<sp/>0x80<sp/>|<sp/>(subAddress<sp/>&amp;<sp/>0x3F);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mag<sp/>SPI<sp/>port<sp/>is<sp/>different.<sp/>If<sp/>we&apos;re<sp/>reading<sp/>multiple<sp/>bytes,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>bit<sp/>1<sp/>to<sp/>1.<sp/>The<sp/>remaining<sp/>six<sp/>bytes<sp/>are<sp/>the<sp/>address<sp/>to<sp/>be<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((csPin<sp/>==<sp/><ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>)<sp/>&amp;&amp;<sp/>count<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rAddress<sp/>|=<sp/>0x40;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(csPin,<sp/>LOW);<sp/></highlight><highlight class="comment">//<sp/>Initiate<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.transfer(rAddress);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>=0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>&lt;count;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/>SPI.transfer(0x00);<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>into<sp/>destination<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(csPin,<sp/>HIGH);<sp/></highlight><highlight class="comment">//<sp/>Close<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090" refid="class_l_s_m9_d_s1_1ae60332c2836bd3f19846b7a44c015ddd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ae60332c2836bd3f19846b7a44c015ddd" kindref="member">LSM9DS1::initI2C</ref>()</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.begin();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>I2C<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Wire.h<sp/>read<sp/>and<sp/>write<sp/>protocols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096" refid="class_l_s_m9_d_s1_1a8e66108a002cc15ec4c0db0a608d20c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a8e66108a002cc15ec4c0db0a608d20c6" kindref="member">LSM9DS1::I2CwriteByte</ref>(uint8_t<sp/>address,<sp/>uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>data)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.beginTransmission(address);<sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>Tx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.write(subAddress);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>slave<sp/>register<sp/>address<sp/>in<sp/>Tx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.write(data);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>data<sp/>in<sp/>Tx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.endTransmission();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>Tx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1104" refid="class_l_s_m9_d_s1_1a7fc046d4b335494331905fdeb5c81c9e" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a7fc046d4b335494331905fdeb5c81c9e" kindref="member">LSM9DS1::I2CreadByte</ref>(uint8_t<sp/>address,<sp/>uint8_t<sp/>subAddress)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8cpp_1ab99dc8f2f400e97f7a5d70823788aeea" kindref="member">LSM9DS1_COMMUNICATION_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data;<sp/></highlight><highlight class="comment">//<sp/>`data`<sp/>will<sp/>store<sp/>the<sp/>register<sp/>data<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.beginTransmission(address);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>Tx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.write(subAddress);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>slave<sp/>register<sp/>address<sp/>in<sp/>Tx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.endTransmission(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>Tx<sp/>buffer,<sp/>but<sp/>send<sp/>a<sp/>restart<sp/>to<sp/>keep<sp/>connection<sp/>alive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.requestFrom(address,<sp/>(uint8_t)<sp/>1);<sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>one<sp/>byte<sp/>from<sp/>slave<sp/>register<sp/>address<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.available()<sp/>&lt;<sp/>1)<sp/>&amp;&amp;<sp/>(timeout--<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(1);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>255;<sp/></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.read();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>Rx<sp/>buffer<sp/>with<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>data<sp/>read<sp/>from<sp/>slave<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123" refid="class_l_s_m9_d_s1_1adfc9a22290daddd7787e8023fa8f12cc" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1adfc9a22290daddd7787e8023fa8f12cc" kindref="member">LSM9DS1::I2CreadBytes</ref>(uint8_t<sp/>address,<sp/>uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>*<sp/>dest,<sp/>uint8_t<sp/>count)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeout<sp/>=<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8cpp_1ab99dc8f2f400e97f7a5d70823788aeea" kindref="member">LSM9DS1_COMMUNICATION_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.beginTransmission(address);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>Tx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>send<sp/>the<sp/>register<sp/>to<sp/>be<sp/>read.<sp/>OR<sp/>with<sp/>0x80<sp/>to<sp/>indicate<sp/>multi-read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.write(subAddress<sp/>|<sp/>0x80);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>slave<sp/>register<sp/>address<sp/>in<sp/>Tx<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.endTransmission(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>Tx<sp/>buffer,<sp/>but<sp/>send<sp/>a<sp/>restart<sp/>to<sp/>keep<sp/>connection<sp/>alive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.requestFrom(address,<sp/>count);<sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>bytes<sp/>from<sp/>slave<sp/>register<sp/>address<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.available()<sp/>&lt;<sp/>count)<sp/>&amp;&amp;<sp/>(timeout--<sp/>&gt;<sp/>0))</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(1);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;count;)</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.available())</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest[i++]<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>.read();</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp"/>
  </compounddef>
</doxygen>
