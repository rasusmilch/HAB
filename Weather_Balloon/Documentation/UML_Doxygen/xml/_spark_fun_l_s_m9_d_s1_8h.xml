<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_spark_fun_l_s_m9_d_s1_8h" kind="file" language="C++">
    <compoundname>SparkFunLSM9DS1.h</compoundname>
    <includes local="yes">WProgram.h</includes>
    <includes local="yes">pins_arduino.h</includes>
    <includes refid="_l_s_m9_d_s1___registers_8h" local="yes">LSM9DS1_Registers.h</includes>
    <includes refid="_l_s_m9_d_s1___types_8h" local="yes">LSM9DS1_Types.h</includes>
    <includedby refid="_spark_fun_l_s_m9_d_s1_8cpp" local="yes">Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp</includedby>
    <includedby refid="_weather___balloon_8cpp" local="yes">Weather_Balloon/Weather_Balloon.cpp</includedby>
    <incdepgraph>
      <node id="992">
        <label>pins_arduino.h</label>
      </node>
      <node id="993">
        <label>LSM9DS1_Registers.h</label>
        <link refid="_l_s_m9_d_s1___registers_8h"/>
      </node>
      <node id="991">
        <label>WProgram.h</label>
      </node>
      <node id="990">
        <label>Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h</label>
        <link refid="SparkFunLSM9DS1.h"/>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
      </node>
      <node id="994">
        <label>LSM9DS1_Types.h</label>
        <link refid="_l_s_m9_d_s1___types_8h"/>
        <childnode refid="993" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="996">
        <label>Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp</label>
        <link refid="_spark_fun_l_s_m9_d_s1_8cpp"/>
      </node>
      <node id="997">
        <label>Weather_Balloon/Weather_Balloon.cpp</label>
        <link refid="_weather___balloon_8cpp"/>
      </node>
      <node id="995">
        <label>Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h</label>
        <link refid="SparkFunLSM9DS1.h"/>
        <childnode refid="996" relation="include">
        </childnode>
        <childnode refid="997" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_l_s_m9_d_s1" prot="public">LSM9DS1</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_spark_fun_l_s_m9_d_s1_8h_1a8f6c770035b14543322ec58e37247c7b" prot="public" static="no">
        <name>LSM9DS1_AG_ADDR</name>
        <param><defname>sa0</defname></param>
        <initializer>((sa0) == 0 ? 0x6A : 0x6B)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h" line="35" column="9" bodyfile="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h" bodystart="35" bodyend="-1"/>
        <referencedby refid="class_l_s_m9_d_s1_1a399a80ee541823b301e81d1afab32b28" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="40" endline="43">LSM9DS1::LSM9DS1</referencedby>
      </memberdef>
      <memberdef kind="define" id="_spark_fun_l_s_m9_d_s1_8h_1a46328ac68fd42bb3f38d05dc8bdd468a" prot="public" static="no">
        <name>LSM9DS1_M_ADDR</name>
        <param><defname>sa1</defname></param>
        <initializer>((sa1) == 0 ? 0x1C : 0x1E)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h" line="36" column="9" bodyfile="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h" bodystart="36" bodyend="-1"/>
        <referencedby refid="class_l_s_m9_d_s1_1a399a80ee541823b301e81d1afab32b28" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="40" endline="43">LSM9DS1::LSM9DS1</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" prot="public" static="no">
        <name>lsm9ds1_axis</name>
        <enumvalue id="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a93ed1386222f87948b972889ad82cd33" prot="public">
          <name>X_AXIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164aa1ec9649c0a631b27ad7280af3522dd0" prot="public">
          <name>Y_AXIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a4b8a53bafca6b43388660925049d734f" prot="public">
          <name>Z_AXIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a8a4cd6c8a7401ef4e548059cf12006c0" prot="public">
          <name>ALL_AXIS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h" line="38" column="1" bodyfile="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h" bodystart="38" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">SFE_LSM9DS1.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment">SFE_LSM9DS1<sp/>Library<sp/>Header<sp/>File</highlight></codeline>
<codeline lineno="4"><highlight class="comment">Jim<sp/>Lindblom<sp/>@<sp/>SparkFun<sp/>Electronics</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Original<sp/>Creation<sp/>Date:<sp/>February<sp/>27,<sp/>2015</highlight></codeline>
<codeline lineno="6"><highlight class="comment">https://github.com/sparkfun/LSM9DS1_Breakout</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">This<sp/>file<sp/>prototypes<sp/>the<sp/>LSM9DS1<sp/>class,<sp/>implemented<sp/>in<sp/>SFE_LSM9DS1.cpp.<sp/>In</highlight></codeline>
<codeline lineno="9"><highlight class="comment">addition,<sp/>it<sp/>defines<sp/>every<sp/>register<sp/>in<sp/>the<sp/>LSM9DS1<sp/>(both<sp/>the<sp/>Gyro<sp/>and<sp/>Accel/</highlight></codeline>
<codeline lineno="10"><highlight class="comment">Magnetometer<sp/>registers).</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">Development<sp/>environment<sp/>specifics:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>IDE:<sp/>Arduino<sp/>1.6.0</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>Hardware<sp/>Platform:<sp/>Arduino<sp/>Uno</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>LSM9DS1<sp/>Breakout<sp/>Version:<sp/>1.0</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">This<sp/>code<sp/>is<sp/>beerware;<sp/>if<sp/>you<sp/>see<sp/>me<sp/>(or<sp/>any<sp/>other<sp/>SparkFun<sp/>employee)<sp/>at<sp/>the</highlight></codeline>
<codeline lineno="18"><highlight class="comment">local,<sp/>and<sp/>you&apos;ve<sp/>found<sp/>our<sp/>code<sp/>helpful,<sp/>please<sp/>buy<sp/>us<sp/>a<sp/>round!</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">Distributed<sp/>as-is;<sp/>no<sp/>warranty<sp/>is<sp/>given.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SparkFunLSM9DS1_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SparkFunLSM9DS1_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(ARDUINO)<sp/>&amp;&amp;<sp/>ARDUINO<sp/>&gt;=<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;WProgram.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;pins_arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_l_s_m9_d_s1___registers_8h" kindref="compound">LSM9DS1_Registers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_l_s_m9_d_s1___types_8h" kindref="compound">LSM9DS1_Types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="_spark_fun_l_s_m9_d_s1_8h_1a8f6c770035b14543322ec58e37247c7b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSM9DS1_AG_ADDR(sa0)<sp/><sp/><sp/><sp/>((sa0)<sp/>==<sp/>0<sp/>?<sp/>0x6A<sp/>:<sp/>0x6B)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_spark_fun_l_s_m9_d_s1_8h_1a46328ac68fd42bb3f38d05dc8bdd468a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSM9DS1_M_ADDR(sa1)<sp/><sp/><sp/><sp/><sp/>((sa1)<sp/>==<sp/>0<sp/>?<sp/>0x1C<sp/>:<sp/>0x1E)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>{</highlight></codeline>
<codeline lineno="39" refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a93ed1386222f87948b972889ad82cd33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a93ed1386222f87948b972889ad82cd33" kindref="member">X_AXIS</ref>,</highlight></codeline>
<codeline lineno="40" refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164aa1ec9649c0a631b27ad7280af3522dd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164aa1ec9649c0a631b27ad7280af3522dd0" kindref="member">Y_AXIS</ref>,</highlight></codeline>
<codeline lineno="41" refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a4b8a53bafca6b43388660925049d734f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a4b8a53bafca6b43388660925049d734f" kindref="member">Z_AXIS</ref>,</highlight></codeline>
<codeline lineno="42" refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a8a4cd6c8a7401ef4e548059cf12006c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a8a4cd6c8a7401ef4e548059cf12006c0" kindref="member">ALL_AXIS</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_l_s_m9_d_s1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_l_s_m9_d_s1" kindref="compound">LSM9DS1</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_m_u_settings" kindref="compound">IMUSettings</ref><sp/><ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>store<sp/>the<sp/>gyro,<sp/>accel,<sp/>and<sp/>magnetometer<sp/>readings<sp/>in<sp/>a<sp/>series<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>public<sp/>class<sp/>variables.<sp/>Each<sp/>sensor<sp/>gets<sp/>three<sp/>variables<sp/>--<sp/>one<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>axis.<sp/>Call<sp/>readGyro(),<sp/>readAccel(),<sp/>and<sp/>readMag()<sp/>first,<sp/>before<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>variables!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>values<sp/>are<sp/>the<sp/>RAW<sp/>signed<sp/>16-bit<sp/>readings<sp/>from<sp/>the<sp/>sensors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_l_s_m9_d_s1_1ad4d0f0585398ff917afcba1b4a73e519" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_l_s_m9_d_s1_1abf02b4544b5d529036adbac02e7b9f02" kindref="member">gx</ref>,<sp/><ref refid="class_l_s_m9_d_s1_1a0c351823fd094ff24ff245dd951cf783" kindref="member">gy</ref>,<sp/><ref refid="class_l_s_m9_d_s1_1ad4d0f0585398ff917afcba1b4a73e519" kindref="member">gz</ref>;<sp/></highlight><highlight class="comment">//<sp/>x,<sp/>y,<sp/>and<sp/>z<sp/>axis<sp/>readings<sp/>of<sp/>the<sp/>gyroscope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_l_s_m9_d_s1_1aa631c8a90b90130b5be147dd4fae0841" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_l_s_m9_d_s1_1adac13514d176cfb54aed8cda9a056335" kindref="member">ax</ref>,<sp/><ref refid="class_l_s_m9_d_s1_1a978a357dedfa574d6e0fad33ad71e23f" kindref="member">ay</ref>,<sp/><ref refid="class_l_s_m9_d_s1_1aa631c8a90b90130b5be147dd4fae0841" kindref="member">az</ref>;<sp/></highlight><highlight class="comment">//<sp/>x,<sp/>y,<sp/>and<sp/>z<sp/>axis<sp/>readings<sp/>of<sp/>the<sp/>accelerometer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_l_s_m9_d_s1_1aafe23993500ece9efd161e564787dce2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_l_s_m9_d_s1_1a0e68eb9e44969070b6d84a93ba252f71" kindref="member">mx</ref>,<sp/><ref refid="class_l_s_m9_d_s1_1a773f80f9b7cdf8375c84a4209895d732" kindref="member">my</ref>,<sp/><ref refid="class_l_s_m9_d_s1_1aafe23993500ece9efd161e564787dce2" kindref="member">mz</ref>;<sp/></highlight><highlight class="comment">//<sp/>x,<sp/>y,<sp/>and<sp/>z<sp/>axis<sp/>readings<sp/>of<sp/>the<sp/>magnetometer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_l_s_m9_d_s1_1a92791effe47c0f8c93505e53496266e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_l_s_m9_d_s1_1a92791effe47c0f8c93505e53496266e5" kindref="member">temperature</ref>;<sp/></highlight><highlight class="comment">//<sp/>Chip<sp/>temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_l_s_m9_d_s1_1aab3753b958a1eaabfb48ffaf837dfadc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a8c0354ee78e029b6715ee7110bcd8753" kindref="member">gBias</ref>[3],<sp/><ref refid="class_l_s_m9_d_s1_1abe998fcc50cfe729c13ab535337849c7" kindref="member">aBias</ref>[3],<sp/><ref refid="class_l_s_m9_d_s1_1aab3753b958a1eaabfb48ffaf837dfadc" kindref="member">mBias</ref>[3];</highlight></codeline>
<codeline lineno="60" refid="class_l_s_m9_d_s1_1ad0e3ab0b7eeee5378ab91dd20270a9b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_l_s_m9_d_s1_1ab2e59e0460cf88a12765238506031f2a" kindref="member">gBiasRaw</ref>[3],<sp/><ref refid="class_l_s_m9_d_s1_1ae42dc2f2b9f2df223c853e233191313a" kindref="member">aBiasRaw</ref>[3],<sp/><ref refid="class_l_s_m9_d_s1_1ad0e3ab0b7eeee5378ab91dd20270a9b5" kindref="member">mBiasRaw</ref>[3];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LSM9DS1<sp/>--<sp/>LSM9DS1<sp/>class<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>constructor<sp/>will<sp/>set<sp/>up<sp/>a<sp/>handful<sp/>of<sp/>private<sp/>variables,<sp/>and<sp/>set<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>communication<sp/>mode<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>interface<sp/>=<sp/>Either<sp/>IMU_MODE_SPI<sp/>or<sp/>IMU_MODE_I2C,<sp/>whichever<sp/>you&apos;re<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>talk<sp/>to<sp/>the<sp/>IC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>xgAddr<sp/>=<sp/>If<sp/>IMU_MODE_I2C,<sp/>this<sp/>is<sp/>the<sp/>I2C<sp/>address<sp/>of<sp/>the<sp/>accel/gyroscope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>IMU_MODE_SPI,<sp/>this<sp/>is<sp/>the<sp/>chip<sp/>select<sp/>pin<sp/>of<sp/>the<sp/>gyro<sp/>(CS_AG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>mAddr<sp/>=<sp/>If<sp/>IMU_MODE_I2C,<sp/>this<sp/>is<sp/>the<sp/>I2C<sp/>address<sp/>of<sp/>the<sp/>magnetometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>IMU_MODE_SPI,<sp/>this<sp/>is<sp/>the<sp/>cs<sp/>pin<sp/>of<sp/>the<sp/>magnetometer<sp/>(CS_M)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a399a80ee541823b301e81d1afab32b28" kindref="member">LSM9DS1</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adf" kindref="member">interface_mode</ref><sp/>interface,<sp/>uint8_t<sp/>xgAddr,<sp/>uint8_t<sp/>mAddr);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_l_s_m9_d_s1_1a399a80ee541823b301e81d1afab32b28" kindref="member">LSM9DS1</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begin()<sp/>--<sp/>Initialize<sp/>the<sp/>gyro,<sp/>accelerometer,<sp/>and<sp/>magnetometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>set<sp/>up<sp/>the<sp/>scale<sp/>and<sp/>output<sp/>rate<sp/>of<sp/>each<sp/>sensor.<sp/>The<sp/>values<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>IMUSettings<sp/>struct<sp/>will<sp/>take<sp/>effect<sp/>after<sp/>calling<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="class_l_s_m9_d_s1_1a8728e560c76bd120b3711af15a6ecbd6" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a97939cb15fcb7e33abcd6d3a9230d943" kindref="member">calibrate</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>autoCalc<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1afb45f0bcbcbeb15d4bd1a28821b24d14" kindref="member">calibrateMag</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>loadIn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a0d461614bd058b082c94481dc916c18b" kindref="member">magOffset</ref>(uint8_t<sp/>axis,<sp/>int16_t<sp/>offset);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accelAvailable()<sp/>--<sp/>Polls<sp/>the<sp/>accelerometer<sp/>status<sp/>register<sp/>to<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>new<sp/>data<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:<sp/><sp/>1<sp/>-<sp/>New<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>-<sp/>No<sp/>new<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a515ce6f5c199a86c6aa5be353b2a3a13" kindref="member">accelAvailable</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gyroAvailable()<sp/>--<sp/>Polls<sp/>the<sp/>gyroscope<sp/>status<sp/>register<sp/>to<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>new<sp/>data<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:<sp/><sp/>1<sp/>-<sp/>New<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>-<sp/>No<sp/>new<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a65b71a03a30f4e8ed1ffd46de3db0560" kindref="member">gyroAvailable</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gyroAvailable()<sp/>--<sp/>Polls<sp/>the<sp/>temperature<sp/>status<sp/>register<sp/>to<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>new<sp/>data<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:<sp/><sp/>1<sp/>-<sp/>New<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>-<sp/>No<sp/>new<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1aaf6683c6f3f0281d5222b74f580f321b" kindref="member">tempAvailable</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>magAvailable()<sp/>--<sp/>Polls<sp/>the<sp/>accelerometer<sp/>status<sp/>register<sp/>to<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>new<sp/>data<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>axis<sp/>can<sp/>be<sp/>either<sp/>X_AXIS,<sp/>Y_AXIS,<sp/>Z_AXIS,<sp/>to<sp/>check<sp/>for<sp/>new<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>on<sp/>one<sp/>specific<sp/>axis.<sp/>Or<sp/>ALL_AXIS<sp/>(default)<sp/>to<sp/>check<sp/>for<sp/>new<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>on<sp/>all<sp/>axes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:<sp/><sp/>1<sp/>-<sp/>New<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>-<sp/>No<sp/>new<sp/>data<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a85afd29e95bead7b3f0083a9a235d1df" kindref="member">magAvailable</ref>(<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis<sp/>=<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164a8a4cd6c8a7401ef4e548059cf12006c0" kindref="member">ALL_AXIS</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>readGyro()<sp/>--<sp/>Read<sp/>the<sp/>gyroscope<sp/>output<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>read<sp/>all<sp/>six<sp/>gyroscope<sp/>output<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>readings<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>class&apos;<sp/>gx,<sp/>gy,<sp/>and<sp/>gz<sp/>variables.<sp/>Read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>those<sp/>_after_<sp/>calling<sp/>readGyro().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a56e9710cb538a4c7f7ab94c2ca256ce9" kindref="member">readGyro</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int16_t<sp/>readGyro(axis)<sp/>--<sp/>Read<sp/>a<sp/>specific<sp/>axis<sp/>of<sp/>the<sp/>gyroscope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[axis]<sp/>can<sp/>be<sp/>any<sp/>of<sp/>X_AXIS,<sp/>Y_AXIS,<sp/>or<sp/>Z_AXIS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>axis:<sp/>can<sp/>be<sp/>either<sp/>X_AXIS,<sp/>Y_AXIS,<sp/>or<sp/>Z_AXIS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>A<sp/>16-bit<sp/>signed<sp/>integer<sp/>with<sp/>sensor<sp/>data<sp/>on<sp/>requested<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_l_s_m9_d_s1_1a56e9710cb538a4c7f7ab94c2ca256ce9" kindref="member">readGyro</ref>(<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>readAccel()<sp/>--<sp/>Read<sp/>the<sp/>accelerometer<sp/>output<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>read<sp/>all<sp/>six<sp/>accelerometer<sp/>output<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>readings<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>class&apos;<sp/>ax,<sp/>ay,<sp/>and<sp/>az<sp/>variables.<sp/>Read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>those<sp/>_after_<sp/>calling<sp/>readAccel().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a9953684a1ff652a7d3a4d91e72bccaa1" kindref="member">readAccel</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int16_t<sp/>readAccel(axis)<sp/>--<sp/>Read<sp/>a<sp/>specific<sp/>axis<sp/>of<sp/>the<sp/>accelerometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[axis]<sp/>can<sp/>be<sp/>any<sp/>of<sp/>X_AXIS,<sp/>Y_AXIS,<sp/>or<sp/>Z_AXIS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>axis:<sp/>can<sp/>be<sp/>either<sp/>X_AXIS,<sp/>Y_AXIS,<sp/>or<sp/>Z_AXIS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>A<sp/>16-bit<sp/>signed<sp/>integer<sp/>with<sp/>sensor<sp/>data<sp/>on<sp/>requested<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_l_s_m9_d_s1_1a9953684a1ff652a7d3a4d91e72bccaa1" kindref="member">readAccel</ref>(<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>readMag()<sp/>--<sp/>Read<sp/>the<sp/>magnetometer<sp/>output<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>read<sp/>all<sp/>six<sp/>magnetometer<sp/>output<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>readings<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>class&apos;<sp/>mx,<sp/>my,<sp/>and<sp/>mz<sp/>variables.<sp/>Read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>those<sp/>_after_<sp/>calling<sp/>readMag().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ae127cf75aa5f3c5421e49363795dcd38" kindref="member">readMag</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int16_t<sp/>readMag(axis)<sp/>--<sp/>Read<sp/>a<sp/>specific<sp/>axis<sp/>of<sp/>the<sp/>magnetometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[axis]<sp/>can<sp/>be<sp/>any<sp/>of<sp/>X_AXIS,<sp/>Y_AXIS,<sp/>or<sp/>Z_AXIS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>axis:<sp/>can<sp/>be<sp/>either<sp/>X_AXIS,<sp/>Y_AXIS,<sp/>or<sp/>Z_AXIS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>A<sp/>16-bit<sp/>signed<sp/>integer<sp/>with<sp/>sensor<sp/>data<sp/>on<sp/>requested<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_l_s_m9_d_s1_1ae127cf75aa5f3c5421e49363795dcd38" kindref="member">readMag</ref>(<ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>readTemp()<sp/>--<sp/>Read<sp/>the<sp/>temperature<sp/>output<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>read<sp/>two<sp/>temperature<sp/>output<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>combined<sp/>readings<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>class&apos;<sp/>temperature<sp/>variables.<sp/>Read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>those<sp/>_after_<sp/>calling<sp/>readTemp().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1aca21a51dc79a1287b97ed9c326e2080b" kindref="member">readTemp</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calcGyro()<sp/>--<sp/>Convert<sp/>from<sp/>RAW<sp/>signed<sp/>16-bit<sp/>value<sp/>to<sp/>degrees<sp/>per<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>reads<sp/>in<sp/>a<sp/>signed<sp/>16-bit<sp/>value<sp/>and<sp/>returns<sp/>the<sp/>scaled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DPS.<sp/>This<sp/>function<sp/>relies<sp/>on<sp/>gScale<sp/>and<sp/>gRes<sp/>being<sp/>correct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>gyro<sp/>=<sp/>A<sp/>signed<sp/>16-bit<sp/>raw<sp/>reading<sp/>from<sp/>the<sp/>gyroscope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a76707323565bc4170ea8e27a932c95e4" kindref="member">calcGyro</ref>(int16_t<sp/>gyro);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calcAccel()<sp/>--<sp/>Convert<sp/>from<sp/>RAW<sp/>signed<sp/>16-bit<sp/>value<sp/>to<sp/>gravity<sp/>(g&apos;s).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>reads<sp/>in<sp/>a<sp/>signed<sp/>16-bit<sp/>value<sp/>and<sp/>returns<sp/>the<sp/>scaled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>g&apos;s.<sp/>This<sp/>function<sp/>relies<sp/>on<sp/>aScale<sp/>and<sp/>aRes<sp/>being<sp/>correct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>accel<sp/>=<sp/>A<sp/>signed<sp/>16-bit<sp/>raw<sp/>reading<sp/>from<sp/>the<sp/>accelerometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a54e2a7888b67b47cf0dd986c5b91a3c5" kindref="member">calcAccel</ref>(int16_t<sp/>accel);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calcMag()<sp/>--<sp/>Convert<sp/>from<sp/>RAW<sp/>signed<sp/>16-bit<sp/>value<sp/>to<sp/>Gauss<sp/>(Gs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>reads<sp/>in<sp/>a<sp/>signed<sp/>16-bit<sp/>value<sp/>and<sp/>returns<sp/>the<sp/>scaled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gs.<sp/>This<sp/>function<sp/>relies<sp/>on<sp/>mScale<sp/>and<sp/>mRes<sp/>being<sp/>correct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>mag<sp/>=<sp/>A<sp/>signed<sp/>16-bit<sp/>raw<sp/>reading<sp/>from<sp/>the<sp/>magnetometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a7d0b0740497b1a10cd3e46a282a143ec" kindref="member">calcMag</ref>(int16_t<sp/>mag);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setGyroScale()<sp/>--<sp/>Set<sp/>the<sp/>full-scale<sp/>range<sp/>of<sp/>the<sp/>gyroscope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>can<sp/>be<sp/>called<sp/>to<sp/>set<sp/>the<sp/>scale<sp/>of<sp/>the<sp/>gyroscope<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>245,<sp/>500,<sp/>or<sp/>200<sp/>degrees<sp/>per<sp/>second.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>gScl<sp/>=<sp/>The<sp/>desired<sp/>gyroscope<sp/>scale.<sp/>Must<sp/>be<sp/>one<sp/>of<sp/>three<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>from<sp/>the<sp/>gyro_scale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a115d304ebcdc8c701f3e5a5d397250aa" kindref="member">setGyroScale</ref>(uint16_t<sp/>gScl);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setAccelScale()<sp/>--<sp/>Set<sp/>the<sp/>full-scale<sp/>range<sp/>of<sp/>the<sp/>accelerometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>can<sp/>be<sp/>called<sp/>to<sp/>set<sp/>the<sp/>scale<sp/>of<sp/>the<sp/>accelerometer<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2,<sp/>4,<sp/>6,<sp/>8,<sp/>or<sp/>16<sp/>g&apos;s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>aScl<sp/>=<sp/>The<sp/>desired<sp/>accelerometer<sp/>scale.<sp/>Must<sp/>be<sp/>one<sp/>of<sp/>five<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>from<sp/>the<sp/>accel_scale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a8656d2de1ff9cc4cb76214e4561d02c4" kindref="member">setAccelScale</ref>(uint8_t<sp/>aScl);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setMagScale()<sp/>--<sp/>Set<sp/>the<sp/>full-scale<sp/>range<sp/>of<sp/>the<sp/>magnetometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>can<sp/>be<sp/>called<sp/>to<sp/>set<sp/>the<sp/>scale<sp/>of<sp/>the<sp/>magnetometer<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2,<sp/>4,<sp/>8,<sp/>or<sp/>12<sp/>Gs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>mScl<sp/>=<sp/>The<sp/>desired<sp/>magnetometer<sp/>scale.<sp/>Must<sp/>be<sp/>one<sp/>of<sp/>four<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>from<sp/>the<sp/>mag_scale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ad7604159a07b0d088cdfb6ba4a0093b0" kindref="member">setMagScale</ref>(uint8_t<sp/>mScl);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setGyroODR()<sp/>--<sp/>Set<sp/>the<sp/>output<sp/>data<sp/>rate<sp/>and<sp/>bandwidth<sp/>of<sp/>the<sp/>gyroscope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>gRate<sp/>=<sp/>The<sp/>desired<sp/>output<sp/>rate<sp/>and<sp/>cutoff<sp/>frequency<sp/>of<sp/>the<sp/>gyro.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ab8fc33c8da4fc5c379e880ff57d331fa" kindref="member">setGyroODR</ref>(uint8_t<sp/>gRate);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setAccelODR()<sp/>--<sp/>Set<sp/>the<sp/>output<sp/>data<sp/>rate<sp/>of<sp/>the<sp/>accelerometer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>aRate<sp/>=<sp/>The<sp/>desired<sp/>output<sp/>rate<sp/>of<sp/>the<sp/>accel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a76d72839cdecc3f1c4ee6fff578182c5" kindref="member">setAccelODR</ref>(uint8_t<sp/>aRate);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setMagODR()<sp/>--<sp/>Set<sp/>the<sp/>output<sp/>data<sp/>rate<sp/>of<sp/>the<sp/>magnetometer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>mRate<sp/>=<sp/>The<sp/>desired<sp/>output<sp/>rate<sp/>of<sp/>the<sp/>mag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a8bc672fba680edc468a643fd58046b41" kindref="member">setMagODR</ref>(uint8_t<sp/>mRate);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configInactivity()<sp/>--<sp/>Configure<sp/>inactivity<sp/>interrupt<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>duration<sp/>=<sp/>Inactivity<sp/>duration<sp/>-<sp/>actual<sp/>value<sp/>depends<sp/>on<sp/>gyro<sp/>ODR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>threshold<sp/>=<sp/>Activity<sp/>Threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>sleepOn<sp/>=<sp/>Gyroscope<sp/>operating<sp/>mode<sp/>during<sp/>inactivity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>true:<sp/>gyroscope<sp/>in<sp/>sleep<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>false:<sp/>gyroscope<sp/>in<sp/>power-down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a1e318c5e7c1d500c3ab2602c46265354" kindref="member">configInactivity</ref>(uint8_t<sp/>duration,<sp/>uint8_t<sp/>threshold,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sleepOn);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configAccelInt()<sp/>--<sp/>Configure<sp/>Accelerometer<sp/>Interrupt<sp/>Generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>generator<sp/>=<sp/>Interrupt<sp/>axis/high-low<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Any<sp/>OR&apos;d<sp/>combination<sp/>of<sp/>ZHIE_XL,<sp/>ZLIE_XL,<sp/>YHIE_XL,<sp/>YLIE_XL,<sp/>XHIE_XL,<sp/>XLIE_XL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>andInterrupts<sp/>=<sp/>AND/OR<sp/>combination<sp/>of<sp/>interrupt<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>true:<sp/>AND<sp/>combination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>false:<sp/>OR<sp/>combination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a1e8ebc6c1e3876d8936197dc93f76717" kindref="member">configAccelInt</ref>(uint8_t<sp/>generator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>andInterrupts<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configAccelThs()<sp/>--<sp/>Configure<sp/>the<sp/>threshold<sp/>of<sp/>an<sp/>accelereomter<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>threshold<sp/>=<sp/>Interrupt<sp/>threshold.<sp/>Possible<sp/>values:<sp/>0-255.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Multiply<sp/>by<sp/>128<sp/>to<sp/>get<sp/>the<sp/>actual<sp/>raw<sp/>accel<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>axis<sp/>=<sp/>Axis<sp/>to<sp/>be<sp/>configured.<sp/>Either<sp/>X_AXIS,<sp/>Y_AXIS,<sp/>or<sp/>Z_AXIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>duration<sp/>=<sp/>Duration<sp/>value<sp/>must<sp/>be<sp/>above<sp/>or<sp/>below<sp/>threshold<sp/>to<sp/>trigger<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>wait<sp/>=<sp/>Wait<sp/>function<sp/>on<sp/>duration<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>true:<sp/>Wait<sp/>for<sp/>duration<sp/>samples<sp/>before<sp/>exiting<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>false:<sp/>Wait<sp/>function<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1acebcf64ab4e6ea7ed7a23c09ef16afe9" kindref="member">configAccelThs</ref>(uint8_t<sp/>threshold,<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis,<sp/>uint8_t<sp/>duration<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configGyroInt()<sp/>--<sp/>Configure<sp/>Gyroscope<sp/>Interrupt<sp/>Generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>generator<sp/>=<sp/>Interrupt<sp/>axis/high-low<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Any<sp/>OR&apos;d<sp/>combination<sp/>of<sp/>ZHIE_G,<sp/>ZLIE_G,<sp/>YHIE_G,<sp/>YLIE_G,<sp/>XHIE_G,<sp/>XLIE_G</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>aoi<sp/>=<sp/>AND/OR<sp/>combination<sp/>of<sp/>interrupt<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>true:<sp/>AND<sp/>combination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>false:<sp/>OR<sp/>combination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>latch:<sp/>latch<sp/>gyroscope<sp/>interrupt<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a19a341728c4e5b454de045c8a531cf06" kindref="member">configGyroInt</ref>(uint8_t<sp/>generator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aoi,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>latch);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configGyroThs()<sp/>--<sp/>Configure<sp/>the<sp/>threshold<sp/>of<sp/>a<sp/>gyroscope<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>threshold<sp/>=<sp/>Interrupt<sp/>threshold.<sp/>Possible<sp/>values:<sp/>0-0x7FF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Value<sp/>is<sp/>equivalent<sp/>to<sp/>raw<sp/>gyroscope<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>axis<sp/>=<sp/>Axis<sp/>to<sp/>be<sp/>configured.<sp/>Either<sp/>X_AXIS,<sp/>Y_AXIS,<sp/>or<sp/>Z_AXIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>duration<sp/>=<sp/>Duration<sp/>value<sp/>must<sp/>be<sp/>above<sp/>or<sp/>below<sp/>threshold<sp/>to<sp/>trigger<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>wait<sp/>=<sp/>Wait<sp/>function<sp/>on<sp/>duration<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>true:<sp/>Wait<sp/>for<sp/>duration<sp/>samples<sp/>before<sp/>exiting<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>false:<sp/>Wait<sp/>function<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ad865cc972960ed476fabd54f698adf6e" kindref="member">configGyroThs</ref>(int16_t<sp/>threshold,<sp/><ref refid="_spark_fun_l_s_m9_d_s1_8h_1adcbc07abda18c22c46d0a1129bb61164" kindref="member">lsm9ds1_axis</ref><sp/>axis,<sp/>uint8_t<sp/>duration,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configInt()<sp/>--<sp/>Configure<sp/>INT1<sp/>or<sp/>INT2<sp/>(Gyro<sp/>and<sp/>Accel<sp/>Interrupts<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>interrupt<sp/>=<sp/>Select<sp/>INT1<sp/>or<sp/>INT2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Possible<sp/>values:<sp/>XG_INT1<sp/>or<sp/>XG_INT2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>generator<sp/>=<sp/>Or&apos;d<sp/>combination<sp/>of<sp/>interrupt<sp/>generators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Possible<sp/>values:<sp/>INT_DRDY_XL,<sp/>INT_DRDY_G,<sp/>INT1_BOOT<sp/>(INT1<sp/>only),<sp/>INT2_DRDY_TEMP<sp/>(INT2<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>INT_FTH,<sp/>INT_OVR,<sp/>INT_FSS5,<sp/>INT_IG_XL<sp/>(INT1<sp/>only),<sp/>INT1_IG_G<sp/>(INT1<sp/>only),<sp/>INT2_INACT<sp/>(INT2<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>activeLow<sp/>=<sp/>Interrupt<sp/>active<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Can<sp/>be<sp/>either<sp/>INT_ACTIVE_HIGH<sp/>or<sp/>INT_ACTIVE_LOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>pushPull<sp/>=<sp/><sp/>Push-pull<sp/>or<sp/>open<sp/>drain<sp/>interrupt<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Can<sp/>be<sp/>either<sp/>INT_PUSH_PULL<sp/>or<sp/>INT_OPEN_DRAIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a5b6948b9d4caf57cfe9e0559a0c7f54c" kindref="member">configInt</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1a6261e8b8f54e4b66959cf92f93141a40" kindref="member">interrupt_select</ref><sp/>interupt,<sp/>uint8_t<sp/>generator,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_l_s_m9_d_s1___types_8h_1ac99a793e4542699cb1b621bdac865ba7" kindref="member">h_lactive</ref><sp/>activeLow<sp/>=<sp/><ref refid="_l_s_m9_d_s1___types_8h_1ac99a793e4542699cb1b621bdac865ba7a3f37d3df875092889b3df55cb542f6be" kindref="member">INT_ACTIVE_LOW</ref>,<sp/><ref refid="_l_s_m9_d_s1___types_8h_1a60d66fa4435ec836a2f1e82fa6b10053" kindref="member">pp_od</ref><sp/>pushPull<sp/>=<sp/><ref refid="_l_s_m9_d_s1___types_8h_1a60d66fa4435ec836a2f1e82fa6b10053a68a6e4216b18873633e97522e231fd8e" kindref="member">INT_PUSH_PULL</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configMagInt()<sp/>--<sp/>Configure<sp/>Magnetometer<sp/>Interrupt<sp/>Generator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>generator<sp/>=<sp/>Interrupt<sp/>axis/high-low<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Any<sp/>OR&apos;d<sp/>combination<sp/>of<sp/>ZIEN,<sp/>YIEN,<sp/>XIEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>activeLow<sp/>=<sp/>Interrupt<sp/>active<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Can<sp/>be<sp/>either<sp/>INT_ACTIVE_HIGH<sp/>or<sp/>INT_ACTIVE_LOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>latch:<sp/>latch<sp/>gyroscope<sp/>interrupt<sp/>request.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a54a521668eb63d504d227c6d460723e0" kindref="member">configMagInt</ref>(uint8_t<sp/>generator,<sp/><ref refid="_l_s_m9_d_s1___types_8h_1ac99a793e4542699cb1b621bdac865ba7" kindref="member">h_lactive</ref><sp/>activeLow,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>latch<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configMagThs()<sp/>--<sp/>Configure<sp/>the<sp/>threshold<sp/>of<sp/>a<sp/>gyroscope<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>threshold<sp/>=<sp/>Interrupt<sp/>threshold.<sp/>Possible<sp/>values:<sp/>0-0x7FF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Value<sp/>is<sp/>equivalent<sp/>to<sp/>raw<sp/>magnetometer<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a87cf3dd3a4d9ca79106eb7c1c866a224" kindref="member">configMagThs</ref>(uint16_t<sp/>threshold);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getGyroIntSrc()<sp/>--<sp/>Get<sp/>contents<sp/>of<sp/>Gyroscope<sp/>interrupt<sp/>source<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1aaba6696754df62a411a6a190100f9ca3" kindref="member">getGyroIntSrc</ref>();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getGyroIntSrc()<sp/>--<sp/>Get<sp/>contents<sp/>of<sp/>accelerometer<sp/>interrupt<sp/>source<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1ae42ae3b368370f977d090ba0e53c7f5c" kindref="member">getAccelIntSrc</ref>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getGyroIntSrc()<sp/>--<sp/>Get<sp/>contents<sp/>of<sp/>magnetometer<sp/>interrupt<sp/>source<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a2bc92a37db982059b89e0a06e7d05a95" kindref="member">getMagIntSrc</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getGyroIntSrc()<sp/>--<sp/>Get<sp/>status<sp/>of<sp/>inactivity<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a9dab029d1d24e49709258d893042d28f" kindref="member">getInactivity</ref>();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sleepGyro()<sp/>--<sp/>Sleep<sp/>or<sp/>wake<sp/>the<sp/>gyroscope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>enable:<sp/>True<sp/>=<sp/>sleep<sp/>gyro.<sp/>False<sp/>=<sp/>wake<sp/>gyro.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a13b61812069b399547f177b0b0af8fe3" kindref="member">sleepGyro</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enableFIFO()<sp/>-<sp/>Enable<sp/>or<sp/>disable<sp/>the<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>enable:<sp/>true<sp/>=<sp/>enable,<sp/>false<sp/>=<sp/>disable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a5f01141131318697838f15d7e5d10f2c" kindref="member">enableFIFO</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setFIFO()<sp/>-<sp/>Configure<sp/>FIFO<sp/>mode<sp/>and<sp/>Threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>fifoMode:<sp/>Set<sp/>FIFO<sp/>mode<sp/>to<sp/>off,<sp/>FIFO<sp/>(stop<sp/>when<sp/>full),<sp/>continuous,<sp/>bypass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Possible<sp/>inputs:<sp/>FIFO_OFF,<sp/>FIFO_THS,<sp/>FIFO_CONT_TRIGGER,<sp/>FIFO_OFF_TRIGGER,<sp/>FIFO_CONT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>fifoThs:<sp/>FIFO<sp/>threshold<sp/>level<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Any<sp/>value<sp/>from<sp/>0-0x1F<sp/>is<sp/>acceptable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a0ec4a93a34545af1acc336bae9b360f1" kindref="member">setFIFO</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1abd0fd05ddd88dadb906475b36c8266db" kindref="member">fifoMode_type</ref><sp/>fifoMode,<sp/>uint8_t<sp/>fifoThs);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getFIFOSamples()<sp/>-<sp/>Get<sp/>number<sp/>of<sp/>FIFO<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1ac03ef2ff928a25c4a80af7707cd92dc8" kindref="member">getFIFOSamples</ref>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:<sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x_mAddress<sp/>and<sp/>gAddress<sp/>store<sp/>the<sp/>I2C<sp/>address<sp/>or<sp/>SPI<sp/>chip<sp/>select<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>sensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a7141933a2ccde95976e4eecd598ecb17" kindref="member">_mAddress</ref>,<sp/><ref refid="class_l_s_m9_d_s1_1ac78b7fab605570a16433a4636f91451e" kindref="member">_xgAddress</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gRes,<sp/>aRes,<sp/>and<sp/>mRes<sp/>store<sp/>the<sp/>current<sp/>resolution<sp/>for<sp/>each<sp/>sensor.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Units<sp/>of<sp/>these<sp/>values<sp/>would<sp/>be<sp/>DPS<sp/>(or<sp/>g&apos;s<sp/>or<sp/>Gs&apos;s)<sp/>per<sp/>ADC<sp/>tick.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>value<sp/>is<sp/>calculated<sp/>as<sp/>(sensor<sp/>scale)<sp/>/<sp/>(2^15).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="class_l_s_m9_d_s1_1aac7ae43adf399e8052464b966aec8472" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a2d8654ebb35177088a67e67a944bd998" kindref="member">gRes</ref>,<sp/><ref refid="class_l_s_m9_d_s1_1acdc1f9b300b3c349e17dd21c9bb37c40" kindref="member">aRes</ref>,<sp/><ref refid="class_l_s_m9_d_s1_1aac7ae43adf399e8052464b966aec8472" kindref="member">mRes</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_autoCalc<sp/>keeps<sp/>track<sp/>of<sp/>whether<sp/>we&apos;re<sp/>automatically<sp/>subtracting<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accelerometer<sp/>and<sp/>gyroscope<sp/>bias<sp/>calculated<sp/>in<sp/>calibrate().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="class_l_s_m9_d_s1_1a8460d00ea0bb496c5d49190a34e54588" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a8460d00ea0bb496c5d49190a34e54588" kindref="member">_autoCalc</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init()<sp/>--<sp/>Sets<sp/>up<sp/>gyro,<sp/>accel,<sp/>and<sp/>mag<sp/>settings<sp/>to<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>interface<sp/>-<sp/>Sets<sp/>the<sp/>interface<sp/>mode<sp/>(IMU_MODE_I2C<sp/>or<sp/>IMU_MODE_SPI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>xgAddr<sp/>-<sp/>Sets<sp/>either<sp/>the<sp/>I2C<sp/>address<sp/>of<sp/>the<sp/>accel/gyro<sp/>or<sp/>SPI<sp/>chip<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>select<sp/>pin<sp/>connected<sp/>to<sp/>the<sp/>CS_XG<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>mAddr<sp/>-<sp/>Sets<sp/>either<sp/>the<sp/>I2C<sp/>address<sp/>of<sp/>the<sp/>magnetometer<sp/>or<sp/>SPI<sp/>chip<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>select<sp/>pin<sp/>connected<sp/>to<sp/>the<sp/>CS_M<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1aa4f74e09e93c0133dc30545d4492849e" kindref="member">init</ref>(<ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adf" kindref="member">interface_mode</ref><sp/>interface,<sp/>uint8_t<sp/>xgAddr,<sp/>uint8_t<sp/>mAddr);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initGyro()<sp/>--<sp/>Sets<sp/>up<sp/>the<sp/>gyroscope<sp/>to<sp/>begin<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>steps<sp/>through<sp/>all<sp/>five<sp/>gyroscope<sp/>control<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>exit,<sp/>the<sp/>following<sp/>parameters<sp/>will<sp/>be<sp/>set:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG1_G<sp/>=<sp/>0x0F:<sp/>Normal<sp/>operation<sp/>mode,<sp/>all<sp/>axes<sp/>enabled.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>95<sp/>Hz<sp/>ODR,<sp/>12.5<sp/>Hz<sp/>cutoff<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG2_G<sp/>=<sp/>0x00:<sp/>HPF<sp/>set<sp/>to<sp/>normal<sp/>mode,<sp/>cutoff<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>to<sp/>7.2<sp/>Hz<sp/>(depends<sp/>on<sp/>ODR).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG3_G<sp/>=<sp/>0x88:<sp/>Interrupt<sp/>enabled<sp/>on<sp/>INT_G<sp/>(set<sp/>to<sp/>push-pull<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>active<sp/>high).<sp/>Data-ready<sp/>output<sp/>enabled<sp/>on<sp/>DRDY_G.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG4_G<sp/>=<sp/>0x00:<sp/>Continuous<sp/>update<sp/>mode.<sp/>Data<sp/>LSB<sp/>stored<sp/>in<sp/>lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>address.<sp/>Scale<sp/>set<sp/>to<sp/>245<sp/>DPS.<sp/>SPI<sp/>mode<sp/>set<sp/>to<sp/>4-wire.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG5_G<sp/>=<sp/>0x00:<sp/>FIFO<sp/>disabled.<sp/>HPF<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a66a7b02acb28964ffc9362f25988e270" kindref="member">initGyro</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initAccel()<sp/>--<sp/>Sets<sp/>up<sp/>the<sp/>accelerometer<sp/>to<sp/>begin<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>steps<sp/>through<sp/>all<sp/>accelerometer<sp/>related<sp/>control<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>exit<sp/>these<sp/>registers<sp/>will<sp/>be<sp/>set<sp/>as:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG0_XM<sp/>=<sp/>0x00:<sp/>FIFO<sp/>disabled.<sp/>HPF<sp/>bypassed.<sp/>Normal<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG1_XM<sp/>=<sp/>0x57:<sp/>100<sp/>Hz<sp/>data<sp/>rate.<sp/>Continuous<sp/>update.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>axes<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG2_XM<sp/>=<sp/>0x00:<sp/><sp/>2g<sp/>scale.<sp/>773<sp/>Hz<sp/>anti-alias<sp/>filter<sp/>BW.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG3_XM<sp/>=<sp/>0x04:<sp/>Accel<sp/>data<sp/>ready<sp/>signal<sp/>on<sp/>INT1_XM<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a143ff5abf4f7ba8e1c42325859106f84" kindref="member">initAccel</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initMag()<sp/>--<sp/>Sets<sp/>up<sp/>the<sp/>magnetometer<sp/>to<sp/>begin<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>steps<sp/>through<sp/>all<sp/>magnetometer-related<sp/>control<sp/>registers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>exit<sp/>these<sp/>registers<sp/>will<sp/>be<sp/>set<sp/>as:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG4_XM<sp/>=<sp/>0x04:<sp/>Mag<sp/>data<sp/>ready<sp/>signal<sp/>on<sp/>INT2_XM<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG5_XM<sp/>=<sp/>0x14:<sp/>100<sp/>Hz<sp/>update<sp/>rate.<sp/>Low<sp/>resolution.<sp/>Interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>requests<sp/>don&apos;t<sp/>latch.<sp/>Temperature<sp/>sensor<sp/>disabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG6_XM<sp/>=<sp/>0x00:<sp/><sp/>2<sp/>Gs<sp/>scale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>CTRL_REG7_XM<sp/>=<sp/>0x00:<sp/>Continuous<sp/>conversion<sp/>mode.<sp/>Normal<sp/>HPF<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>INT_CTRL_REG_M<sp/>=<sp/>0x09:<sp/>Interrupt<sp/>active-high.<sp/>Enable<sp/>interrupts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a492aa6edcf891f273d932636e3cc470d" kindref="member">initMag</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gReadByte()<sp/>--<sp/>Reads<sp/>a<sp/>byte<sp/>from<sp/>a<sp/>specified<sp/>gyroscope<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>Register<sp/>to<sp/>be<sp/>read<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>An<sp/>8-bit<sp/>value<sp/>read<sp/>from<sp/>the<sp/>requested<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1ae4e470321567e4f93fc09f4cc6cd9efa" kindref="member">mReadByte</ref>(uint8_t<sp/>subAddress);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gReadBytes()<sp/>--<sp/>Reads<sp/>a<sp/>number<sp/>of<sp/>bytes<sp/>--<sp/>beginning<sp/>at<sp/>an<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>incrementing<sp/>from<sp/>there<sp/>--<sp/>from<sp/>the<sp/>gyroscope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>Register<sp/>to<sp/>be<sp/>read<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>*<sp/>dest<sp/>=<sp/>A<sp/>pointer<sp/>to<sp/>an<sp/>array<sp/>of<sp/>uint8_t&apos;s.<sp/>Values<sp/>read<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>stored<sp/>in<sp/>here<sp/>on<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>count<sp/>=<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:<sp/>No<sp/>value<sp/>is<sp/>returned,<sp/>but<sp/>the<sp/>`dest`<sp/>array<sp/>will<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>the<sp/>data<sp/>read<sp/>upon<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1acfdf9862cad1e66c9fb61a17bfbe7477" kindref="member">mReadBytes</ref>(uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>*<sp/>dest,<sp/>uint8_t<sp/>count);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gWriteByte()<sp/>--<sp/>Write<sp/>a<sp/>byte<sp/>to<sp/>a<sp/>register<sp/>in<sp/>the<sp/>gyroscope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>Register<sp/>to<sp/>be<sp/>written<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>data<sp/>=<sp/>data<sp/>to<sp/>be<sp/>written<sp/>to<sp/>the<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1afc171c924102c97fa1d88fa7f48bd167" kindref="member">mWriteByte</ref>(uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>data);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xmReadByte()<sp/>--<sp/>Read<sp/>a<sp/>byte<sp/>from<sp/>a<sp/>register<sp/>in<sp/>the<sp/>accel/mag<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>Register<sp/>to<sp/>be<sp/>read<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>An<sp/>8-bit<sp/>value<sp/>read<sp/>from<sp/>the<sp/>requested<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1af7f9789df6f0178764c815a3380c202a" kindref="member">xgReadByte</ref>(uint8_t<sp/>subAddress);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xmReadBytes()<sp/>--<sp/>Reads<sp/>a<sp/>number<sp/>of<sp/>bytes<sp/>--<sp/>beginning<sp/>at<sp/>an<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>incrementing<sp/>from<sp/>there<sp/>--<sp/>from<sp/>the<sp/>accelerometer/magnetometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>Register<sp/>to<sp/>be<sp/>read<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>*<sp/>dest<sp/>=<sp/>A<sp/>pointer<sp/>to<sp/>an<sp/>array<sp/>of<sp/>uint8_t&apos;s.<sp/>Values<sp/>read<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>stored<sp/>in<sp/>here<sp/>on<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>count<sp/>=<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:<sp/>No<sp/>value<sp/>is<sp/>returned,<sp/>but<sp/>the<sp/>`dest`<sp/>array<sp/>will<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>the<sp/>data<sp/>read<sp/>upon<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ae0a9cbfd74b1f4676f091c2d8e491d77" kindref="member">xgReadBytes</ref>(uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>*<sp/>dest,<sp/>uint8_t<sp/>count);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xmWriteByte()<sp/>--<sp/>Write<sp/>a<sp/>byte<sp/>to<sp/>a<sp/>register<sp/>in<sp/>the<sp/>accel/mag<sp/>sensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>Register<sp/>to<sp/>be<sp/>written<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>data<sp/>=<sp/>data<sp/>to<sp/>be<sp/>written<sp/>to<sp/>the<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a263eed4b52ad087a1195755c6ba49e62" kindref="member">xgWriteByte</ref>(uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>data);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calcgRes()<sp/>--<sp/>Calculate<sp/>the<sp/>resolution<sp/>of<sp/>the<sp/>gyroscope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>set<sp/>the<sp/>value<sp/>of<sp/>the<sp/>gRes<sp/>variable.<sp/>gScale<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>set<sp/>prior<sp/>to<sp/>calling<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a303e0dd33e000579dc3917aecedb6e63" kindref="member">calcgRes</ref>();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calcmRes()<sp/>--<sp/>Calculate<sp/>the<sp/>resolution<sp/>of<sp/>the<sp/>magnetometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>set<sp/>the<sp/>value<sp/>of<sp/>the<sp/>mRes<sp/>variable.<sp/>mScale<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>set<sp/>prior<sp/>to<sp/>calling<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a830dfc95c7e2d8524720d78357b053cb" kindref="member">calcmRes</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calcaRes()<sp/>--<sp/>Calculate<sp/>the<sp/>resolution<sp/>of<sp/>the<sp/>accelerometer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>set<sp/>the<sp/>value<sp/>of<sp/>the<sp/>aRes<sp/>variable.<sp/>aScale<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>set<sp/>prior<sp/>to<sp/>calling<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a31597c9ae6c5a7de64a50cbbbcd24297" kindref="member">calcaRes</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>Functions<sp/>//</highlight></codeline>
<codeline lineno="456"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a5aadcd09cf9157de817c359e49304ca7" kindref="member">constrainScales</ref>();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>Functions<sp/>//</highlight></codeline>
<codeline lineno="461"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initSPI()<sp/>--<sp/>Initialize<sp/>the<sp/>SPI<sp/>hardware.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>setup<sp/>all<sp/>SPI<sp/>pins<sp/>and<sp/>related<sp/>hardware.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a4286d5803ab028c657e007ae99acc60a" kindref="member">initSPI</ref>();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPIwriteByte()<sp/>--<sp/>Write<sp/>a<sp/>byte<sp/>out<sp/>of<sp/>SPI<sp/>to<sp/>a<sp/>register<sp/>in<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>csPin<sp/>=<sp/>The<sp/>chip<sp/>select<sp/>pin<sp/>of<sp/>the<sp/>slave<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>The<sp/>register<sp/>to<sp/>be<sp/>written<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>data<sp/>=<sp/>Byte<sp/>to<sp/>be<sp/>written<sp/>to<sp/>the<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a83321c9d6ec50f6b9944907d2be482cd" kindref="member">SPIwriteByte</ref>(uint8_t<sp/>csPin,<sp/>uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>data);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPIreadByte()<sp/>--<sp/>Read<sp/>a<sp/>single<sp/>byte<sp/>from<sp/>a<sp/>register<sp/>over<sp/>SPI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>csPin<sp/>=<sp/>The<sp/>chip<sp/>select<sp/>pin<sp/>of<sp/>the<sp/>slave<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>The<sp/>register<sp/>to<sp/>be<sp/>read<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>The<sp/>byte<sp/>read<sp/>from<sp/>the<sp/>requested<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a6f0f50bb5e9b702d5a19c7441a3f9d8b" kindref="member">SPIreadByte</ref>(uint8_t<sp/>csPin,<sp/>uint8_t<sp/>subAddress);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SPIreadBytes()<sp/>--<sp/>Read<sp/>a<sp/>series<sp/>of<sp/>bytes,<sp/>starting<sp/>at<sp/>a<sp/>register<sp/>via<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>csPin<sp/>=<sp/>The<sp/>chip<sp/>select<sp/>pin<sp/>of<sp/>a<sp/>slave<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>The<sp/>register<sp/>to<sp/>begin<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>*<sp/>dest<sp/>=<sp/>Pointer<sp/>to<sp/>an<sp/>array<sp/>where<sp/>we&apos;ll<sp/>store<sp/>the<sp/>readings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>count<sp/>=<sp/>Number<sp/>of<sp/>registers<sp/>to<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:<sp/>No<sp/>value<sp/>is<sp/>returned<sp/>by<sp/>the<sp/>function,<sp/>but<sp/>the<sp/>registers<sp/>read<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>stored<sp/>in<sp/>the<sp/>*dest<sp/>array<sp/>given.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a26c0f164454eba84e6486033b7061d11" kindref="member">SPIreadBytes</ref>(uint8_t<sp/>csPin,<sp/>uint8_t<sp/>subAddress,<sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>dest,<sp/>uint8_t<sp/>count);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I2C<sp/>Functions<sp/>//</highlight></codeline>
<codeline lineno="494"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initI2C()<sp/>--<sp/>Initialize<sp/>the<sp/>I2C<sp/>hardware.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>will<sp/>setup<sp/>all<sp/>I2C<sp/>pins<sp/>and<sp/>related<sp/>hardware.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1ae60332c2836bd3f19846b7a44c015ddd" kindref="member">initI2C</ref>();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I2CwriteByte()<sp/>--<sp/>Write<sp/>a<sp/>byte<sp/>out<sp/>of<sp/>I2C<sp/>to<sp/>a<sp/>register<sp/>in<sp/>the<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>address<sp/>=<sp/>The<sp/>7-bit<sp/>I2C<sp/>address<sp/>of<sp/>the<sp/>slave<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>The<sp/>register<sp/>to<sp/>be<sp/>written<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>data<sp/>=<sp/>Byte<sp/>to<sp/>be<sp/>written<sp/>to<sp/>the<sp/>register.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1_1a8e66108a002cc15ec4c0db0a608d20c6" kindref="member">I2CwriteByte</ref>(uint8_t<sp/>address,<sp/>uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>data);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I2CreadByte()<sp/>--<sp/>Read<sp/>a<sp/>single<sp/>byte<sp/>from<sp/>a<sp/>register<sp/>over<sp/>I2C.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>address<sp/>=<sp/>The<sp/>7-bit<sp/>I2C<sp/>address<sp/>of<sp/>the<sp/>slave<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>The<sp/>register<sp/>to<sp/>be<sp/>read<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>The<sp/>byte<sp/>read<sp/>from<sp/>the<sp/>requested<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1a7fc046d4b335494331905fdeb5c81c9e" kindref="member">I2CreadByte</ref>(uint8_t<sp/>address,<sp/>uint8_t<sp/>subAddress);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I2CreadBytes()<sp/>--<sp/>Read<sp/>a<sp/>series<sp/>of<sp/>bytes,<sp/>starting<sp/>at<sp/>a<sp/>register<sp/>via<sp/>SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>address<sp/>=<sp/>The<sp/>7-bit<sp/>I2C<sp/>address<sp/>of<sp/>the<sp/>slave<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>subAddress<sp/>=<sp/>The<sp/>register<sp/>to<sp/>begin<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>*<sp/>dest<sp/>=<sp/>Pointer<sp/>to<sp/>an<sp/>array<sp/>where<sp/>we&apos;ll<sp/>store<sp/>the<sp/>readings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>count<sp/>=<sp/>Number<sp/>of<sp/>registers<sp/>to<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output:<sp/>No<sp/>value<sp/>is<sp/>returned<sp/>by<sp/>the<sp/>function,<sp/>but<sp/>the<sp/>registers<sp/>read<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>stored<sp/>in<sp/>the<sp/>*dest<sp/>array<sp/>given.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_l_s_m9_d_s1_1adfc9a22290daddd7787e8023fa8f12cc" kindref="member">I2CreadBytes</ref>(uint8_t<sp/>address,<sp/>uint8_t<sp/>subAddress,<sp/>uint8_t<sp/>*<sp/>dest,<sp/>uint8_t<sp/>count);</highlight></codeline>
<codeline lineno="522"><highlight class="normal">};</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SFE_LSM9DS1_H<sp/>//</highlight></codeline>
    </programlisting>
    <location file="Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h"/>
  </compounddef>
</doxygen>
