<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_filter_one_pole_8cpp" kind="file" language="C++">
    <compoundname>FilterOnePole.cpp</compoundname>
    <includes refid="_filter_one_pole_8h" local="yes">FilterOnePole.h</includes>
    <includes refid="_float_define_8h" local="yes">FloatDefine.h</includes>
    <incdepgraph>
      <node id="713">
        <label>FilterOnePole.h</label>
        <link refid="_filter_one_pole_8h"/>
        <childnode refid="714" relation="include">
        </childnode>
      </node>
      <node id="715">
        <label>FloatDefine.h</label>
        <link refid="_float_define_8h"/>
      </node>
      <node id="712">
        <label>Weather_Balloon/library/Filters/FilterOnePole.cpp</label>
        <link refid="FilterOnePole.cpp"/>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
      </node>
      <node id="714">
        <label>Arduino.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_filter_one_pole_8h" kindref="compound">FilterOnePole.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_float_define_8h" kindref="compound">FloatDefine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="struct_filter_one_pole_1adc98d3d03b508f5796c3971c9d0c1f6a" refkind="member"><highlight class="normal"><ref refid="struct_filter_one_pole_1adc98d3d03b508f5796c3971c9d0c1f6a" kindref="member">FilterOnePole::FilterOnePole</ref>(<sp/><ref refid="_filter_one_pole_8h_1a291796f7a1d5a022401edc940d62db9a" kindref="member">FILTER_TYPE</ref><sp/>ft,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>initialValue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1a7fe2658a2bf6d171895586d0bb9fba8f" kindref="member">setFilter</ref>(<sp/>ft,<sp/>fc,<sp/>initialValue<sp/>);</highlight></codeline>
<codeline lineno="6"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="struct_filter_one_pole_1a7fe2658a2bf6d171895586d0bb9fba8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a7fe2658a2bf6d171895586d0bb9fba8f" kindref="member">FilterOnePole::setFilter</ref>(<sp/><ref refid="_filter_one_pole_8h_1a291796f7a1d5a022401edc940d62db9a" kindref="member">FILTER_TYPE</ref><sp/>ft,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fc,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>initialValue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1aed9400fc1b781fc227344d67509394a4" kindref="member">FT</ref><sp/>=<sp/>ft;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1a258a86ec2ee6db608f5839b3b2995185" kindref="member">setFrequency</ref>(<sp/>fc<sp/>);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1ad56691be0ad6f6958b9510f4c16538ad" kindref="member">Y</ref><sp/>=<sp/>initialValue;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1aadcc9674d50c233b8fab1228aa338467" kindref="member">Ylast</ref><sp/>=<sp/>initialValue;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1a8270ac992e09c0edd3405a59809f28e5" kindref="member">X</ref><sp/>=<sp/>initialValue;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1a1d54fb0cd986555060c80d2b502b4200" kindref="member">LastUS</ref><sp/>=<sp/>micros();</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="struct_filter_one_pole_1a90ad61a0bbbf2b6db7c6b281f2747c24" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a90ad61a0bbbf2b6db7c6b281f2747c24" kindref="member">FilterOnePole::input</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inVal<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>micros();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1a0a611284884d31840b2169547f072fba" kindref="member">ElapsedUS</ref><sp/>=<sp/>float(time<sp/>-<sp/><ref refid="struct_filter_one_pole_1a1d54fb0cd986555060c80d2b502b4200" kindref="member">LastUS</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cast<sp/>to<sp/>float<sp/>here,<sp/>for<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1a1d54fb0cd986555060c80d2b502b4200" kindref="member">LastUS</ref><sp/>=<sp/>time;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>this<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>the<sp/>data<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1aadcc9674d50c233b8fab1228aa338467" kindref="member">Ylast</ref><sp/>=<sp/><ref refid="struct_filter_one_pole_1ad56691be0ad6f6958b9510f4c16538ad" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1a8270ac992e09c0edd3405a59809f28e5" kindref="member">X</ref><sp/>=<sp/>inVal;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>now<sp/>the<sp/>most<sp/>recent<sp/>input<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>value<sp/>is<sp/>controlled<sp/>by<sp/>a<sp/>parameter<sp/>called<sp/>X</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tau<sp/>is<sp/>set<sp/>by<sp/>the<sp/>user<sp/>in<sp/>microseconds,<sp/>but<sp/>must<sp/>be<sp/>converted<sp/>to<sp/>samples<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1a7d7271a45a4dbd1c0833c6f840199afc" kindref="member">TauSamps</ref><sp/>=<sp/><ref refid="struct_filter_one_pole_1adbd63db9a63cdd75fea57ad393729d69" kindref="member">TauUS</ref><sp/>/<sp/><ref refid="struct_filter_one_pole_1a0a611284884d31840b2169547f072fba" kindref="member">ElapsedUS</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ampFactor;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARM_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>ampFactor<sp/>=<sp/>expf(<sp/>-1.0<sp/>/<sp/><ref refid="struct_filter_one_pole_1a7d7271a45a4dbd1c0833c6f840199afc" kindref="member">TauSamps</ref><sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>1<sp/>if<sp/>called<sp/>quickly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>ampFactor<sp/>=<sp/>exp(<sp/>-1.0<sp/>/<sp/><ref refid="struct_filter_one_pole_1a7d7271a45a4dbd1c0833c6f840199afc" kindref="member">TauSamps</ref><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>1<sp/>if<sp/>called<sp/>quickly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1ad56691be0ad6f6958b9510f4c16538ad" kindref="member">Y</ref><sp/>=<sp/>(1.0-ampFactor)*<ref refid="struct_filter_one_pole_1a8270ac992e09c0edd3405a59809f28e5" kindref="member">X</ref><sp/>+<sp/>ampFactor*<ref refid="struct_filter_one_pole_1aadcc9674d50c233b8fab1228aa338467" kindref="member">Ylast</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>new<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a571c2df141dab2b1072afcd192623f76" kindref="member">output</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="struct_filter_one_pole_1a258a86ec2ee6db608f5839b3b2995185" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a258a86ec2ee6db608f5839b3b2995185" kindref="member">FilterOnePole::setFrequency</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newFrequency<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1a90433addfb2a5509e7ace6c4d5da8fe9" kindref="member">setTau</ref>(<sp/>1.0/(TWO_PI*newFrequency<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//<sp/>τ=1/ω</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="struct_filter_one_pole_1a90433addfb2a5509e7ace6c4d5da8fe9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a90433addfb2a5509e7ace6c4d5da8fe9" kindref="member">FilterOnePole::setTau</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newTau<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1adbd63db9a63cdd75fea57ad393729d69" kindref="member">TauUS</ref><sp/>=<sp/>newTau<sp/>*<sp/>1e6;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_filter_one_pole_1a571c2df141dab2b1072afcd192623f76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a571c2df141dab2b1072afcd192623f76" kindref="member">FilterOnePole::output</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>figure<sp/>out<sp/>which<sp/>button<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="struct_filter_one_pole_1aed9400fc1b781fc227344d67509394a4" kindref="member">FT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_filter_one_pole_8h_1a291796f7a1d5a022401edc940d62db9aa0f056d1892baa220efdb9afeca443025" kindref="member">LOWPASS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>last<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1ad56691be0ad6f6958b9510f4c16538ad" kindref="member">Y</ref>;<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_filter_one_pole_8h_1a291796f7a1d5a022401edc940d62db9aa3250d36e92bb9547e346c654be8528f8" kindref="member">INTEGRATOR</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>a<sp/>lowpass,<sp/>but<sp/>normaize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1ad56691be0ad6f6958b9510f4c16538ad" kindref="member">Y</ref><sp/>*<sp/>(<ref refid="struct_filter_one_pole_1adbd63db9a63cdd75fea57ad393729d69" kindref="member">TauUS</ref>/1.0e6);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_filter_one_pole_8h_1a291796f7a1d5a022401edc940d62db9aa2ef4633b5cfe5eacaff1e7cef80a56e8" kindref="member">HIGHPASS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>highpass<sp/>is<sp/>the<sp/>_difference_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a8270ac992e09c0edd3405a59809f28e5" kindref="member">X</ref>-<ref refid="struct_filter_one_pole_1ad56691be0ad6f6958b9510f4c16538ad" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_filter_one_pole_8h_1a291796f7a1d5a022401edc940d62db9aa9b851f36799bcb1dcd3606c6fd679d60" kindref="member">DIFFERENTIATOR</ref>:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>a<sp/>highpass,<sp/>but<sp/>normalize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_filter_one_pole_1a8270ac992e09c0edd3405a59809f28e5" kindref="member">X</ref>-Y)/(<ref refid="struct_filter_one_pole_1adbd63db9a63cdd75fea57ad393729d69" kindref="member">TauUS</ref>/1.0e6);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>get<sp/>to<sp/>here,<sp/>return<sp/>0<sp/>just<sp/>in<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_filter_one_pole_1a352bdb0ad964ec87a1b936409be05087" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a352bdb0ad964ec87a1b936409be05087" kindref="member">FilterOnePole::print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>Y:<sp/>&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<sp/><ref refid="struct_filter_one_pole_1ad56691be0ad6f6958b9510f4c16538ad" kindref="member">Y</ref><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>Ylast:<sp/>&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<sp/><ref refid="struct_filter_one_pole_1aadcc9674d50c233b8fab1228aa338467" kindref="member">Ylast</ref><sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>X<sp/>&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<sp/><ref refid="struct_filter_one_pole_1a8270ac992e09c0edd3405a59809f28e5" kindref="member">X</ref><sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>ElapsedUS<sp/>&quot;</highlight><highlight class="normal">);<sp/><sp/>Serial.print(<sp/><ref refid="struct_filter_one_pole_1a0a611284884d31840b2169547f072fba" kindref="member">ElapsedUS</ref><sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>TauSamps:<sp/>&quot;</highlight><highlight class="normal">);<sp/><sp/>Serial.print(<sp/><ref refid="struct_filter_one_pole_1a7d7271a45a4dbd1c0833c6f840199afc" kindref="member">TauSamps</ref><sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.print(&quot;<sp/>ampFactor<sp/>&quot;<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<sp/>ampFactor<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>TauUS:<sp/>&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/>Serial.print(<sp/><ref refid="struct_filter_one_pole_1adbd63db9a63cdd75fea57ad393729d69" kindref="member">TauUS</ref><sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="struct_filter_one_pole_1a5b54248319d02b3f15d93e6333339389" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a5b54248319d02b3f15d93e6333339389" kindref="member">FilterOnePole::test</ref>()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tau<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>updateInterval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nextupdateTime<sp/>=<sp/>millis()*1e-3;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole" kindref="compound">FilterOnePole</ref><sp/>hp(<sp/><ref refid="_filter_one_pole_8h_1a291796f7a1d5a022401edc940d62db9aa2ef4633b5cfe5eacaff1e7cef80a56e8" kindref="member">HIGHPASS</ref>,<sp/>tau,<sp/>inputValue<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole" kindref="compound">FilterOnePole</ref><sp/>lp(<sp/><ref refid="_filter_one_pole_8h_1a291796f7a1d5a022401edc940d62db9aa0f056d1892baa220efdb9afeca443025" kindref="member">LOWPASS</ref>,<sp/>tau,<sp/>inputValue<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref><sp/>=<sp/>millis()*1e-3;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>switch<sp/>input<sp/>values<sp/>on<sp/>a<sp/>20<sp/>second<sp/>cycle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>round(now/20.0)-(now/20.0)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>inputValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>inputValue<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>hp.<ref refid="struct_filter_one_pole_1a90ad61a0bbbf2b6db7c6b281f2747c24" kindref="member">input</ref>(inputValue);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>lp.<ref refid="struct_filter_one_pole_1a90ad61a0bbbf2b6db7c6b281f2747c24" kindref="member">input</ref>(inputValue);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>now<sp/>&gt;<sp/>nextupdateTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextupdateTime<sp/>+=<sp/>updateInterval;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;inputValue:<sp/>&quot;</highlight><highlight class="normal">);<sp/>Serial.print(<sp/>inputValue<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;\t<sp/>high-passed:<sp/>&quot;</highlight><highlight class="normal">);<sp/>Serial.print(<sp/>hp.<ref refid="struct_filter_one_pole_1a571c2df141dab2b1072afcd192623f76" kindref="member">output</ref>()<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;\t<sp/>low-passed:<sp/>&quot;</highlight><highlight class="normal">);<sp/>Serial.print(<sp/>lp.<ref refid="struct_filter_one_pole_1a571c2df141dab2b1072afcd192623f76" kindref="member">output</ref>()<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="struct_filter_one_pole_1ad7393515a5f4d972714321a3a2ab7fdd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1ad7393515a5f4d972714321a3a2ab7fdd" kindref="member">FilterOnePole::setToNewValue</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newVal<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1ad56691be0ad6f6958b9510f4c16538ad" kindref="member">Y</ref><sp/>=<sp/><ref refid="struct_filter_one_pole_1aadcc9674d50c233b8fab1228aa338467" kindref="member">Ylast</ref><sp/>=<sp/><ref refid="struct_filter_one_pole_1a8270ac992e09c0edd3405a59809f28e5" kindref="member">X</ref><sp/>=<sp/>newVal;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stuff<sp/>for<sp/>filter2<sp/>(lowpass<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>able<sp/>to<sp/>set<sp/>a<sp/>separate<sp/>fall<sp/>time<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="struct_filter_one_pole_cascade_1a57f396fd01e54c8a6f3d3a6213b4d5a6" refkind="member"><highlight class="normal"><ref refid="struct_filter_one_pole_cascade_1a57f396fd01e54c8a6f3d3a6213b4d5a6" kindref="member">FilterOnePoleCascade::FilterOnePoleCascade</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>riseTime,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>initialValue<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>setRiseTime(<sp/>riseTime<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_1ad7393515a5f4d972714321a3a2ab7fdd" kindref="member">setToNewValue</ref>(<sp/>initialValue<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="struct_filter_one_pole_cascade_1a06aed75defb8dc7cd252436944ca0baf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_cascade_1a06aed75defb8dc7cd252436944ca0baf" kindref="member">FilterOnePoleCascade::setRiseTime</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>riseTime<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tauScale<sp/>=<sp/>3.36;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>emperically,<sp/>by<sp/>running<sp/>test();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>Pole1.setTau(<sp/>riseTime<sp/>/<sp/>tauScale<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>Pole2.setTau(<sp/>riseTime<sp/>/<sp/>tauScale<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="struct_filter_one_pole_cascade_1ae35052126bde0f0f197317b2ad003d26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_cascade_1ae35052126bde0f0f197317b2ad003d26" kindref="member">FilterOnePoleCascade::input</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inVal<sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>Pole2.input(<sp/>Pole1.input(<sp/>inVal<sp/>));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_1a571c2df141dab2b1072afcd192623f76" kindref="member">output</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clears<sp/>out<sp/>the<sp/>values<sp/>in<sp/>the<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="struct_filter_one_pole_cascade_1a1bcac6613d187073873a825d9826ed82" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_cascade_1a1bcac6613d187073873a825d9826ed82" kindref="member">FilterOnePoleCascade::setToNewValue</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newVal<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>Pole1.setToNewValue(<sp/>newVal<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>Pole2.setToNewValue(<sp/>newVal<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="struct_filter_one_pole_cascade_1ae8ba6b966183057560bb0d84e3ea549a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_cascade_1ae8ba6b966183057560bb0d84e3ea549a" kindref="member">FilterOnePoleCascade::output</ref>()<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Pole2.output();</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="struct_filter_one_pole_cascade_1a48b7253c9eec2765bce755b6fc985e34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_filter_one_pole_cascade_1a48b7253c9eec2765bce755b6fc985e34" kindref="member">FilterOnePoleCascade::test</ref>()<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>a<sp/>filter,<sp/>how<sp/>fast<sp/>does<sp/>it<sp/>run:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rise<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="struct_filter_one_pole_cascade" kindref="compound">FilterOnePoleCascade</ref><sp/>myFilter(<sp/>rise<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first,<sp/>test<sp/>the<sp/>filter<sp/>speed<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nLoops<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;testing<sp/>filter<sp/>with<sp/>a<sp/>rise<sp/>time<sp/>of<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>Serial.print(<sp/>rise<sp/>);<sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>running<sp/>filter<sp/>speed<sp/>loop<sp/>...<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>startTime,<sp/>stopTime;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>startTime<sp/>=<sp/>millis()*1e-3;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>=0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>&lt;nLoops;<sp/>++<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>myFilter.<ref refid="struct_filter_one_pole_cascade_1ae35052126bde0f0f197317b2ad003d26" kindref="member">input</ref>(<sp/>PI<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>pi,<sp/>so<sp/>it<sp/>will<sp/>actually<sp/>do<sp/>a<sp/>full<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>stopTime<sp/>=<sp/>millis()*1e-3;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;done,<sp/>filter<sp/>runs<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(nLoops)<sp/>/<sp/>(stopTime<sp/>-<sp/>startTime)<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>hz<sp/>&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>filter<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>);<sp/>Serial.print(<sp/>myFilter.<ref refid="struct_filter_one_pole_cascade_1ae8ba6b966183057560bb0d84e3ea549a" kindref="member">output</ref>()<sp/>);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>myFilter.<ref refid="struct_filter_one_pole_cascade_1a1bcac6613d187073873a825d9826ed82" kindref="member">setToNewValue</ref>(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>after<sp/>reset<sp/>to<sp/>0:<sp/>&quot;</highlight><highlight class="normal">);<sp/>Serial.print(<sp/>myFilter.<ref refid="struct_filter_one_pole_cascade_1ae8ba6b966183057560bb0d84e3ea549a" kindref="member">output</ref>()<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;\n<sp/>testing<sp/>rise<sp/>time<sp/>(10%<sp/>to<sp/>90%)<sp/>...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>crossedTenPercent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>myFilter.<ref refid="struct_filter_one_pole_cascade_1ae8ba6b966183057560bb0d84e3ea549a" kindref="member">output</ref>()<sp/>&lt;<sp/>0.9<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>myFilter.<ref refid="struct_filter_one_pole_cascade_1ae35052126bde0f0f197317b2ad003d26" kindref="member">input</ref>(<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>myFilter.<ref refid="struct_filter_one_pole_cascade_1ae8ba6b966183057560bb0d84e3ea549a" kindref="member">output</ref>()<sp/>&gt;<sp/>0.1<sp/>&amp;&amp;<sp/>!crossedTenPercent<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>first<sp/>crossed<sp/>the<sp/>10%<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>millis()*1e-3;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>crossedTenPercent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>stopTime<sp/>=<sp/>millis()*1e-3;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;done,<sp/>rise<sp/>time:<sp/>&quot;</highlight><highlight class="normal"><sp/>);<sp/>Serial.print(<sp/>stopTime-startTime<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;testing<sp/>attenuation<sp/>at<sp/>f<sp/>=<sp/>1/risetime&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>myFilter.<ref refid="struct_filter_one_pole_cascade_1a1bcac6613d187073873a825d9826ed82" kindref="member">setToNewValue</ref>(<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>valWasOutputThisCycle<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lastFilterVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref><sp/>=<sp/>1e-3*millis();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>currentFilterVal<sp/>=<sp/>myFilter.<ref refid="struct_filter_one_pole_cascade_1ae35052126bde0f0f197317b2ad003d26" kindref="member">input</ref>(<sp/>sin(<sp/>TWO_PI*now)<sp/>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>currentFilterVal<sp/>&lt;<sp/>0.0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!valWasOutputThisCycle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>crossed<sp/>below<sp/>zero,<sp/>output<sp/>the<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<sp/>maxVal*100<sp/>);<sp/>Serial.print(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valWasOutputThisCycle<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Weather_Balloon/library/Filters/FilterOnePole.cpp"/>
  </compounddef>
</doxygen>
