<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_weather___balloon_8cpp" kind="file" language="C++">
    <compoundname>Weather_Balloon.cpp</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">Wire.h</includes>
    <includes local="no">util/atomic.h</includes>
    <includes local="no">avr/cpufunc.h</includes>
    <includes local="no">avr/interrupt.h</includes>
    <includes local="no">avr/sleep.h</includes>
    <includes local="no">avr/power.h</includes>
    <includes local="no">avr/wdt.h</includes>
    <includes refid="_adafruit___s_i1145_8h" local="yes">Adafruit_SI1145.h</includes>
    <includes refid="_one_wire_8h" local="yes">OneWire.h</includes>
    <includes refid="_dallas_temperature_8h" local="yes">DallasTemperature.h</includes>
    <includes refid="_m_a_g3110_8h" local="yes">MAG3110.h</includes>
    <includes refid="_adafruit___sensor_8h" local="no">Adafruit_Sensor.h</includes>
    <includes refid="_adafruit___a_d_x_l345___u_8h" local="no">Adafruit_ADXL345_U.h</includes>
    <includes refid="_m_s5xxx_8h" local="no">MS5xxx.h</includes>
    <includes refid="_adafruit___s_h_t31_8h" local="yes">Adafruit_SHT31.h</includes>
    <includes refid="_sd2_card_8h" local="yes">Sd2Card.h</includes>
    <includes refid="_adafruit___t_s_l2561___u_8h" local="yes">Adafruit_TSL2561_U.h</includes>
    <includes refid="_spark_fun_m_a_x17043_8h" local="yes">SparkFunMAX17043.h</includes>
    <includes refid="_spark_fun_l_s_m9_d_s1_8h" local="yes">SparkFunLSM9DS1.h</includes>
    <includes refid="_tiny_g_p_s_09_09_8h" local="yes">TinyGPS++.h</includes>
    <includes refid="_d_s3231_8h" local="yes">DS3231.h</includes>
    <includes refid="_p_i_d__v1_8h" local="yes">PID_v1.h</includes>
    <includes local="no">EEPROM.h</includes>
    <includes refid="_e_e_p_r_o_m__anything_8h" local="yes">EEPROM_anything.h</includes>
    <incdepgraph>
      <node id="1071">
        <label>TinyGPS++.h</label>
        <link refid="_tiny_g_p_s_09_09_8h"/>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
      </node>
      <node id="1055">
        <label>pins_arduino.h</label>
      </node>
      <node id="1043">
        <label>stdint.h</label>
      </node>
      <node id="1047">
        <label>avr/interrupt.h</label>
      </node>
      <node id="1046">
        <label>avr/cpufunc.h</label>
      </node>
      <node id="1058">
        <label>Adafruit_Sensor.h</label>
        <link refid="_adafruit___sensor_8h"/>
        <childnode refid="1052" relation="include">
        </childnode>
      </node>
      <node id="1064">
        <label>Sd2PinMap.h</label>
        <link refid="_sd2_pin_map_8h"/>
      </node>
      <node id="1073">
        <label>DS3231.h</label>
        <link refid="_d_s3231_8h"/>
        <childnode refid="1052" relation="include">
        </childnode>
      </node>
      <node id="1069">
        <label>LSM9DS1_Registers.h</label>
        <link refid="_l_s_m9_d_s1___registers_8h"/>
      </node>
      <node id="1050">
        <label>avr/wdt.h</label>
      </node>
      <node id="1049">
        <label>avr/power.h</label>
      </node>
      <node id="1051">
        <label>Adafruit_SI1145.h</label>
        <link refid="_adafruit___s_i1145_8h"/>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
      </node>
      <node id="1042">
        <label>Weather_Balloon/Weather_Balloon.cpp</label>
        <link refid="Weather_Balloon.cpp"/>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
      </node>
      <node id="1045">
        <label>util/atomic.h</label>
      </node>
      <node id="1072">
        <label>limits.h</label>
      </node>
      <node id="1066">
        <label>Adafruit_TSL2561_U.h</label>
        <link refid="_adafruit___t_s_l2561___u_8h"/>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
      </node>
      <node id="1060">
        <label>MS5xxx.h</label>
        <link refid="_m_s5xxx_8h"/>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
      </node>
      <node id="1076">
        <label>EEPROM_anything.h</label>
        <link refid="_e_e_p_r_o_m__anything_8h"/>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
      </node>
      <node id="1052">
        <label>WProgram.h</label>
      </node>
      <node id="1068">
        <label>SparkFunLSM9DS1.h</label>
        <link refid="_spark_fun_l_s_m9_d_s1_8h"/>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
      </node>
      <node id="1044">
        <label>Wire.h</label>
      </node>
      <node id="1059">
        <label>Adafruit_ADXL345_U.h</label>
        <link refid="_adafruit___a_d_x_l345___u_8h"/>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
      </node>
      <node id="1048">
        <label>avr/sleep.h</label>
      </node>
      <node id="1074">
        <label>PID_v1.h</label>
        <link refid="_p_i_d__v1_8h"/>
      </node>
      <node id="1067">
        <label>SparkFunMAX17043.h</label>
        <link refid="_spark_fun_m_a_x17043_8h"/>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
      </node>
      <node id="1062">
        <label>Adafruit_SHT31.h</label>
        <link refid="_adafruit___s_h_t31_8h"/>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
      </node>
      <node id="1061">
        <label>Arduino.h</label>
      </node>
      <node id="1065">
        <label>SdInfo.h</label>
        <link refid="_sd_info_8h"/>
        <childnode refid="1043" relation="include">
        </childnode>
      </node>
      <node id="1057">
        <label>MAG3110.h</label>
        <link refid="_m_a_g3110_8h"/>
      </node>
      <node id="1075">
        <label>EEPROM.h</label>
      </node>
      <node id="1063">
        <label>Sd2Card.h</label>
        <link refid="_sd2_card_8h"/>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
      </node>
      <node id="1070">
        <label>LSM9DS1_Types.h</label>
        <link refid="_l_s_m9_d_s1___types_8h"/>
        <childnode refid="1069" relation="include">
        </childnode>
      </node>
      <node id="1053">
        <label>OneWire.h</label>
        <link refid="_one_wire_8h"/>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
      </node>
      <node id="1056">
        <label>DallasTemperature.h</label>
        <link refid="_dallas_temperature_8h"/>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
      </node>
      <node id="1054">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structdata__struct" prot="public">data_struct</innerclass>
    <innerclass refid="structsd__data" prot="public">sd_data</innerclass>
    <innerclass refid="structeeprom__struct" prot="public">eeprom_struct</innerclass>
    <innerclass refid="structdata__struct_8found" prot="public">data_struct.found</innerclass>
    <innerclass refid="structdata__struct_8temp" prot="public">data_struct.temp</innerclass>
    <innerclass refid="structdata__struct_8pwm" prot="public">data_struct.pwm</innerclass>
    <innerclass refid="structdata__struct_8sht31" prot="public">data_struct.sht31</innerclass>
    <innerclass refid="structdata__struct_8battery" prot="public">data_struct.battery</innerclass>
    <innerclass refid="structdata__struct_8ms5607" prot="public">data_struct.ms5607</innerclass>
    <innerclass refid="structdata__struct_8tsl" prot="public">data_struct.tsl</innerclass>
    <innerclass refid="structdata__struct_8accel" prot="public">data_struct.accel</innerclass>
    <innerclass refid="structdata__struct_8mag" prot="public">data_struct.mag</innerclass>
    <innerclass refid="structdata__struct_8gyro" prot="public">data_struct.gyro</innerclass>
    <innerclass refid="structdata__struct_8geiger" prot="public">data_struct.geiger</innerclass>
    <innerclass refid="structdata__struct_8gps" prot="public">data_struct.gps</innerclass>
    <innerclass refid="structdata__struct_8enabled" prot="public">data_struct.enabled</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_weather___balloon_8cpp_1a4260ed8874da804fb9ef9abba200b487" prot="public" static="no">
        <name>ONE_WIRE_BUS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="81" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1aae0736ba082f8ff448826f4b1bad56c0" prot="public" static="no">
        <name>UV_PIN</name>
        <initializer>A0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="84" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="84" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" compoundref="_weather___balloon_8cpp" startline="1596" endline="1751">readSensors</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a698f3df552cd6ec0d639151634bf7f96" prot="public" static="no">
        <name>CO2_PIN</name>
        <initializer>A3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="87" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" prot="public" static="no">
        <name>PIEZO_PIN</name>
        <initializer>A2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="90" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="90" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" compoundref="_weather___balloon_8cpp" startline="1235" endline="1250">location_alarm</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" prot="public" static="no">
        <name>GREEN_LED</name>
        <initializer>22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="92" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="92" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aec2dcfe4cd6ca84e8df5730d179fdc6f" compoundref="_weather___balloon_8cpp" startline="946" endline="979">configure_sdcard</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a381ac8dbd73c0461a2bc7169fbc63e61" compoundref="_weather___balloon_8cpp" startline="1252" endline="1272">count_down_led</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" compoundref="_weather___balloon_8cpp" startline="1110" endline="1123">led_power</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" prot="public" static="no">
        <name>YELLOW_LED</name>
        <initializer>23</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="93" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="93" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a381ac8dbd73c0461a2bc7169fbc63e61" compoundref="_weather___balloon_8cpp" startline="1252" endline="1272">count_down_led</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" compoundref="_weather___balloon_8cpp" startline="1110" endline="1123">led_power</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ab14d778dd0d52177eb147802a870639d" compoundref="_weather___balloon_8cpp" startline="1458" endline="1559">read_GPS</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" prot="public" static="no">
        <name>RED_LED</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="94" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="94" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aec2dcfe4cd6ca84e8df5730d179fdc6f" compoundref="_weather___balloon_8cpp" startline="946" endline="979">configure_sdcard</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a381ac8dbd73c0461a2bc7169fbc63e61" compoundref="_weather___balloon_8cpp" startline="1252" endline="1272">count_down_led</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" compoundref="_weather___balloon_8cpp" startline="1110" endline="1123">led_power</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1adc5a223dccf8bbdeb83b1e98c1a5e068" prot="public" static="no">
        <name>MAIN_HEATER_PIN</name>
        <initializer>45</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="108" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="108" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1afa22ab511c2e1ff0c2b6d670fb54b907" prot="public" static="no">
        <name>GPS_HEATER_PIN</name>
        <initializer>44</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="109" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="109" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a86a504b275408486d19f32e6923e6c10" prot="public" static="no">
        <name>UV_HEATER_PIN</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="110" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="110" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a9bd50323652c3e5de42af2a1d65e7930" prot="public" static="no">
        <name>TSL2561_HEATER_PIN</name>
        <initializer>46</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="111" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="111" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1aad36752a9ec8083497dc972e71dade95" prot="public" static="no">
        <name>CUSTOM_HEATER_PIN</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="112" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="112" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a126d5b2f190e7e95a7b8877c920a2258" prot="public" static="no">
        <name>SHT31_HEATER_PIN</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="113" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="113" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a62875728932bfc6752ba857df3fdb182" prot="public" static="no">
        <name>GEIGER_PWR_PIN</name>
        <initializer>39</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="115" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="115" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1ae30e39a79eefe72511818815ea7276eb" compoundref="_weather___balloon_8cpp" startline="1052" endline="1060">geiger_power</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a6f6f49388c74bb24a8f63771bd997d97" prot="public" static="no">
        <name>SAMPLE_TIME</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="124" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="124" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a24d559ff8c4c36c0c5b27749ec0f1db7" compoundref="_weather___balloon_8cpp" startline="981" endline="998">configure_PID</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a2042d0bb2f483912475a0570f65887e9" prot="public" static="no">
        <name>DS18B20_RESOLUTION</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="140" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="140" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a0493b2a2e791c613e271755e39c7ff02" compoundref="_weather___balloon_8cpp" startline="770" endline="864">configure_ds18b20</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a1786def7b6707fbead3e6e07b8948528" prot="public" static="no">
        <name>ADXL345_CORRECTION</name>
        <initializer>0.911265</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="143" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a9bb94ac54f97758f53ae168206e48061" prot="public" static="no">
        <name>LSM9DS1_M</name>
        <initializer>0x1E</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="146" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="146" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a2c2e98945e78daa792b87b30868c3907" compoundref="_weather___balloon_8cpp" startline="884" endline="907">configure_LSM9DS1</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a733d92c87c7253b93ad4bf6a6ed54952" prot="public" static="no">
        <name>LSM9DS1_AG</name>
        <initializer>0x6B</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="147" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="147" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a2c2e98945e78daa792b87b30868c3907" compoundref="_weather___balloon_8cpp" startline="884" endline="907">configure_LSM9DS1</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1ad337b69f79bb731012571f96b472df45" prot="public" static="no">
        <name>DECLINATION</name>
        <initializer>-8.58</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="153" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="153" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a4d230d8f4d47ce65d33e15a1dc1dec76" compoundref="_weather___balloon_8cpp" startline="1566" endline="1593">printAttitude</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1aacfac138026d1b146c60efb2f40aa5fe" prot="public" static="no">
        <name>PRINT_RAW</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="156" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1ae54089afd7925e1d4d4599a9925ba7d4" prot="public" static="no">
        <name>GPS_SBYTE_1</name>
        <initializer>0xA0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="493" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="493" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" compoundref="_weather___balloon_8cpp" startline="1772" endline="1820">configure_GPS_NMEA</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" compoundref="_weather___balloon_8cpp" startline="1822" endline="1844">configure_GPS_WAAS</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a41c61b54b6c4e8df2ab8540312ea578f" prot="public" static="no">
        <name>GPS_SBYTE_2</name>
        <initializer>0xA1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="494" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="494" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" compoundref="_weather___balloon_8cpp" startline="1772" endline="1820">configure_GPS_NMEA</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" compoundref="_weather___balloon_8cpp" startline="1822" endline="1844">configure_GPS_WAAS</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1af33afafa7f1cda9d36801855fda7def3" prot="public" static="no">
        <name>GPS_END_1</name>
        <initializer>0x0D</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="495" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="495" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" compoundref="_weather___balloon_8cpp" startline="1772" endline="1820">configure_GPS_NMEA</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" compoundref="_weather___balloon_8cpp" startline="1822" endline="1844">configure_GPS_WAAS</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1adc8803fa8bafb4b8793b13f3325aee70" prot="public" static="no">
        <name>GPS_END_2</name>
        <initializer>0x0A</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="496" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="496" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" compoundref="_weather___balloon_8cpp" startline="1772" endline="1820">configure_GPS_NMEA</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" compoundref="_weather___balloon_8cpp" startline="1822" endline="1844">configure_GPS_WAAS</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a9ec60d321bbe0674b50ee8528c1c8b8a" prot="public" static="no">
        <name>GPS_RESTART</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="499" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a450249148bd85e8396ad71ce44a0e11a" prot="public" static="no">
        <name>GPS_CONFIG_NMEA</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="500" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="500" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" compoundref="_weather___balloon_8cpp" startline="1772" endline="1820">configure_GPS_NMEA</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1ae52863898b89c9232c92c1b6e1d76c2b" prot="public" static="no">
        <name>GPS_CONFIG_OUT</name>
        <initializer>0x09</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="501" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1ac6adf6372ba4fc55bb81e6a1b62e59d8" prot="public" static="no">
        <name>GPS_CONFIG_PWR</name>
        <initializer>0x12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="502" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a335669658677baf0a51458e3055f97b0" prot="public" static="no">
        <name>GPS_CONFIG_WAAS</name>
        <initializer>0x37</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="503" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="503" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" compoundref="_weather___balloon_8cpp" startline="1822" endline="1844">configure_GPS_WAAS</referencedby>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1adbe0ec6abc2a7aad14739af2084e7261" prot="public" static="no">
        <name>GPS_ACK</name>
        <initializer>0x83</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="505" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1a3b24d3a4f5c25565a114df73a9c203cc" prot="public" static="no">
        <name>GPS_NACK</name>
        <initializer>0x84</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="506" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_weather___balloon_8cpp_1af01c2d0b190db0e453c4dabc1fcd2a04" prot="public" static="no">
        <name>GPS_PRECISION</name>
        <initializer>2.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="509" column="9" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="509" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a117352cc494cc62c6b2f1882786a332c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DEBUG</definition>
        <argsstring></argsstring>
        <name>DEBUG</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="11" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="11" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" compoundref="_weather___balloon_8cpp" startline="3242" endline="3314">read_serial</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a0006c1addcca85ed3a78cce0d5ab8810" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DEBUG_MORE</definition>
        <argsstring></argsstring>
        <name>DEBUG_MORE</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="12" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>volatile uint16_t watchdog</definition>
        <argsstring></argsstring>
        <name>watchdog</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="13" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="13" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ad3d8902d8758d33ba2a536403243f47c" compoundref="_weather___balloon_8cpp" startline="1852" endline="1870">check_battery</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a15e6d9ae56a77e3b476ba9804077a809" compoundref="_weather___balloon_8cpp" startline="3063" endline="3097">check_landing</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ad470b7ae913b35bcd1e424b925a0277b" compoundref="_weather___balloon_8cpp" startline="3000" endline="3041">check_launch</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" compoundref="_weather___balloon_8cpp" startline="2413" endline="2650">log_data</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1abdf5b290d72a0f43221cc3461db70810" compoundref="_weather___balloon_8cpp" startline="3317" endline="3328">pet_watchdog</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aef169403f1360281f7d4532c26949b6a" compoundref="_weather___balloon_8cpp" startline="2840" endline="2918">queue_altitude</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1adeef8e326e21e271b7542e6e7c4e4bd9" compoundref="_weather___balloon_8cpp" startline="2920" endline="2998">queue_pressure</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" compoundref="_weather___balloon_8cpp" startline="1596" endline="1751">readSensors</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1adab320fba7526e8277ddabb382395609" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double FT2METERS</definition>
        <argsstring></argsstring>
        <name>FT2METERS</name>
        <initializer>= 0.3048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="59" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a19b91bab81470b4820cbd27986bbb1a8" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double KELVIN2RANKINE</definition>
        <argsstring></argsstring>
        <name>KELVIN2RANKINE</name>
        <initializer>= 1.8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="60" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a950f5d29e2685b850c7c11c7a70e3586" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double PSF2NSM</definition>
        <argsstring></argsstring>
        <name>PSF2NSM</name>
        <initializer>= 47.880258</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="61" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a05e8a82a0d190e77cf4a5df2ea878799" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double SCF2KCM</definition>
        <argsstring></argsstring>
        <name>SCF2KCM</name>
        <initializer>= 515.379</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="62" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1ad3209c000f37747eff86c69863d3d0d1" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double TZERO</definition>
        <argsstring></argsstring>
        <name>TZERO</name>
        <initializer>= 288.15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="63" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a728acecfd86626b2ad3b9cf88c206434" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double PZERO</definition>
        <argsstring></argsstring>
        <name>PZERO</name>
        <initializer>= 101325.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="64" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="64" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1ad125fd2e1dac4c129e6735549100fc2b" compoundref="_weather___balloon_8cpp" startline="3207" endline="3229">set_alt_threshold</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a8b35237530df0b0d6241a52f61589fee" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double RHOZERO</definition>
        <argsstring></argsstring>
        <name>RHOZERO</name>
        <initializer>= 1.225</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="65" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a9d985b447de8617c091480f9f572fe58" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double AZERO</definition>
        <argsstring></argsstring>
        <name>AZERO</name>
        <initializer>= 340.294</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="66" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a025e0782db77609f8bde58b6e2b07405" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float hyster</definition>
        <argsstring></argsstring>
        <name>hyster</name>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="119" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="119" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a7b0dae08d630995fb336f20fca25b324" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float over_ambient</definition>
        <argsstring></argsstring>
        <name>over_ambient</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="122" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="122" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" prot="public" static="no" mutable="no">
        <type><ref refid="structdata__struct" kindref="compound">data_struct</ref></type>
        <definition>data_struct dataLog</definition>
        <argsstring></argsstring>
        <name>dataLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="290" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="290" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a276e156004c668500daa7aaa9a770585" compoundref="_weather___balloon_8cpp" startline="2278" endline="2395">find_sdcard_tail</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" compoundref="_weather___balloon_8cpp" startline="2413" endline="2650">log_data</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a450f53a446d117859c49aeaac6c31f9f" compoundref="_weather___balloon_8cpp" startline="2653" endline="2838">read_sdcard</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a22feff51a4b8144a2264bc812eedaddb" compoundref="_weather___balloon_8cpp" startline="2397" endline="2410">test_logging</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" prot="public" static="no" mutable="no">
        <type>struct @14</type>
        <definition>struct @14  geiger</definition>
        <argsstring></argsstring>
        <name>geiger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="300" column="1"/>
        <referencedby refid="_weather___balloon_8cpp_1afe6035149a64d5f448fbda08e9d1b67f" compoundref="_weather___balloon_8cpp" startline="582" endline="610">ISR</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" compoundref="_weather___balloon_8cpp" startline="2413" endline="2650">log_data</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" prot="public" static="no" mutable="no">
        <type>struct @15</type>
        <definition>struct @15  temp_sensors</definition>
        <argsstring></argsstring>
        <name>temp_sensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="334" column="1"/>
        <referencedby refid="_weather___balloon_8cpp_1a0493b2a2e791c613e271755e39c7ff02" compoundref="_weather___balloon_8cpp" startline="770" endline="864">configure_ds18b20</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ab21671796ffdb5448be7facdbae0a1fa" compoundref="_weather___balloon_8cpp" startline="928" endline="945">print_found</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" compoundref="_weather___balloon_8cpp" startline="1596" endline="1751">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" prot="public" static="no" mutable="no">
        <type>struct @16</type>
        <definition>struct @16  configuration</definition>
        <argsstring></argsstring>
        <name>configuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="366" column="1"/>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" compoundref="_weather___balloon_8cpp" startline="3043" endline="3061">check_decent</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a15e6d9ae56a77e3b476ba9804077a809" compoundref="_weather___balloon_8cpp" startline="3063" endline="3097">check_landing</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ad470b7ae913b35bcd1e424b925a0277b" compoundref="_weather___balloon_8cpp" startline="3000" endline="3041">check_launch</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" compoundref="_weather___balloon_8cpp" startline="748" endline="767">compare_buffers</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a0493b2a2e791c613e271755e39c7ff02" compoundref="_weather___balloon_8cpp" startline="770" endline="864">configure_ds18b20</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aec2dcfe4cd6ca84e8df5730d179fdc6f" compoundref="_weather___balloon_8cpp" startline="946" endline="979">configure_sdcard</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a276e156004c668500daa7aaa9a770585" compoundref="_weather___balloon_8cpp" startline="2278" endline="2395">find_sdcard_tail</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" compoundref="_weather___balloon_8cpp" startline="2413" endline="2650">log_data</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1af7115da2fa844da13b6bd31bf8a206f1" compoundref="_weather___balloon_8cpp" startline="2270" endline="2276">read_configuration</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ab14d778dd0d52177eb147802a870639d" compoundref="_weather___balloon_8cpp" startline="1458" endline="1559">read_GPS</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" compoundref="_weather___balloon_8cpp" startline="3242" endline="3314">read_serial</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" compoundref="_weather___balloon_8cpp" startline="1596" endline="1751">readSensors</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ad125fd2e1dac4c129e6735549100fc2b" compoundref="_weather___balloon_8cpp" startline="3207" endline="3229">set_alt_threshold</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1af913d90b1b4908442e095aaba6f05119" prot="public" static="no" mutable="no">
        <type>struct @16</type>
        <definition>struct @16  default_config</definition>
        <argsstring></argsstring>
        <name>default_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="366" column="1"/>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a0ccc5fb483a33a339b8a07b5f0251c02" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t count_at_altitude</definition>
        <argsstring></argsstring>
        <name>count_at_altitude</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="371" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float pressure_hist[120]</definition>
        <argsstring>[120]</argsstring>
        <name>pressure_hist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="374" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="374" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" compoundref="_weather___balloon_8cpp" startline="3043" endline="3061">check_decent</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a15e6d9ae56a77e3b476ba9804077a809" compoundref="_weather___balloon_8cpp" startline="3063" endline="3097">check_landing</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ad470b7ae913b35bcd1e424b925a0277b" compoundref="_weather___balloon_8cpp" startline="3000" endline="3041">check_launch</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1adeef8e326e21e271b7542e6e7c4e4bd9" compoundref="_weather___balloon_8cpp" startline="2920" endline="2998">queue_pressure</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float altitude_hist[120]</definition>
        <argsstring>[120]</argsstring>
        <name>altitude_hist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="375" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="375" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" compoundref="_weather___balloon_8cpp" startline="3043" endline="3061">check_decent</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a15e6d9ae56a77e3b476ba9804077a809" compoundref="_weather___balloon_8cpp" startline="3063" endline="3097">check_landing</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1ad470b7ae913b35bcd1e424b925a0277b" compoundref="_weather___balloon_8cpp" startline="3000" endline="3041">check_launch</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aef169403f1360281f7d4532c26949b6a" compoundref="_weather___balloon_8cpp" startline="2840" endline="2918">queue_altitude</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t pressure_hist_head</definition>
        <argsstring></argsstring>
        <name>pressure_hist_head</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="378" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="378" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" compoundref="_weather___balloon_8cpp" startline="3043" endline="3061">check_decent</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1adeef8e326e21e271b7542e6e7c4e4bd9" compoundref="_weather___balloon_8cpp" startline="2920" endline="2998">queue_pressure</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t pressure_hist_tail</definition>
        <argsstring></argsstring>
        <name>pressure_hist_tail</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="379" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="379" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" compoundref="_weather___balloon_8cpp" startline="3043" endline="3061">check_decent</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1adeef8e326e21e271b7542e6e7c4e4bd9" compoundref="_weather___balloon_8cpp" startline="2920" endline="2998">queue_pressure</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t altitude_hist_head</definition>
        <argsstring></argsstring>
        <name>altitude_hist_head</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="380" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="380" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" compoundref="_weather___balloon_8cpp" startline="3043" endline="3061">check_decent</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aef169403f1360281f7d4532c26949b6a" compoundref="_weather___balloon_8cpp" startline="2840" endline="2918">queue_altitude</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t altitude_hist_tail</definition>
        <argsstring></argsstring>
        <name>altitude_hist_tail</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="381" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="381" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" compoundref="_weather___balloon_8cpp" startline="3043" endline="3061">check_decent</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aef169403f1360281f7d4532c26949b6a" compoundref="_weather___balloon_8cpp" startline="2840" endline="2918">queue_altitude</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a6914ee42e75580dd30542e2b70531a1a" prot="public" static="no" mutable="no">
        <type><ref refid="class_one_wire" kindref="compound">OneWire</ref></type>
        <definition>DallasTemperature DS18B20 &amp; oneWire</definition>
        <argsstring>(ONE_WIRE_BUS)</argsstring>
        <name>oneWire</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="391" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" prot="public" static="no" mutable="no">
        <type><ref refid="class_m_s5xxx" kindref="compound">MS5xxx</ref> ms5607 &amp;</type>
        <definition>MS5xxx ms5607&amp; Wire</definition>
        <argsstring></argsstring>
        <name>Wire</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="400" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="400" bodyend="-1"/>
        <referencedby refid="class_r_t_c___d_s1307_1a6e38778b577a80008e9dc630384b8520" compoundref="_r_t_c___d_s1307_8cpp" startline="44" endline="57">RTC_DS1307::adjust</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1ae8d2a40c8ada023f5ab502a77631abb0" compoundref="_r_t_c___d_s3231_8cpp" startline="51" endline="65">RTC_DS3231::adjust</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1a08fb5001c43fa4493d370a17ffb14737" compoundref="_r_t_c___d_s3231_8cpp" startline="266" endline="290">RTC_DS3231::BBSQWEnable</referencedby>
        <referencedby refid="class_m_a_x17043_1a7f434b44531c65f4a3b31c4f5ebcb887" compoundref="_spark_fun_m_a_x17043_8cpp" startline="61" endline="65">MAX17043::begin</referencedby>
        <referencedby refid="class_adafruit___s_h_t31_1a104eb2dfd27a732420e1fc3755516690" compoundref="_adafruit___s_h_t31_8cpp" startline="24" endline="30">Adafruit_SHT31::begin</referencedby>
        <referencedby refid="class_d_s3231_1a1b6b23f76ae2a8c27f78e946608467ae" compoundref="_d_s3231_8cpp" startline="33" endline="49">DS3231::begin</referencedby>
        <referencedby refid="class_adafruit___a_d_x_l345___unified_1a55b74a63bbb1317228d5bb5905589a02" compoundref="_adafruit___a_d_x_l345___u_8cpp" startline="210" endline="235">Adafruit_ADXL345_Unified::begin</referencedby>
        <referencedby refid="class_adafruit___s_i1145_1ad17eb7214e6fba886b5595cf14e45cf0" compoundref="_adafruit___s_i1145_8cpp" startline="25" endline="91">Adafruit_SI1145::begin</referencedby>
        <referencedby refid="class_adafruit___t_s_l2561___unified_1ac2781d263ae73533628d5844ca38b6de" compoundref="_adafruit___t_s_l2561___u_8cpp" startline="196" endline="216">Adafruit_TSL2561_Unified::begin</referencedby>
        <referencedby refid="class_m_a_g3110_1a094c8d196c12361b79fb8664fb90524b" compoundref="_m_a_g3110_8cpp" startline="16" endline="28">MAG3110::config</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1ad892efd8d357db71da0c672523f6d699" compoundref="_r_t_c___d_s3231_8cpp" startline="164" endline="185">RTC_DS3231::enable32kHz</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1a63a667e5cb63ea406315bd42c2037eea" compoundref="_r_t_c___d_s3231_8cpp" startline="198" endline="224">RTC_DS3231::forceTempConv</referencedby>
        <referencedby refid="class_d_s3231_1a7241d497e56fc0062ad68a9bc31e212a" compoundref="_d_s3231_8cpp" startline="565" endline="599">DS3231::getAlarm1</referencedby>
        <referencedby refid="class_d_s3231_1a6917f3adf3b16a5d1afb67179461ba95" compoundref="_d_s3231_8cpp" startline="762" endline="796">DS3231::getAlarm2</referencedby>
        <referencedby refid="class_d_s3231_1a20d9f5ec608a5b0a5010ad1a91cf667b" compoundref="_d_s3231_8cpp" startline="601" endline="636">DS3231::getAlarmType1</referencedby>
        <referencedby refid="class_d_s3231_1aef2ea43f887cd0444dbc233cfbe46033" compoundref="_d_s3231_8cpp" startline="798" endline="832">DS3231::getAlarmType2</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1a2def91da84612846ecaa3029f8c3b9aa" compoundref="_r_t_c___d_s3231_8cpp" startline="318" endline="341">RTC_DS3231::getControlRegisterData</referencedby>
        <referencedby refid="class_d_s3231_1adc4bc3149377fef827a7e504264fbd40" compoundref="_d_s3231_8cpp" startline="384" endline="421">DS3231::getDateTime</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1a0c97cca72e971f6b4d7d4a679eac8d5b" compoundref="_r_t_c___d_s3231_8cpp" startline="101" endline="120">RTC_DS3231::getTempAsFloat</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1aad9389d7a869971cde87fc81a8b00647" compoundref="_r_t_c___d_s3231_8cpp" startline="136" endline="156">RTC_DS3231::getTempAsWord</referencedby>
        <referencedby refid="class_l_s_m9_d_s1_1a7fc046d4b335494331905fdeb5c81c9e" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="1104" endline="1121">LSM9DS1::I2CreadByte</referencedby>
        <referencedby refid="class_l_s_m9_d_s1_1adfc9a22290daddd7787e8023fa8f12cc" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="1123" endline="1146">LSM9DS1::I2CreadBytes</referencedby>
        <referencedby refid="class_l_s_m9_d_s1_1a8e66108a002cc15ec4c0db0a608d20c6" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="1096" endline="1102">LSM9DS1::I2CwriteByte</referencedby>
        <referencedby refid="class_l_s_m9_d_s1_1ae60332c2836bd3f19846b7a44c015ddd" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="1090" endline="1093">LSM9DS1::initI2C</referencedby>
        <referencedby refid="class_d_s3231_1ace5ee2a9d9cc6b6ecb16ca749514d2a3" compoundref="_d_s3231_8cpp" startline="931" endline="944">DS3231::isAlarm2</referencedby>
        <referencedby refid="class_r_t_c___d_s1307_1a0ec6f600f705edfef43bd798dce9946f" compoundref="_r_t_c___d_s1307_8cpp" startline="33" endline="42">RTC_DS1307::isrunning</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1a771a62d39534f6689c17f7ebe42aaa34" compoundref="_r_t_c___d_s3231_8cpp" startline="37" endline="46">RTC_DS3231::isrunning</referencedby>
        <referencedby refid="class_r_t_c___d_s1307_1a9f5f5dbcce65b67e00b50808a45a4249" compoundref="_r_t_c___d_s1307_8cpp" startline="59" endline="75">RTC_DS1307::now</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1adc740b28876022b852e0f33842632fab" compoundref="_r_t_c___d_s3231_8cpp" startline="71" endline="88">RTC_DS3231::now</referencedby>
        <referencedby refid="class_adafruit___a_d_x_l345___unified_1a62c1c34b81fdcb7825d7c9911fba988b" compoundref="_adafruit___a_d_x_l345___u_8cpp" startline="124" endline="139">Adafruit_ADXL345_Unified::read16</referencedby>
        <referencedby refid="class_m_a_g3110_1aac2dfb191c771fb272b24b081fe26fc0" compoundref="_m_a_g3110_8cpp" startline="30" endline="61">MAG3110::read_x</referencedby>
        <referencedby refid="class_m_a_g3110_1a5e1448a4f0a583e64e81982d37f4cddc" compoundref="_m_a_g3110_8cpp" startline="65" endline="96">MAG3110::read_y</referencedby>
        <referencedby refid="class_m_a_g3110_1ae21332e9cb2f99dc7cbbf482c677ee85" compoundref="_m_a_g3110_8cpp" startline="98" endline="129">MAG3110::read_z</referencedby>
        <referencedby refid="class_adafruit___s_h_t31_1a2b522bec65225d5c2aadfccd31bb91e0" compoundref="_adafruit___s_h_t31_8cpp" startline="62" endline="66">Adafruit_SHT31::readHumidity</referencedby>
        <referencedby refid="class_adafruit___s_i1145_1a9b058485d8305725020219839285ea16" compoundref="_adafruit___s_i1145_8cpp" startline="150" endline="152">Adafruit_SI1145::readProx</referencedby>
        <referencedby refid="class_adafruit___a_d_x_l345___unified_1ab56b668f36793605d7be009a7efb74e8" compoundref="_adafruit___a_d_x_l345___u_8cpp" startline="102" endline="117">Adafruit_ADXL345_Unified::readRegister</referencedby>
        <referencedby refid="class_adafruit___s_h_t31_1ae41f7910027c9a39afdb11aef45742ab" compoundref="_adafruit___s_h_t31_8cpp" startline="32" endline="40">Adafruit_SHT31::readStatus</referencedby>
        <referencedby refid="class_d_s3231_1a82074e0d3f0a4a646fc14f1afcb80448" compoundref="_d_s3231_8cpp" startline="538" endline="563">DS3231::readTemperature</referencedby>
        <referencedby refid="class_d_s3231_1a23cea53349c55fba93c706b6e263e574" compoundref="_d_s3231_8cpp" startline="638" endline="711">DS3231::setAlarm1</referencedby>
        <referencedby refid="class_d_s3231_1ad505857c3594da9a4c159f607845364e" compoundref="_d_s3231_8cpp" startline="834" endline="892">DS3231::setAlarm2</referencedby>
        <referencedby refid="class_m_a_x17043_1a0e65f026d006cd020439329e7230d7c5" compoundref="_spark_fun_m_a_x17043_8cpp" startline="200" endline="209">MAX17043::setCompensation</referencedby>
        <referencedby refid="class_d_s3231_1a15eb3576feaa3535415e9b82367c344c" compoundref="_d_s3231_8cpp" startline="51" endline="86">DS3231::setDateTime</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1a3d54093b096bb5e68f03d66ee1c7e686" compoundref="_r_t_c___d_s3231_8cpp" startline="234" endline="256">RTC_DS3231::SQWEnable</referencedby>
        <referencedby refid="class_r_t_c___d_s3231_1a85b06cbbd08d71865380e48183ddd26f" compoundref="_r_t_c___d_s3231_8cpp" startline="298" endline="316">RTC_DS3231::SQWFrequency</referencedby>
        <referencedby refid="class_adafruit___a_d_x_l345___unified_1a8f6b9e9598618fc0cf221c4b62f924d9" compoundref="_adafruit___a_d_x_l345___u_8cpp" startline="83" endline="95">Adafruit_ADXL345_Unified::writeRegister</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a4cc868f67bc519384a9e92cd96d408c9" prot="public" static="no" mutable="no">
        <type><ref refid="class_adafruit___s_h_t31" kindref="compound">Adafruit_SHT31</ref></type>
        <definition>Adafruit_SHT31 sht31</definition>
        <argsstring></argsstring>
        <name>sht31</name>
        <initializer>= <ref refid="class_adafruit___s_h_t31" kindref="compound">Adafruit_SHT31</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="403" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a34dc1ffbb166b7afbf402f717b871f77" prot="public" static="no" mutable="no">
        <type><ref refid="class_adafruit___t_s_l2561___unified" kindref="compound">Adafruit_TSL2561_Unified</ref></type>
        <definition>Adafruit_TSL2561_Unified tsl</definition>
        <argsstring></argsstring>
        <name>tsl</name>
        <initializer>= <ref refid="class_adafruit___t_s_l2561___unified" kindref="compound">Adafruit_TSL2561_Unified</ref>(<ref refid="_adafruit___t_s_l2561___u_8h_1ac7cc83a3f07e3073fe2c17deb84e8cfc" kindref="member">TSL2561_ADDR_FLOAT</ref>, 12345)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="405" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1abcf177193a1fa6196dec86446b427a38" prot="public" static="no" mutable="no">
        <type><ref refid="class_m_a_x17043" kindref="compound">MAX17043</ref></type>
        <definition>MAX17043 fuel_gauge</definition>
        <argsstring></argsstring>
        <name>fuel_gauge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="407" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a1251d2baa2da9ec9bae71ac224641f41" prot="public" static="no" mutable="no">
        <type><ref refid="class_l_s_m9_d_s1" kindref="compound">LSM9DS1</ref></type>
        <definition>LSM9DS1 DOF</definition>
        <argsstring></argsstring>
        <name>DOF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="409" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1af20e11a25c386bfa74e56ad408215877" prot="public" static="no" mutable="no">
        <type><ref refid="class_sd2_card" kindref="compound">Sd2Card</ref></type>
        <definition>Sd2Card sdcard</definition>
        <argsstring></argsstring>
        <name>sdcard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="411" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a65f172682710866247eacb1ef68df619" prot="public" static="no" mutable="no">
        <type><ref refid="class_d_s3231" kindref="compound">DS3231</ref></type>
        <definition>DS3231 clock</definition>
        <argsstring></argsstring>
        <name>clock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="413" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="413" bodyend="-1"/>
        <referencedby refid="class_adafruit___a_d_x_l345___unified_1a7e0409063a7441c35044902b947d661d" compoundref="_adafruit___a_d_x_l345___u_8cpp" startline="195" endline="203">Adafruit_ADXL345_Unified::Adafruit_ADXL345_Unified</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a392e8b82028f7ad3f0bf9c13abc9ce14" prot="public" static="no" mutable="no">
        <type><ref refid="struct_r_t_c_date_time" kindref="compound">RTCDateTime</ref></type>
        <definition>RTCDateTime date_time</definition>
        <argsstring></argsstring>
        <name>date_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="414" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a809288b73e21bab0f06787e2d2d01222" prot="public" static="no" mutable="no">
        <type><ref refid="structsd__data" kindref="compound">sd_data</ref></type>
        <definition>sd_data sdcard_data</definition>
        <argsstring></argsstring>
        <name>sdcard_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="441" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a440561e67c2eadefd39ca49856c16b16" prot="public" static="no" mutable="no">
        <type><ref refid="structeeprom__struct" kindref="compound">eeprom_struct</ref></type>
        <definition>eeprom_struct eeprom</definition>
        <argsstring></argsstring>
        <name>eeprom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="451" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a169c53997a7da1d0fb99aec1b4675ce8" prot="public" static="no" mutable="no">
        <type><ref refid="class_tiny_g_p_s_plus" kindref="compound">TinyGPSPlus</ref></type>
        <definition>TinyGPSPlus gps</definition>
        <argsstring></argsstring>
        <name>gps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="456" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="456" bodyend="-1"/>
        <referencedby refid="class_tiny_g_p_s_custom_1ac82fa99f3bcd9811377dd5fa3e9e98c7" compoundref="_tiny_g_p_s_09_09_8h" startline="191" endline="191">TinyGPSCustom::TinyGPSCustom</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1acaaa1b97759f106aaf5c83f39c17c58b" prot="public" static="no" mutable="no">
        <type><ref refid="class_tiny_g_p_s_custom" kindref="compound">TinyGPSCustom</ref></type>
        <definition>TinyGPSCustom vdop(gps,&quot;GPGSA&quot;, 17)</definition>
        <argsstring>(gps,&quot;GPGSA&quot;, 17)</argsstring>
        <name>vdop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="459" column="1"/>
        <referencedby refid="_weather___balloon_8cpp_1ab14d778dd0d52177eb147802a870639d" compoundref="_weather___balloon_8cpp" startline="1458" endline="1559">read_GPS</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" prot="public" static="no" mutable="no">
        <type>struct @17</type>
        <definition>PID PID_gps &amp; gps_vPID</definition>
        <argsstring></argsstring>
        <name>gps_vPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="470" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="486" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" prot="public" static="no" mutable="no">
        <type>struct @17</type>
        <definition>PID PID_uv &amp; uv_vPID</definition>
        <argsstring></argsstring>
        <name>uv_vPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="470" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="487" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" prot="public" static="no" mutable="no">
        <type>struct @17</type>
        <definition>PID PID_tsl &amp; tsl_vPID</definition>
        <argsstring></argsstring>
        <name>tsl_vPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="470" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="488" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" prot="public" static="no" mutable="no">
        <type>struct @17</type>
        <definition>PID PID_sht &amp; sht_vPID</definition>
        <argsstring></argsstring>
        <name>sht_vPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="470" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="489" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" prot="public" static="no" mutable="no">
        <type>struct @17</type>
        <definition>PID PID_custom &amp; custom_vPID</definition>
        <argsstring></argsstring>
        <name>custom_vPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="470" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="490" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" prot="public" static="no" mutable="no">
        <type>struct @18</type>
        <definition>PID PID_main &amp; main_vPID</definition>
        <argsstring></argsstring>
        <name>main_vPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="481" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="485" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Heat_Enable</definition>
        <argsstring></argsstring>
        <name>Heat_Enable</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="519" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="519" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1ad3d8902d8758d33ba2a536403243f47c" compoundref="_weather___balloon_8cpp" startline="1852" endline="1870">check_battery</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a322075e5a178d4b804a56490a0fc9737" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool set_clock</definition>
        <argsstring></argsstring>
        <name>set_clock</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="522" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="522" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1ab14d778dd0d52177eb147802a870639d" compoundref="_weather___balloon_8cpp" startline="1458" endline="1559">read_GPS</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool reset_flag</definition>
        <argsstring></argsstring>
        <name>reset_flag</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="524" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="524" bodyend="-1"/>
        <referencedby refid="_weather___balloon_8cpp_1a98a290ada01eb27fd2ff4564371566e5" compoundref="_weather___balloon_8cpp" startline="637" endline="681">ISR</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void beep_piezo</definition>
        <argsstring>(unsigned long, unsigned long, unsigned int)</argsstring>
        <name>beep_piezo</name>
        <param>
          <type>unsigned</type>
          <declname>long</declname>
          <defname>freq</defname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>long</declname>
          <defname>millisecs</defname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>int</declname>
          <defname>pin</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="52" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1432" bodyend="1454"/>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" compoundref="_weather___balloon_8cpp" startline="1235" endline="1250">location_alarm</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_GPS_NMEA</definition>
        <argsstring>()</argsstring>
        <name>configure_GPS_NMEA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="53" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1772" bodyend="1820"/>
        <references refid="_weather___balloon_8cpp_1a450249148bd85e8396ad71ce44a0e11a" compoundref="_weather___balloon_8cpp" startline="500">GPS_CONFIG_NMEA</references>
        <references refid="_weather___balloon_8cpp_1a83c4c9265bfb7ab061bf1313dfad3857" compoundref="_weather___balloon_8cpp" startline="1754" endline="1768">GPS_CRC</references>
        <references refid="_weather___balloon_8cpp_1af33afafa7f1cda9d36801855fda7def3" compoundref="_weather___balloon_8cpp" startline="495">GPS_END_1</references>
        <references refid="_weather___balloon_8cpp_1adc8803fa8bafb4b8793b13f3325aee70" compoundref="_weather___balloon_8cpp" startline="496">GPS_END_2</references>
        <references refid="_weather___balloon_8cpp_1ae54089afd7925e1d4d4599a9925ba7d4" compoundref="_weather___balloon_8cpp" startline="493">GPS_SBYTE_1</references>
        <references refid="_weather___balloon_8cpp_1a41c61b54b6c4e8df2ab8540312ea578f" compoundref="_weather___balloon_8cpp" startline="494">GPS_SBYTE_2</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_GPS_WAAS</definition>
        <argsstring>()</argsstring>
        <name>configure_GPS_WAAS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="54" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1822" bodyend="1844"/>
        <references refid="_weather___balloon_8cpp_1a335669658677baf0a51458e3055f97b0" compoundref="_weather___balloon_8cpp" startline="503">GPS_CONFIG_WAAS</references>
        <references refid="_weather___balloon_8cpp_1a83c4c9265bfb7ab061bf1313dfad3857" compoundref="_weather___balloon_8cpp" startline="1754" endline="1768">GPS_CRC</references>
        <references refid="_weather___balloon_8cpp_1af33afafa7f1cda9d36801855fda7def3" compoundref="_weather___balloon_8cpp" startline="495">GPS_END_1</references>
        <references refid="_weather___balloon_8cpp_1adc8803fa8bafb4b8793b13f3325aee70" compoundref="_weather___balloon_8cpp" startline="496">GPS_END_2</references>
        <references refid="_weather___balloon_8cpp_1ae54089afd7925e1d4d4599a9925ba7d4" compoundref="_weather___balloon_8cpp" startline="493">GPS_SBYTE_1</references>
        <references refid="_weather___balloon_8cpp_1a41c61b54b6c4e8df2ab8540312ea578f" compoundref="_weather___balloon_8cpp" startline="494">GPS_SBYTE_2</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a276e156004c668500daa7aaa9a770585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t find_sdcard_tail</definition>
        <argsstring>(const uint32_t, const uint32_t)</argsstring>
        <name>find_sdcard_tail</name>
        <param>
          <type>const uint32_t</type>
          <defname>first</defname>
        </param>
        <param>
          <type>const uint32_t</type>
          <defname>last</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="55" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2278" bodyend="2395"/>
        <references refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" compoundref="_weather___balloon_8cpp" startline="430">sd_data::buffer</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" compoundref="_weather___balloon_8cpp" startline="422">sd_data::current_block</references>
        <references refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" compoundref="_weather___balloon_8cpp" startline="290">dataLog</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="class_sd2_card_1ae2d1396ad30081b4201cd372358ef699" compoundref="_sd2_card_8cpp" startline="436" endline="500">Sd2Card::readData</references>
        <referencedby refid="_weather___balloon_8cpp_1aec2dcfe4cd6ca84e8df5730d179fdc6f" compoundref="_weather___balloon_8cpp" startline="946" endline="979">configure_sdcard</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void flash_landing</definition>
        <argsstring>(uint16_t)</argsstring>
        <name>flash_landing</name>
        <param>
          <type>uint16_t</type>
          <defname>time</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="56" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1422" bodyend="1430"/>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" compoundref="_weather___balloon_8cpp" startline="1235" endline="1250">location_alarm</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1abe49854f4db78d08b8cab487faefddef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t countof</definition>
        <argsstring>(T(&amp;array)[N])</argsstring>
        <name>countof</name>
        <param>
          <type>T(&amp;)</type>
          <declname>array</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="528" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="528" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a3d30b497ce4c43d95b30a95944f9d8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t sd_calc_crc</definition>
        <argsstring>(const uint8_t *src, const uint8_t block_size)</argsstring>
        <name>sd_calc_crc</name>
        <param>
          <type>const uint8_t *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const uint8_t</type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="536" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="536" bodyend="547"/>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <referencedby refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" compoundref="_weather___balloon_8cpp" startline="2413" endline="2650">log_data</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a450f53a446d117859c49aeaac6c31f9f" compoundref="_weather___balloon_8cpp" startline="2653" endline="2838">read_sdcard</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a3f8e34eb2b9d824174dced9eefeecf90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_TSL2561</definition>
        <argsstring>(void)</argsstring>
        <name>configure_TSL2561</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="556" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="556" bodyend="580"/>
        <references refid="class_adafruit___t_s_l2561___unified_1ac2781d263ae73533628d5844ca38b6de" compoundref="_adafruit___t_s_l2561___u_8cpp" startline="196" endline="216">Adafruit_TSL2561_Unified::begin</references>
        <references refid="class_adafruit___t_s_l2561___unified_1a9bb93fc9a1af24175c9838cdfe7b8904" compoundref="_adafruit___t_s_l2561___u_8cpp" startline="224" endline="227">Adafruit_TSL2561_Unified::enableAutoRange</references>
        <references refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec">data_struct::enabled</references>
        <references refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1">data_struct::found</references>
        <references refid="class_adafruit___t_s_l2561___unified_1a594636810e6e26dc025b7f1b7a16024f" compoundref="_adafruit___t_s_l2561___u_8cpp" startline="234" endline="249">Adafruit_TSL2561_Unified::setIntegrationTime</references>
        <references refid="_adafruit___t_s_l2561___u_8h_1a541f87fb512c1fd213e23c3a8b23264aac276f46523dbc7ea4a885cdda0826db7" compoundref="_adafruit___t_s_l2561___u_8h" startline="166">TSL2561_INTEGRATIONTIME_101MS</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1afe6035149a64d5f448fbda08e9d1b67f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ISR</definition>
        <argsstring>(PCINT1_vect)</argsstring>
        <name>ISR</name>
        <param>
          <type>PCINT1_vect</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="582" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="582" bodyend="610"/>
        <references refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc">geiger</references>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a9c4665742c6b6eb1f0bb9dde41f7cba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ISR</definition>
        <argsstring>(PCINT2_vect)</argsstring>
        <name>ISR</name>
        <param>
          <type>PCINT2_vect</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="612" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="612" bodyend="635"/>
        <references refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc">geiger</references>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a98a290ada01eb27fd2ff4564371566e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ISR</definition>
        <argsstring>(INT4_vect)</argsstring>
        <name>ISR</name>
        <param>
          <type>INT4_vect</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="637" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="637" bodyend="681"/>
        <references refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" compoundref="_weather___balloon_8cpp" startline="524">reset_flag</references>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a43905d6fb5c4d433a49f527fa6ab811f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ISR</definition>
        <argsstring>(WDT_vect)</argsstring>
        <name>ISR</name>
        <param>
          <type>WDT_vect</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="683" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="683" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a7a7c74cf298c3aefb3d55c6e9b926321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_button</definition>
        <argsstring>()</argsstring>
        <name>configure_button</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="688" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="688" bodyend="706"/>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ad38c713e780279c311e2e78a03b4f5bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_geiger</definition>
        <argsstring>()</argsstring>
        <name>configure_geiger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="708" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="708" bodyend="746"/>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool compare_buffers</definition>
        <argsstring>(uint8_t *first, uint8_t *second, uint16_t bytes)</argsstring>
        <name>compare_buffers</name>
        <param>
          <type>uint8_t *</type>
          <declname>first</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>second</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="748" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="748" bodyend="767"/>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <referencedby refid="_weather___balloon_8cpp_1a0493b2a2e791c613e271755e39c7ff02" compoundref="_weather___balloon_8cpp" startline="770" endline="864">configure_ds18b20</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a0493b2a2e791c613e271755e39c7ff02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_ds18b20</definition>
        <argsstring>()</argsstring>
        <name>configure_ds18b20</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="770" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="770" bodyend="864"/>
        <references refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" compoundref="_weather___balloon_8cpp" startline="748" endline="767">compare_buffers</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_weather___balloon_8cpp_1a2042d0bb2f483912475a0570f65887e9" compoundref="_weather___balloon_8cpp" startline="140">DS18B20_RESOLUTION</references>
        <references refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec">data_struct::enabled</references>
        <references refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1">data_struct::found</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374">temp_sensors</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a94cd393dc19bb016dfea24631d4a3615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_ms5607</definition>
        <argsstring>()</argsstring>
        <name>configure_ms5607</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="868" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="868" bodyend="881"/>
        <references refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec">data_struct::enabled</references>
        <references refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1">data_struct::found</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a2c2e98945e78daa792b87b30868c3907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_LSM9DS1</definition>
        <argsstring>()</argsstring>
        <name>configure_LSM9DS1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="884" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="884" bodyend="907"/>
        <references refid="structdevice_settings_1a2f43ac785e01fcbcfaf8436885f638ab" compoundref="_l_s_m9_d_s1___types_8h" startline="201">deviceSettings::agAddress</references>
        <references refid="class_l_s_m9_d_s1_1a8728e560c76bd120b3711af15a6ecbd6" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="142" endline="181">LSM9DS1::begin</references>
        <references refid="class_l_s_m9_d_s1_1a97939cb15fcb7e33abcd6d3a9230d943" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="326" endline="364">LSM9DS1::calibrate</references>
        <references refid="class_l_s_m9_d_s1_1afb45f0bcbcbeb15d4bd1a28821b24d14" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="366" endline="395">LSM9DS1::calibrateMag</references>
        <references refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" compoundref="_l_s_m9_d_s1___types_8h" startline="200">deviceSettings::commInterface</references>
        <references refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" compoundref="_l_s_m9_d_s1___types_8h" startline="242">IMUSettings::device</references>
        <references refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec">data_struct::enabled</references>
        <references refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1">data_struct::found</references>
        <references refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" compoundref="_l_s_m9_d_s1___types_8h" startline="32">IMU_MODE_I2C</references>
        <references refid="_weather___balloon_8cpp_1a733d92c87c7253b93ad4bf6a6ed54952" compoundref="_weather___balloon_8cpp" startline="147">LSM9DS1_AG</references>
        <references refid="_weather___balloon_8cpp_1a9bb94ac54f97758f53ae168206e48061" compoundref="_weather___balloon_8cpp" startline="146">LSM9DS1_M</references>
        <references refid="structdevice_settings_1aec4e1d3e3f38b4e3e0f74f1640e16faa" compoundref="_l_s_m9_d_s1___types_8h" startline="202">deviceSettings::mAddress</references>
        <references refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="48">LSM9DS1::settings</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1abb8700028b489f20622252823d383f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_sht31</definition>
        <argsstring>()</argsstring>
        <name>configure_sht31</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="909" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="909" bodyend="926"/>
        <references refid="class_adafruit___s_h_t31_1a104eb2dfd27a732420e1fc3755516690" compoundref="_adafruit___s_h_t31_8cpp" startline="24" endline="30">Adafruit_SHT31::begin</references>
        <references refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec">data_struct::enabled</references>
        <references refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1">data_struct::found</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ab21671796ffdb5448be7facdbae0a1fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_found</definition>
        <argsstring>()</argsstring>
        <name>print_found</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="928" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="928" bodyend="945"/>
        <references refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1">data_struct::found</references>
        <references refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374">temp_sensors</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1aec2dcfe4cd6ca84e8df5730d179fdc6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_sdcard</definition>
        <argsstring>()</argsstring>
        <name>configure_sdcard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="946" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="946" bodyend="979"/>
        <references refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" compoundref="_weather___balloon_8cpp" startline="418">sd_data::blocks</references>
        <references refid="class_sd2_card_1a862473431cc314238bfccdc531a70d3a" compoundref="_sd2_card_8cpp" startline="195" endline="213">Sd2Card::cardSize</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" compoundref="_weather___balloon_8cpp" startline="422">sd_data::current_block</references>
        <references refid="class_sd2_card_1adfa5b1a39875236dff591acbd560bfe7" compoundref="_sd2_card_8h" startline="169" endline="169">Sd2Card::errorCode</references>
        <references refid="_weather___balloon_8cpp_1a276e156004c668500daa7aaa9a770585" compoundref="_weather___balloon_8cpp" startline="2278" endline="2395">find_sdcard_tail</references>
        <references refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" compoundref="_weather___balloon_8cpp" startline="92">GREEN_LED</references>
        <references refid="class_sd2_card_1afaec9a22060626b02c07a09eff2e9113" compoundref="_sd2_card_8h" startline="176" endline="178">Sd2Card::init</references>
        <references refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" compoundref="_weather___balloon_8cpp" startline="94">RED_LED</references>
        <references refid="_sd2_card_8h_1abf126d9da3318e2709bbc3f2ab3cb3d1" compoundref="_sd2_card_8h" startline="31">SPI_HALF_SPEED</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a24d559ff8c4c36c0c5b27749ec0f1db7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_PID</definition>
        <argsstring>()</argsstring>
        <name>configure_PID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="981" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="981" bodyend="998"/>
        <references refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" compoundref="_p_i_d__v1_8h" startline="13">MANUAL</references>
        <references refid="_weather___balloon_8cpp_1a6f6f49388c74bb24a8f63771bd997d97" compoundref="_weather___balloon_8cpp" startline="124">SAMPLE_TIME</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void piezo_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>piezo_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1000" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1000" bodyend="1010"/>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" compoundref="_weather___balloon_8cpp" startline="1235" endline="1250">location_alarm</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1aa1ddd1a74edee558cd1f5bbf58c32eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tsl2561_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>tsl2561_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1012" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1012" bodyend="1023"/>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1aa705df77518e8cb907ba58c825af7531" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ms5607_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>ms5607_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1025" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1025" bodyend="1036"/>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a19d08a06df1dca8e8a9be91e9de13f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sht31_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>sht31_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1038" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1038" bodyend="1050"/>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ae30e39a79eefe72511818815ea7276eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geiger_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>geiger_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1052" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1052" bodyend="1060"/>
        <references refid="_weather___balloon_8cpp_1a62875728932bfc6752ba857df3fdb182" compoundref="_weather___balloon_8cpp" startline="115">GEIGER_PWR_PIN</references>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1aeea7cb9977724d0eff70fb24d03ef572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sd_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>sd_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1062" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1062" bodyend="1072"/>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a4535edf461b17f1e616af9db0447dc01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gps_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>gps_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1074" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1074" bodyend="1084"/>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1af2d24e60ddd98c1e2d7ebb921f6d7f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ds18b20_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>ds18b20_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1086" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1086" bodyend="1096"/>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a4e9c8d405702380dcc2cb85707283b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dof_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>dof_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1098" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1098" bodyend="1108"/>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void led_power</definition>
        <argsstring>(bool power)</argsstring>
        <name>led_power</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1110" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1110" bodyend="1123"/>
        <references refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" compoundref="_weather___balloon_8cpp" startline="92">GREEN_LED</references>
        <references refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" compoundref="_weather___balloon_8cpp" startline="94">RED_LED</references>
        <references refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" compoundref="_weather___balloon_8cpp" startline="93">YELLOW_LED</references>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a381ac8dbd73c0461a2bc7169fbc63e61" compoundref="_weather___balloon_8cpp" startline="1252" endline="1272">count_down_led</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void power_sensors</definition>
        <argsstring>(bool power)</argsstring>
        <name>power_sensors</name>
        <param>
          <type>bool</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1126" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1126" bodyend="1157"/>
        <references refid="_weather___balloon_8cpp_1a4e9c8d405702380dcc2cb85707283b71" compoundref="_weather___balloon_8cpp" startline="1098" endline="1108">dof_power</references>
        <references refid="_weather___balloon_8cpp_1af2d24e60ddd98c1e2d7ebb921f6d7f46" compoundref="_weather___balloon_8cpp" startline="1086" endline="1096">ds18b20_power</references>
        <references refid="_weather___balloon_8cpp_1ae30e39a79eefe72511818815ea7276eb" compoundref="_weather___balloon_8cpp" startline="1052" endline="1060">geiger_power</references>
        <references refid="_weather___balloon_8cpp_1a62875728932bfc6752ba857df3fdb182" compoundref="_weather___balloon_8cpp" startline="115">GEIGER_PWR_PIN</references>
        <references refid="_weather___balloon_8cpp_1afa22ab511c2e1ff0c2b6d670fb54b907" compoundref="_weather___balloon_8cpp" startline="109">GPS_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1a4535edf461b17f1e616af9db0447dc01" compoundref="_weather___balloon_8cpp" startline="1074" endline="1084">gps_power</references>
        <references refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" compoundref="_weather___balloon_8cpp" startline="1110" endline="1123">led_power</references>
        <references refid="_weather___balloon_8cpp_1adc5a223dccf8bbdeb83b1e98c1a5e068" compoundref="_weather___balloon_8cpp" startline="108">MAIN_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1aa705df77518e8cb907ba58c825af7531" compoundref="_weather___balloon_8cpp" startline="1025" endline="1036">ms5607_power</references>
        <references refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" compoundref="_weather___balloon_8cpp" startline="1000" endline="1010">piezo_power</references>
        <references refid="_weather___balloon_8cpp_1aeea7cb9977724d0eff70fb24d03ef572" compoundref="_weather___balloon_8cpp" startline="1062" endline="1072">sd_power</references>
        <references refid="_weather___balloon_8cpp_1a126d5b2f190e7e95a7b8877c920a2258" compoundref="_weather___balloon_8cpp" startline="113">SHT31_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1a19d08a06df1dca8e8a9be91e9de13f33" compoundref="_weather___balloon_8cpp" startline="1038" endline="1050">sht31_power</references>
        <references refid="_weather___balloon_8cpp_1a9bd50323652c3e5de42af2a1d65e7930" compoundref="_weather___balloon_8cpp" startline="111">TSL2561_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1aa1ddd1a74edee558cd1f5bbf58c32eba" compoundref="_weather___balloon_8cpp" startline="1012" endline="1023">tsl2561_power</references>
        <references refid="_weather___balloon_8cpp_1a86a504b275408486d19f32e6923e6c10" compoundref="_weather___balloon_8cpp" startline="110">UV_HEATER_PIN</references>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a905910daced665e99b1c14fa51ef9938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void watchdog_sleep</definition>
        <argsstring>()</argsstring>
        <name>watchdog_sleep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1161" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1161" bodyend="1181"/>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" compoundref="_weather___balloon_8cpp" startline="1235" endline="1250">location_alarm</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ac41bb5082e170a29d9fac793b99d2888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void watchdog_reset_only</definition>
        <argsstring>()</argsstring>
        <name>watchdog_reset_only</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1183" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1183" bodyend="1204"/>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a822a13dcab2c88f65ce6db0a3039596d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void disable_peripherals</definition>
        <argsstring>()</argsstring>
        <name>disable_peripherals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1206" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1206" bodyend="1217"/>
        <referencedby refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" compoundref="_weather___balloon_8cpp" startline="1235" endline="1250">location_alarm</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a38dae68379e12eee7b465eac207d9e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void enter_sleep</definition>
        <argsstring>(void)</argsstring>
        <name>enter_sleep</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1219" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1219" bodyend="1234"/>
        <referencedby refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" compoundref="_weather___balloon_8cpp" startline="1235" endline="1250">location_alarm</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void location_alarm</definition>
        <argsstring>()</argsstring>
        <name>location_alarm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1235" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1235" bodyend="1250"/>
        <references refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" compoundref="_weather___balloon_8cpp" startline="1432" endline="1454">beep_piezo</references>
        <references refid="_weather___balloon_8cpp_1a822a13dcab2c88f65ce6db0a3039596d" compoundref="_weather___balloon_8cpp" startline="1206" endline="1217">disable_peripherals</references>
        <references refid="_weather___balloon_8cpp_1a38dae68379e12eee7b465eac207d9e27" compoundref="_weather___balloon_8cpp" startline="1219" endline="1234">enter_sleep</references>
        <references refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" compoundref="_weather___balloon_8cpp" startline="1422" endline="1430">flash_landing</references>
        <references refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" compoundref="_weather___balloon_8cpp" startline="90">PIEZO_PIN</references>
        <references refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" compoundref="_weather___balloon_8cpp" startline="1000" endline="1010">piezo_power</references>
        <references refid="_weather___balloon_8cpp_1a905910daced665e99b1c14fa51ef9938" compoundref="_weather___balloon_8cpp" startline="1161" endline="1181">watchdog_sleep</references>
        <referencedby refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a381ac8dbd73c0461a2bc7169fbc63e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void count_down_led</definition>
        <argsstring>()</argsstring>
        <name>count_down_led</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1252" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1252" bodyend="1272"/>
        <references refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" compoundref="_weather___balloon_8cpp" startline="92">GREEN_LED</references>
        <references refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" compoundref="_weather___balloon_8cpp" startline="1110" endline="1123">led_power</references>
        <references refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" compoundref="_weather___balloon_8cpp" startline="94">RED_LED</references>
        <references refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" compoundref="_weather___balloon_8cpp" startline="93">YELLOW_LED</references>
        <referencedby refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_weather___balloon_8cpp" startline="1274" endline="1420">setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1274" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1274" bodyend="1420"/>
        <references refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" compoundref="_weather___balloon_8cpp" startline="1432" endline="1454">beep_piezo</references>
        <references refid="class_m_a_x17043_1a7f434b44531c65f4a3b31c4f5ebcb887" compoundref="_spark_fun_m_a_x17043_8cpp" startline="61" endline="65">MAX17043::begin</references>
        <references refid="class_d_s3231_1a1b6b23f76ae2a8c27f78e946608467ae" compoundref="_d_s3231_8cpp" startline="33" endline="49">DS3231::begin</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_weather___balloon_8cpp_1a7a7c74cf298c3aefb3d55c6e9b926321" compoundref="_weather___balloon_8cpp" startline="688" endline="706">configure_button</references>
        <references refid="_weather___balloon_8cpp_1a0493b2a2e791c613e271755e39c7ff02" compoundref="_weather___balloon_8cpp" startline="770" endline="864">configure_ds18b20</references>
        <references refid="_weather___balloon_8cpp_1ad38c713e780279c311e2e78a03b4f5bf" compoundref="_weather___balloon_8cpp" startline="708" endline="746">configure_geiger</references>
        <references refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" compoundref="_weather___balloon_8cpp" startline="1772" endline="1820">configure_GPS_NMEA</references>
        <references refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" compoundref="_weather___balloon_8cpp" startline="1822" endline="1844">configure_GPS_WAAS</references>
        <references refid="_weather___balloon_8cpp_1a2c2e98945e78daa792b87b30868c3907" compoundref="_weather___balloon_8cpp" startline="884" endline="907">configure_LSM9DS1</references>
        <references refid="_weather___balloon_8cpp_1a94cd393dc19bb016dfea24631d4a3615" compoundref="_weather___balloon_8cpp" startline="868" endline="881">configure_ms5607</references>
        <references refid="_weather___balloon_8cpp_1a24d559ff8c4c36c0c5b27749ec0f1db7" compoundref="_weather___balloon_8cpp" startline="981" endline="998">configure_PID</references>
        <references refid="_weather___balloon_8cpp_1aec2dcfe4cd6ca84e8df5730d179fdc6f" compoundref="_weather___balloon_8cpp" startline="946" endline="979">configure_sdcard</references>
        <references refid="_weather___balloon_8cpp_1abb8700028b489f20622252823d383f2d" compoundref="_weather___balloon_8cpp" startline="909" endline="926">configure_sht31</references>
        <references refid="_weather___balloon_8cpp_1a3f8e34eb2b9d824174dced9eefeecf90" compoundref="_weather___balloon_8cpp" startline="556" endline="580">configure_TSL2561</references>
        <references refid="_weather___balloon_8cpp_1a381ac8dbd73c0461a2bc7169fbc63e61" compoundref="_weather___balloon_8cpp" startline="1252" endline="1272">count_down_led</references>
        <references refid="_weather___balloon_8cpp_1af913d90b1b4908442e095aaba6f05119">default_config</references>
        <references refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" compoundref="_weather___balloon_8cpp" startline="1422" endline="1430">flash_landing</references>
        <references refid="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" compoundref="_weather___balloon_8cpp" startline="519">Heat_Enable</references>
        <references refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" compoundref="_weather___balloon_8cpp" startline="1110" endline="1123">led_power</references>
        <references refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" compoundref="_weather___balloon_8cpp" startline="1235" endline="1250">location_alarm</references>
        <references refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" compoundref="_weather___balloon_8cpp" startline="90">PIEZO_PIN</references>
        <references refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" compoundref="_weather___balloon_8cpp" startline="1000" endline="1010">piezo_power</references>
        <references refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</references>
        <references refid="_weather___balloon_8cpp_1ab21671796ffdb5448be7facdbae0a1fa" compoundref="_weather___balloon_8cpp" startline="928" endline="945">print_found</references>
        <references refid="class_m_a_x17043_1a853dbf7908a1c4a37405050ec5e9c9e6" compoundref="_spark_fun_m_a_x17043_8cpp" startline="67" endline="76">MAX17043::quickStart</references>
        <references refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" compoundref="_weather___balloon_8cpp" startline="524">reset_flag</references>
        <references refid="_weather___balloon_8cpp_1aae0736ba082f8ff448826f4b1bad56c0" compoundref="_weather___balloon_8cpp" startline="84">UV_PIN</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <references refid="_weather___balloon_8cpp_1ac41bb5082e170a29d9fac793b99d2888" compoundref="_weather___balloon_8cpp" startline="1183" endline="1204">watchdog_reset_only</references>
        <references refid="_weather___balloon_8cpp_1a905910daced665e99b1c14fa51ef9938" compoundref="_weather___balloon_8cpp" startline="1161" endline="1181">watchdog_sleep</references>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ab14d778dd0d52177eb147802a870639d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void read_GPS</definition>
        <argsstring>()</argsstring>
        <name>read_GPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1458" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1458" bodyend="1559"/>
        <references refid="struct_tiny_g_p_s_date_1a7b92ac9058dbde1770eb52ce5da890c1" compoundref="_tiny_g_p_s_09_09_8h" startline="83" endline="83">TinyGPSDate::age</references>
        <references refid="struct_tiny_g_p_s_time_1a22b59e1d4b22435baa2a4446981f2dce" compoundref="_tiny_g_p_s_09_09_8h" startline="107" endline="107">TinyGPSTime::age</references>
        <references refid="struct_tiny_g_p_s_decimal_1ab80191a3e02c92ad3f674b5df2ab752f" compoundref="_tiny_g_p_s_09_09_8h" startline="132" endline="132">TinyGPSDecimal::age</references>
        <references refid="class_tiny_g_p_s_plus_1a0b3451a4ee75e5880ffd88c3038eacf8" compoundref="_tiny_g_p_s_09_09_8h" startline="226">TinyGPSPlus::altitude</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="class_tiny_g_p_s_plus_1ad7800d3decbe58e355f5229bba231868" compoundref="_tiny_g_p_s_09_09_8h" startline="225">TinyGPSPlus::course</references>
        <references refid="class_tiny_g_p_s_plus_1a83a70812b432d7f51c7c735bfe7be0f0" compoundref="_tiny_g_p_s_09_09_8h" startline="222">TinyGPSPlus::date</references>
        <references refid="struct_tiny_g_p_s_date_1ae8cc5f80c49e328f792d168a44062000" compoundref="_tiny_g_p_s_09_09_8cpp" startline="404" endline="408">TinyGPSDate::day</references>
        <references refid="struct_tiny_g_p_s_course_1a76dc8ae6c2fe5ead9b44c8d53a3272ca" compoundref="_tiny_g_p_s_09_09_8h" startline="176" endline="176">TinyGPSCourse::deg</references>
        <references refid="class_tiny_g_p_s_plus_1ad7b78320b7e4967df17c6a27008a5154" compoundref="_tiny_g_p_s_09_09_8cpp" startline="54" endline="96">TinyGPSPlus::encode</references>
        <references refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d">data_struct::gps</references>
        <references refid="class_tiny_g_p_s_plus_1a3a21b3ae7085bb278b35d703bf135632" compoundref="_tiny_g_p_s_09_09_8h" startline="228">TinyGPSPlus::hdop</references>
        <references refid="struct_tiny_g_p_s_time_1a37fdb629b6ed0e31134214c7d07df2b1" compoundref="_tiny_g_p_s_09_09_8cpp" startline="410" endline="414">TinyGPSTime::hour</references>
        <references refid="struct_tiny_g_p_s_location_1a783c2898915440f51a6df233aba51923" compoundref="_tiny_g_p_s_09_09_8h" startline="57" endline="57">TinyGPSLocation::isValid</references>
        <references refid="struct_tiny_g_p_s_date_1a0ef145848ab03e4e9db0e2cf3a4c42cd" compoundref="_tiny_g_p_s_09_09_8h" startline="81" endline="81">TinyGPSDate::isValid</references>
        <references refid="struct_tiny_g_p_s_time_1a85c38acaf804aecefc3f0358bf93d86a" compoundref="_tiny_g_p_s_09_09_8h" startline="105" endline="105">TinyGPSTime::isValid</references>
        <references refid="struct_tiny_g_p_s_decimal_1a2a1d868525e903eb193b7a36cdd76984" compoundref="_tiny_g_p_s_09_09_8h" startline="130" endline="130">TinyGPSDecimal::isValid</references>
        <references refid="struct_tiny_g_p_s_integer_1aad411b5eb6cc16774ff0ff8d275df2fa" compoundref="_tiny_g_p_s_09_09_8h" startline="150" endline="150">TinyGPSInteger::isValid</references>
        <references refid="class_tiny_g_p_s_custom_1a06fad8448c014424bf96ed379b55da21" compoundref="_tiny_g_p_s_09_09_8h" startline="196" endline="196">TinyGPSCustom::isValid</references>
        <references refid="struct_tiny_g_p_s_location_1a86c3acea4f317b427eebb667e4d05a49" compoundref="_tiny_g_p_s_09_09_8cpp" startline="353" endline="358">TinyGPSLocation::lat</references>
        <references refid="struct_tiny_g_p_s_location_1a544e9009a5580b2fd5466821a5e5b782" compoundref="_tiny_g_p_s_09_09_8cpp" startline="360" endline="365">TinyGPSLocation::lng</references>
        <references refid="class_tiny_g_p_s_plus_1a886255f412f8e01f84e5104d36315fb3" compoundref="_tiny_g_p_s_09_09_8h" startline="221">TinyGPSPlus::location</references>
        <references refid="struct_tiny_g_p_s_altitude_1a5a39d145bb1778814007206c765189f7" compoundref="_tiny_g_p_s_09_09_8h" startline="181" endline="181">TinyGPSAltitude::meters</references>
        <references refid="struct_tiny_g_p_s_time_1aef83c20c14d404219299da2d7e35cdce" compoundref="_tiny_g_p_s_09_09_8cpp" startline="416" endline="420">TinyGPSTime::minute</references>
        <references refid="struct_tiny_g_p_s_date_1a6f3c5b4e72ef28b010f94ac9016315f3" compoundref="_tiny_g_p_s_09_09_8cpp" startline="398" endline="402">TinyGPSDate::month</references>
        <references refid="struct_tiny_g_p_s_speed_1aacee536241e810cdf4ba7846d6c202cb" compoundref="_tiny_g_p_s_09_09_8h" startline="170" endline="170">TinyGPSSpeed::mps</references>
        <references refid="class_tiny_g_p_s_plus_1a5fb47066d1d03f4bb5853529053aab48" compoundref="_tiny_g_p_s_09_09_8h" startline="227">TinyGPSPlus::satellites</references>
        <references refid="struct_tiny_g_p_s_time_1a729cab36ced07eb5607503663fbe33e8" compoundref="_tiny_g_p_s_09_09_8cpp" startline="422" endline="426">TinyGPSTime::second</references>
        <references refid="_weather___balloon_8cpp_1a322075e5a178d4b804a56490a0fc9737" compoundref="_weather___balloon_8cpp" startline="522">set_clock</references>
        <references refid="class_d_s3231_1a15eb3576feaa3535415e9b82367c344c" compoundref="_d_s3231_8cpp" startline="51" endline="86">DS3231::setDateTime</references>
        <references refid="class_tiny_g_p_s_plus_1aa085c3e72a399a829dd92af52b373404" compoundref="_tiny_g_p_s_09_09_8h" startline="224">TinyGPSPlus::speed</references>
        <references refid="class_tiny_g_p_s_plus_1a377c975527fa24b45fb86356505eb134" compoundref="_tiny_g_p_s_09_09_8h" startline="223">TinyGPSPlus::time</references>
        <references refid="struct_tiny_g_p_s_date_1a718150ae16f68afa9ae81f9d1b3ce3f4" compoundref="_tiny_g_p_s_09_09_8h" startline="85" endline="85">TinyGPSDate::value</references>
        <references refid="struct_tiny_g_p_s_time_1afcdb632fee9d144b1414c9d7b95719f1" compoundref="_tiny_g_p_s_09_09_8h" startline="109" endline="109">TinyGPSTime::value</references>
        <references refid="struct_tiny_g_p_s_decimal_1ac3ce80976e5d8456e9f211b910a6cb19" compoundref="_tiny_g_p_s_09_09_8h" startline="133" endline="133">TinyGPSDecimal::value</references>
        <references refid="struct_tiny_g_p_s_integer_1a67de7e76d61dbd25eb32f701d8ce867b" compoundref="_tiny_g_p_s_09_09_8h" startline="153" endline="153">TinyGPSInteger::value</references>
        <references refid="class_tiny_g_p_s_custom_1ac5ad40a3d9b6fe386b2309f972566674" compoundref="_tiny_g_p_s_09_09_8h" startline="198" endline="198">TinyGPSCustom::value</references>
        <references refid="_weather___balloon_8cpp_1acaaa1b97759f106aaf5c83f39c17c58b">vdop</references>
        <references refid="struct_tiny_g_p_s_date_1ae2cc914fec377b429d99f01204f50d60" compoundref="_tiny_g_p_s_09_09_8cpp" startline="391" endline="396">TinyGPSDate::year</references>
        <references refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" compoundref="_weather___balloon_8cpp" startline="93">YELLOW_LED</references>
        <referencedby refid="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" compoundref="_weather___balloon_8cpp" startline="1596" endline="1751">readSensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a4d230d8f4d47ce65d33e15a1dc1dec76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void printAttitude</definition>
        <argsstring>(float ax, float ay, float az, float mx, float my, float mz)</argsstring>
        <name>printAttitude</name>
        <param>
          <type>float</type>
          <declname>ax</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ay</declname>
        </param>
        <param>
          <type>float</type>
          <declname>az</declname>
        </param>
        <param>
          <type>float</type>
          <declname>mx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>my</declname>
        </param>
        <param>
          <type>float</type>
          <declname>mz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1566" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1566" bodyend="1593"/>
        <references refid="_weather___balloon_8cpp_1ad337b69f79bb731012571f96b472df45" compoundref="_weather___balloon_8cpp" startline="153">DECLINATION</references>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void readSensors</definition>
        <argsstring>()</argsstring>
        <name>readSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1596" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1596" bodyend="1751"/>
        <references refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933">data_struct::accel</references>
        <references refid="class_l_s_m9_d_s1_1adac13514d176cfb54aed8cda9a056335" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="56">LSM9DS1::ax</references>
        <references refid="class_l_s_m9_d_s1_1a978a357dedfa574d6e0fad33ad71e23f" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="56">LSM9DS1::ay</references>
        <references refid="class_l_s_m9_d_s1_1aa631c8a90b90130b5be147dd4fae0841" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="56">LSM9DS1::az</references>
        <references refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908">data_struct::battery</references>
        <references refid="class_l_s_m9_d_s1_1a54e2a7888b67b47cf0dd986c5b91a3c5" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="592" endline="596">LSM9DS1::calcAccel</references>
        <references refid="class_l_s_m9_d_s1_1a76707323565bc4170ea8e27a932c95e4" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="586" endline="590">LSM9DS1::calcGyro</references>
        <references refid="class_l_s_m9_d_s1_1a7d0b0740497b1a10cd3e46a282a143ec" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="598" endline="602">LSM9DS1::calcMag</references>
        <references refid="class_adafruit___t_s_l2561___unified_1a5059ebabcbd037d53459ec9f3c6cdc4b" compoundref="_adafruit___t_s_l2561___u_8cpp" startline="367" endline="474">Adafruit_TSL2561_Unified::calculateLux</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="class_d_s3231_1ad398fd513aae24b219d19574e20da550" compoundref="_d_s3231_8cpp" startline="525" endline="536">DS3231::forceConversion</references>
        <references refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1">data_struct::found</references>
        <references refid="class_d_s3231_1adc4bc3149377fef827a7e504264fbd40" compoundref="_d_s3231_8cpp" startline="384" endline="421">DS3231::getDateTime</references>
        <references refid="class_adafruit___t_s_l2561___unified_1a23378e7c4792b8b8c721d5a4def960fb" compoundref="_adafruit___t_s_l2561___u_8cpp" startline="279" endline="359">Adafruit_TSL2561_Unified::getLuminosity</references>
        <references refid="class_m_a_x17043_1a9567ba1006631e2d262a01ced542523f" compoundref="_spark_fun_m_a_x17043_8cpp" startline="88" endline="97">MAX17043::getSOC</references>
        <references refid="class_m_a_x17043_1afcba3e7ee660335c78995d337cab1678" compoundref="_spark_fun_m_a_x17043_8cpp" startline="78" endline="86">MAX17043::getVoltage</references>
        <references refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d">data_struct::gps</references>
        <references refid="class_l_s_m9_d_s1_1abf02b4544b5d529036adbac02e7b9f02" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="55">LSM9DS1::gx</references>
        <references refid="class_l_s_m9_d_s1_1a0c351823fd094ff24ff245dd951cf783" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="55">LSM9DS1::gy</references>
        <references refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23">data_struct::gyro</references>
        <references refid="class_l_s_m9_d_s1_1ad4d0f0585398ff917afcba1b4a73e519" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="55">LSM9DS1::gz</references>
        <references refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe">data_struct::mag</references>
        <references refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1">data_struct::ms5607</references>
        <references refid="class_l_s_m9_d_s1_1a0e68eb9e44969070b6d84a93ba252f71" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="57">LSM9DS1::mx</references>
        <references refid="class_l_s_m9_d_s1_1a773f80f9b7cdf8375c84a4209895d732" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="57">LSM9DS1::my</references>
        <references refid="class_l_s_m9_d_s1_1aafe23993500ece9efd161e564787dce2" compoundref="_spark_fun_l_s_m9_d_s1_8h" startline="57">LSM9DS1::mz</references>
        <references refid="_weather___balloon_8cpp_1ab14d778dd0d52177eb147802a870639d" compoundref="_weather___balloon_8cpp" startline="1458" endline="1559">read_GPS</references>
        <references refid="class_l_s_m9_d_s1_1a9953684a1ff652a7d3a4d91e72bccaa1" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="505" endline="518">LSM9DS1::readAccel</references>
        <references refid="class_l_s_m9_d_s1_1a56e9710cb538a4c7f7ab94c2ca256ce9" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="556" endline="569">LSM9DS1::readGyro</references>
        <references refid="class_adafruit___s_h_t31_1a2b522bec65225d5c2aadfccd31bb91e0" compoundref="_adafruit___s_h_t31_8cpp" startline="62" endline="66">Adafruit_SHT31::readHumidity</references>
        <references refid="class_l_s_m9_d_s1_1ae127cf75aa5f3c5421e49363795dcd38" compoundref="_spark_fun_l_s_m9_d_s1_8cpp" startline="533" endline="540">LSM9DS1::readMag</references>
        <references refid="class_adafruit___s_h_t31_1a3b518218705509eb0ab35050bf79f00a" compoundref="_adafruit___s_h_t31_8cpp" startline="55" endline="59">Adafruit_SHT31::readTemperature</references>
        <references refid="class_d_s3231_1a82074e0d3f0a4a646fc14f1afcb80448" compoundref="_d_s3231_8cpp" startline="538" endline="563">DS3231::readTemperature</references>
        <references refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a">data_struct::sht31</references>
        <references refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3">data_struct::temp</references>
        <references refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374">temp_sensors</references>
        <references refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72">data_struct::tsl</references>
        <references refid="structdata__struct_1a37f7a481de32f77f428f03c07d60090e" compoundref="_weather___balloon_8cpp" startline="284">data_struct::unix_time</references>
        <references refid="struct_r_t_c_date_time_1af46df69448c5456b54e9acae7629efa8" compoundref="_d_s3231_8h" startline="50">RTCDateTime::unixtime</references>
        <references refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" compoundref="_weather___balloon_8cpp" startline="206">data_struct::uv</references>
        <references refid="_weather___balloon_8cpp_1aae0736ba082f8ff448826f4b1bad56c0" compoundref="_weather___balloon_8cpp" startline="84">UV_PIN</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a83c4c9265bfb7ab061bf1313dfad3857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t GPS_CRC</definition>
        <argsstring>(uint8_t *payload, uint16_t length)</argsstring>
        <name>GPS_CRC</name>
        <param>
          <type>uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1754" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1754" bodyend="1768"/>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <referencedby refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" compoundref="_weather___balloon_8cpp" startline="1772" endline="1820">configure_GPS_NMEA</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" compoundref="_weather___balloon_8cpp" startline="1822" endline="1844">configure_GPS_WAAS</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a337f8319327997530d76011aac7bfa15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adjust_heaters</definition>
        <argsstring>()</argsstring>
        <name>adjust_heaters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1846" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1846" bodyend="1849"/>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ad3d8902d8758d33ba2a536403243f47c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_battery</definition>
        <argsstring>()</argsstring>
        <name>check_battery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1852" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1852" bodyend="1870"/>
        <references refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908">data_struct::battery</references>
        <references refid="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" compoundref="_weather___balloon_8cpp" startline="519">Heat_Enable</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void heater_control</definition>
        <argsstring>()</argsstring>
        <name>heater_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="1872" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="1872" bodyend="2088"/>
        <references refid="_p_i_d__v1_8h_1a3851a1a8ddec9eacd2e30a8a19bb8cc8" compoundref="_p_i_d__v1_8h" startline="12">AUTOMATIC</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_weather___balloon_8cpp_1aad36752a9ec8083497dc972e71dade95" compoundref="_weather___balloon_8cpp" startline="112">CUSTOM_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" compoundref="_weather___balloon_8cpp" startline="490">custom_vPID</references>
        <references refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1">data_struct::found</references>
        <references refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d">data_struct::gps</references>
        <references refid="_weather___balloon_8cpp_1afa22ab511c2e1ff0c2b6d670fb54b907" compoundref="_weather___balloon_8cpp" startline="109">GPS_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" compoundref="_weather___balloon_8cpp" startline="486">gps_vPID</references>
        <references refid="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" compoundref="_weather___balloon_8cpp" startline="519">Heat_Enable</references>
        <references refid="_weather___balloon_8cpp_1a025e0782db77609f8bde58b6e2b07405" compoundref="_weather___balloon_8cpp" startline="119">hyster</references>
        <references refid="_weather___balloon_8cpp_1adc5a223dccf8bbdeb83b1e98c1a5e068" compoundref="_weather___balloon_8cpp" startline="108">MAIN_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" compoundref="_weather___balloon_8cpp" startline="485">main_vPID</references>
        <references refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" compoundref="_p_i_d__v1_8h" startline="13">MANUAL</references>
        <references refid="_weather___balloon_8cpp_1a7b0dae08d630995fb336f20fca25b324" compoundref="_weather___balloon_8cpp" startline="122">over_ambient</references>
        <references refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a">data_struct::sht31</references>
        <references refid="_weather___balloon_8cpp_1a126d5b2f190e7e95a7b8877c920a2258" compoundref="_weather___balloon_8cpp" startline="113">SHT31_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" compoundref="_weather___balloon_8cpp" startline="489">sht_vPID</references>
        <references refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3">data_struct::temp</references>
        <references refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374">temp_sensors</references>
        <references refid="_weather___balloon_8cpp_1a9bd50323652c3e5de42af2a1d65e7930" compoundref="_weather___balloon_8cpp" startline="111">TSL2561_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" compoundref="_weather___balloon_8cpp" startline="488">tsl_vPID</references>
        <references refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" compoundref="_weather___balloon_8cpp" startline="206">data_struct::uv</references>
        <references refid="_weather___balloon_8cpp_1a86a504b275408486d19f32e6923e6c10" compoundref="_weather___balloon_8cpp" startline="110">UV_HEATER_PIN</references>
        <references refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" compoundref="_weather___balloon_8cpp" startline="487">uv_vPID</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a8644e7f4d35c348e0292bc7062c5147c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_sensors</definition>
        <argsstring>()</argsstring>
        <name>print_sensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2091" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2091" bodyend="2221"/>
        <references refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933">data_struct::accel</references>
        <references refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908">data_struct::battery</references>
        <references refid="struct_r_t_c_date_time_1aea80bfd1209e6e459c70ea39bc248407" compoundref="_d_s3231_8h" startline="45">RTCDateTime::day</references>
        <references refid="class_tiny_g_p_s_plus_1a57dd7a4430d58f784e967ee2d76e574f" compoundref="_tiny_g_p_s_09_09_8h" startline="241" endline="241">TinyGPSPlus::failedChecksum</references>
        <references refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c">data_struct::geiger</references>
        <references refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d">data_struct::gps</references>
        <references refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23">data_struct::gyro</references>
        <references refid="struct_r_t_c_date_time_1aaf23cb6337a6c0cb3bb69ad815f9c1b1" compoundref="_d_s3231_8h" startline="46">RTCDateTime::hour</references>
        <references refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe">data_struct::mag</references>
        <references refid="struct_r_t_c_date_time_1a2e9c4e2b54185ec5bb7f328732bc1c63" compoundref="_d_s3231_8h" startline="47">RTCDateTime::minute</references>
        <references refid="struct_r_t_c_date_time_1a434dc70ef64a1e99201f3765607e8afa" compoundref="_d_s3231_8h" startline="44">RTCDateTime::month</references>
        <references refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1">data_struct::ms5607</references>
        <references refid="struct_r_t_c_date_time_1acf01c0fbd1d95fe33238674641f40027" compoundref="_d_s3231_8h" startline="48">RTCDateTime::second</references>
        <references refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a">data_struct::sht31</references>
        <references refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3">data_struct::temp</references>
        <references refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72">data_struct::tsl</references>
        <references refid="struct_r_t_c_date_time_1af46df69448c5456b54e9acae7629efa8" compoundref="_d_s3231_8h" startline="50">RTCDateTime::unixtime</references>
        <references refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" compoundref="_weather___balloon_8cpp" startline="206">data_struct::uv</references>
        <references refid="struct_r_t_c_date_time_1a265de5469447ed7581fec4d3c0c5814d" compoundref="_d_s3231_8h" startline="43">RTCDateTime::year</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a22feff51a4b8144a2264bc812eedaddb" compoundref="_weather___balloon_8cpp" startline="2397" endline="2410">test_logging</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1af7b5da3129c5c87915394c2b8394aafe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void power_control</definition>
        <argsstring>()</argsstring>
        <name>power_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2223" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2223" bodyend="2226"/>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1acbeafc32c286c932b7f4e012cf3ef829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset_sdcard</definition>
        <argsstring>()</argsstring>
        <name>reset_sdcard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2228" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2228" bodyend="2231"/>
        <referencedby refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" compoundref="_weather___balloon_8cpp" startline="2413" endline="2650">log_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a507cc28668dfd87892b99466e32b4b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t EEPROM_read</definition>
        <argsstring>(uint16_t uiAddress)</argsstring>
        <name>EEPROM_read</name>
        <param>
          <type>uint16_t</type>
          <declname>uiAddress</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2233" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2233" bodyend="2244"/>
        <referencedby refid="_weather___balloon_8cpp_1a36234eb6bc49c0c10ed75b5fddadc4da" compoundref="_weather___balloon_8cpp" startline="2247" endline="2268">EEPROM_update</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a36234eb6bc49c0c10ed75b5fddadc4da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EEPROM_update</definition>
        <argsstring>(uint16_t uiAddress, uint8_t ucData)</argsstring>
        <name>EEPROM_update</name>
        <param>
          <type>uint16_t</type>
          <declname>uiAddress</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>ucData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2247" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2247" bodyend="2268"/>
        <references refid="_weather___balloon_8cpp_1a507cc28668dfd87892b99466e32b4b0b" compoundref="_weather___balloon_8cpp" startline="2233" endline="2244">EEPROM_read</references>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1af7115da2fa844da13b6bd31bf8a206f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void read_configuration</definition>
        <argsstring>()</argsstring>
        <name>read_configuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2270" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2270" bodyend="2276"/>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a22feff51a4b8144a2264bc812eedaddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_logging</definition>
        <argsstring>()</argsstring>
        <name>test_logging</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2397" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2397" bodyend="2410"/>
        <references refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" compoundref="_weather___balloon_8cpp" startline="430">sd_data::buffer</references>
        <references refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" compoundref="_weather___balloon_8cpp" startline="290">dataLog</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="_weather___balloon_8cpp_1a8644e7f4d35c348e0292bc7062c5147c" compoundref="_weather___balloon_8cpp" startline="2091" endline="2221">print_sensors</references>
        <referencedby refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" compoundref="_weather___balloon_8cpp" startline="2413" endline="2650">log_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void log_data</definition>
        <argsstring>()</argsstring>
        <name>log_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2413" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2413" bodyend="2650"/>
        <references refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" compoundref="_weather___balloon_8cpp" startline="418">sd_data::blocks</references>
        <references refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" compoundref="_weather___balloon_8cpp" startline="430">sd_data::buffer</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="structsd__data_1a803add843065a08b411291e34786dac3" compoundref="_weather___balloon_8cpp" startline="424">sd_data::crc_errors</references>
        <references refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" compoundref="_weather___balloon_8cpp" startline="422">sd_data::current_block</references>
        <references refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" compoundref="_weather___balloon_8cpp" startline="290">dataLog</references>
        <references refid="class_sd2_card_1adfa5b1a39875236dff591acbd560bfe7" compoundref="_sd2_card_8h" startline="169" endline="169">Sd2Card::errorCode</references>
        <references refid="class_sd2_card_1a13fed56bd5bcfee862acb6de6924936c" compoundref="_sd2_card_8h" startline="171" endline="171">Sd2Card::errorData</references>
        <references refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c">data_struct::geiger</references>
        <references refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc">geiger</references>
        <references refid="structsd__data_1a8c7d8aeb42db3bbd384026be5d5e0bbd" compoundref="_weather___balloon_8cpp" startline="433">sd_data::hold_buffer</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" compoundref="_weather___balloon_8cpp" startline="437">sd_data::num_packed</references>
        <references refid="class_sd2_card_1ae26d840449a42d45af464fb81b92e2ab" compoundref="_sd2_card_8cpp" startline="422" endline="424">Sd2Card::readBlock</references>
        <references refid="_weather___balloon_8cpp_1acbeafc32c286c932b7f4e012cf3ef829" compoundref="_weather___balloon_8cpp" startline="2228" endline="2231">reset_sdcard</references>
        <references refid="_weather___balloon_8cpp_1a3d30b497ce4c43d95b30a95944f9d8be" compoundref="_weather___balloon_8cpp" startline="536" endline="547">sd_calc_crc</references>
        <references refid="_weather___balloon_8cpp_1a22feff51a4b8144a2264bc812eedaddb" compoundref="_weather___balloon_8cpp" startline="2397" endline="2410">test_logging</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <references refid="structsd__data_1ac1410d5750aa9c7a30041b0ac94cbc80" compoundref="_weather___balloon_8cpp" startline="424">sd_data::write_errors</references>
        <references refid="class_sd2_card_1ae9bdd6cff43b8b694584f9bae7e781b0" compoundref="_sd2_card_8cpp" startline="628" endline="661">Sd2Card::writeBlock</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a450f53a446d117859c49aeaac6c31f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void read_sdcard</definition>
        <argsstring>()</argsstring>
        <name>read_sdcard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2653" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2653" bodyend="2838"/>
        <references refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933">data_struct::accel</references>
        <references refid="structdata__struct_1a6882559eb75dfd48ce00d14c2a82121c" compoundref="_weather___balloon_8cpp" startline="172">data_struct::alarm</references>
        <references refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908">data_struct::battery</references>
        <references refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" compoundref="_weather___balloon_8cpp" startline="418">sd_data::blocks</references>
        <references refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" compoundref="_weather___balloon_8cpp" startline="430">sd_data::buffer</references>
        <references refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" compoundref="_weather___balloon_8cpp" startline="422">sd_data::current_block</references>
        <references refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" compoundref="_weather___balloon_8cpp" startline="290">dataLog</references>
        <references refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1">data_struct::found</references>
        <references refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c">data_struct::geiger</references>
        <references refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d">data_struct::gps</references>
        <references refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23">data_struct::gyro</references>
        <references refid="structdata__struct_1a4b4c5b81a3132706b1a85c0cd46164a0" compoundref="_weather___balloon_8cpp" startline="270">data_struct::heater_max</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="structdata__struct_1acebeac8bcb741e46517b79c4b8bb8ed5" compoundref="_weather___balloon_8cpp" startline="171">data_struct::launched</references>
        <references refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe">data_struct::mag</references>
        <references refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1">data_struct::ms5607</references>
        <references refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" compoundref="_weather___balloon_8cpp" startline="437">sd_data::num_packed</references>
        <references refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5">data_struct::pwm</references>
        <references refid="class_sd2_card_1ae26d840449a42d45af464fb81b92e2ab" compoundref="_sd2_card_8cpp" startline="422" endline="424">Sd2Card::readBlock</references>
        <references refid="_weather___balloon_8cpp_1a3d30b497ce4c43d95b30a95944f9d8be" compoundref="_weather___balloon_8cpp" startline="536" endline="547">sd_calc_crc</references>
        <references refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a">data_struct::sht31</references>
        <references refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3">data_struct::temp</references>
        <references refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72">data_struct::tsl</references>
        <references refid="structdata__struct_1a37f7a481de32f77f428f03c07d60090e" compoundref="_weather___balloon_8cpp" startline="284">data_struct::unix_time</references>
        <references refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" compoundref="_weather___balloon_8cpp" startline="206">data_struct::uv</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
        <referencedby refid="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" compoundref="_weather___balloon_8cpp" startline="3242" endline="3314">read_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1aef169403f1360281f7d4532c26949b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void queue_altitude</definition>
        <argsstring>(float altitude)</argsstring>
        <name>queue_altitude</name>
        <param>
          <type>float</type>
          <declname>altitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2840" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2840" bodyend="2918"/>
        <references refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" compoundref="_weather___balloon_8cpp" startline="375">altitude_hist</references>
        <references refid="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" compoundref="_weather___balloon_8cpp" startline="380">altitude_hist_head</references>
        <references refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" compoundref="_weather___balloon_8cpp" startline="381">altitude_hist_tail</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1adeef8e326e21e271b7542e6e7c4e4bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void queue_pressure</definition>
        <argsstring>(float pressure)</argsstring>
        <name>queue_pressure</name>
        <param>
          <type>float</type>
          <declname>pressure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="2920" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="2920" bodyend="2998"/>
        <references refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" compoundref="_weather___balloon_8cpp" startline="374">pressure_hist</references>
        <references refid="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" compoundref="_weather___balloon_8cpp" startline="378">pressure_hist_head</references>
        <references refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" compoundref="_weather___balloon_8cpp" startline="379">pressure_hist_tail</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ad470b7ae913b35bcd1e424b925a0277b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_launch</definition>
        <argsstring>()</argsstring>
        <name>check_launch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3000" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3000" bodyend="3041"/>
        <references refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" compoundref="_weather___balloon_8cpp" startline="375">altitude_hist</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" compoundref="_weather___balloon_8cpp" startline="374">pressure_hist</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_decent</definition>
        <argsstring>()</argsstring>
        <name>check_decent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3043" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3043" bodyend="3061"/>
        <references refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" compoundref="_weather___balloon_8cpp" startline="375">altitude_hist</references>
        <references refid="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" compoundref="_weather___balloon_8cpp" startline="380">altitude_hist_head</references>
        <references refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" compoundref="_weather___balloon_8cpp" startline="381">altitude_hist_tail</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" compoundref="_weather___balloon_8cpp" startline="374">pressure_hist</references>
        <references refid="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" compoundref="_weather___balloon_8cpp" startline="378">pressure_hist_head</references>
        <references refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" compoundref="_weather___balloon_8cpp" startline="379">pressure_hist_tail</references>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a15e6d9ae56a77e3b476ba9804077a809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_landing</definition>
        <argsstring>()</argsstring>
        <name>check_landing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3063" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3063" bodyend="3097"/>
        <references refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" compoundref="_weather___balloon_8cpp" startline="375">altitude_hist</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" compoundref="_weather___balloon_8cpp" startline="374">pressure_hist</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a4a9cf795fe57230a3204ad8a66f4144d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configure_write</definition>
        <argsstring>()</argsstring>
        <name>configure_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3099" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3099" bodyend="3101"/>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_alarms</definition>
        <argsstring>()</argsstring>
        <name>check_alarms</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3103" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3103" bodyend="3138"/>
        <references refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" compoundref="_weather___balloon_8cpp" startline="1432" endline="1454">beep_piezo</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" compoundref="_weather___balloon_8cpp" startline="1422" endline="1430">flash_landing</references>
        <references refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" compoundref="_weather___balloon_8cpp" startline="1110" endline="1123">led_power</references>
        <references refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" compoundref="_weather___balloon_8cpp" startline="1235" endline="1250">location_alarm</references>
        <references refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" compoundref="_weather___balloon_8cpp" startline="90">PIEZO_PIN</references>
        <references refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" compoundref="_weather___balloon_8cpp" startline="1000" endline="1010">piezo_power</references>
        <references refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" compoundref="_weather___balloon_8cpp" startline="1126" endline="1157">power_sensors</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <references refid="_weather___balloon_8cpp_1a905910daced665e99b1c14fa51ef9938" compoundref="_weather___balloon_8cpp" startline="1161" endline="1181">watchdog_sleep</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a23601be8cb3753e62a44c58a70575fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_serial_help</definition>
        <argsstring>()</argsstring>
        <name>print_serial_help</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3140" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3140" bodyend="3161"/>
        <referencedby refid="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" compoundref="_weather___balloon_8cpp" startline="3242" endline="3314">read_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a15ac45cd15b43e174eeb8f4272f0c875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Atmosphere</definition>
        <argsstring>(const double alt, double &amp;sigma, double &amp;delta, double &amp;theta)    </argsstring>
        <name>Atmosphere</name>
        <param>
          <type>const double</type>
          <declname>alt</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>delta</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3163" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3163" bodyend="3204"/>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <referencedby refid="_weather___balloon_8cpp_1ad125fd2e1dac4c129e6735549100fc2b" compoundref="_weather___balloon_8cpp" startline="3207" endline="3229">set_alt_threshold</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ad125fd2e1dac4c129e6735549100fc2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_alt_threshold</definition>
        <argsstring>(float altitude, String entered)</argsstring>
        <name>set_alt_threshold</name>
        <param>
          <type>float</type>
          <declname>altitude</declname>
        </param>
        <param>
          <type>String</type>
          <declname>entered</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3207" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3207" bodyend="3229"/>
        <references refid="_weather___balloon_8cpp_1a15ac45cd15b43e174eeb8f4272f0c875" compoundref="_weather___balloon_8cpp" startline="3163" endline="3204">Atmosphere</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_weather___balloon_8cpp_1a728acecfd86626b2ad3b9cf88c206434" compoundref="_weather___balloon_8cpp" startline="64">PZERO</references>
        <referencedby refid="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" compoundref="_weather___balloon_8cpp" startline="3242" endline="3314">read_serial</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a5bd0afab414acd06263043d17db76643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_pressure_threshold</definition>
        <argsstring>(float pressure)</argsstring>
        <name>set_pressure_threshold</name>
        <param>
          <type>float</type>
          <declname>pressure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3231" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3231" bodyend="3233"/>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1ac3c063a9e5c7c5bc74ee3ebd70141634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_launch_timeout</definition>
        <argsstring>(uint32_t timeout)</argsstring>
        <name>set_launch_timeout</name>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3235" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3235" bodyend="3236"/>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a0d89228eb4827497c54f4628c463e5bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_location_timeout</definition>
        <argsstring>(uint32_t timeout)</argsstring>
        <name>set_location_timeout</name>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3238" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3238" bodyend="3240"/>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void read_serial</definition>
        <argsstring>()</argsstring>
        <name>read_serial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3242" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3242" bodyend="3314"/>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_weather___balloon_8cpp_1a117352cc494cc62c6b2f1882786a332c" compoundref="_weather___balloon_8cpp" startline="11">DEBUG</references>
        <references refid="_weather___balloon_8cpp_1a23601be8cb3753e62a44c58a70575fe8" compoundref="_weather___balloon_8cpp" startline="3140" endline="3161">print_serial_help</references>
        <references refid="_weather___balloon_8cpp_1a450f53a446d117859c49aeaac6c31f9f" compoundref="_weather___balloon_8cpp" startline="2653" endline="2838">read_sdcard</references>
        <references refid="_weather___balloon_8cpp_1ad125fd2e1dac4c129e6735549100fc2b" compoundref="_weather___balloon_8cpp" startline="3207" endline="3229">set_alt_threshold</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1abdf5b290d72a0f43221cc3461db70810" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pet_watchdog</definition>
        <argsstring>()</argsstring>
        <name>pet_watchdog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3317" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3317" bodyend="3328"/>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
        <referencedby refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_weather___balloon_8cpp" startline="3330" endline="3407">loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/Weather_Balloon.cpp" line="3330" column="1" bodyfile="Weather_Balloon/Weather_Balloon.cpp" bodystart="3330" bodyend="3407"/>
        <references refid="structdata__struct_1a6882559eb75dfd48ce00d14c2a82121c" compoundref="_weather___balloon_8cpp" startline="172">data_struct::alarm</references>
        <references refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" compoundref="_weather___balloon_8cpp" startline="1432" endline="1454">beep_piezo</references>
        <references refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" compoundref="_weather___balloon_8cpp" startline="3103" endline="3138">check_alarms</references>
        <references refid="_weather___balloon_8cpp_1ad3d8902d8758d33ba2a536403243f47c" compoundref="_weather___balloon_8cpp" startline="1852" endline="1870">check_battery</references>
        <references refid="_weather___balloon_8cpp_1a15e6d9ae56a77e3b476ba9804077a809" compoundref="_weather___balloon_8cpp" startline="3063" endline="3097">check_landing</references>
        <references refid="_weather___balloon_8cpp_1ad470b7ae913b35bcd1e424b925a0277b" compoundref="_weather___balloon_8cpp" startline="3000" endline="3041">check_launch</references>
        <references refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669">configuration</references>
        <references refid="_weather___balloon_8cpp_1af913d90b1b4908442e095aaba6f05119">default_config</references>
        <references refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" compoundref="_weather___balloon_8cpp" startline="1422" endline="1430">flash_landing</references>
        <references refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d">data_struct::gps</references>
        <references refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" compoundref="_weather___balloon_8cpp" startline="486">gps_vPID</references>
        <references refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" compoundref="_weather___balloon_8cpp" startline="1872" endline="2088">heater_control</references>
        <references refid="structdata__struct_1acebeac8bcb741e46517b79c4b8bb8ed5" compoundref="_weather___balloon_8cpp" startline="171">data_struct::launched</references>
        <references refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" compoundref="_weather___balloon_8cpp" startline="2413" endline="2650">log_data</references>
        <references refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" compoundref="_weather___balloon_8cpp" startline="485">main_vPID</references>
        <references refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1">data_struct::ms5607</references>
        <references refid="_weather___balloon_8cpp_1abdf5b290d72a0f43221cc3461db70810" compoundref="_weather___balloon_8cpp" startline="3317" endline="3328">pet_watchdog</references>
        <references refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" compoundref="_weather___balloon_8cpp" startline="90">PIEZO_PIN</references>
        <references refid="_weather___balloon_8cpp_1a8644e7f4d35c348e0292bc7062c5147c" compoundref="_weather___balloon_8cpp" startline="2091" endline="2221">print_sensors</references>
        <references refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5">data_struct::pwm</references>
        <references refid="_weather___balloon_8cpp_1aef169403f1360281f7d4532c26949b6a" compoundref="_weather___balloon_8cpp" startline="2840" endline="2918">queue_altitude</references>
        <references refid="_weather___balloon_8cpp_1adeef8e326e21e271b7542e6e7c4e4bd9" compoundref="_weather___balloon_8cpp" startline="2920" endline="2998">queue_pressure</references>
        <references refid="_weather___balloon_8cpp_1a450f53a446d117859c49aeaac6c31f9f" compoundref="_weather___balloon_8cpp" startline="2653" endline="2838">read_sdcard</references>
        <references refid="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" compoundref="_weather___balloon_8cpp" startline="3242" endline="3314">read_serial</references>
        <references refid="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" compoundref="_weather___balloon_8cpp" startline="1596" endline="1751">readSensors</references>
        <references refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" compoundref="_weather___balloon_8cpp" startline="524">reset_flag</references>
        <references refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a">data_struct::sht31</references>
        <references refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" compoundref="_weather___balloon_8cpp" startline="489">sht_vPID</references>
        <references refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" compoundref="_weather___balloon_8cpp" startline="488">tsl_vPID</references>
        <references refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" compoundref="_weather___balloon_8cpp" startline="206">data_struct::uv</references>
        <references refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" compoundref="_weather___balloon_8cpp" startline="487">uv_vPID</references>
        <references refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" compoundref="_weather___balloon_8cpp" startline="13">watchdog</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>High<sp/>Altitude<sp/>Weather<sp/>Balloon<sp/>Controller</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Controller<sp/>to<sp/>log<sp/>sensor<sp/>data<sp/>to<sp/>an<sp/>SD<sp/>card<sp/>and<sp/>allow<sp/>location<sp/>finding<sp/>through</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>sound<sp/>and<sp/>lights.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Possible<sp/>data<sp/>transmission<sp/>to<sp/>a<sp/>ground<sp/>station<sp/>through<sp/>a<sp/>radio<sp/>transmitter.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>CS4360<sp/>Fall<sp/>2016</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>GPLv3</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Robert<sp/>Susmilch</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="_weather___balloon_8cpp_1a117352cc494cc62c6b2f1882786a332c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a117352cc494cc62c6b2f1882786a332c" kindref="member">DEBUG</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12" refid="_weather___balloon_8cpp_1a0006c1addcca85ed3a78cce0d5ab8810" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a0006c1addcca85ed3a78cce0d5ab8810" kindref="member">DEBUG_MORE</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13" refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Wire.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;SPI.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>USE_LCD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;util/atomic.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/cpufunc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/interrupt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/sleep.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/power.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/wdt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LCD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;LCD.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;LiquidCrystal_I2C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_adafruit___s_i1145_8h" kindref="compound">Adafruit_SI1145.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_one_wire_8h" kindref="compound">OneWire.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dallas_temperature_8h" kindref="compound">DallasTemperature.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_a_g3110_8h" kindref="compound">MAG3110.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_adafruit___sensor_8h" kindref="compound">Adafruit_Sensor.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_adafruit___a_d_x_l345___u_8h" kindref="compound">Adafruit_ADXL345_U.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_m_s5xxx_8h" kindref="compound">MS5xxx.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_adafruit___s_h_t31_8h" kindref="compound">Adafruit_SHT31.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sd2_card_8h" kindref="compound">Sd2Card.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_adafruit___t_s_l2561___u_8h" kindref="compound">Adafruit_TSL2561_U.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spark_fun_m_a_x17043_8h" kindref="compound">SparkFunMAX17043.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spark_fun_l_s_m9_d_s1_8h" kindref="compound">SparkFunLSM9DS1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_tiny_g_p_s_09_09_8h" kindref="compound">TinyGPS++.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_d_s3231_8h" kindref="compound">DS3231.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_i_d__v1_8h" kindref="compound">PID_v1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EEPROM.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_e_e_p_r_o_m__anything_8h" kindref="compound">EEPROM_anything.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" kindref="member">configure_GPS_NMEA</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" kindref="member">configure_GPS_WAAS</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal">uint32_t<sp/><ref refid="_weather___balloon_8cpp_1a276e156004c668500daa7aaa9a770585" kindref="member">find_sdcard_tail</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" kindref="member">flash_landing</ref>(uint16_t);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>P<sp/>H<sp/>Y<sp/>S<sp/>I<sp/>C<sp/>A<sp/>L<sp/><sp/><sp/>C<sp/>O<sp/>N<sp/>S<sp/>T<sp/>A<sp/>N<sp/>T<sp/>S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="_weather___balloon_8cpp_1adab320fba7526e8277ddabb382395609" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1adab320fba7526e8277ddabb382395609" kindref="member">FT2METERS</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.3048;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mult.<sp/>ft.<sp/>to<sp/>get<sp/>meters<sp/>(exact)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_weather___balloon_8cpp_1a19b91bab81470b4820cbd27986bbb1a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a19b91bab81470b4820cbd27986bbb1a8" kindref="member">KELVIN2RANKINE</ref><sp/>=<sp/>1.8;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mult<sp/>kelvins<sp/>to<sp/>get<sp/>deg<sp/>R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="_weather___balloon_8cpp_1a950f5d29e2685b850c7c11c7a70e3586" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a950f5d29e2685b850c7c11c7a70e3586" kindref="member">PSF2NSM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>47.880258;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mult<sp/>lb/sq.ft<sp/>to<sp/>get<sp/>N/sq.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="_weather___balloon_8cpp_1a05e8a82a0d190e77cf4a5df2ea878799" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a05e8a82a0d190e77cf4a5df2ea878799" kindref="member">SCF2KCM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>515.379;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mult<sp/>slugs/cu.ft<sp/>to<sp/>get<sp/>kg/cu.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="_weather___balloon_8cpp_1ad3209c000f37747eff86c69863d3d0d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ad3209c000f37747eff86c69863d3d0d1" kindref="member">TZERO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>288.15;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sea<sp/>level<sp/>temperature,<sp/>kelvins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="_weather___balloon_8cpp_1a728acecfd86626b2ad3b9cf88c206434" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a728acecfd86626b2ad3b9cf88c206434" kindref="member">PZERO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>101325.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sea-level<sp/>pressure,<sp/>N/sq.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="_weather___balloon_8cpp_1a8b35237530df0b0d6241a52f61589fee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a8b35237530df0b0d6241a52f61589fee" kindref="member">RHOZERO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.225;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sea<sp/>level<sp/>density,<sp/>kg/cu.m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="_weather___balloon_8cpp_1a9d985b447de8617c091480f9f572fe58" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a9d985b447de8617c091480f9f572fe58" kindref="member">AZERO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>340.294;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sea-level<sp/>speed<sp/>of<sp/>sound,<sp/>m/sec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LCD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pin<sp/>numbers<sp/>for<sp/>LCD<sp/>display<sp/>*AT<sp/>THE<sp/>DISPLAY<sp/>END*<sp/>not<sp/>for<sp/>the<sp/>Arduino.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BACKLIGHT_PIN<sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>En_pin<sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>Rw_pin<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>Rs_pin<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>D4_pin<sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>D5_pin<sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>D6_pin<sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>D7_pin<sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>One<sp/>Wire<sp/>data<sp/>is<sp/>plugged<sp/>into<sp/>pin<sp/>4<sp/>on<sp/>the<sp/>Arduino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="_weather___balloon_8cpp_1a4260ed8874da804fb9ef9abba200b487" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ONE_WIRE_BUS<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UV<sp/>sensor<sp/>is<sp/>on<sp/>analog<sp/>A0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="_weather___balloon_8cpp_1aae0736ba082f8ff448826f4b1bad56c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_PIN<sp/><sp/>A0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CO2<sp/>analog<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="_weather___balloon_8cpp_1a698f3df552cd6ec0d639151634bf7f96" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CO2_PIN<sp/>A3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Piezo<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PIEZO_PIN<sp/><sp/><sp/>A2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GREEN_LED<sp/><sp/><sp/><sp/><sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>YELLOW_LED<sp/><sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RED_LED<sp/><sp/><sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remote<sp/>Heaters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arduino<sp/>board</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Daughter<sp/>board<sp/>(heater<sp/>control,<sp/>level<sp/>shifting,<sp/>sensor<sp/>power<sp/>cutoff)<sp/>with<sp/>battery</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Humidity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IR,<sp/>Visible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GPS<sp/>(though<sp/>draws<sp/>90<sp/>ma<sp/>at<sp/>3.3v...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3x<sp/>Possibly<sp/>Geiger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Resistive<sp/>heater<sp/>pin.<sp/>Note<sp/>that<sp/>these<sp/>are<sp/>Arduino<sp/>defined<sp/>pin<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="_weather___balloon_8cpp_1adc5a223dccf8bbdeb83b1e98c1a5e068" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAIN_HEATER_PIN<sp/><sp/><sp/><sp/><sp/>45</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="_weather___balloon_8cpp_1afa22ab511c2e1ff0c2b6d670fb54b907" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_HEATER_PIN<sp/><sp/><sp/><sp/><sp/><sp/>44</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="_weather___balloon_8cpp_1a86a504b275408486d19f32e6923e6c10" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UV_HEATER_PIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="_weather___balloon_8cpp_1a9bd50323652c3e5de42af2a1d65e7930" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TSL2561_HEATER_PIN<sp/><sp/>46</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="_weather___balloon_8cpp_1aad36752a9ec8083497dc972e71dade95" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CUSTOM_HEATER_PIN<sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="_weather___balloon_8cpp_1a126d5b2f190e7e95a7b8877c920a2258" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHT31_HEATER_PIN<sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="_weather___balloon_8cpp_1a62875728932bfc6752ba857df3fdb182" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GEIGER_PWR_PIN<sp/><sp/><sp/><sp/><sp/><sp/>39</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Resistive<sp/>heater<sp/>hystersis<sp/>about<sp/>setpoint.<sp/>In<sp/>whatever<sp/>units<sp/>temps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>stored<sp/>and<sp/>processed<sp/>(Celsius<sp/>in<sp/>this<sp/>case.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="_weather___balloon_8cpp_1a025e0782db77609f8bde58b6e2b07405" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a025e0782db77609f8bde58b6e2b07405" kindref="member">hyster</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>degrees<sp/>Celsius<sp/>over<sp/>ambient<sp/>temps<sp/>to<sp/>prevent<sp/>condensation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="_weather___balloon_8cpp_1a7b0dae08d630995fb336f20fca25b324" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a7b0dae08d630995fb336f20fca25b324" kindref="member">over_ambient</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="_weather___balloon_8cpp_1a6f6f49388c74bb24a8f63771bd997d97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAMPLE_TIME<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LCD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LCD<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>I2C_ADDR<sp/><sp/><sp/><sp/>0x27<sp/>//<sp/>&lt;&lt;-----<sp/>Add<sp/>your<sp/>address<sp/>here.<sp/><sp/>Find<sp/>it<sp/>from<sp/>I2C<sp/>Scanner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>COLS<sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>ROWS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PAUSE<sp/><sp/><sp/><sp/>400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DS18B20<sp/>resolution<sp/>/<sp/>conversion<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>9<sp/>=<sp/><sp/>93.75<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>10<sp/>=<sp/>187.5<sp/><sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>11<sp/>=<sp/>375<sp/><sp/><sp/><sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>12<sp/>=<sp/>750<sp/><sp/><sp/><sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="_weather___balloon_8cpp_1a2042d0bb2f483912475a0570f65887e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DS18B20_RESOLUTION<sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculated<sp/>correction<sp/>factor<sp/>for<sp/>ADXL345</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="_weather___balloon_8cpp_1a1786def7b6707fbead3e6e07b8948528" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADXL345_CORRECTION<sp/><sp/>0.911265</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SDO_XM<sp/>and<sp/>SDO_G<sp/>are<sp/>both<sp/>pulled<sp/>high,<sp/>so<sp/>our<sp/>addresses<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="_weather___balloon_8cpp_1a9bb94ac54f97758f53ae168206e48061" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSM9DS1_M<sp/><sp/><sp/>0x1E<sp/>//<sp/>Would<sp/>be<sp/>0x1C<sp/>if<sp/>SDO_M<sp/>is<sp/>LOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="_weather___balloon_8cpp_1a733d92c87c7253b93ad4bf6a6ed54952" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LSM9DS1_AG<sp/><sp/>0x6B<sp/>//<sp/>Would<sp/>be<sp/>0x6A<sp/>if<sp/>SDO_AG<sp/>is<sp/>LOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Earth&apos;s<sp/>magnetic<sp/>field<sp/>varies<sp/>by<sp/>location.<sp/>Add<sp/>or<sp/>subtract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>declination<sp/>to<sp/>get<sp/>a<sp/>more<sp/>accurate<sp/>heading.<sp/>Calculate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>your&apos;s<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.ngdc.noaa.gov/geomag-web/#declination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="_weather___balloon_8cpp_1ad337b69f79bb731012571f96b472df45" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLINATION<sp/>-8.58<sp/>//<sp/>Declination<sp/>(degrees)<sp/>in<sp/>Boulder,<sp/>CO.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>PRINT_CALCULATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="_weather___balloon_8cpp_1aacfac138026d1b146c60efb2f40aa5fe" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_RAW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structdata__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="159" refid="structdata__struct_8found" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>sensors<sp/>if<sp/>we<sp/>found<sp/>them<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1" kindref="compound">LSM9DS1</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SHT31<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MS5607<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UV<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DS18B20<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TSL2561<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GPS<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>found;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="structdata__struct_1acebeac8bcb741e46517b79c4b8bb8ed5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>launched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172" refid="structdata__struct_1a6882559eb75dfd48ce00d14c2a82121c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alarm<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temperature<sp/>sensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Box<sp/>internal<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>External<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TSL2561</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SHT31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Custom<sp/>daughter<sp/>board<sp/>(if<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="structdata__struct_8temp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>main<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>external<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a169c53997a7da1d0fb99aec1b4675ce8" kindref="member">gps</ref><sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tsl2561<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a4cc868f67bc519384a9e92cd96d408c9" kindref="member">sht31</ref><sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>uv<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ms5607<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>custom<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a65f172682710866247eacb1ef68df619" kindref="member">clock</ref><sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>temp;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="structdata__struct_8pwm" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>main,<sp/><ref refid="_weather___balloon_8cpp_1a169c53997a7da1d0fb99aec1b4675ce8" kindref="member">gps</ref>,<sp/>tsl2561,<sp/><ref refid="_weather___balloon_8cpp_1a4cc868f67bc519384a9e92cd96d408c9" kindref="member">sht31</ref>,<sp/>uv;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>pwm;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="structdata__struct_8sht31" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Humidity<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>humidity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="_weather___balloon_8cpp_1a4cc868f67bc519384a9e92cd96d408c9" kindref="member">sht31</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UV<sp/>light<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>uv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="structdata__struct_8battery" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Battery<sp/>voltage<sp/>and<sp/>state-of-charge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_m_a_x17043___simple_8cpp_1ad3c64efcaba662da1a2f4393d00584e9" kindref="member">voltage</ref>,<sp/><ref refid="_m_a_x17043___simple_8cpp_1a991957902833b18d327c2d8a0ea1eb42" kindref="member">soc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>battery;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="structdata__struct_8ms5607" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pressure<sp/>and<sp/>temp<sp/>of<sp/>pressure<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pressure<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>ms5607;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="structdata__struct_8tsl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Infrared<sp/>and<sp/>broadband<sp/>light<sp/>readings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>ir,<sp/>broadband<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>lux<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="_weather___balloon_8cpp_1a34dc1ffbb166b7afbf402f717b871f77" kindref="member">tsl</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="structdata__struct_8accel" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>accel;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="structdata__struct_8mag" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>mag;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="structdata__struct_8gyro" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/>y,<sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>gyro;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="structdata__struct_8geiger" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Geiger<sp/>counts<sp/>for<sp/>X,<sp/>Y,<sp/>Z<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>time<sp/>to<sp/>log<sp/>data,<sp/>copy<sp/>data<sp/>from<sp/>count<sp/>to<sp/>axis,<sp/>zero<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Protects<sp/>from<sp/>losing<sp/>counts<sp/>while<sp/>writing<sp/>log<sp/>(very<sp/>slow.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>the<sp/>values<sp/>we<sp/>will<sp/>data<sp/>log.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>x,<sp/>y,<sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="structdata__struct_8gps" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat,<sp/>lng<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>altitude<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>speed,<sp/>course<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>seems<sp/>to<sp/>be<sp/>the<sp/>value<sp/>returned<sp/>by<sp/>the<sp/>NMEA<sp/>sentence<sp/>*<sp/>100.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eg,<sp/>3.2<sp/>*<sp/>100<sp/>*<sp/>320.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>it<sp/>is<sp/>supposed<sp/>to<sp/>be<sp/>a<sp/>multiplication<sp/>value<sp/>[00.0,99.9]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>multiplied<sp/>by<sp/>the<sp/>absolute<sp/>accuracy<sp/>of<sp/>the<sp/>receiver.<sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Venus<sp/>datasheet<sp/>claims<sp/>2.5m<sp/>accuracy,<sp/>so<sp/>3.2*2.5<sp/>=<sp/>8<sp/>m<sp/>(26.2<sp/>ft)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>seems<sp/>high,<sp/>but<sp/>this<sp/>value<sp/>is<sp/>indoors<sp/>as<sp/>well,<sp/>so<sp/>will<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>tested<sp/>outside<sp/>with<sp/>a<sp/>clear<sp/>sky<sp/>view.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>hdop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="_weather___balloon_8cpp_1acaaa1b97759f106aaf5c83f39c17c58b" kindref="member">vdop</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>sats<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>date<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="_weather___balloon_8cpp_1a169c53997a7da1d0fb99aec1b4675ce8" kindref="member">gps</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>value<sp/>for<sp/>heater<sp/>control.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="structdata__struct_1a4b4c5b81a3132706b1a85c0cd46164a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>heater_max<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="structdata__struct_8enabled" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>sensors<sp/>are<sp/>enabled?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_l_s_m9_d_s1" kindref="compound">LSM9DS1</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SHT31<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MS5607<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UV<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DS18B20<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TSL2561<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GPS<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>enabled;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="structdata__struct_1a37f7a481de32f77f428f03c07d60090e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structdata__struct_1a37f7a481de32f77f428f03c07d60090e" kindref="member">unix_time</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint16_t<sp/>crc;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">}<sp/><ref refid="structdata__struct" kindref="compound">data_struct</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>global<sp/>sensor<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" refkind="member"><highlight class="normal"><ref refid="structdata__struct" kindref="compound">data_struct</ref><sp/><ref refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" kindref="member">dataLog</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Geiger<sp/>counts<sp/>for<sp/>X,<sp/>Y,<sp/>Z<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>time<sp/>to<sp/>log<sp/>data,<sp/>copy<sp/>data<sp/>from<sp/>count<sp/>to<sp/>axis,<sp/>zero<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Protects<sp/>from<sp/>losing<sp/>counts<sp/>while<sp/>writing<sp/>log<sp/>(very<sp/>slow.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>the<sp/>values<sp/>we<sp/>will<sp/>data<sp/>log.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>in<sp/>use<sp/>counters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint16_t<sp/>x_count,<sp/>y_count,<sp/>z_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}<sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eight<sp/>DS18B20<sp/>sensor<sp/>addresses,<sp/>each<sp/>address<sp/>is<sp/>8<sp/>bytes<sp/>long.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>search<sp/>order<sp/>for<sp/>this<sp/>library<sp/>is<sp/>deterministic<sp/>(same<sp/>sensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>yield<sp/>the<sp/>same<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Box<sp/>internal<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>External<sp/>temp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TSL2561</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SHT31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>UV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Custom<sp/>daughter<sp/>board<sp/>(if<sp/>any)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>INTERNAL_ADDR<sp/>[8]<sp/><sp/><sp/>=<sp/>{0x28,<sp/>0x70,<sp/>0x95,<sp/>0x22,<sp/>0x05,<sp/>0x00,<sp/>0x00,<sp/>0xA1};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>TSL2561_ADDR<sp/>[8]<sp/><sp/><sp/><sp/>=<sp/>{0x28,<sp/>0x57,<sp/>0x8C,<sp/>0x22,<sp/>0x05,<sp/>0x00,<sp/>0x00,<sp/>0x1D};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>UV_ADDR<sp/>[8]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x28,<sp/>0xFF,<sp/>0xB6,<sp/>0x50,<sp/>0x6A,<sp/>0x14,<sp/>0x03,<sp/>0xB9};</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>GPS_ADDR<sp/>[8]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x28,<sp/>0xFF,<sp/>0x4D,<sp/>0x7F,<sp/>0x6F,<sp/>0x14,<sp/>0x04,<sp/>0x33};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>MAIN_ADDR<sp/>[8]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00};</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>EXTERNAL_ADDR<sp/>[8]<sp/><sp/><sp/>=<sp/>{0x28,<sp/>0xFF,<sp/>0x8C,<sp/>0x54,<sp/>0x6F,<sp/>0x14,<sp/>0x04,<sp/>0x38};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>CUSTOM_ADDR<sp/>[8]<sp/><sp/><sp/><sp/><sp/>=<sp/>{0x28,<sp/>0x1B,<sp/>0x46,<sp/>0x6E,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x4D};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>main<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>external<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a169c53997a7da1d0fb99aec1b4675ce8" kindref="member">gps</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tsl2561<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>uv<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>custom<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>num_found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal">}<sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Holds<sp/>various<sp/>configuration<sp/>and<sp/>memory<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>settings<sp/>such<sp/>as<sp/>alarm<sp/>thresholds,<sp/>and<sp/>weather<sp/>the<sp/>device<sp/>has<sp/>taken<sp/>off<sp/>are<sp/>stored<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Location<sp/>alarms.<sp/>These<sp/>will<sp/>be<sp/>user<sp/>settable<sp/>through<sp/>EEPROM<sp/>in<sp/>the<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>under<sp/>this<sp/>pressure,<sp/>we<sp/>start<sp/>the<sp/>alarm<sp/>for<sp/>location<sp/>retrieval.<sp/>In<sp/>Pascals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pressure_alarm<sp/>=<sp/>82553;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>under<sp/>this<sp/>GPS<sp/>altitude,<sp/>we<sp/>start<sp/>the<sp/>alarm<sp/>for<sp/>location<sp/>retrieval.<sp/>In<sp/>meters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>altitude_alarm<sp/>=<sp/>1800;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Did<sp/>we<sp/>take<sp/>off<sp/>from<sp/>the<sp/>ground<sp/>already?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>launched<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>we<sp/>in<sp/>alarm?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alarm<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>decent<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>seconds<sp/>above<sp/>altitude<sp/>threshold<sp/>to<sp/>&quot;arm&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>altitude_time<sp/>=<sp/>120;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>minutes<sp/>to<sp/>assume<sp/>balloon<sp/>has<sp/>launched<sp/>or<sp/>has<sp/>landed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>launch_time<sp/>=<sp/>120;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>location_time<sp/>=<sp/>240;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>configure<sp/>booleans<sp/>to<sp/>use<sp/>a<sp/>bitmap<sp/>to<sp/>save<sp/>EEPROM.<sp/>Arduino<sp/>bools<sp/>are<sp/>simply<sp/>8<sp/>bit<sp/>ints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a117352cc494cc62c6b2f1882786a332c" kindref="member">DEBUG</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a0006c1addcca85ed3a78cce0d5ab8810" kindref="member">DEBUG_MORE</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">}<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>,<sp/><ref refid="_weather___balloon_8cpp_1af913d90b1b4908442e095aaba6f05119" kindref="member">default_config</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Counter<sp/>for<sp/>above<sp/>altitude<sp/>to<sp/>arm<sp/>in-flight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="_weather___balloon_8cpp_1a0ccc5fb483a33a339b8a07b5f0251c02" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="_weather___balloon_8cpp_1a0ccc5fb483a33a339b8a07b5f0251c02" kindref="member">count_at_altitude</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>History<sp/>of<sp/>pressure<sp/>and<sp/>altitude<sp/>to<sp/>derive<sp/>climbing<sp/>or<sp/>falling<sp/>over<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>[120];</highlight></codeline>
<codeline lineno="375" refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>[120];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Circular<sp/>array<sp/>queue<sp/>head<sp/>and<sp/>tail<sp/>indexes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" kindref="member">pressure_hist_head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="379" refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" kindref="member">pressure_hist_tail</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="380" refid="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" kindref="member">altitude_hist_head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="381" refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" kindref="member">altitude_hist_tail</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Light<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//Adafruit_SI1145<sp/>uv<sp/>=<sp/>Adafruit_SI1145();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>accelerometer<sp/>object<sp/>with<sp/>arbitrary<sp/>ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//Adafruit_ADXL345_Unified<sp/>accel<sp/>=<sp/>Adafruit_ADXL345_Unified(12345);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>oneWire<sp/>instance<sp/>to<sp/>communicate<sp/>with<sp/>any<sp/>OneWire<sp/>devices<sp/>(not<sp/>just<sp/>Maxim/Dallas<sp/>temperature<sp/>ICs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><ref refid="class_one_wire" kindref="compound">OneWire</ref><sp/><ref refid="_weather___balloon_8cpp_1a6914ee42e75580dd30542e2b70531a1a" kindref="member">oneWire</ref>(<ref refid="_weather___balloon_8cpp_1a4260ed8874da804fb9ef9abba200b487" kindref="member">ONE_WIRE_BUS</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pass<sp/>our<sp/>oneWire<sp/>reference<sp/>to<sp/>Dallas<sp/>Temperature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="_weather___balloon_8cpp_1a6914ee42e75580dd30542e2b70531a1a" refkind="member"><highlight class="normal"><ref refid="class_dallas_temperature" kindref="compound">DallasTemperature</ref><sp/>DS18B20(&amp;<ref refid="_weather___balloon_8cpp_1a6914ee42e75580dd30542e2b70531a1a" kindref="member">oneWire</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>magnetometer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//MAG3110<sp/>mag3110;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Altimeter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" refkind="member"><highlight class="normal"><ref refid="class_m_s5xxx" kindref="compound">MS5xxx</ref><sp/>ms5607(&amp;<ref refid="_weather___balloon_8cpp_1a5924c9408a49897f2752e9c95b091461" kindref="member">Wire</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Humidity<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="_weather___balloon_8cpp_1a4cc868f67bc519384a9e92cd96d408c9" refkind="member"><highlight class="normal"><ref refid="class_adafruit___s_h_t31" kindref="compound">Adafruit_SHT31</ref><sp/><ref refid="_weather___balloon_8cpp_1a4cc868f67bc519384a9e92cd96d408c9" kindref="member">sht31</ref><sp/>=<sp/><ref refid="class_adafruit___s_h_t31" kindref="compound">Adafruit_SHT31</ref>();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="_weather___balloon_8cpp_1a34dc1ffbb166b7afbf402f717b871f77" refkind="member"><highlight class="normal"><ref refid="class_adafruit___t_s_l2561___unified" kindref="compound">Adafruit_TSL2561_Unified</ref><sp/><ref refid="_weather___balloon_8cpp_1a34dc1ffbb166b7afbf402f717b871f77" kindref="member">tsl</ref><sp/>=<sp/><ref refid="class_adafruit___t_s_l2561___unified" kindref="compound">Adafruit_TSL2561_Unified</ref>(<ref refid="_adafruit___t_s_l2561___u_8h_1ac7cc83a3f07e3073fe2c17deb84e8cfc" kindref="member">TSL2561_ADDR_FLOAT</ref>,<sp/>12345);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="_weather___balloon_8cpp_1abcf177193a1fa6196dec86446b427a38" refkind="member"><highlight class="normal"><ref refid="class_m_a_x17043" kindref="compound">MAX17043</ref><sp/><ref refid="_weather___balloon_8cpp_1abcf177193a1fa6196dec86446b427a38" kindref="member">fuel_gauge</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="_weather___balloon_8cpp_1a1251d2baa2da9ec9bae71ac224641f41" refkind="member"><highlight class="normal"><ref refid="class_l_s_m9_d_s1" kindref="compound">LSM9DS1</ref><sp/><ref refid="_weather___balloon_8cpp_1a1251d2baa2da9ec9bae71ac224641f41" kindref="member">DOF</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="_weather___balloon_8cpp_1af20e11a25c386bfa74e56ad408215877" refkind="member"><highlight class="normal"><ref refid="class_sd2_card" kindref="compound">Sd2Card</ref><sp/><ref refid="_weather___balloon_8cpp_1af20e11a25c386bfa74e56ad408215877" kindref="member">sdcard</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="_weather___balloon_8cpp_1a65f172682710866247eacb1ef68df619" refkind="member"><highlight class="normal"><ref refid="class_d_s3231" kindref="compound">DS3231</ref><sp/><ref refid="_weather___balloon_8cpp_1a65f172682710866247eacb1ef68df619" kindref="member">clock</ref>;</highlight></codeline>
<codeline lineno="414" refid="_weather___balloon_8cpp_1a392e8b82028f7ad3f0bf9c13abc9ce14" refkind="member"><highlight class="normal"><ref refid="struct_r_t_c_date_time" kindref="compound">RTCDateTime</ref><sp/><ref refid="_weather___balloon_8cpp_1a392e8b82028f7ad3f0bf9c13abc9ce14" kindref="member">date_time</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="structsd__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>512<sp/>byte<sp/>blocks<sp/>reported<sp/>by<sp/>sdcard.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>blocks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>block<sp/>on<sp/>the<sp/>card.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*CANNOT*<sp/>write<sp/>to<sp/>block<sp/>zero,<sp/>sd<sp/>card<sp/>configuration<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_block<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="structsd__data_1ac1410d5750aa9c7a30041b0ac94cbc80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structsd__data_1ac1410d5750aa9c7a30041b0ac94cbc80" kindref="member">write_errors</ref>,<sp/>crc_errors<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CRC<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="structsd__data_1a3e3831d75c0cbbc4f4bc83f20c57c4d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="structsd__data_1a3e3831d75c0cbbc4f4bc83f20c57c4d7" kindref="member">crc</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>to<sp/>hold<sp/>for<sp/>reading,<sp/>writing,<sp/>finding<sp/>tail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buffer[512];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>to<sp/>hold<sp/>data<sp/>waiting<sp/>to<sp/>be<sp/>written<sp/>between<sp/>logging<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="structsd__data_1a8c7d8aeb42db3bbd384026be5d5e0bbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>hold_buffer[512];</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>holds<sp/>the<sp/>number<sp/>of<sp/>&quot;structures&quot;<sp/>that<sp/>have<sp/>been<sp/>packed<sp/>into<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>512<sp/>byte<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>num_packed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">}<sp/><ref refid="structsd__data" kindref="compound">sd_data</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="_weather___balloon_8cpp_1a809288b73e21bab0f06787e2d2d01222" refkind="member"><highlight class="normal"><ref refid="structsd__data" kindref="compound">sd_data</ref><sp/><ref refid="_weather___balloon_8cpp_1a809288b73e21bab0f06787e2d2d01222" kindref="member">sdcard_data</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="structeeprom__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="444" refid="structeeprom__struct_1abdd1ffbd2d5cf7b991f6e0a7cd951c39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>queue_loc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="structeeprom__struct_1a9c95773929c39be73375f839d44050dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>address<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal">}<sp/><ref refid="structeeprom__struct" kindref="compound">eeprom_struct</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="_weather___balloon_8cpp_1a440561e67c2eadefd39ca49856c16b16" refkind="member"><highlight class="normal"><ref refid="structeeprom__struct" kindref="compound">eeprom_struct</ref><sp/><ref refid="_weather___balloon_8cpp_1a440561e67c2eadefd39ca49856c16b16" kindref="member">eeprom</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>GPS<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>REQUIRES<sp/>CUSTOM<sp/>LARGER<sp/>BUFFER<sp/>FOR<sp/>INCOMING<sp/>UART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="_weather___balloon_8cpp_1a169c53997a7da1d0fb99aec1b4675ce8" refkind="member"><highlight class="normal"><ref refid="class_tiny_g_p_s_plus" kindref="compound">TinyGPSPlus</ref><sp/><ref refid="_weather___balloon_8cpp_1a169c53997a7da1d0fb99aec1b4675ce8" kindref="member">gps</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Grab<sp/>vertical<sp/>dilution<sp/>of<sp/>precision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="class_tiny_g_p_s_custom" kindref="compound">TinyGPSCustom</ref><sp/><ref refid="_weather___balloon_8cpp_1acaaa1b97759f106aaf5c83f39c17c58b" kindref="member">vdop</ref>(gps,<sp/></highlight><highlight class="stringliteral">&quot;GPGSA&quot;</highlight><highlight class="normal">,<sp/>17);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pwm;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>setpoint;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>using<sp/>the<sp/>Ziegler-Nichols<sp/>Method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Kp<sp/>=<sp/>176.47;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ki<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Kd<sp/>=<sp/>1.75;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}<sp/><ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>,<sp/><ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>,<sp/><ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>,<sp/><ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>,<sp/><ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pwm;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>setpoint;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>using<sp/>the<sp/>Ziegler-Nichols<sp/>Method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Kp<sp/>=<sp/>352.94;<sp/></highlight><highlight class="comment">//600;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Ki<sp/>=<sp/>30;<sp/></highlight><highlight class="comment">//0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Kd<sp/>=<sp/>9;<sp/></highlight><highlight class="comment">//0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal">}<sp/><ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//PID_Vars<sp/>main_vPID,<sp/>gps_vPID,<sp/>uv_vPID,<sp/>tsl_vPID,<sp/>sht_vPID,<sp/>custom_vPID;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" refkind="member"><highlight class="normal"><ref refid="class_p_i_d" kindref="compound">PID</ref><sp/>PID_main(&amp;<ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.temp,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.pwm,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.setpoint,<sp/><ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.Kp,<sp/><ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.Ki,<sp/><ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.Kd,<sp/><ref refid="_p_i_d__v1_8h_1a86720ded03b3f5b5ca53d30b33cb33bb" kindref="member">DIRECT</ref>);</highlight></codeline>
<codeline lineno="486" refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" refkind="member"><highlight class="normal"><ref refid="class_p_i_d" kindref="compound">PID</ref><sp/>PID_gps(&amp;<ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.temp,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.pwm,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.setpoint,<sp/><ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.Kp,<sp/><ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.Ki,<sp/><ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.Kd,<sp/><ref refid="_p_i_d__v1_8h_1a86720ded03b3f5b5ca53d30b33cb33bb" kindref="member">DIRECT</ref>);</highlight></codeline>
<codeline lineno="487" refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" refkind="member"><highlight class="normal"><ref refid="class_p_i_d" kindref="compound">PID</ref><sp/>PID_uv(&amp;<ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.temp,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.pwm,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.setpoint,<sp/><ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.Kp,<sp/><ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.Ki,<sp/><ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.Kd,<sp/><ref refid="_p_i_d__v1_8h_1a86720ded03b3f5b5ca53d30b33cb33bb" kindref="member">DIRECT</ref>);</highlight></codeline>
<codeline lineno="488" refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" refkind="member"><highlight class="normal"><ref refid="class_p_i_d" kindref="compound">PID</ref><sp/>PID_tsl(&amp;<ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.temp,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.pwm,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.setpoint,<sp/><ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.Kp,<sp/><ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.Ki,<sp/><ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.Kd,<sp/><ref refid="_p_i_d__v1_8h_1a86720ded03b3f5b5ca53d30b33cb33bb" kindref="member">DIRECT</ref>);</highlight></codeline>
<codeline lineno="489" refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" refkind="member"><highlight class="normal"><ref refid="class_p_i_d" kindref="compound">PID</ref><sp/>PID_sht(&amp;<ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.temp,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.pwm,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.setpoint,<sp/><ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.Kp,<sp/><ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.Ki,<sp/><ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.Kd,<sp/><ref refid="_p_i_d__v1_8h_1a86720ded03b3f5b5ca53d30b33cb33bb" kindref="member">DIRECT</ref>);</highlight></codeline>
<codeline lineno="490" refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" refkind="member"><highlight class="normal"><ref refid="class_p_i_d" kindref="compound">PID</ref><sp/>PID_custom(&amp;<ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.temp,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.pwm,<sp/>&amp;<ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.setpoint,<sp/><ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.Kp,<sp/><ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.Ki,<sp/><ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.Kd,<sp/><ref refid="_p_i_d__v1_8h_1a86720ded03b3f5b5ca53d30b33cb33bb" kindref="member">DIRECT</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GPS<sp/>start<sp/>and<sp/>stop<sp/>sequences<sp/>to<sp/>speak<sp/>binary<sp/>protocol<sp/>to<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="_weather___balloon_8cpp_1ae54089afd7925e1d4d4599a9925ba7d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_SBYTE_1<sp/><sp/>0xA0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="_weather___balloon_8cpp_1a41c61b54b6c4e8df2ab8540312ea578f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_SBYTE_2<sp/><sp/>0xA1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="_weather___balloon_8cpp_1af33afafa7f1cda9d36801855fda7def3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_END_1<sp/><sp/><sp/><sp/>0x0D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="_weather___balloon_8cpp_1adc8803fa8bafb4b8793b13f3325aee70" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_END_2<sp/><sp/><sp/><sp/>0x0A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GPS<sp/>Message<sp/>List</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="_weather___balloon_8cpp_1a9ec60d321bbe0674b50ee8528c1c8b8a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_RESTART<sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="_weather___balloon_8cpp_1a450249148bd85e8396ad71ce44a0e11a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_CONFIG_NMEA<sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="_weather___balloon_8cpp_1ae52863898b89c9232c92c1b6e1d76c2b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_CONFIG_OUT<sp/><sp/>0x09</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="_weather___balloon_8cpp_1ac6adf6372ba4fc55bb81e6a1b62e59d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_CONFIG_PWR<sp/><sp/>0x12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="_weather___balloon_8cpp_1a335669658677baf0a51458e3055f97b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_CONFIG_WAAS<sp/>0x37</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="_weather___balloon_8cpp_1adbe0ec6abc2a7aad14739af2084e7261" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_ACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x83</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="_weather___balloon_8cpp_1a3b24d3a4f5c25565a114df73a9c203cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_NACK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x84</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GPS<sp/>precision<sp/>is<sp/>within<sp/>2.5<sp/>meters.<sp/>For<sp/>dilution<sp/>of<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="_weather___balloon_8cpp_1af01c2d0b190db0e453c4dabc1fcd2a04" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GPS_PRECISION<sp/><sp/><sp/>2.5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LCD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>LCD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>LiquidCrystal_I2C<sp/><sp/><sp/>lcd(I2C_ADDR,En_pin,Rw_pin,Rs_pin,D4_pin,D5_pin,D6_pin,D7_pin);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>heat<sp/>off.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" kindref="member">Heat_Enable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Have<sp/>we<sp/>set<sp/>the<sp/>DS3231<sp/>RTC<sp/>from<sp/>GPS<sp/>yet?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="_weather___balloon_8cpp_1a322075e5a178d4b804a56490a0fc9737" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a322075e5a178d4b804a56490a0fc9737" kindref="member">set_clock</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" kindref="member">reset_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="_weather___balloon_8cpp_1abe49854f4db78d08b8cab487faefddef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1abe49854f4db78d08b8cab487faefddef" kindref="member">countof</ref>(<sp/>T<sp/>(&amp;array)[N]<sp/>)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="_weather___balloon_8cpp_1a3d30b497ce4c43d95b30a95944f9d8be" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="_weather___balloon_8cpp_1a3d30b497ce4c43d95b30a95944f9d8be" kindref="member">sd_calc_crc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>block_size)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>crc,<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>,<sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CRC16<sp/>code<sp/>via<sp/>Scott<sp/>Dattalo<sp/>www.dattalo.com</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(crc<sp/>=<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>block_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/><sp/>=<sp/>((crc<sp/>&gt;&gt;<sp/>8)<sp/>^<sp/>src[i])<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/><sp/>^=<sp/>x<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>(crc<sp/>&lt;&lt;<sp/>8)<sp/>^<sp/>(x<sp/>&lt;&lt;<sp/>12)<sp/>^<sp/>(x<sp/>&lt;&lt;<sp/>5)<sp/>^<sp/>x;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/>Configures<sp/>the<sp/>gain<sp/>and<sp/>integration<sp/>time<sp/>for<sp/>the<sp/>TSL2561</highlight></codeline>
<codeline lineno="553"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="_weather___balloon_8cpp_1a3f8e34eb2b9d824174dced9eefeecf90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a3f8e34eb2b9d824174dced9eefeecf90" kindref="member">configure_TSL2561</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!tsl.<ref refid="class_adafruit___t_s_l2561___unified_1ac2781d263ae73533628d5844ca38b6de" kindref="member">begin</ref>())<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>was<sp/>a<sp/>problem<sp/>detecting<sp/>the<sp/>ADXL345<sp/>...<sp/>check<sp/>your<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Ooops,<sp/>no<sp/>TSL2561<sp/>detected<sp/>...<sp/>Check<sp/>your<sp/>wiring<sp/>or<sp/>I2C<sp/>ADDR!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.TSL2561<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec" kindref="member">enabled</ref>.TSL2561<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>sensor<sp/>gain<sp/>and<sp/>integration<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>also<sp/>manually<sp/>set<sp/>the<sp/>gain<sp/>or<sp/>enable<sp/>auto-gain<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tsl.setGain(TSL2561_GAIN_1X);<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>No<sp/>gain<sp/>...<sp/>use<sp/>in<sp/>bright<sp/>light<sp/>to<sp/>avoid<sp/>sensor<sp/>saturation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tsl.setGain(TSL2561_GAIN_16X);<sp/><sp/><sp/><sp/><sp/>//<sp/>16x<sp/>gain<sp/>...<sp/>use<sp/>in<sp/>low<sp/>light<sp/>to<sp/>boost<sp/>sensitivity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsl.<ref refid="class_adafruit___t_s_l2561___unified_1a9bb93fc9a1af24175c9838cdfe7b8904" kindref="member">enableAutoRange</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Auto-gain<sp/>...<sp/>switches<sp/>automatically<sp/>between<sp/>1x<sp/>and<sp/>16x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Changing<sp/>the<sp/>integration<sp/>time<sp/>gives<sp/>you<sp/>better<sp/>sensor<sp/>resolution<sp/>(402ms<sp/>=<sp/>16-bit<sp/>data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tsl.setIntegrationTime(TSL2561_INTEGRATIONTIME_13MS);<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>fast<sp/>but<sp/>low<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsl.<ref refid="class_adafruit___t_s_l2561___unified_1a594636810e6e26dc025b7f1b7a16024f" kindref="member">setIntegrationTime</ref>(<ref refid="_adafruit___t_s_l2561___u_8h_1a541f87fb512c1fd213e23c3a8b23264aac276f46523dbc7ea4a885cdda0826db7" kindref="member">TSL2561_INTEGRATIONTIME_101MS</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>medium<sp/>resolution<sp/>and<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tsl.setIntegrationTime(TSL2561_INTEGRATIONTIME_402MS);<sp/><sp/>//<sp/>16-bit<sp/>data<sp/>but<sp/>slowest<sp/>conversions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="_weather___balloon_8cpp_1afe6035149a64d5f448fbda08e9d1b67f" refkind="member"><highlight class="normal"><ref refid="_weather___balloon_8cpp_1afe6035149a64d5f448fbda08e9d1b67f" kindref="member">ISR</ref>(PCINT1_vect)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Pin<sp/>change<sp/>interrupt<sp/>for<sp/>Geiger<sp/>counters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>falling<sp/>or<sp/>rising<sp/>edge<sp/>detection<sp/>on<sp/>these<sp/>pins<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>track<sp/>previous<sp/>pin<sp/>states.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>a<sp/>pin<sp/>has<sp/>changed<sp/>value<sp/>we<sp/>update<sp/>the<sp/>appropriate<sp/>counter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Geiger<sp/>counter<sp/>outputs<sp/>a<sp/>low<sp/>pulse<sp/>of<sp/>150<sp/>microseconds<sp/>on<sp/>particle<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Previous<sp/>pin<sp/>value<sp/>for<sp/>port.<sp/>Static<sp/>to<sp/>preserve<sp/>between<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>previous_pins_j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grab<sp/>current<sp/>pin<sp/>state<sp/>quickly.<sp/>Low<sp/>pulse<sp/>from<sp/>Geiger<sp/>is<sp/>only<sp/>150<sp/>microseconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>current_state_j<sp/>=<sp/>PINJ;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>current<sp/>pin<sp/>state<sp/>is<sp/>low,<sp/>and<sp/>previous<sp/>it<sp/>was<sp/>high,<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>falling<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_state_j<sp/>&amp;<sp/>(1&lt;&lt;PJ1))<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(previous_pins_j<sp/>&amp;<sp/>(1&lt;&lt;PJ1))<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>.y_count++;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_state_j<sp/>&amp;<sp/>(1&lt;&lt;PJ0))<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(previous_pins_j<sp/>&amp;<sp/>(1&lt;&lt;PJ0))<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>.x_count++;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>for<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_pins_j<sp/>=<sp/>current_state_j;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="_weather___balloon_8cpp_1a9c4665742c6b6eb1f0bb9dde41f7cba3" refkind="member"><highlight class="normal"><ref refid="_weather___balloon_8cpp_1afe6035149a64d5f448fbda08e9d1b67f" kindref="member">ISR</ref>(PCINT2_vect)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pin<sp/>change<sp/>interrupt<sp/>for<sp/>Geiger<sp/>counters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>falling<sp/>or<sp/>rising<sp/>edge<sp/>detection<sp/>on<sp/>these<sp/>pins<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>to<sp/>track<sp/>previous<sp/>pin<sp/>states.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//When<sp/>a<sp/>pin<sp/>has<sp/>changed<sp/>value<sp/>we<sp/>update<sp/>the<sp/>appropriate<sp/>counter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Geiger<sp/>counter<sp/>outputs<sp/>a<sp/>low<sp/>pulse<sp/>of<sp/>150<sp/>microseconds<sp/>on<sp/>particle<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Previous<sp/>pin<sp/>value<sp/>for<sp/>port.<sp/>Static<sp/>to<sp/>preserve<sp/>between<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>previous_pins_k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grab<sp/>current<sp/>pin<sp/>state<sp/>quickly.<sp/>Low<sp/>pulse<sp/>from<sp/>Geiger<sp/>is<sp/>only<sp/>150<sp/>microseconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>current_state_k<sp/>=<sp/>PINK;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>current<sp/>pin<sp/>state<sp/>is<sp/>low,<sp/>and<sp/>previous<sp/>it<sp/>was<sp/>high,<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>falling<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_state_k<sp/>&amp;<sp/>(1&lt;&lt;PK7))<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(previous_pins_k<sp/>&amp;<sp/>(1&lt;&lt;PK7))<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trigger<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>.z_count++;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>for<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_pins_k<sp/>=<sp/>current_state_k;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="_weather___balloon_8cpp_1a98a290ada01eb27fd2ff4564371566e5" refkind="member"><highlight class="normal"><ref refid="_weather___balloon_8cpp_1afe6035149a64d5f448fbda08e9d1b67f" kindref="member">ISR</ref>(INT4_vect)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pin<sp/>change<sp/>interrupt<sp/>for<sp/>Geiger<sp/>counters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>falling<sp/>or<sp/>rising<sp/>edge<sp/>detection<sp/>on<sp/>these<sp/>pins<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//need<sp/>to<sp/>track<sp/>previous<sp/>pin<sp/>states.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//When<sp/>a<sp/>pin<sp/>has<sp/>changed<sp/>value<sp/>we<sp/>update<sp/>the<sp/>appropriate<sp/>counter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Geiger<sp/>counter<sp/>outputs<sp/>a<sp/>low<sp/>pulse<sp/>of<sp/>150<sp/>microseconds<sp/>on<sp/>particle<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Previous<sp/>pin<sp/>value<sp/>for<sp/>port.<sp/>Static<sp/>to<sp/>preserve<sp/>between<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>previous_pins_e<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>button<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>button_time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>led_status;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_time<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grab<sp/>current<sp/>pin<sp/>state<sp/>quickly.<sp/>Low<sp/>pulse<sp/>from<sp/>Geiger<sp/>is<sp/>only<sp/>150<sp/>microseconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>current_state_e<sp/>=<sp/>PINE;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>current<sp/>pin<sp/>state<sp/>is<sp/>high,<sp/>and<sp/>previous<sp/>it<sp/>was<sp/>low,<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>rising<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_state_e<sp/>&amp;<sp/>(1&lt;&lt;PE4))<sp/>&gt;=<sp/>1<sp/>&amp;&amp;<sp/>(previous_pins_e<sp/>&amp;<sp/>(1&lt;&lt;PE4))<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_time<sp/>=<sp/>current_time;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>led_status<sp/>=<sp/>PINA<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>PA0)<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>PA1)<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>PA2);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTA<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PA0)<sp/>&amp;<sp/>~(1<sp/>&lt;&lt;<sp/>PA1)<sp/>&amp;<sp/>~(1<sp/>&lt;&lt;<sp/>PA2);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_state_e<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>PE4))<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>((previous_pins_e<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>PE4))<sp/>&gt;=<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTA<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PA0)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>PA1)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>PA2);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((current_time<sp/>-<sp/>button_time)<sp/>&gt;<sp/>1000L<sp/>&amp;&amp;<sp/>(current_time<sp/>-<sp/>button_time)<sp/>&lt;<sp/>5000L)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" kindref="member">reset_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTA<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PA0)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>PA1)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>PA2);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" kindref="member">reset_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTA<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PA0)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>PA1)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>PA2);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTA<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PA0)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>PA1)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>PA2);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>for<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_pins_e<sp/>=<sp/>current_state_e;</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683" refid="_weather___balloon_8cpp_1a43905d6fb5c4d433a49f527fa6ab811f" refkind="member"><highlight class="normal"><ref refid="_weather___balloon_8cpp_1afe6035149a64d5f448fbda08e9d1b67f" kindref="member">ISR</ref>(WDT_vect)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>when<sp/>the<sp/>watchdog<sp/>wakes<sp/>from<sp/>sleep.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="_weather___balloon_8cpp_1a7a7c74cf298c3aefb3d55c6e9b926321" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a7a7c74cf298c3aefb3d55c6e9b926321" kindref="member">configure_button</ref>()<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(2,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>EIMSK<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>INT4);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>EICRB<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>ISC41);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>EICRB<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>ISC40);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>EIMSK<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>INT4);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>pin<sp/>changes<sp/>will<sp/>call<sp/>the<sp/>ISR(PCINT0_vect)<sp/>for<sp/>button<sp/>presses.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="_weather___balloon_8cpp_1ad38c713e780279c311e2e78a03b4f5bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ad38c713e780279c311e2e78a03b4f5bf" kindref="member">configure_geiger</ref>()<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>pin<sp/>interrupts<sp/>for<sp/>Geiger<sp/>counter<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>X<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pin<sp/>64<sp/>(PJ1,<sp/>PCINT10,<sp/>TXD3),<sp/>on<sp/>PCIE1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arduino<sp/>D14<sp/>(TX3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Y-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pin<sp/>63<sp/>(PJ0,<sp/>PCINT10,<sp/>RXD3),<sp/>on<sp/>PCIE1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arduino<sp/>D15<sp/>(RX3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Z-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pin<sp/>63<sp/>(PK7,<sp/>PCINT23,<sp/>ADC15),<sp/>on<sp/>PCIE2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arduino<sp/>A15<sp/>(ADC15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>as<sp/>input<sp/>for<sp/>high<sp/>impedance.<sp/>However,<sp/>this<sp/>will<sp/>allow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>noise<sp/>to<sp/>trigger<sp/>the<sp/>pin<sp/>if<sp/>it<sp/>is<sp/>unconnected.<sp/>The<sp/>Geiger<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>running<sp/>on<sp/>3.3<sp/>volts,<sp/>so<sp/>a<sp/>weak<sp/>pull-up<sp/>sends<sp/>5<sp/>volts<sp/>through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>not<sp/>be<sp/>healthy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(14,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(15,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(A15,<sp/>INPUT_PULLUP);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>pin<sp/>change<sp/>interrupts<sp/>for<sp/>the<sp/>needed<sp/>port.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>PCICR<sp/>|=<sp/>(1&lt;&lt;PCIE1)<sp/>|<sp/>(1&lt;&lt;PCIE2);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>mask<sp/>to<sp/>allow<sp/>interrupts<sp/>ONLY<sp/>for<sp/>this<sp/>pin.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>PCMSK1<sp/>|=<sp/>(1&lt;&lt;PCINT10)<sp/>|<sp/>(1&lt;&lt;PCINT9);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>PCMSK2<sp/>|=<sp/>(1&lt;&lt;PCINT23);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>pin<sp/>changes<sp/>will<sp/>call<sp/>the<sp/>ISR(PCINT1_vect)<sp/>for<sp/>X<sp/>and<sp/>Y.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>will<sp/>call<sp/>ISR(PCINT2_vect)<sp/>for<sp/>Z.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748" refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" kindref="member">compare_buffers</ref>(uint8_t<sp/>*first,<sp/>uint8_t<sp/>*<ref refid="_time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" kindref="member">second</ref>,<sp/>uint16_t<sp/>bytes)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>two<sp/>buffers<sp/>for<sp/>equality.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>default<sp/>if<sp/>we<sp/>didn&apos;t<sp/>short<sp/>circuit<sp/>on<sp/>mismatch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>bytes;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>!=<sp/>second[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>])<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG_MORE<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Buffer<sp/>mismatch<sp/>at<sp/>index:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(i);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>value<sp/>0x&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(first[i],<sp/>HEX);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>0x&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(second[i]);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770" refid="_weather___balloon_8cpp_1a0493b2a2e791c613e271755e39c7ff02" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a0493b2a2e791c613e271755e39c7ff02" kindref="member">configure_ds18b20</ref>()<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>Dallas<sp/>temp<sp/>dataLog.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>DS18B20_addr<sp/>[8]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>DS18B20.begin();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.num_found<sp/>=<sp/>DS18B20.getDeviceCount();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.num_found<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.DS18B20<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec" kindref="member">enabled</ref>.DS18B20<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.num_found;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DS18B20.getAddress(DS18B20_addr,<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>DS18B20<sp/>device<sp/>found:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(DS18B20_addr[j],<sp/>HEX);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>sensors<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" kindref="member">compare_buffers</ref>(DS18B20_addr,<sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.MAIN_ADDR,<sp/>8)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.main<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Main<sp/>Temp<sp/>Sensor<sp/>Found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" kindref="member">compare_buffers</ref>(DS18B20_addr,<sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.CUSTOM_ADDR,<sp/>8)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.custom<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Custom<sp/>Temp<sp/>Sensor<sp/>Found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" kindref="member">compare_buffers</ref>(DS18B20_addr,<sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.GPS_ADDR,<sp/>8)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.gps<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;GPS<sp/>Temp<sp/>Sensor<sp/>Found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" kindref="member">compare_buffers</ref>(DS18B20_addr,<sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.TSL2561_ADDR,<sp/>8)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.tsl2561<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;TSL2561<sp/>Temp<sp/>Sensor<sp/>Found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" kindref="member">compare_buffers</ref>(DS18B20_addr,<sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.UV_ADDR,<sp/>8)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.uv<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;UV<sp/>Temp<sp/>Sensor<sp/>Found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" kindref="member">compare_buffers</ref>(DS18B20_addr,<sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.INTERNAL_ADDR,<sp/>8)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.internal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Internal<sp/>Temp<sp/>Sensor<sp/>Found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1af4255510c1c5b3a92802bd817bb379c6" kindref="member">compare_buffers</ref>(DS18B20_addr,<sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.EXTERNAL_ADDR,<sp/>8)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.external<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;External<sp/>Temp<sp/>Sensor<sp/>Found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>global<sp/>desired<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DS18B20.setResolution(<ref refid="_weather___balloon_8cpp_1a2042d0bb2f483912475a0570f65887e9" kindref="member">DS18B20_RESOLUTION</ref>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>wait<sp/>for<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DS18B20.setWaitForConversion(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command<sp/>to<sp/>get<sp/>temperatures<sp/>so<sp/>that<sp/>the<sp/>conversion<sp/>complete<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>used<sp/>in<sp/>the<sp/>main<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Requesting<sp/>DS18B20<sp/>all<sp/>temps...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DS18B20.requestTemperatures();</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="_weather___balloon_8cpp_1a94cd393dc19bb016dfea24631d4a3615" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a94cd393dc19bb016dfea24631d4a3615" kindref="member">configure_ms5607</ref>()<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ms5607.connect()&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Error<sp/>connecting<sp/>to<sp/>MS5607...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>something<sp/>about<sp/>fail<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>calibration<sp/>from<sp/>ROM<sp/>of<sp/>sensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms5607.ReadProm();</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>found<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.MS5607<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec" kindref="member">enabled</ref>.MS5607<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884" refid="_weather___balloon_8cpp_1a2c2e98945e78daa792b87b30868c3907" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a2c2e98945e78daa792b87b30868c3907" kindref="member">configure_LSM9DS1</ref>()<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>initializing<sp/>the<sp/>DOF,<sp/>there<sp/>are<sp/>a<sp/>few<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>may<sp/>need<sp/>to<sp/>adjust.<sp/>Use<sp/>the<sp/>settings<sp/>struct<sp/>to<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>device&apos;s<sp/>communication<sp/>mode<sp/>and<sp/>addresses:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a6512c63d06cce5f99760b1b3a6a4dfe9" kindref="member">commInterface</ref><sp/>=<sp/><ref refid="_l_s_m9_d_s1___types_8h_1abd62c19dfd2401eba73af16c64296adfad6b4b72104938596419f879b63cd2d72" kindref="member">IMU_MODE_I2C</ref>;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1aec4e1d3e3f38b4e3e0f74f1640e16faa" kindref="member">mAddress</ref><sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a9bb94ac54f97758f53ae168206e48061" kindref="member">LSM9DS1_M</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a8397fc6c94a11a8a09f3dd17b28cf2a4" kindref="member">settings</ref>.<ref refid="struct_i_m_u_settings_1a22b2648befc58307b43edc9e74acd583" kindref="member">device</ref>.<ref refid="structdevice_settings_1a2f43ac785e01fcbcfaf8436885f638ab" kindref="member">agAddress</ref><sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a733d92c87c7253b93ad4bf6a6ed54952" kindref="member">LSM9DS1_AG</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>lines<sp/>will<sp/>only<sp/>take<sp/>effect<sp/>AFTER<sp/>calling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DOF.begin(),<sp/>which<sp/>verifies<sp/>communication<sp/>with<sp/>the<sp/>DOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>turns<sp/>it<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!DOF.<ref refid="class_l_s_m9_d_s1_1a8728e560c76bd120b3711af15a6ecbd6" kindref="member">begin</ref>())<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>communicate<sp/>with<sp/>LSM9DS1.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Double-check<sp/>wiring.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.LSM9DS1<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.LSM9DS1<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec" kindref="member">enabled</ref>.LSM9DS1<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a97939cb15fcb7e33abcd6d3a9230d943" kindref="member">calibrate</ref>();</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOF.<ref refid="class_l_s_m9_d_s1_1afb45f0bcbcbeb15d4bd1a28821b24d14" kindref="member">calibrateMag</ref>();</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="_weather___balloon_8cpp_1abb8700028b489f20622252823d383f2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1abb8700028b489f20622252823d383f2d" kindref="member">configure_sht31</ref>()<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>and<sp/>check<sp/>for<sp/>humidity<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>sht31.<ref refid="class_adafruit___s_h_t31_1a104eb2dfd27a732420e1fc3755516690" kindref="member">begin</ref>(0x44))<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>0x45<sp/>for<sp/>alternate<sp/>i2c<sp/>addr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>find<sp/>SHT31&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.SHT31<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>something<sp/>here<sp/>about<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>found<sp/>the<sp/><sp/>humidity<sp/>sensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.SHT31<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a806a54c6a6125ca7b0d2c5d90bb6acec" kindref="member">enabled</ref>.SHT31<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>heater,<sp/>its<sp/>cold<sp/>up<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sensor<sp/>performs<sp/>best<sp/>in<sp/>5-60<sp/>C<sp/>temps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>that<sp/>changes<sp/>the<sp/>relative<sp/>humidity,<sp/>there<sp/>is<sp/>no<sp/>compensation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sht31.heater(true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="_weather___balloon_8cpp_1ab21671796ffdb5448be7facdbae0a1fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ab21671796ffdb5448be7facdbae0a1fa" kindref="member">print_found</ref>()<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>a<sp/>list<sp/>of<sp/>all<sp/>sensors<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;\nSensors<sp/>found&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;-------------&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;DS18B20:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.num_found);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>MS5607:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.MS5607);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;LSM9DS1:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.LSM9DS1);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>SHT31:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.SHT31);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;TLS2561:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.TSL2561);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(1000);</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946" refid="_weather___balloon_8cpp_1aec2dcfe4cd6ca84e8df5730d179fdc6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1aec2dcfe4cd6ca84e8df5730d179fdc6f" kindref="member">configure_sdcard</ref>()<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard.<ref refid="class_sd2_card_1afaec9a22060626b02c07a09eff2e9113" kindref="member">init</ref>(<ref refid="_sd2_card_8h_1abf126d9da3318e2709bbc3f2ab3cb3d1" kindref="member">SPI_HALF_SPEED</ref>,<sp/>SS_PIN)==0)<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>initilizing<sp/>SDCard...\nError:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(sdcard.<ref refid="class_sd2_card_1adfa5b1a39875236dff591acbd560bfe7" kindref="member">errorCode</ref>(),<sp/>HEX);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" kindref="member">RED_LED</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Card<sp/>size:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" kindref="member">blocks</ref><sp/>=<sp/>sdcard.<ref refid="class_sd2_card_1a862473431cc314238bfccdc531a70d3a" kindref="member">cardSize</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(sdcard_data.<ref refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" kindref="member">blocks</ref>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>blocks&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tail<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a276e156004c668500daa7aaa9a770585" kindref="member">find_sdcard_tail</ref>(1,<sp/>sdcard_data.<ref refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" kindref="member">blocks</ref>);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref><sp/>=<sp/>tail;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;\nFound<sp/>tail<sp/>of<sp/>log<sp/>at<sp/>block:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" kindref="member">GREEN_LED</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;\nDid<sp/>NOT<sp/>find<sp/>tail<sp/>of<sp/>log<sp/>at<sp/>block:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" kindref="member">RED_LED</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="_weather___balloon_8cpp_1a24d559ff8c4c36c0c5b27749ec0f1db7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a24d559ff8c4c36c0c5b27749ec0f1db7" kindref="member">configure_PID</ref>()<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>PID...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_main.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_gps.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_tsl.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_sht.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_custom.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_uv.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_main.SetSampleTime(<ref refid="_weather___balloon_8cpp_1a6f6f49388c74bb24a8f63771bd997d97" kindref="member">SAMPLE_TIME</ref>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_gps.SetSampleTime(<ref refid="_weather___balloon_8cpp_1a6f6f49388c74bb24a8f63771bd997d97" kindref="member">SAMPLE_TIME</ref>);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_tsl.SetSampleTime(<ref refid="_weather___balloon_8cpp_1a6f6f49388c74bb24a8f63771bd997d97" kindref="member">SAMPLE_TIME</ref>);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_sht.SetSampleTime(<ref refid="_weather___balloon_8cpp_1a6f6f49388c74bb24a8f63771bd997d97" kindref="member">SAMPLE_TIME</ref>);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_custom.SetSampleTime(<ref refid="_weather___balloon_8cpp_1a6f6f49388c74bb24a8f63771bd997d97" kindref="member">SAMPLE_TIME</ref>);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>PID_uv.SetSampleTime(<ref refid="_weather___balloon_8cpp_1a6f6f49388c74bb24a8f63771bd997d97" kindref="member">SAMPLE_TIME</ref>);</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000" refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" kindref="member">piezo_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PIEZO<sp/>POWER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRJ<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PJ7);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTJ<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PJ7);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PIEZO<sp/>POWER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRJ<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PJ7);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTJ<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PJ7);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012" refid="_weather___balloon_8cpp_1aa1ddd1a74edee558cd1f5bbf58c32eba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1aa1ddd1a74edee558cd1f5bbf58c32eba" kindref="member">tsl2561_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TSL2561<sp/>as<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRJ<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PJ5);</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>on<sp/>TSL2561</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTJ<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PJ5);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Tristate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRJ<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PJ5);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTJ<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PJ5);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025" refid="_weather___balloon_8cpp_1aa705df77518e8cb907ba58c825af7531" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1aa705df77518e8cb907ba58c825af7531" kindref="member">ms5607_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRJ<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PJ6);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTJ<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PJ6);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Tristate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRJ<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PJ6);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTJ<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PJ6);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038" refid="_weather___balloon_8cpp_1a19d08a06df1dca8e8a9be91e9de13f33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a19d08a06df1dca8e8a9be91e9de13f33" kindref="member">sht31_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRJ<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PJ3);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SHT31<sp/>reset<sp/>is<sp/>inverse<sp/>of<sp/>power<sp/>control.<sp/>Shorting<sp/>to<sp/>ground<sp/>resets<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>holds<sp/>I2C<sp/>hostage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTJ<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PJ3);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tri<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRJ<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PJ3);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTJ<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PJ3);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052" refid="_weather___balloon_8cpp_1ae30e39a79eefe72511818815ea7276eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ae30e39a79eefe72511818815ea7276eb" kindref="member">geiger_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a62875728932bfc6752ba857df3fdb182" kindref="member">GEIGER_PWR_PIN</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tri<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a62875728932bfc6752ba857df3fdb182" kindref="member">GEIGER_PWR_PIN</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062" refid="_weather___balloon_8cpp_1aeea7cb9977724d0eff70fb24d03ef572" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1aeea7cb9977724d0eff70fb24d03ef572" kindref="member">sd_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SD<sp/>Power</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRG<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PG1);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTG<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PG1);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tristate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRG<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PG1);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTG<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PG1);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074" refid="_weather___balloon_8cpp_1a4535edf461b17f1e616af9db0447dc01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a4535edf461b17f1e616af9db0447dc01" kindref="member">gps_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRL<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PL7)<sp/>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTL<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PL7);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tristate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRL<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PL7)<sp/>;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTL<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PL7);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086" refid="_weather___balloon_8cpp_1af2d24e60ddd98c1e2d7ebb921f6d7f46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1af2d24e60ddd98c1e2d7ebb921f6d7f46" kindref="member">ds18b20_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DS18B20<sp/>Power</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRE<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PE2);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTE<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PE2);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tri<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRE<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PE2);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTE<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PE2);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098" refid="_weather___balloon_8cpp_1a4e9c8d405702380dcc2cb85707283b71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a4e9c8d405702380dcc2cb85707283b71" kindref="member">dof_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>9DOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRA<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PA7);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTA<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PA7);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tristate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DDRA<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PA7);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PORTA<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PA7);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110" refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" kindref="member">led_power</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" kindref="member">RED_LED</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" kindref="member">YELLOW_LED</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" kindref="member">GREEN_LED</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" kindref="member">RED_LED</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" kindref="member">YELLOW_LED</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" kindref="member">GREEN_LED</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" kindref="member">RED_LED</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" kindref="member">YELLOW_LED</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" kindref="member">GREEN_LED</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126" refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" kindref="member">power_sensors</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power)<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ae30e39a79eefe72511818815ea7276eb" kindref="member">geiger_power</ref>(power);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aa705df77518e8cb907ba58c825af7531" kindref="member">ms5607_power</ref>(power);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aa1ddd1a74edee558cd1f5bbf58c32eba" kindref="member">tsl2561_power</ref>(power);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" kindref="member">piezo_power</ref>(power);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a4e9c8d405702380dcc2cb85707283b71" kindref="member">dof_power</ref>(power);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a19d08a06df1dca8e8a9be91e9de13f33" kindref="member">sht31_power</ref>(power);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aeea7cb9977724d0eff70fb24d03ef572" kindref="member">sd_power</ref>(power);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a4535edf461b17f1e616af9db0447dc01" kindref="member">gps_power</ref>(power);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af2d24e60ddd98c1e2d7ebb921f6d7f46" kindref="member">ds18b20_power</ref>(power);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" kindref="member">led_power</ref>(power);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1adc5a223dccf8bbdeb83b1e98c1a5e068" kindref="member">MAIN_HEATER_PIN</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a86a504b275408486d19f32e6923e6c10" kindref="member">UV_HEATER_PIN</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a9bd50323652c3e5de42af2a1d65e7930" kindref="member">TSL2561_HEATER_PIN</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a126d5b2f190e7e95a7b8877c920a2258" kindref="member">SHT31_HEATER_PIN</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a62875728932bfc6752ba857df3fdb182" kindref="member">GEIGER_PWR_PIN</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1afa22ab511c2e1ff0c2b6d670fb54b907" kindref="member">GPS_HEATER_PIN</ref>,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1adc5a223dccf8bbdeb83b1e98c1a5e068" kindref="member">MAIN_HEATER_PIN</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a86a504b275408486d19f32e6923e6c10" kindref="member">UV_HEATER_PIN</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a9bd50323652c3e5de42af2a1d65e7930" kindref="member">TSL2561_HEATER_PIN</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a126d5b2f190e7e95a7b8877c920a2258" kindref="member">SHT31_HEATER_PIN</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1a62875728932bfc6752ba857df3fdb182" kindref="member">GEIGER_PWR_PIN</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pinMode(<ref refid="_weather___balloon_8cpp_1afa22ab511c2e1ff0c2b6d670fb54b907" kindref="member">GPS_HEATER_PIN</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161" refid="_weather___balloon_8cpp_1a905910daced665e99b1c14fa51ef9938" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a905910daced665e99b1c14fa51ef9938" kindref="member">watchdog_sleep</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>WDT<sp/>for<sp/>sleep<sp/>waking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>reset<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>MCUSR<sp/>&amp;=<sp/>~(1&lt;&lt;WDRF);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>order<sp/>to<sp/>change<sp/>WDE<sp/>or<sp/>the<sp/>prescaler,<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>WDCE<sp/>(This<sp/>will<sp/>allow<sp/>updates<sp/>for<sp/>4<sp/>clock<sp/>cycles).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>WDTCSR<sp/>|=<sp/>(1&lt;&lt;WDCE)<sp/>|<sp/>(1&lt;&lt;WDE);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>new<sp/>watchdog<sp/>timeout<sp/>prescaler<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WDTCSR<sp/>=<sp/>1&lt;&lt;WDP0<sp/>|<sp/>1&lt;&lt;WDP3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>8.0<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WDTCSR<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>WDP2)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>WDP1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>1<sp/>Second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WDTCSR<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>WDP2)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>WDP1)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>WDP0);<sp/>//<sp/>2<sp/>seconds;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>the<sp/>interrupt<sp/>and<sp/>then<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>WDTCSR<sp/>=<sp/>(1<sp/>&lt;&lt;WDP3)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>WDIE)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>WDE);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4<sp/>seconds;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183" refid="_weather___balloon_8cpp_1ac41bb5082e170a29d9fac793b99d2888" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ac41bb5082e170a29d9fac793b99d2888" kindref="member">watchdog_reset_only</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>WDT<sp/>for<sp/>sleep<sp/>waking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>reset<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/>MCUSR<sp/>&amp;=<sp/>~(1&lt;&lt;WDRF);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>order<sp/>to<sp/>change<sp/>WDE<sp/>or<sp/>the<sp/>prescaler,<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>WDCE<sp/>(This<sp/>will<sp/>allow<sp/>updates<sp/>for<sp/>4<sp/>clock<sp/>cycles).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>WDTCSR<sp/>|=<sp/>(1&lt;&lt;WDCE)<sp/>|<sp/>(1&lt;&lt;WDE);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>new<sp/>watchdog<sp/>timeout<sp/>prescaler<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WDTCSR<sp/>=<sp/>1&lt;&lt;WDP0<sp/>|<sp/>1&lt;&lt;WDP3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>8.0<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WDTCSR<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>WDP2)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>WDP1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>1<sp/>Second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WDTCSR<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>WDP2)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>WDP1)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>WDP0);<sp/>//<sp/>2<sp/>seconds;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/>WDTCSR<sp/>=<sp/>(1<sp/>&lt;&lt;WDP3)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>WDE);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4<sp/>seconds;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>WD<sp/>interrupt<sp/>(note<sp/>no<sp/>reset).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WDTCSR<sp/>|=<sp/>_BV(WDIE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206" refid="_weather___balloon_8cpp_1a822a13dcab2c88f65ce6db0a3039596d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a822a13dcab2c88f65ce6db0a3039596d" kindref="member">disable_peripherals</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we&apos;ve<sp/>entered<sp/>alarm<sp/>mode,<sp/>or<sp/>assumed<sp/>location<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>all<sp/>peripherals<sp/>to<sp/>save<sp/>power.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>power_adc_disable();</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>power_spi_disable();</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>power_twi_disable();</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>power_usart0_disable();</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>power_usart1_disable();</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>power_usart2_disable();</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//power_usart3_disable();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219" refid="_weather___balloon_8cpp_1a38dae68379e12eee7b465eac207d9e27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a38dae68379e12eee7b465eac207d9e27" kindref="member">enter_sleep</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>EDIT:<sp/>could<sp/>also<sp/>use<sp/>SLEEP_MODE_PWR_DOWN<sp/>for<sp/>lowest<sp/>power<sp/>consumption.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>set_sleep_mode(SLEEP_MODE_PWR_DOWN);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>sleep_enable();</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//sleep_bod_disable();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>enter<sp/>sleep<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>sleep_mode();</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>program<sp/>will<sp/>continue<sp/>from<sp/>here<sp/>after<sp/>the<sp/>WDT<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>sleep_disable();<sp/></highlight><highlight class="comment">//<sp/>First<sp/>thing<sp/>to<sp/>do<sp/>is<sp/>disable<sp/>sleep.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-enable<sp/>the<sp/>peripherals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//power_all_enable();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1235" refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" kindref="member">location_alarm</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a822a13dcab2c88f65ce6db0a3039596d" kindref="member">disable_peripherals</ref>();</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a905910daced665e99b1c14fa51ef9938" kindref="member">watchdog_sleep</ref>();</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a38dae68379e12eee7b465eac207d9e27" kindref="member">enter_sleep</ref>();</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WDTCSR<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>WDIE);</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" kindref="member">flash_landing</ref>(10);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" kindref="member">piezo_power</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.begin(115200);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(1000L,<sp/>250L,<sp/><ref refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" kindref="member">PIEZO_PIN</ref>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(2000L,<sp/>250L,<sp/><ref refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" kindref="member">PIEZO_PIN</ref>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" kindref="member">piezo_power</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252" refid="_weather___balloon_8cpp_1a381ac8dbd73c0461a2bc7169fbc63e61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a381ac8dbd73c0461a2bc7169fbc63e61" kindref="member">count_down_led</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" kindref="member">led_power</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" kindref="member">RED_LED</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" kindref="member">YELLOW_LED</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" kindref="member">GREEN_LED</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(3333);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a01649d652fa50957c6ef3c32b1238038" kindref="member">GREEN_LED</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(3333);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" kindref="member">YELLOW_LED</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(3333);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a073dbcb7f5bc4f4b45dc048b55eaff3d" kindref="member">RED_LED</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" kindref="member">led_power</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274" refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" kindref="member">setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac41bb5082e170a29d9fac793b99d2888" kindref="member">watchdog_reset_only</ref>();</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a7a7c74cf298c3aefb3d55c6e9b926321" kindref="member">configure_button</ref>();</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" kindref="member">power_sensors</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>EEPROM.get(0,<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1285"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="1286"><highlight class="comment"></highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(F(&quot;Launched:<sp/>&quot;));</highlight></codeline>
<codeline lineno="1288"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(configuration.launched);</highlight></codeline>
<codeline lineno="1289"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>Alarm:<sp/>&quot;));</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.println(configuration.alarm);</highlight></codeline>
<codeline lineno="1291"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.alarm<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>||<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a381ac8dbd73c0461a2bc7169fbc63e61" kindref="member">count_down_led</ref>();</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" kindref="member">reset_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEPROM.put(0,<sp/><ref refid="_weather___balloon_8cpp_1af913d90b1b4908442e095aaba6f05119" kindref="member">default_config</ref>);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" kindref="member">reset_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" kindref="member">flash_landing</ref>(10);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" kindref="member">piezo_power</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(1000,<sp/>250,<sp/><ref refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" kindref="member">PIEZO_PIN</ref>);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" kindref="member">flash_landing</ref>(10);</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(2000,<sp/>250,<sp/><ref refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" kindref="member">PIEZO_PIN</ref>);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" kindref="member">piezo_power</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>EEPROM.get(0,<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"></highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(F(&quot;Launched:<sp/>&quot;));</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(configuration.launched);</highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>Alarm:<sp/>&quot;));</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.println(configuration.alarm);</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"></highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/><sp/><sp/><sp/>delay(1000);</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.alarm<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" kindref="member">Heat_Enable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a24d559ff8c4c36c0c5b27749ec0f1db7" kindref="member">configure_PID</ref>();</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LEDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" kindref="member">led_power</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delay(1000);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//digitalWrite(RED_LED,<sp/>HIGH);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sensor<sp/>power<sp/>and<sp/>heater<sp/>pin<sp/>modes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" kindref="member">power_sensors</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;\n\rRestarting<sp/>HAB<sp/>Controller&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Controller<sp/>will<sp/>now<sp/>configure<sp/>sensors.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock.<ref refid="class_d_s3231_1a1b6b23f76ae2a8c27f78e946608467ae" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(1000,<sp/>250,<sp/><ref refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" kindref="member">PIEZO_PIN</ref>);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Hardware<sp/>Serial<sp/>buffer<sp/>size:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(SERIAL_RX_BUFFER_SIZE);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>GPS...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.begin(9600);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" kindref="member">configure_GPS_NMEA</ref>();</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" kindref="member">configure_GPS_WAAS</ref>();</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>SDCard...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aec2dcfe4cd6ca84e8df5730d179fdc6f" kindref="member">configure_sdcard</ref>();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>Geigers...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ad38c713e780279c311e2e78a03b4f5bf" kindref="member">configure_geiger</ref>();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>and<sp/>setup<sp/>DS18B20s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>DS18B20s...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a0493b2a2e791c613e271755e39c7ff02" kindref="member">configure_ds18b20</ref>();</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pressure<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>MS5607...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a94cd393dc19bb016dfea24631d4a3615" kindref="member">configure_ms5607</ref>();</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>lux<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>TSL2561...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a3f8e34eb2b9d824174dced9eefeecf90" kindref="member">configure_TSL2561</ref>();</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>accel,<sp/>gyro<sp/>and<sp/>magnetometer<sp/>sensor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>LSM9DS1...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a2c2e98945e78daa792b87b30868c3907" kindref="member">configure_LSM9DS1</ref>();</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Humidity<sp/>sensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>SHT31...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1abb8700028b489f20622252823d383f2d" kindref="member">configure_sht31</ref>();</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>fuel<sp/>gauge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Configuring<sp/>fuel<sp/>gauge...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fuel_gauge.<ref refid="class_m_a_x17043_1a7f434b44531c65f4a3b31c4f5ebcb887" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restart<sp/>for<sp/>more<sp/>accurate<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Quick-starting<sp/>fuel<sp/>gauge...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fuel_gauge.<ref refid="class_m_a_x17043_1a853dbf7908a1c4a37405050ec5e9c9e6" kindref="member">quickStart</ref>();</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>any<sp/>commands<sp/>now<sp/>(or<sp/>type<sp/>help<sp/>for<sp/>command<sp/>list.)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab21671796ffdb5448be7facdbae0a1fa" kindref="member">print_found</ref>();</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Heat_Enable<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>analog<sp/>reading<sp/>can<sp/>be<sp/>inaccurate<sp/>due<sp/>to<sp/>ADC<sp/>capacitor<sp/>needing<sp/>to<sp/>be<sp/>primed,<sp/>so<sp/>start<sp/>it<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogRead(<ref refid="_weather___balloon_8cpp_1aae0736ba082f8ff448826f4b1bad56c0" kindref="member">UV_PIN</ref>);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a905910daced665e99b1c14fa51ef9938" kindref="member">watchdog_sleep</ref>();</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" kindref="member">power_sensors</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" kindref="member">location_alarm</ref>();</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FOR<sp/>TESTING<sp/>BATTERY<sp/>RUNTIME<sp/>ONLY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/><sp/><sp/><sp/>analogWrite(MAIN_HEATER_PIN,<sp/>150);</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/><sp/><sp/><sp/>analogWrite(TSL2561_HEATER_PIN,<sp/>150);</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"><sp/><sp/><sp/><sp/>analogWrite(UV_HEATER_PIN,<sp/>150);</highlight></codeline>
<codeline lineno="1413"><highlight class="comment"><sp/><sp/><sp/><sp/>analogWrite(SHT31_HEATER_PIN,<sp/>150);</highlight></codeline>
<codeline lineno="1414"><highlight class="comment"><sp/><sp/><sp/><sp/>analogWrite(GPS_HEATER_PIN,<sp/>150);</highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422" refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" kindref="member">flash_landing</ref>(uint16_t<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flash<sp/>location<sp/>landing<sp/>lights<sp/>for<sp/>time<sp/>ms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>DDRF<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PF1);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTF<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>PF1);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(time);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>DDRF<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PF1);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>PORTF<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>PF1);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432" refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>freq,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>millisecs,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pin)<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buzzer<sp/>harmonics<sp/>seem<sp/>to<sp/>be<sp/>around<sp/>2000<sp/>Hz<sp/>for<sp/>max<sp/>volume.<sp/>3500-4000<sp/>also<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>long<sp/>to<sp/>go<sp/>high<sp/>or<sp/>low<sp/>for<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>squareWave_us<sp/>=<sp/>(1000000L<sp/>/<sp/>(2<sp/>*<sp/>freq));</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>many<sp/>loops<sp/>to<sp/>beep<sp/>for?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>duration_loops<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)(freq<sp/>*<sp/>millisecs<sp/>/<sp/>1000L);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(F(&quot;Freq:<sp/>&quot;));</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(freq);</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>Square:<sp/>&quot;));</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(squareWave_us);</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>Duration:<sp/>&quot;));</highlight></codeline>
<codeline lineno="1444"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.println(duration_loops);</highlight></codeline>
<codeline lineno="1445"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>=0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>duration_loops;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(pin,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayMicroseconds(squareWave_us);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(pin,<sp/>LOW);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delayMicroseconds(squareWave_us);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458" refid="_weather___balloon_8cpp_1ab14d778dd0d52177eb147802a870639d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ab14d778dd0d52177eb147802a870639d" kindref="member">read_GPS</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Add<sp/>check<sp/>if<sp/>time<sp/>chip<sp/>has<sp/>been<sp/>set<sp/>from<sp/>GPS<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Better<sp/>accuracy<sp/>from<sp/>reliable<sp/>GPS<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//uint8_t<sp/>available<sp/>=<sp/>Serial1.available();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>read_char;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(available);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(F(&quot;<sp/>&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(Serial1.available())<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read_char<sp/>=<sp/>Serial1.read();</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//gps.encode(Serial1.read());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gps.<ref refid="class_tiny_g_p_s_plus_1ad7b78320b7e4967df17c6a27008a5154" kindref="member">encode</ref>(read_char);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(read_char);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gps.<ref refid="class_tiny_g_p_s_plus_1a886255f412f8e01f84e5104d36315fb3" kindref="member">location</ref>.<ref refid="struct_tiny_g_p_s_location_1a783c2898915440f51a6df233aba51923" kindref="member">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.lat<sp/>=<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a886255f412f8e01f84e5104d36315fb3" kindref="member">location</ref>.<ref refid="struct_tiny_g_p_s_location_1a86c3acea4f317b427eebb667e4d05a49" kindref="member">lat</ref>();</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.lng<sp/>=<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a886255f412f8e01f84e5104d36315fb3" kindref="member">location</ref>.<ref refid="struct_tiny_g_p_s_location_1a544e9009a5580b2fd5466821a5e5b782" kindref="member">lng</ref>();</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" kindref="member">YELLOW_LED</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.lat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.lng<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1aaa9a0918932bceef70e8eb4dbb988fbe" kindref="member">YELLOW_LED</ref>,<sp/>HIGH);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gps.<ref refid="class_tiny_g_p_s_plus_1a0b3451a4ee75e5880ffd88c3038eacf8" kindref="member">altitude</ref>.<ref refid="struct_tiny_g_p_s_decimal_1a2a1d868525e903eb193b7a36cdd76984" kindref="member">isValid</ref>()<sp/>&amp;&amp;<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a0b3451a4ee75e5880ffd88c3038eacf8" kindref="member">altitude</ref>.<ref refid="struct_tiny_g_p_s_decimal_1ab80191a3e02c92ad3f674b5df2ab752f" kindref="member">age</ref>()<sp/>&lt;<sp/>10000L)<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.altitude<sp/>=<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a0b3451a4ee75e5880ffd88c3038eacf8" kindref="member">altitude</ref>.<ref refid="struct_tiny_g_p_s_altitude_1a5a39d145bb1778814007206c765189f7" kindref="member">meters</ref>();</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.altitude<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gps.<ref refid="class_tiny_g_p_s_plus_1a83a70812b432d7f51c7c735bfe7be0f0" kindref="member">date</ref>.<ref refid="struct_tiny_g_p_s_date_1a0ef145848ab03e4e9db0e2cf3a4c42cd" kindref="member">isValid</ref>()<sp/>&amp;&amp;<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a83a70812b432d7f51c7c735bfe7be0f0" kindref="member">date</ref>.<ref refid="struct_tiny_g_p_s_date_1a7b92ac9058dbde1770eb52ce5da890c1" kindref="member">age</ref>()<sp/>&lt;<sp/>60000L)<sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.date<sp/>=<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a83a70812b432d7f51c7c735bfe7be0f0" kindref="member">date</ref>.<ref refid="struct_tiny_g_p_s_date_1a718150ae16f68afa9ae81f9d1b3ce3f4" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.date<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Date<sp/>age:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(gps.<ref refid="class_tiny_g_p_s_plus_1a83a70812b432d7f51c7c735bfe7be0f0" kindref="member">date</ref>.<ref refid="struct_tiny_g_p_s_date_1a7b92ac9058dbde1770eb52ce5da890c1" kindref="member">age</ref>());</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gps.<ref refid="class_tiny_g_p_s_plus_1a377c975527fa24b45fb86356505eb134" kindref="member">time</ref>.<ref refid="struct_tiny_g_p_s_time_1a85c38acaf804aecefc3f0358bf93d86a" kindref="member">isValid</ref>()<sp/>&amp;&amp;<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a377c975527fa24b45fb86356505eb134" kindref="member">time</ref>.<ref refid="struct_tiny_g_p_s_time_1a22b59e1d4b22435baa2a4446981f2dce" kindref="member">age</ref>()<sp/>&lt;<sp/>5000L)<sp/>{</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.time<sp/>=<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a377c975527fa24b45fb86356505eb134" kindref="member">time</ref>.<ref refid="struct_tiny_g_p_s_time_1afcdb632fee9d144b1414c9d7b95719f1" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>set<sp/>the<sp/>RTC.<sp/>This<sp/>will<sp/>always<sp/>set<sp/>the<sp/>clock<sp/>when<sp/>a<sp/>valid<sp/>GPS<sp/>time<sp/>is<sp/>first<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>protects<sp/>against<sp/>a<sp/>set<sp/>clock<sp/>with<sp/>backup<sp/>battery<sp/>having<sp/>clock<sp/>drift.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>synchronizes<sp/>the<sp/>clocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a322075e5a178d4b804a56490a0fc9737" kindref="member">set_clock</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock.<ref refid="class_d_s3231_1a15eb3576feaa3535415e9b82367c344c" kindref="member">setDateTime</ref>(gps.<ref refid="class_tiny_g_p_s_plus_1a83a70812b432d7f51c7c735bfe7be0f0" kindref="member">date</ref>.<ref refid="struct_tiny_g_p_s_date_1ae2cc914fec377b429d99f01204f50d60" kindref="member">year</ref>(),<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a83a70812b432d7f51c7c735bfe7be0f0" kindref="member">date</ref>.<ref refid="struct_tiny_g_p_s_date_1a6f3c5b4e72ef28b010f94ac9016315f3" kindref="member">month</ref>(),<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a83a70812b432d7f51c7c735bfe7be0f0" kindref="member">date</ref>.<ref refid="struct_tiny_g_p_s_date_1ae8cc5f80c49e328f792d168a44062000" kindref="member">day</ref>(),<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a377c975527fa24b45fb86356505eb134" kindref="member">time</ref>.<ref refid="struct_tiny_g_p_s_time_1a37fdb629b6ed0e31134214c7d07df2b1" kindref="member">hour</ref>(),<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a377c975527fa24b45fb86356505eb134" kindref="member">time</ref>.<ref refid="struct_tiny_g_p_s_time_1aef83c20c14d404219299da2d7e35cdce" kindref="member">minute</ref>(),<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1a377c975527fa24b45fb86356505eb134" kindref="member">time</ref>.<ref refid="struct_tiny_g_p_s_time_1a729cab36ced07eb5607503663fbe33e8" kindref="member">second</ref>());</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a322075e5a178d4b804a56490a0fc9737" kindref="member">set_clock</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>time:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(gps.<ref refid="class_tiny_g_p_s_plus_1a377c975527fa24b45fb86356505eb134" kindref="member">time</ref>.<ref refid="struct_tiny_g_p_s_time_1a22b59e1d4b22435baa2a4446981f2dce" kindref="member">age</ref>());</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gps.<ref refid="class_tiny_g_p_s_plus_1a5fb47066d1d03f4bb5853529053aab48" kindref="member">satellites</ref>.<ref refid="struct_tiny_g_p_s_integer_1aad411b5eb6cc16774ff0ff8d275df2fa" kindref="member">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.sats<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(gps.<ref refid="class_tiny_g_p_s_plus_1a5fb47066d1d03f4bb5853529053aab48" kindref="member">satellites</ref>.<ref refid="struct_tiny_g_p_s_integer_1a67de7e76d61dbd25eb32f701d8ce867b" kindref="member">value</ref>());</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.sats<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gps.<ref refid="class_tiny_g_p_s_plus_1a3a21b3ae7085bb278b35d703bf135632" kindref="member">hdop</ref>.<ref refid="struct_tiny_g_p_s_decimal_1a2a1d868525e903eb193b7a36cdd76984" kindref="member">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.hdop<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint16_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(gps.<ref refid="class_tiny_g_p_s_plus_1a3a21b3ae7085bb278b35d703bf135632" kindref="member">hdop</ref>.<ref refid="struct_tiny_g_p_s_decimal_1ac3ce80976e5d8456e9f211b910a6cb19" kindref="member">value</ref>());</highlight><highlight class="comment">//<sp/>*<sp/>GPS_PRECISION);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.hdop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gps.<ref refid="class_tiny_g_p_s_plus_1ad7800d3decbe58e355f5229bba231868" kindref="member">course</ref>.<ref refid="struct_tiny_g_p_s_decimal_1a2a1d868525e903eb193b7a36cdd76984" kindref="member">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.course<sp/>=<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1ad7800d3decbe58e355f5229bba231868" kindref="member">course</ref>.<ref refid="struct_tiny_g_p_s_course_1a76dc8ae6c2fe5ead9b44c8d53a3272ca" kindref="member">deg</ref>();</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.course<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gps.<ref refid="class_tiny_g_p_s_plus_1aa085c3e72a399a829dd92af52b373404" kindref="member">speed</ref>.<ref refid="struct_tiny_g_p_s_decimal_1a2a1d868525e903eb193b7a36cdd76984" kindref="member">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.speed<sp/>=<sp/>gps.<ref refid="class_tiny_g_p_s_plus_1aa085c3e72a399a829dd92af52b373404" kindref="member">speed</ref>.<ref refid="struct_tiny_g_p_s_speed_1aacee536241e810cdf4ba7846d6c202cb" kindref="member">mps</ref>();</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.speed<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1acaaa1b97759f106aaf5c83f39c17c58b" kindref="member">vdop</ref>.<ref refid="class_tiny_g_p_s_custom_1a06fad8448c014424bf96ed379b55da21" kindref="member">isValid</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>character<sp/>buffer<sp/>pointer<sp/>to<sp/>a<sp/>double<sp/>with<sp/>null<sp/>end<sp/>pointer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply<sp/>by<sp/>100<sp/>to<sp/>remove<sp/>decimal,<sp/>and<sp/>then<sp/>convert<sp/>to<sp/>integer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.vdop<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint16_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(strtod(<ref refid="_weather___balloon_8cpp_1acaaa1b97759f106aaf5c83f39c17c58b" kindref="member">vdop</ref>.<ref refid="class_tiny_g_p_s_custom_1ac5ad40a3d9b6fe386b2309f972566674" kindref="member">value</ref>(),<sp/>NULL));</highlight><highlight class="comment">//<sp/>*<sp/>100<sp/>*<sp/>GPS_PRECISION);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(vdop.value());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(dataLog.gps.vdop);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.vdop<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(gps.failedChecksum());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculate<sp/>pitch,<sp/>roll,<sp/>and<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pitch/roll<sp/>calculations<sp/>take<sp/>from<sp/>this<sp/>app<sp/>note:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://cache.freescale.com/files/sensors/doc/app_note/AN3461.pdf?fpsp=1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Heading<sp/>calculations<sp/>taken<sp/>from<sp/>this<sp/>app<sp/>note:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www51.honeywell.com/aero/common/documents/myaerospacecatalog-documents/Defense_Brochures-documents/Magnetic__Literature_Application_notes-documents/AN203_Compass_Heading_Using_Magnetometers.pdf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566" refid="_weather___balloon_8cpp_1a4d230d8f4d47ce65d33e15a1dc1dec76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a4d230d8f4d47ce65d33e15a1dc1dec76" kindref="member">printAttitude</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ax,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ay,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>az,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>my,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mz)</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>roll<sp/>=<sp/>atan2(ay,<sp/>az);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pitch<sp/>=<sp/>atan2(-ax,<sp/>sqrt(ay<sp/>*<sp/>ay<sp/>+<sp/>az<sp/>*<sp/>az));</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heading;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(my<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/>heading<sp/>=<sp/>(mx<sp/>&lt;<sp/>0)<sp/>?<sp/>180.0<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>heading<sp/>=<sp/>atan2(mx,<sp/>my);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/>heading<sp/>-=<sp/><ref refid="_weather___balloon_8cpp_1ad337b69f79bb731012571f96b472df45" kindref="member">DECLINATION</ref><sp/>*<sp/>PI<sp/>/<sp/>180;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heading<sp/>&gt;<sp/>PI)<sp/>heading<sp/>-=<sp/>(2<sp/>*<sp/>PI);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heading<sp/>&lt;<sp/>-PI)<sp/>heading<sp/>+=<sp/>(2<sp/>*<sp/>PI);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heading<sp/>&lt;<sp/>0)<sp/>heading<sp/>+=<sp/>2<sp/>*<sp/>PI;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>everything<sp/>from<sp/>radians<sp/>to<sp/>degrees:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>heading<sp/>*=<sp/>180.0<sp/>/<sp/>PI;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/>pitch<sp/>*=<sp/>180.0<sp/>/<sp/>PI;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/>roll<sp/><sp/>*=<sp/>180.0<sp/>/<sp/>PI;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Pitch,<sp/>Roll:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/>Serial.print(pitch,<sp/>2);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>Serial.println(roll,<sp/>2);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Heading:<sp/>&quot;</highlight><highlight class="normal">);<sp/>Serial.println(heading,<sp/>2);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596" refid="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" kindref="member">readSensors</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>30)<sp/>{</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>ir,<sp/>broadband<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>time<sp/>from<sp/>the<sp/>DS3231<sp/>RTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>date_time<sp/>=<sp/>clock.<ref refid="class_d_s3231_1adc4bc3149377fef827a7e504264fbd40" kindref="member">getDateTime</ref>();</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a37f7a481de32f77f428f03c07d60090e" kindref="member">unix_time</ref><sp/>=<sp/>date_time.<ref refid="struct_r_t_c_date_time_1af46df69448c5456b54e9acae7629efa8" kindref="member">unixtime</ref>;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>temperature<sp/>registers<sp/>are<sp/>updated<sp/>after<sp/>every<sp/>64-second<sp/>conversion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>want<sp/>force<sp/>temperature<sp/>conversion<sp/>use<sp/>forceConversion()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>clock.<ref refid="class_d_s3231_1ad398fd513aae24b219d19574e20da550" kindref="member">forceConversion</ref>();</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.main<sp/>=<sp/>clock.<ref refid="class_d_s3231_1a82074e0d3f0a4a646fc14f1afcb80448" kindref="member">readTemperature</ref>();</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab14d778dd0d52177eb147802a870639d" kindref="member">read_GPS</ref>();</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>read<sp/>from<sp/>the<sp/>accelerometer,<sp/>you<sp/>must<sp/>first<sp/>call<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>readAccel()<sp/>function.<sp/>When<sp/>this<sp/>exits,<sp/>it&apos;ll<sp/>update<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ax,<sp/>ay,<sp/>and<sp/>az<sp/>variables<sp/>with<sp/>the<sp/>most<sp/>current<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a9953684a1ff652a7d3a4d91e72bccaa1" kindref="member">readAccel</ref>();</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933" kindref="member">accel</ref>.x<sp/>=<sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a54e2a7888b67b47cf0dd986c5b91a3c5" kindref="member">calcAccel</ref>(DOF.<ref refid="class_l_s_m9_d_s1_1adac13514d176cfb54aed8cda9a056335" kindref="member">ax</ref>);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933" kindref="member">accel</ref>.y<sp/>=<sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a54e2a7888b67b47cf0dd986c5b91a3c5" kindref="member">calcAccel</ref>(DOF.<ref refid="class_l_s_m9_d_s1_1a978a357dedfa574d6e0fad33ad71e23f" kindref="member">ay</ref>);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933" kindref="member">accel</ref>.z<sp/>=<sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a54e2a7888b67b47cf0dd986c5b91a3c5" kindref="member">calcAccel</ref>(DOF.<ref refid="class_l_s_m9_d_s1_1aa631c8a90b90130b5be147dd4fae0841" kindref="member">az</ref>);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>read<sp/>from<sp/>the<sp/>magnetometer,<sp/>you<sp/>must<sp/>first<sp/>call<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>readMag()<sp/>function.<sp/>When<sp/>this<sp/>exits,<sp/>it&apos;ll<sp/>update<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mx,<sp/>my,<sp/>and<sp/>mz<sp/>variables<sp/>with<sp/>the<sp/>most<sp/>current<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>DOF.<ref refid="class_l_s_m9_d_s1_1ae127cf75aa5f3c5421e49363795dcd38" kindref="member">readMag</ref>();</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe" kindref="member">mag</ref>.x<sp/>=<sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a7d0b0740497b1a10cd3e46a282a143ec" kindref="member">calcMag</ref>(DOF.<ref refid="class_l_s_m9_d_s1_1a0e68eb9e44969070b6d84a93ba252f71" kindref="member">mx</ref>);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe" kindref="member">mag</ref>.y<sp/>=<sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a7d0b0740497b1a10cd3e46a282a143ec" kindref="member">calcMag</ref>(DOF.<ref refid="class_l_s_m9_d_s1_1a773f80f9b7cdf8375c84a4209895d732" kindref="member">my</ref>);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe" kindref="member">mag</ref>.z<sp/>=<sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a7d0b0740497b1a10cd3e46a282a143ec" kindref="member">calcMag</ref>(DOF.<ref refid="class_l_s_m9_d_s1_1aafe23993500ece9efd161e564787dce2" kindref="member">mz</ref>);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>read<sp/>from<sp/>the<sp/>gyroscope,<sp/>you<sp/>must<sp/>first<sp/>call<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>readGyro()<sp/>function.<sp/>When<sp/>this<sp/>exits,<sp/>it&apos;ll<sp/>update<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gx,<sp/>gy,<sp/>and<sp/>gz<sp/>variables<sp/>with<sp/>the<sp/>most<sp/>current<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a56e9710cb538a4c7f7ab94c2ca256ce9" kindref="member">readGyro</ref>();</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23" kindref="member">gyro</ref>.x<sp/>=<sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a76707323565bc4170ea8e27a932c95e4" kindref="member">calcGyro</ref>(DOF.<ref refid="class_l_s_m9_d_s1_1abf02b4544b5d529036adbac02e7b9f02" kindref="member">gx</ref>);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23" kindref="member">gyro</ref>.y<sp/>=<sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a76707323565bc4170ea8e27a932c95e4" kindref="member">calcGyro</ref>(DOF.<ref refid="class_l_s_m9_d_s1_1a0c351823fd094ff24ff245dd951cf783" kindref="member">gy</ref>);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23" kindref="member">gyro</ref>.z<sp/>=<sp/>DOF.<ref refid="class_l_s_m9_d_s1_1a76707323565bc4170ea8e27a932c95e4" kindref="member">calcGyro</ref>(DOF.<ref refid="class_l_s_m9_d_s1_1ad4d0f0585398ff917afcba1b4a73e519" kindref="member">gz</ref>);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.SHT31<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref><sp/>=<sp/>sht31.<ref refid="class_adafruit___s_h_t31_1a3b518218705509eb0ab35050bf79f00a" kindref="member">readTemperature</ref>();</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref>.humidity<sp/>=<sp/>sht31.<ref refid="class_adafruit___s_h_t31_1a2b522bec65225d5c2aadfccd31bb91e0" kindref="member">readHumidity</ref>();</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref><sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref>.humidity<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.MS5607<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ms5607.Read_CRC4()<sp/>==<sp/>ms5607.Calc_CRC4())<sp/>{</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1" kindref="member">ms5607</ref>.pressure<sp/>=<sp/>ms5607.GetPres();</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1" kindref="member">ms5607</ref><sp/>=<sp/>ms5607.GetTemp();</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>altitude<sp/>sensor<sp/>values<sp/>into<sp/>object<sp/>for<sp/>next<sp/>round?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms5607.Readout();</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1" kindref="member">ms5607</ref>.pressure<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1" kindref="member">ms5607</ref><sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>temp<sp/>is<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.DS18B20<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(temp_sensors.main<sp/>==<sp/>true<sp/>&amp;&amp;<sp/>DS18B20.isConversionAvailable(temp_sensors.MAIN_ADDR))<sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.temp.main<sp/>=<sp/>DS18B20.getTempC(temp_sensors.MAIN_ADDR);</highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(configuration.DEBUG_MORE<sp/>==<sp/>true)<sp/>{</highlight></codeline>
<codeline lineno="1669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;Main:<sp/>&quot;));</highlight></codeline>
<codeline lineno="1670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(dataLog.temp.main);</highlight></codeline>
<codeline lineno="1671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.temp.main<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1674"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.internal<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>DS18B20.isConversionAvailable(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.INTERNAL_ADDR))<sp/>{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.internal<sp/>=<sp/>DS18B20.getTempC(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.INTERNAL_ADDR);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DS18B20.requestTemperaturesByAddress(temp_sensors.INTERNAL_ADDR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG_MORE<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Internal:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.internal);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.internal<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.external<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>DS18B20.isConversionAvailable(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.EXTERNAL_ADDR))<sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.external<sp/>=<sp/>DS18B20.getTempC(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.EXTERNAL_ADDR);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DS18B20.requestTemperaturesByAddress(temp_sensors.EXTERNAL_ADDR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG_MORE<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;External:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.external);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.external<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.gps<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>DS18B20.isConversionAvailable(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.GPS_ADDR))<sp/>{</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref><sp/>=<sp/>DS18B20.getTempC(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.GPS_ADDR);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DS18B20.requestTemperaturesByAddress(temp_sensors.GPS_ADDR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref><sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.tsl2561<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>DS18B20.isConversionAvailable(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.TSL2561_ADDR))<sp/>{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.tsl2561<sp/>=<sp/>DS18B20.getTempC(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.TSL2561_ADDR);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DS18B20.requestTemperaturesByAddress(temp_sensors.TSL2561_ADDR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.tsl2561<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.uv<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>DS18B20.isConversionAvailable(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.UV_ADDR))<sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref><sp/>=<sp/>DS18B20.getTempC(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.UV_ADDR);</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DS18B20.requestTemperaturesByAddress(temp_sensors.UV_ADDR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref><sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.custom<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>DS18B20.isConversionAvailable(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.CUSTOM_ADDR))<sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.custom<sp/>=<sp/>DS18B20.getTempC(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.CUSTOM_ADDR);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DS18B20.requestTemperaturesByAddress(temp_sensors.CUSTOM_ADDR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.custom<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command<sp/>to<sp/>get<sp/>temperatures<sp/>for<sp/>next<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DS18B20.requestTemperatures();</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.voltage<sp/>=<sp/>fuel_gauge.<ref refid="class_m_a_x17043_1afcba3e7ee660335c78995d337cab1678" kindref="member">getVoltage</ref>();</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.soc<sp/>=<sp/>fuel_gauge.<ref refid="class_m_a_x17043_1a9567ba1006631e2d262a01ced542523f" kindref="member">getSOC</ref>();</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.TSL2561<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>new<sp/>sensor<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sensors_event_t<sp/>event;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//tsl.getEvent(&amp;event);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(event.light);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tsl.<ref refid="class_adafruit___t_s_l2561___unified_1a23378e7c4792b8b8c721d5a4def960fb" kindref="member">getLuminosity</ref>(&amp;broadband,<sp/>&amp;ir);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72" kindref="member">tsl</ref>.broadband<sp/>=<sp/>broadband;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72" kindref="member">tsl</ref>.ir<sp/>=<sp/>ir;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72" kindref="member">tsl</ref>.lux<sp/>=<sp/>tsl.<ref refid="class_adafruit___t_s_l2561___unified_1a5059ebabcbd037d53459ec9f3c6cdc4b" kindref="member">calculateLux</ref>(broadband,<sp/>ir);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref><sp/>=<sp/>analogRead(<ref refid="_weather___balloon_8cpp_1aae0736ba082f8ff448826f4b1bad56c0" kindref="member">UV_PIN</ref>);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>40)<sp/>{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight></codeline>
<codeline lineno="1754" refid="_weather___balloon_8cpp_1a83c4c9265bfb7ab061bf1313dfad3857" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="_weather___balloon_8cpp_1a83c4c9265bfb7ab061bf1313dfad3857" kindref="member">GPS_CRC</ref>(uint8_t<sp/>*payload,<sp/>uint16_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>CRC<sp/>for<sp/>GPS<sp/>payload.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>crc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>length;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(F(&quot;<sp/>&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(payload[i],<sp/>HEX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>^=<sp/>payload[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(&quot;<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(crc,<sp/>HEX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crc;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772" refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a807f93d1e791a191cfeceae0e12e02ed" kindref="member">configure_GPS_NMEA</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>start_message[4]<sp/>=<sp/>{<ref refid="_weather___balloon_8cpp_1ae54089afd7925e1d4d4599a9925ba7d4" kindref="member">GPS_SBYTE_1</ref>,<sp/><ref refid="_weather___balloon_8cpp_1a41c61b54b6c4e8df2ab8540312ea578f" kindref="member">GPS_SBYTE_2</ref>,<sp/>0,<sp/>9};</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>every<sp/>2<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Payload<sp/>for<sp/>update<sp/>frequency<sp/>is<sp/>of<sp/>the<sp/>form</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{NEMA<sp/>ID,<sp/>GGA,<sp/>GSA,<sp/>GSV,<sp/>GLL,<sp/>RMC,<sp/>VTG,<sp/>ZDA,<sp/>Attrib}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>payload[9]<sp/>=<sp/>{<ref refid="_weather___balloon_8cpp_1a450249148bd85e8396ad71ce44a0e11a" kindref="member">GPS_CONFIG_NMEA</ref>,<sp/><sp/><sp/>3,<sp/><sp/><sp/>10,<sp/><sp/><sp/>0,<sp/><sp/><sp/>0,<sp/><sp/><sp/>3,<sp/><sp/><sp/>3,<sp/><sp/>0,<sp/><sp/><sp/>0};</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>crc<sp/>of<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>crc<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a83c4c9265bfb7ab061bf1313dfad3857" kindref="member">GPS_CRC</ref>(payload,<sp/>9);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trailer<sp/>for<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>end_message[3]<sp/>=<sp/>{crc,<sp/><ref refid="_weather___balloon_8cpp_1af33afafa7f1cda9d36801855fda7def3" kindref="member">GPS_END_1</ref>,<sp/><ref refid="_weather___balloon_8cpp_1adc8803fa8bafb4b8793b13f3325aee70" kindref="member">GPS_END_2</ref>};</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bang<sp/>it<sp/>out<sp/>to<sp/>the<sp/>GPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Serial1.availableForWrite()<sp/>&gt;=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.write(start_message,<sp/>4);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.write(payload,<sp/>9);</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.write(end_message,<sp/>3);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Start:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>4;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(start_message[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>],<sp/>HEX);</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Payload:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>9;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(payload[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>],<sp/>HEX);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;End:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>3;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(end_message[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>],<sp/>HEX);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822" refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1aebe7b86629932aff68df05ed2eb74682" kindref="member">configure_GPS_WAAS</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>on<sp/>WAAS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>start_message[4]<sp/>=<sp/>{<ref refid="_weather___balloon_8cpp_1ae54089afd7925e1d4d4599a9925ba7d4" kindref="member">GPS_SBYTE_1</ref>,<sp/><ref refid="_weather___balloon_8cpp_1a41c61b54b6c4e8df2ab8540312ea578f" kindref="member">GPS_SBYTE_2</ref>,<sp/>0,<sp/>3};</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>payload[3]<sp/>=<sp/>{<ref refid="_weather___balloon_8cpp_1a335669658677baf0a51458e3055f97b0" kindref="member">GPS_CONFIG_WAAS</ref>,<sp/>1,<sp/>0};</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>crc<sp/>of<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>crc<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a83c4c9265bfb7ab061bf1313dfad3857" kindref="member">GPS_CRC</ref>(payload,<sp/>3);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trailer<sp/>for<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>end_message[3]<sp/>=<sp/>{crc,<sp/><ref refid="_weather___balloon_8cpp_1af33afafa7f1cda9d36801855fda7def3" kindref="member">GPS_END_1</ref>,<sp/><ref refid="_weather___balloon_8cpp_1adc8803fa8bafb4b8793b13f3325aee70" kindref="member">GPS_END_2</ref>};</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bang<sp/>it<sp/>out<sp/>to<sp/>the<sp/>GPS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Serial1.availableForWrite()<sp/>&gt;=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.write(start_message,<sp/>4);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.write(payload,<sp/>3);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial1.write(end_message,<sp/>3);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846" refid="_weather___balloon_8cpp_1a337f8319327997530d76011aac7bfa15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a337f8319327997530d76011aac7bfa15" kindref="member">adjust_heaters</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>heaters<sp/>checks<sp/>the<sp/>setpoint<sp/>temperatures<sp/>of<sp/>various<sp/>sensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>changes<sp/>the<sp/>output<sp/>appropriately<sp/>to<sp/>maintain<sp/>setpoint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852" refid="_weather___balloon_8cpp_1ad3d8902d8758d33ba2a536403243f47c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ad3d8902d8758d33ba2a536403243f47c" kindref="member">check_battery</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>140)<sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>150;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>battery<sp/>capacity<sp/>and<sp/>do<sp/>appropriate<sp/>things.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.voltage<sp/>&lt;=<sp/>3.2<sp/>||<sp/>dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.soc<sp/>&lt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>CO2<sp/>sensor<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" kindref="member">Heat_Enable</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.voltage<sp/>&gt;<sp/>3.4<sp/>&amp;&amp;<sp/>dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.soc<sp/>&gt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" kindref="member">Heat_Enable</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>150)<sp/>{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>160;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872" refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" kindref="member">heater_control</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>160)<sp/>{</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>170;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>setpoint<sp/>for<sp/>whatever<sp/>the<sp/>external<sp/>temperature<sp/>is,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plus<sp/>some<sp/>for<sp/>dew<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>setpoint<sp/>=<sp/>40;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>setpoint<sp/>=<sp/>-1000;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.external<sp/>!=<sp/>-1000<sp/>&amp;&amp;<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.external<sp/>!=<sp/>-127)<sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setpoint<sp/>=<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.external<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>minimum<sp/>operating<sp/>temps<sp/>for<sp/>electronic<sp/>components.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(setpoint<sp/>&lt;<sp/>-40<sp/>+<sp/><ref refid="_weather___balloon_8cpp_1a7b0dae08d630995fb336f20fca25b324" kindref="member">over_ambient</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setpoint<sp/>=<sp/>-40<sp/>+<sp/><ref refid="_weather___balloon_8cpp_1a7b0dae08d630995fb336f20fca25b324" kindref="member">over_ambient</ref>;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Temp<sp/>setpoint:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(setpoint<sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;F<sp/>Hystersis:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_weather___balloon_8cpp_1a025e0782db77609f8bde58b6e2b07405" kindref="member">hyster</ref><sp/>*<sp/>1.8);</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1afcc3b8eb63a92e9f7b96be31ceda6701" kindref="member">Heat_Enable</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>heaters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_main.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_gps.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_tsl.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_sht.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_custom.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_uv.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1adc5a223dccf8bbdeb83b1e98c1a5e068" kindref="member">MAIN_HEATER_PIN</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1aad36752a9ec8083497dc972e71dade95" kindref="member">CUSTOM_HEATER_PIN</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1afa22ab511c2e1ff0c2b6d670fb54b907" kindref="member">GPS_HEATER_PIN</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a9bd50323652c3e5de42af2a1d65e7930" kindref="member">TSL2561_HEATER_PIN</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a86a504b275408486d19f32e6923e6c10" kindref="member">UV_HEATER_PIN</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(<ref refid="_weather___balloon_8cpp_1a126d5b2f190e7e95a7b8877c920a2258" kindref="member">SHT31_HEATER_PIN</ref>,<sp/>LOW);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_main.SetMode(<ref refid="_p_i_d__v1_8h_1a3851a1a8ddec9eacd2e30a8a19bb8cc8" kindref="member">AUTOMATIC</ref>);</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_gps.SetMode(<ref refid="_p_i_d__v1_8h_1a3851a1a8ddec9eacd2e30a8a19bb8cc8" kindref="member">AUTOMATIC</ref>);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_tsl.SetMode(<ref refid="_p_i_d__v1_8h_1a3851a1a8ddec9eacd2e30a8a19bb8cc8" kindref="member">AUTOMATIC</ref>);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_sht.SetMode(<ref refid="_p_i_d__v1_8h_1a3851a1a8ddec9eacd2e30a8a19bb8cc8" kindref="member">AUTOMATIC</ref>);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_custom.SetMode(<ref refid="_p_i_d__v1_8h_1a3851a1a8ddec9eacd2e30a8a19bb8cc8" kindref="member">AUTOMATIC</ref>);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_uv.SetMode(<ref refid="_p_i_d__v1_8h_1a3851a1a8ddec9eacd2e30a8a19bb8cc8" kindref="member">AUTOMATIC</ref>);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>setpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>sensor<sp/>was<sp/>found,<sp/>and<sp/>valid<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.gps<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref><sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found.<sp/>Update<sp/>setpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.setpoint<sp/>=<sp/>setpoint;</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>temp<sp/>to<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.temp<sp/>=<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_gps.Compute();</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1afa22ab511c2e1ff0c2b6d670fb54b907" kindref="member">GPS_HEATER_PIN</ref>,<sp/><ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>sensor<sp/>found,<sp/>or<sp/>faulty<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_gps.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>heater.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1afa22ab511c2e1ff0c2b6d670fb54b907" kindref="member">GPS_HEATER_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>sensor<sp/>was<sp/>found,<sp/>and<sp/>valid<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.uv<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref><sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found.<sp/>Update<sp/>setpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.setpoint<sp/>=<sp/>setpoint;</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>temp<sp/>to<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.temp<sp/>=<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref>;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_uv.Compute();</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1a86a504b275408486d19f32e6923e6c10" kindref="member">UV_HEATER_PIN</ref>,<sp/><ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>sensor<sp/>found,<sp/>or<sp/>faulty<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_uv.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>heater.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1a86a504b275408486d19f32e6923e6c10" kindref="member">UV_HEATER_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>sensor<sp/>was<sp/>found,<sp/>and<sp/>valid<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.tsl2561<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.tsl2561<sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found.<sp/>Update<sp/>setpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.setpoint<sp/>=<sp/>setpoint;</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>temp<sp/>to<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.temp<sp/>=<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.tsl2561;</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_tsl.Compute();</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1a9bd50323652c3e5de42af2a1d65e7930" kindref="member">TSL2561_HEATER_PIN</ref>,<sp/><ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>sensor<sp/>found,<sp/>or<sp/>faulty<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_tsl.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>heater.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1a9bd50323652c3e5de42af2a1d65e7930" kindref="member">TSL2561_HEATER_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>sensor<sp/>was<sp/>found,<sp/>and<sp/>valid<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.main<sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found.<sp/>Update<sp/>setpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.setpoint<sp/>=<sp/>setpoint;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>temp<sp/>to<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.temp<sp/>=<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.main;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_main.Compute();</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1adc5a223dccf8bbdeb83b1e98c1a5e068" kindref="member">MAIN_HEATER_PIN</ref>,<sp/><ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>sensor<sp/>found,<sp/>or<sp/>faulty<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_main.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>heater.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1adc5a223dccf8bbdeb83b1e98c1a5e068" kindref="member">MAIN_HEATER_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>sensor<sp/>was<sp/>found,<sp/>and<sp/>valid<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a514d67a20adb3bc72c1466b627930374" kindref="member">temp_sensors</ref>.custom<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.custom<sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found.<sp/>Update<sp/>setpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.setpoint<sp/>=<sp/>setpoint;</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>temp<sp/>to<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.temp<sp/>=<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.custom;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_custom.Compute();</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1aad36752a9ec8083497dc972e71dade95" kindref="member">CUSTOM_HEATER_PIN</ref>,<sp/><ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>sensor<sp/>found,<sp/>or<sp/>faulty<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_custom.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>heater.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1aad36752a9ec8083497dc972e71dade95" kindref="member">CUSTOM_HEATER_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>sensor<sp/>was<sp/>found,<sp/>and<sp/>valid<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.SHT31<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref><sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found.<sp/>Update<sp/>setpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.setpoint<sp/>=<sp/>setpoint;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>temp<sp/>to<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.temp<sp/>=<sp/>dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref>;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>PID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_sht.Compute();</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1a126d5b2f190e7e95a7b8877c920a2258" kindref="member">SHT31_HEATER_PIN</ref>,<sp/><ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>sensor<sp/>found,<sp/>or<sp/>faulty<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PID_sht.SetMode(<ref refid="_p_i_d__v1_8h_1a8187a9af791c0a44ba67edd9cf266961" kindref="member">MANUAL</ref>);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Turn<sp/>off<sp/>heater.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(<ref refid="_weather___balloon_8cpp_1a126d5b2f190e7e95a7b8877c920a2258" kindref="member">SHT31_HEATER_PIN</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2034"><highlight class="comment"></highlight></codeline>
<codeline lineno="2035"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(dataLog.temp.custom<sp/>&lt;<sp/>(setpoint<sp/>-<sp/>hyster)<sp/>&amp;&amp;<sp/>dataLog.temp.custom<sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="2036"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analogWrite(CUSTOM_HEATER_PIN,<sp/>dataLog.heater_max);</highlight></codeline>
<codeline lineno="2037"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(dataLog.temp.custom<sp/>&gt;<sp/>(setpoint<sp/>+<sp/>hyster))<sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(CUSTOM_HEATER_PIN,<sp/>LOW);</highlight></codeline>
<codeline lineno="2039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2040"><highlight class="comment"></highlight></codeline>
<codeline lineno="2041"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(dataLog.temp.main<sp/>&lt;<sp/>(setpoint<sp/>-<sp/>hyster)<sp/>&amp;&amp;<sp/>dataLog.temp.main<sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="2042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(MAIN_HEATER_PIN,<sp/>HIGH);</highlight></codeline>
<codeline lineno="2043"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(dataLog.temp.main<sp/>&gt;<sp/>(setpoint<sp/>+<sp/>hyster))<sp/>{</highlight></codeline>
<codeline lineno="2044"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(MAIN_HEATER_PIN,<sp/>LOW);</highlight></codeline>
<codeline lineno="2045"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2046"><highlight class="comment"></highlight></codeline>
<codeline lineno="2047"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(dataLog.temp.uv<sp/>&lt;<sp/>(setpoint<sp/>-<sp/>hyster)<sp/>&amp;&amp;<sp/>dataLog.temp.uv<sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="2048"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(UV_HEATER_PIN,<sp/>HIGH);</highlight></codeline>
<codeline lineno="2049"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(dataLog.temp.uv<sp/>&gt;<sp/>(setpoint<sp/>+<sp/>hyster))<sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(UV_HEATER_PIN,<sp/>LOW);</highlight></codeline>
<codeline lineno="2051"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="comment"></highlight></codeline>
<codeline lineno="2053"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(dataLog.temp.tsl2561<sp/>&lt;<sp/>(setpoint<sp/>-<sp/>hyster)<sp/>&amp;&amp;<sp/>dataLog.temp.tsl2561<sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="2054"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(TSL2561_HEATER_PIN,<sp/>HIGH);</highlight></codeline>
<codeline lineno="2055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(dataLog.temp.tsl2561<sp/>&gt;<sp/>(setpoint<sp/>+<sp/>hyster))<sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(TSL2561_HEATER_PIN,<sp/>LOW);</highlight></codeline>
<codeline lineno="2057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2058"><highlight class="comment"></highlight></codeline>
<codeline lineno="2059"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(dataLog.temp.gps<sp/>&lt;<sp/>(setpoint<sp/>-<sp/>hyster)<sp/>&amp;&amp;<sp/>dataLog.temp.gps<sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="2060"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(GPS_HEATER_PIN,<sp/>HIGH);</highlight></codeline>
<codeline lineno="2061"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(dataLog.temp.gps<sp/>&gt;<sp/>(setpoint<sp/>+<sp/>hyster))<sp/>{</highlight></codeline>
<codeline lineno="2062"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(GPS_HEATER_PIN,<sp/>LOW);</highlight></codeline>
<codeline lineno="2063"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="comment"></highlight></codeline>
<codeline lineno="2065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(dataLog.temp.sht31<sp/>&lt;<sp/>(setpoint<sp/>-<sp/>hyster)<sp/>&amp;&amp;<sp/>dataLog.temp.sht31<sp/>!=<sp/>-1000)<sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(SHT31_HEATER_PIN,<sp/>HIGH);</highlight></codeline>
<codeline lineno="2067"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(dataLog.temp.sht31<sp/>&gt;<sp/>(setpoint<sp/>+<sp/>hyster))<sp/>{</highlight></codeline>
<codeline lineno="2068"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(SHT31_HEATER_PIN,<sp/>LOW);</highlight></codeline>
<codeline lineno="2069"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;PWM<sp/>--<sp/>Main:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>GPS:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>SHT:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>TSL:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>UV:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>CUSTOM:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(<ref refid="_weather___balloon_8cpp_1aaa100c603ac5c37761e50431d68a8923" kindref="member">custom_vPID</ref>.pwm);</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(dataLog.temp.main);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091" refid="_weather___balloon_8cpp_1a8644e7f4d35c348e0292bc7062c5147c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a8644e7f4d35c348e0292bc7062c5147c" kindref="member">print_sensors</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(date_time.<ref refid="struct_r_t_c_date_time_1a265de5469447ed7581fec4d3c0c5814d" kindref="member">year</ref>);<sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(date_time.<ref refid="struct_r_t_c_date_time_1a434dc70ef64a1e99201f3765607e8afa" kindref="member">month</ref>);<sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(date_time.<ref refid="struct_r_t_c_date_time_1aea80bfd1209e6e459c70ea39bc248407" kindref="member">day</ref>);<sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(date_time.<ref refid="struct_r_t_c_date_time_1aaf23cb6337a6c0cb3bb69ad815f9c1b1" kindref="member">hour</ref>);<sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(date_time.<ref refid="struct_r_t_c_date_time_1a2e9c4e2b54185ec5bb7f328732bc1c63" kindref="member">minute</ref>);<sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(date_time.<ref refid="struct_r_t_c_date_time_1acf01c0fbd1d95fe33238674641f40027" kindref="member">second</ref>);<sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(date_time.<ref refid="struct_r_t_c_date_time_1af46df69448c5456b54e9acae7629efa8" kindref="member">unixtime</ref>);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.voltage<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Voltage:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.voltage);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>V<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.soc<sp/>&lt;=<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.soc);</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref>.humidity<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>&apos;is<sp/>not<sp/>a<sp/>number&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref>.humidity);</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;%<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;XX&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref><sp/>!=<sp/>1000)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>&apos;is<sp/>not<sp/>a<sp/>number&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref><sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>F<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;XX&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;L:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72" kindref="member">tsl</ref>.lux);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72" kindref="member">tsl</ref>.ir);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72" kindref="member">tsl</ref>.broadband);</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref>);</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;M:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe" kindref="member">mag</ref>.x);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe" kindref="member">mag</ref>.y);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe" kindref="member">mag</ref>.z);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;A:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933" kindref="member">accel</ref>.x);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933" kindref="member">accel</ref>.y);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933" kindref="member">accel</ref>.z);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;G:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23" kindref="member">gyro</ref>.x);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23" kindref="member">gyro</ref>.y);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23" kindref="member">gyro</ref>.z);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1" kindref="member">ms5607</ref>.pressure);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>Pa<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print((dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1" kindref="member">ms5607</ref><sp/>*<sp/>0.018)<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>F<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;DS18B20\n\rMain:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.main<sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>In:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.internal<sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>Ex:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.external<sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>GPS:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref><sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>TSL:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.tsl2561<sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>UV:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref><sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>CUST:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.custom<sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Clock<sp/>temp:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.clock<sp/>*<sp/>1.8<sp/>+<sp/>32);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.date);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.time);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.lat,<sp/>6);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.lng,<sp/>6);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.altitude,<sp/>6);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>m,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.speed);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>mps,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.course);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>deg,<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.sats);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>sats,<sp/>HDOP:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(static_cast&lt;float&gt;(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.hdop<sp/>/<sp/>100),<sp/>1);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>m,<sp/>VDOP:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(static_cast&lt;float&gt;(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.vdop<sp/>/<sp/>100),<sp/>1);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>m&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;CRC<sp/>ERROR:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(gps.<ref refid="class_tiny_g_p_s_plus_1a57dd7a4430d58f784e967ee2d76e574f" kindref="member">failedChecksum</ref>());</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Geiger:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c" kindref="member">geiger</ref>.x);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c" kindref="member">geiger</ref>.y);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(dataLog.<ref refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c" kindref="member">geiger</ref>.z);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Up<sp/>time:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(static_cast&lt;unsigned<sp/>long&gt;(millis()<sp/>/<sp/>1000L));</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>seconds\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223" refid="_weather___balloon_8cpp_1af7b5da3129c5c87915394c2b8394aafe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1af7b5da3129c5c87915394c2b8394aafe" kindref="member">power_control</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Control<sp/>power<sp/>consumption<sp/>with<sp/>powering<sp/>down<sp/>sensors<sp/>or<sp/>limiting<sp/>heater<sp/>power.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228" refid="_weather___balloon_8cpp_1acbeafc32c286c932b7f4e012cf3ef829" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1acbeafc32c286c932b7f4e012cf3ef829" kindref="member">reset_sdcard</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>power<sp/>to<sp/>SD<sp/>card<sp/>here<sp/>to<sp/>reset?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight></codeline>
<codeline lineno="2233" refid="_weather___balloon_8cpp_1a507cc28668dfd87892b99466e32b4b0b" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="_weather___balloon_8cpp_1a507cc28668dfd87892b99466e32b4b0b" kindref="member">EEPROM_read</ref>(uint16_t<sp/>uiAddress)<sp/>{</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>completion<sp/>of<sp/>previous<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(EECR<sp/>&amp;<sp/>(1&lt;&lt;EEPE))<sp/>{</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>address<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/>EEAR<sp/>=<sp/>uiAddress;</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>eeprom<sp/>read<sp/>by<sp/>writing<sp/>EERE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/>EECR<sp/>|=<sp/>(1&lt;&lt;EERE);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>data<sp/>from<sp/>Data<sp/>Register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EEDR;</highlight></codeline>
<codeline lineno="2244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247" refid="_weather___balloon_8cpp_1a36234eb6bc49c0c10ed75b5fddadc4da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a36234eb6bc49c0c10ed75b5fddadc4da" kindref="member">EEPROM_update</ref>(uint16_t<sp/>uiAddress,<sp/>uint8_t<sp/>ucData)<sp/>{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>data<sp/>to<sp/>EEPROM<sp/>unless<sp/>the<sp/>data<sp/>is<sp/>already<sp/>the<sp/>same<sp/>at<sp/>the<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>readEEPROM<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a507cc28668dfd87892b99466e32b4b0b" kindref="member">EEPROM_read</ref>(uiAddress);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readEEPROM<sp/>==<sp/>ucData)<sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>already<sp/>have<sp/>that<sp/>value<sp/>written.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>completion<sp/>of<sp/>previous<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(EECR<sp/>&amp;<sp/>(1&lt;&lt;EEPE))<sp/>{</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>address<sp/>and<sp/>Data<sp/>Registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/>EEAR<sp/>=<sp/>uiAddress;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/>EEDR<sp/>=<sp/>ucData;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>logical<sp/>one<sp/>to<sp/>EEMPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>EECR<sp/>|=<sp/>(1&lt;&lt;EEMPE);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>eeprom<sp/>write<sp/>by<sp/>setting<sp/>EEPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>EECR<sp/>|=<sp/>(1&lt;&lt;EEPE);</highlight></codeline>
<codeline lineno="2268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight></codeline>
<codeline lineno="2270" refid="_weather___balloon_8cpp_1af7115da2fa844da13b6bd31bf8a206f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1af7115da2fa844da13b6bd31bf8a206f1" kindref="member">read_configuration</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>configuration<sp/>data<sp/>from<sp/>EEPROM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>big<sp/>is<sp/>our<sp/>buffer?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>buffer_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>);</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buffer[buffer_size];</highlight></codeline>
<codeline lineno="2276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278" refid="_weather___balloon_8cpp_1a276e156004c668500daa7aaa9a770585" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="_weather___balloon_8cpp_1a276e156004c668500daa7aaa9a770585" kindref="member">find_sdcard_tail</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>first<sp/>=<sp/>1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>last<sp/>=<sp/>sdcard_data.<ref refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" kindref="member">blocks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>powerup<sp/>look<sp/>for<sp/>the<sp/>tail<sp/>of<sp/>the<sp/>SD<sp/>card<sp/>log.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>a<sp/>binary<sp/>search<sp/>algorithm<sp/>with<sp/>a<sp/>slight<sp/>twist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>not_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>left_empty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>right_empty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Current<sp/>block,<sp/>start<sp/>at<sp/>the<sp/>beginning<sp/>block<sp/>(block<sp/>0<sp/>is<sp/>out<sp/>of<sp/>bounds!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>current_search<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>the<sp/>data<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>data_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" kindref="member">dataLog</ref>);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>have<sp/>zero<sp/>block.<sp/>Holds<sp/>SD<sp/>card<sp/>information.<sp/>Would<sp/>be<sp/>a<sp/>false<sp/>short<sp/>circuit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_search<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_search<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>left<sp/>=<sp/>current_search;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>right<sp/>=<sp/>last;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>left<sp/>side<sp/>is<sp/>empty?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>partial<sp/>block<sp/>for<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/>sdcard.<ref refid="class_sd2_card_1ae2d1396ad30081b4201cd372358ef699" kindref="member">readData</ref>(left,<sp/>0,<sp/>data_size,<sp/>sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>data_size;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_empty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That&apos;s<sp/>all<sp/>we<sp/>care<sp/>about</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_empty<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>empty,<sp/>so<sp/>return<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>right<sp/>point<sp/>for<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>partial<sp/>block<sp/>for<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>sdcard.<ref refid="class_sd2_card_1ae2d1396ad30081b4201cd372358ef699" kindref="member">readData</ref>(right,<sp/>0,<sp/>data_size,<sp/>sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>data_size;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(sdcard_data.buffer[i],<sp/>HEX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_empty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Abort,<sp/>since<sp/>we<sp/>are<sp/>looking<sp/>for<sp/>empty<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_empty<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can&apos;t<sp/>get<sp/>any<sp/>more<sp/>right,<sp/>so<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>right;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(not_found<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Middle<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_search<sp/>=<sp/>(right<sp/>+<sp/>left)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Left:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(left);</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>Current:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(current_search);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>Right:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(right);</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>partial<sp/>block<sp/>for<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard.<ref refid="class_sd2_card_1ae2d1396ad30081b4201cd372358ef699" kindref="member">readData</ref>(current_search,<sp/>0,<sp/>data_size,<sp/>sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>data_size;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>is<sp/>not<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>left<sp/>value<sp/>is<sp/>this<sp/>current<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>current_search;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_empty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG_MORE<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>++;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;SDcard<sp/>block<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>NOT<sp/>empty...<sp/>skipping.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>!=<sp/>current_search)<sp/>{</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>left<sp/>is<sp/>not<sp/>equal<sp/>to<sp/>current_search<sp/>we<sp/>assume<sp/>it<sp/>was<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>current_search;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_empty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_empty<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>right_empty<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>right<sp/>-<sp/>left<sp/>&lt;=<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>right;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397" refid="_weather___balloon_8cpp_1a22feff51a4b8144a2264bc812eedaddb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a22feff51a4b8144a2264bc812eedaddb" kindref="member">test_logging</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>the<sp/>data<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>data_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" kindref="member">dataLog</ref>);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;\n\n\n\r*************************\n\rRead<sp/>sensors<sp/>from<sp/>SDcard\n\r*************************\n\n\n\r&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>510/data_size;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;dataLog,<sp/>&amp;sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>*<sp/>data_size],<sp/>data_size);</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a8644e7f4d35c348e0292bc7062c5147c" kindref="member">print_sensors</ref>();</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;\n\n\n\r*************************\n\rEnd<sp/>sensors<sp/>from<sp/>SDcard\n\r*************************\n\n\n\r&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"></highlight></codeline>
<codeline lineno="2413" refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" kindref="member">log_data</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>120)<sp/>{</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>130;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>the<sp/>sensor<sp/>data<sp/>by<sp/>packing<sp/>it<sp/>into<sp/>a<sp/>holding<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>buffer<sp/>is<sp/>full,<sp/>we<sp/>flush<sp/>it<sp/>to<sp/>storage<sp/>and<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>holding<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc_before,<sp/>crc_after,<sp/>loops<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success,<sp/>empty_block<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>the<sp/>data<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>data_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" kindref="member">dataLog</ref>);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>the<sp/>SDcard<sp/>buffer<sp/>since<sp/>we&apos;re<sp/>starting<sp/>fresh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(sdcard_data.<ref refid="structsd__data_1a8c7d8aeb42db3bbd384026be5d5e0bbd" kindref="member">hold_buffer</ref>,<sp/>0,<sp/>512);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref><sp/>*<sp/>data_size<sp/>&lt;<sp/>510<sp/>-<sp/>data_size)<sp/>{</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>we<sp/>can<sp/>squeeze<sp/>another<sp/>data<sp/>packet<sp/>into<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>registers<sp/>are<sp/>flushed<sp/>and<sp/>optimizations<sp/>don&apos;t<sp/>fiddle<sp/>with<sp/>our<sp/>watchdog<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MemoryBarrier();</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>all<sp/>interrupts.<sp/>Prevents<sp/>the<sp/>Geiger<sp/>interrupt<sp/>from<sp/>increasing<sp/>our<sp/>variables<sp/>while<sp/>we<sp/>copy<sp/>and<sp/>zero<sp/>them<sp/>for<sp/>logging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cli();</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>over<sp/>Geiger<sp/>counts<sp/>for<sp/>logging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c" kindref="member">geiger</ref>.x<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>.x_count;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c" kindref="member">geiger</ref>.y<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>.y_count;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c" kindref="member">geiger</ref>.z<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>.z_count;</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>interrupt<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>.x_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>.y_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aef03a40c11d98638a61a75a4a2bb75dc" kindref="member">geiger</ref>.z_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>interrupts<sp/>to<sp/>continue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sei();</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MemoryBarrier();</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>data<sp/>log<sp/>structure<sp/>as<sp/>a<sp/>byte<sp/>stream<sp/>to<sp/>the<sp/>SD<sp/>card<sp/>buffer<sp/>for<sp/>later<sp/>writing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;sdcard_data.<ref refid="structsd__data_1a8c7d8aeb42db3bbd384026be5d5e0bbd" kindref="member">hold_buffer</ref>[sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref><sp/>*<sp/>data_size],<sp/>&amp;dataLog,<sp/>data_size);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>packed<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref>++;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>structures<sp/>packed:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref>);</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;SD<sp/>card<sp/>packing<sp/>start<sp/>address:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref><sp/>*<sp/>data_size,<sp/>DEC);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref><sp/>*<sp/>data_size<sp/>&gt;=<sp/>510<sp/>-<sp/>data_size)<sp/>{</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>again<sp/>to<sp/>see<sp/>if<sp/>we&apos;re<sp/>at<sp/>the<sp/>limit.<sp/>If<sp/>we<sp/>are,<sp/>we<sp/>need<sp/>to<sp/>log<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>we<sp/>lose<sp/>a<sp/>log<sp/>when<sp/>we<sp/>are<sp/>called<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>allow<sp/>2<sp/>bytes<sp/>for<sp/>the<sp/>CRC16<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;\nSensor<sp/>data<sp/>size:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(data_size);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;SD<sp/>Block:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(sdcard_data.<ref refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" kindref="member">blocks</ref>);</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print_sensors();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>may<sp/>want<sp/>to<sp/>try<sp/>multiple<sp/>data<sp/>writes<sp/>in<sp/>case<sp/>of<sp/>a<sp/>bad<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>define<sp/>how<sp/>large<sp/>a<sp/>bad<sp/>block<sp/>flash<sp/>memory<sp/>can<sp/>have.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>other<sp/>words,<sp/>if<sp/>a<sp/>write/erase<sp/>block<sp/>is<sp/>8MB,<sp/>then<sp/>multiple<sp/>512<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blocks<sp/>will<sp/>need<sp/>to<sp/>be<sp/>skipped<sp/>to<sp/>get<sp/>to<sp/>&quot;good&quot;<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8MB<sp/>=<sp/>16384<sp/>pages<sp/>of<sp/>512<sp/>bytes<sp/>(we&apos;re<sp/>writing<sp/>to<sp/>512<sp/>byte<sp/>blocks,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that&apos;s<sp/>what<sp/>we<sp/>care<sp/>about.<sp/>Add<sp/>1<sp/>to<sp/>get<sp/>over<sp/>any<sp/>threshold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Additionally,<sp/>one<sp/>may,<sp/>or<sp/>may<sp/>not,<sp/>want<sp/>to<sp/>use<sp/>a<sp/>watchdog<sp/>timer<sp/>reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>the<sp/>code<sp/>to<sp/>find<sp/>an<sp/>empty<sp/>block.<sp/>Thjs<sp/>may<sp/>also<sp/>depend<sp/>on<sp/>whether</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>controller<sp/>is<sp/>feeding<sp/>radio<sp/>telemetry.<sp/>One<sp/>would<sp/>not<sp/>want<sp/>to<sp/>get<sp/>stuck</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looking<sp/>for<sp/>an<sp/>open<sp/>location.<sp/>This<sp/>may<sp/>be<sp/>a<sp/>moot<sp/>point<sp/>with<sp/>a<sp/>properly<sp/>zeroed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>card,<sp/>but<sp/>worth<sp/>considering.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(success<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref><sp/>&lt;=<sp/>sdcard_data.<ref refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" kindref="member">blocks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>for<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>the<sp/>SDcard<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>,<sp/>0,<sp/>512);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Reading<sp/>block<sp/>verify<sp/>zero&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>block<sp/>of<sp/>data<sp/>to<sp/>ensure<sp/>we<sp/>are<sp/>writing<sp/>to<sp/>an<sp/>empty<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard.<ref refid="class_sd2_card_1ae26d840449a42d45af464fb81b92e2ab" kindref="member">readBlock</ref>(sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>,<sp/>sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_block<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Verify<sp/>zero&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>512;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>block,<sp/>looking<sp/>for<sp/>non-zero<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(sdcard_data.buffer[i],<sp/>HEX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_block<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>++;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;SDcard<sp/>block<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>NOT<sp/>empty...<sp/>skipping.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Break<sp/>for<sp/>next<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(empty_block<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>data<sp/>log<sp/>structure<sp/>as<sp/>a<sp/>byte<sp/>stream<sp/>to<sp/>the<sp/>SD<sp/>card<sp/>buffer<sp/>for<sp/>later<sp/>writing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memcpy(&amp;sdcard_data.buffer,<sp/>&amp;dataLog,<sp/>data_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Calculating<sp/>CRC...&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>buffer&apos;s<sp/>CRC16<sp/>for<sp/>comparison<sp/>after<sp/>writing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_before<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a3d30b497ce4c43d95b30a95944f9d8be" kindref="member">sd_calc_crc</ref>(sdcard_data.<ref refid="structsd__data_1a8c7d8aeb42db3bbd384026be5d5e0bbd" kindref="member">hold_buffer</ref>,<sp/>data_size<sp/>*<sp/>(sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tack<sp/>on<sp/>CRC<sp/>to<sp/>end<sp/>of<sp/>SDcard<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;sdcard_data.<ref refid="structsd__data_1a8c7d8aeb42db3bbd384026be5d5e0bbd" kindref="member">hold_buffer</ref>[511<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(crc_before)],<sp/>&amp;crc_before,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(crc_before));</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>buffer<sp/>and<sp/>check<sp/>if<sp/>returned<sp/>successfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard.<ref refid="class_sd2_card_1ae9bdd6cff43b8b694584f9bae7e781b0" kindref="member">writeBlock</ref>(sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>,<sp/>sdcard_data.<ref refid="structsd__data_1a8c7d8aeb42db3bbd384026be5d5e0bbd" kindref="member">hold_buffer</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1ac1410d5750aa9c7a30041b0ac94cbc80" kindref="member">write_errors</ref>++;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Had<sp/>an<sp/>error.<sp/>Get<sp/>error<sp/>code<sp/>and<sp/>&quot;status&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;SDcard<sp/>Write<sp/>Error:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(sdcard.<ref refid="class_sd2_card_1adfa5b1a39875236dff591acbd560bfe7" kindref="member">errorCode</ref>(),<sp/>HEX);</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Status:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(sdcard.<ref refid="class_sd2_card_1a13fed56bd5bcfee862acb6de6924936c" kindref="member">errorData</ref>(),<sp/>HEX);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>card<sp/>in<sp/>case<sp/>it<sp/>was<sp/>a<sp/>lock<sp/>up<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1acbeafc32c286c932b7f4e012cf3ef829" kindref="member">reset_sdcard</ref>();</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>the<sp/>next<sp/>data<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>++;</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loops++;</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>reading<sp/>the<sp/>data<sp/>since<sp/>we<sp/>had<sp/>a<sp/>write<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>,<sp/>0,<sp/>512);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Memset<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>zero<sp/>data<sp/>structures.<sp/>However,<sp/>we<sp/>can<sp/>copy<sp/>over<sp/>our<sp/>freshly<sp/>zeroed<sp/>buffer<sp/>no<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>zero<sp/>the<sp/>sensor<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memcpy(&amp;dataLog,<sp/>&amp;sdcard_data.buffer,<sp/>data_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;\n\nAFTER<sp/>ZEROING\n&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print_sensors();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>data<sp/>in<sp/>for<sp/>verification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard.<ref refid="class_sd2_card_1ae26d840449a42d45af464fb81b92e2ab" kindref="member">readBlock</ref>(sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>,<sp/>sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>over<sp/>the<sp/>CRC<sp/>we<sp/>read...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>not<sp/>do<sp/>anything<sp/>since<sp/>we<sp/>set<sp/>the<sp/>CRC<sp/>variable<sp/>in<sp/>the<sp/>next<sp/>line<sp/>(over<sp/>writing<sp/>it)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;crc_after,<sp/>&amp;sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>[511<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(crc_before)],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(crc_before));</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>CRC<sp/>after<sp/>we<sp/>read<sp/>back<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_after<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a3d30b497ce4c43d95b30a95944f9d8be" kindref="member">sd_calc_crc</ref>(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>,<sp/>data_size<sp/>*<sp/>(sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crc_before<sp/>!=<sp/>crc_after)<sp/>{</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>the<sp/>write<sp/>and<sp/>read<sp/>were<sp/>identical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>They<sp/>were<sp/>not!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1a803add843065a08b411291e34786dac3" kindref="member">crc_errors</ref>++;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>problem,<sp/>crc<sp/>mismatch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;\n\r************************\n\r*<sp/><sp/><sp/><sp/><sp/>CRC<sp/>MISMATCH<sp/><sp/><sp/><sp/><sp/>*\n\r************************&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>card<sp/>in<sp/>case<sp/>it<sp/>was<sp/>a<sp/>lock<sp/>up<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1acbeafc32c286c932b7f4e012cf3ef829" kindref="member">reset_sdcard</ref>();</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>the<sp/>next<sp/>data<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>++;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loops++;</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>to<sp/>next<sp/>loop<sp/>since<sp/>we<sp/>had<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Success!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>to<sp/>next<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>++;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>write<sp/>when<sp/>the<sp/>holding<sp/>buffer<sp/>is<sp/>full,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>the<sp/>packing<sp/>counter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG_MORE<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a22feff51a4b8144a2264bc812eedaddb" kindref="member">test_logging</ref>();</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;****************\n\rCRC<sp/>BEFORE:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(crc_before,<sp/>HEX);</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>CRC<sp/>AFTER:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(crc_after,<sp/>HEX);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;CRC<sp/>Errors:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(sdcard_data.<ref refid="structsd__data_1a803add843065a08b411291e34786dac3" kindref="member">crc_errors</ref>);</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>Write<sp/>Errors:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(sdcard_data.<ref refid="structsd__data_1ac1410d5750aa9c7a30041b0ac94cbc80" kindref="member">write_errors</ref>);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;****************\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>130)<sp/>{</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>140;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print_sensors();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653" refid="_weather___balloon_8cpp_1a450f53a446d117859c49aeaac6c31f9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a450f53a446d117859c49aeaac6c31f9f" kindref="member">read_sdcard</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>data<sp/>off<sp/>the<sp/>SD<sp/>card<sp/>and<sp/>spits<sp/>it<sp/>out<sp/>to<sp/>the<sp/>serial<sp/>console<sp/>as<sp/>a<sp/>comma<sp/>separated<sp/>value<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>size<sp/>of<sp/>the<sp/>data<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>data_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1a1d510f4282e450e51a322aadb779f979" kindref="member">dataLog</ref>);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>our<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>saved_current_block<sp/>=<sp/>sdcard_data.<ref refid="structsd__data_1a2d9191a0c849f5ee3b3714159dbd065d" kindref="member">current_block</ref>;</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty_block,<sp/>crc_match;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc_read,<sp/>crc_calculated;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>at<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sdcard_data.current_block<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>column<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;*****<sp/>DATA<sp/>START<sp/>*****&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;unix_time,gps_date,gps_time,latitude,longitude,altitude,speed,course,sats,hdop,vdop,lux,broadband,ir,uv,pressure,humidity,accel_x,accel_y,accel_z,<sp/>mag_x,mag_y,mag_z,gyro_x,gyro_y,gyro_z,temp_main,temp_internal,temp_external,temp_gps,temp_tsl2561,temp_sht31,temp_uv,temp_ms5607,temp_custom,temp_clock,geiger_x,geiger_y,geiger_z,pwm_main,pwm_gps,pwm_tsl2561,pwm_sht31,pwm_uv,max_pwm,voltage,state_of_charge,launched,alarm,found_lsm9ds1,found_sht31,found_ms5607,found_uv,found_ds18b20,found_tsl2561,found_gps,crc_match&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>block<sp/>=<sp/>1;<sp/>block<sp/>&lt;=<sp/>sdcard_data.<ref refid="structsd__data_1a5ebf26ae306ca7d48713664f309ef62f" kindref="member">blocks</ref>;<sp/>block++)<sp/>{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>watchdog,<sp/>we&apos;re<sp/>going<sp/>to<sp/>be<sp/>here<sp/>a<sp/>while.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>,<sp/>0,<sp/>512);</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdcard.<ref refid="class_sd2_card_1ae26d840449a42d45af464fb81b92e2ab" kindref="member">readBlock</ref>(block,<sp/>sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_block<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Verify<sp/>zero&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>512;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>block,<sp/>looking<sp/>for<sp/>non-zero<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(sdcard_data.buffer[i],<sp/>HEX);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_block<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//success<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Break<sp/>for<sp/>next<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(empty_block<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>all<sp/>empty<sp/>blocks.<sp/>(Only<sp/>process<sp/>blocks<sp/>with<sp/>any<sp/>bytes<sp/>in<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>over<sp/>the<sp/>CRC<sp/>we<sp/>read...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;crc_read,<sp/>&amp;sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>[511<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(crc_read)],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(crc_read));</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>CRC<sp/>after<sp/>we<sp/>read<sp/>back<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_calculated<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a3d30b497ce4c43d95b30a95944f9d8be" kindref="member">sd_calc_crc</ref>(sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>,<sp/>data_size<sp/>*<sp/>(sdcard_data.<ref refid="structsd__data_1ada768338826445661ce665fc7bb9b8a0" kindref="member">num_packed</ref><sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crc_read<sp/>==<sp/>crc_calculated)<sp/>{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_match<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc_match<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/>510/data_size;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;dataLog,<sp/>&amp;sdcard_data.<ref refid="structsd__data_1ab3590a9446d96dd2d7527a8b69d6a7e4" kindref="member">buffer</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>*<sp/>data_size],<sp/>data_size);</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a37f7a481de32f77f428f03c07d60090e" kindref="member">unix_time</ref>);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.date);</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.time);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.lat,<sp/>10);</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.lng,<sp/>10);</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.altitude,<sp/>10);</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.speed,<sp/>10);</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.course,<sp/>10);</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.sats);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.hdop);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.vdop);</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72" kindref="member">tsl</ref>.lux);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72" kindref="member">tsl</ref>.broadband);</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ad6c6ac99773f308db955031c4ac87d72" kindref="member">tsl</ref>.ir);</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1" kindref="member">ms5607</ref>.pressure,<sp/>10);</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref>.humidity,<sp/>10);</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933" kindref="member">accel</ref>.x,<sp/>10);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933" kindref="member">accel</ref>.y,<sp/>10);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a3fca2ed772020080d3e4c2311a240933" kindref="member">accel</ref>.z,<sp/>10);</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe" kindref="member">mag</ref>.x,<sp/>10);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe" kindref="member">mag</ref>.y,<sp/>10);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a30a07c1e9b8dbcf4f0bffcc7bc5794fe" kindref="member">mag</ref>.z,<sp/>10);</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23" kindref="member">gyro</ref>.x,<sp/>10);</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23" kindref="member">gyro</ref>.y,<sp/>10);</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1abda148daacfe93267bf35e5a7ab18c23" kindref="member">gyro</ref>.z,<sp/>10);</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.main,<sp/>10);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.internal,<sp/>10);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.external,<sp/>10);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.tsl2561,<sp/>10);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.<ref refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1" kindref="member">ms5607</ref>,<sp/>10);</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.custom,<sp/>10);</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab2ecd8eb6a960f8c8ee0faa0812d0db3" kindref="member">temp</ref>.clock,<sp/>10);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c" kindref="member">geiger</ref>.x);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c" kindref="member">geiger</ref>.y);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a27a2fc394140d1d68724703f6a50a23c" kindref="member">geiger</ref>.z);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.main);</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>);</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.tsl2561);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref>);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref>);</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a4b4c5b81a3132706b1a85c0cd46164a0" kindref="member">heater_max</ref>);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.voltage,<sp/>10);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1ab563098c74eb5e8c7b3deafc91c30908" kindref="member">battery</ref>.soc,<sp/>10);</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1acebeac8bcb741e46517b79c4b8bb8ed5" kindref="member">launched</ref>);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a6882559eb75dfd48ce00d14c2a82121c" kindref="member">alarm</ref>);</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.LSM9DS1);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.SHT31);</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.MS5607);</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.UV);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.DS18B20);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.TSL2561);</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(dataLog.<ref refid="structdata__struct_1a6ca366a5fcb890803160e5ab98344bd1" kindref="member">found</ref>.GPS);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(crc_match);</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>the<sp/>saved<sp/>block<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sdcard_data.current_block<sp/>=<sp/>saved_current_block;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight></codeline>
<codeline lineno="2840" refid="_weather___balloon_8cpp_1aef169403f1360281f7d4532c26949b6a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1aef169403f1360281f7d4532c26949b6a" kindref="member">queue_altitude</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>altitude)<sp/>{</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>40)<sp/>{</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Static<sp/>flag<sp/>for<sp/>first<sp/>pass<sp/>to<sp/>allow<sp/>head<sp/>=<sp/>tail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first_pass<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>of<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>queue_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>);</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(F(&quot;Incoming<sp/>altitude:<sp/>&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(altitude);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(altitude<sp/>!=<sp/>0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>add<sp/>if<sp/>not<sp/>the<sp/>initial<sp/>bad<sp/>value<sp/>of<sp/>0<sp/>pressure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>tail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" kindref="member">altitude_hist_tail</ref>++;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Over<sp/>queue<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" kindref="member">altitude_hist_tail</ref><sp/>&gt;=<sp/>queue_size)<sp/>{</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Tail<sp/>over<sp/>queue&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" kindref="member">altitude_hist_tail</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>[<ref refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" kindref="member">altitude_hist_tail</ref>]<sp/>=<sp/>altitude;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>we<sp/>need<sp/>to<sp/>move<sp/>the<sp/>head?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" kindref="member">altitude_hist_tail</ref><sp/>==<sp/><ref refid="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" kindref="member">altitude_hist_head</ref><sp/>&amp;&amp;<sp/>first_pass<sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Head<sp/>=<sp/>Tail&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" kindref="member">altitude_hist_head</ref><sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" kindref="member">altitude_hist_tail</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>head<sp/>over<sp/>the<sp/>queue<sp/>size?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" kindref="member">altitude_hist_head</ref><sp/>&gt;=<sp/>queue_size)<sp/>{</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Head<sp/>over<sp/>queue&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" kindref="member">altitude_hist_head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;Head:<sp/>&quot;));</highlight></codeline>
<codeline lineno="2882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(altitude_hist_head);</highlight></codeline>
<codeline lineno="2883"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>Tail:<sp/>&quot;));</highlight></codeline>
<codeline lineno="2884"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(altitude_hist_tail);</highlight></codeline>
<codeline lineno="2885"><highlight class="comment"></highlight></codeline>
<codeline lineno="2886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>index<sp/>=<sp/>altitude_hist_head;</highlight></codeline>
<codeline lineno="2887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;Altitude:<sp/>&quot;));</highlight></codeline>
<codeline lineno="2888"><highlight class="comment"></highlight></codeline>
<codeline lineno="2889"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(done<sp/>==<sp/>false)<sp/>{</highlight></codeline>
<codeline lineno="2890"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(index<sp/>&gt;=<sp/>queue_size)<sp/>{</highlight></codeline>
<codeline lineno="2891"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(index<sp/>==<sp/>altitude_hist_tail)<sp/>{</highlight></codeline>
<codeline lineno="2894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="2895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2896"><highlight class="comment"></highlight></codeline>
<codeline lineno="2897"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(altitude_hist[index]);</highlight></codeline>
<codeline lineno="2898"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>&quot;));</highlight></codeline>
<codeline lineno="2899"><highlight class="comment"></highlight></codeline>
<codeline lineno="2900"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="2901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2902"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>queue_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(altitude_hist[i]);</highlight></codeline>
<codeline lineno="2906"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>&quot;));</highlight></codeline>
<codeline lineno="2907"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2908"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"></highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>head<sp/>to<sp/>move<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_pass<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>50)<sp/>{</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2920" refid="_weather___balloon_8cpp_1adeef8e326e21e271b7542e6e7c4e4bd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1adeef8e326e21e271b7542e6e7c4e4bd9" kindref="member">queue_pressure</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pressure)<sp/>{</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>60)<sp/>{</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>70;</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Static<sp/>flag<sp/>for<sp/>first<sp/>pass<sp/>to<sp/>allow<sp/>head<sp/>=<sp/>tail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first_pass<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>of<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>queue_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(F(&quot;Incoming<sp/>pressure:<sp/>&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(pressure);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(pressure<sp/>!=<sp/>0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>add<sp/>if<sp/>not<sp/>the<sp/>initial<sp/>bad<sp/>value<sp/>of<sp/>0<sp/>pressure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>tail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" kindref="member">pressure_hist_tail</ref>++;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Over<sp/>queue<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" kindref="member">pressure_hist_tail</ref><sp/>&gt;=<sp/>queue_size)<sp/>{</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Tail<sp/>over<sp/>queue&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" kindref="member">pressure_hist_tail</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>[<ref refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" kindref="member">pressure_hist_tail</ref>]<sp/>=<sp/>pressure;</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>we<sp/>need<sp/>to<sp/>move<sp/>the<sp/>head?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" kindref="member">pressure_hist_tail</ref><sp/>==<sp/><ref refid="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" kindref="member">pressure_hist_head</ref><sp/>&amp;&amp;<sp/>first_pass<sp/>!=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Head<sp/>=<sp/>Tail&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" kindref="member">pressure_hist_head</ref><sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" kindref="member">pressure_hist_tail</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>head<sp/>over<sp/>the<sp/>queue<sp/>size?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" kindref="member">pressure_hist_head</ref><sp/>&gt;=<sp/>queue_size)<sp/>{</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println(F(&quot;Head<sp/>over<sp/>queue&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" kindref="member">pressure_hist_head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2961"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;Head:<sp/>&quot;));</highlight></codeline>
<codeline lineno="2962"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(pressure_hist_head);</highlight></codeline>
<codeline lineno="2963"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>Tail:<sp/>&quot;));</highlight></codeline>
<codeline lineno="2964"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(pressure_hist_tail);</highlight></codeline>
<codeline lineno="2965"><highlight class="comment"></highlight></codeline>
<codeline lineno="2966"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>index<sp/>=<sp/>pressure_hist_head;</highlight></codeline>
<codeline lineno="2967"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;pressure:<sp/>&quot;));</highlight></codeline>
<codeline lineno="2968"><highlight class="comment"></highlight></codeline>
<codeline lineno="2969"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(done<sp/>==<sp/>false)<sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(index<sp/>&gt;=<sp/>queue_size)<sp/>{</highlight></codeline>
<codeline lineno="2971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2972"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(index<sp/>==<sp/>pressure_hist_tail)<sp/>{</highlight></codeline>
<codeline lineno="2974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/>true;</highlight></codeline>
<codeline lineno="2975"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2976"><highlight class="comment"></highlight></codeline>
<codeline lineno="2977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(pressure_hist[index]);</highlight></codeline>
<codeline lineno="2978"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>&quot;));</highlight></codeline>
<codeline lineno="2979"><highlight class="comment"></highlight></codeline>
<codeline lineno="2980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="2981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2982"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2984"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>queue_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2985"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(pressure_hist[i]);</highlight></codeline>
<codeline lineno="2986"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>&quot;));</highlight></codeline>
<codeline lineno="2987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2988"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.println();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>head<sp/>to<sp/>move<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_pass<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>70)<sp/>{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>80;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight></codeline>
<codeline lineno="3000" refid="_weather___balloon_8cpp_1ad470b7ae913b35bcd1e424b925a0277b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ad470b7ae913b35bcd1e424b925a0277b" kindref="member">check_launch</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>80)<sp/>{</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>90;</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>pressure_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>alt_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>);<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>&lt;<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.pressure_alarm)<sp/>{</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_count++;</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>);<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/><ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>&gt;<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.altitude_alarm)<sp/>{</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt_count++;</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressure_count<sp/>&gt;<sp/>90<sp/>||<sp/>alt_count<sp/>&gt;<sp/>90)<sp/>{</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>least<sp/>2<sp/>intervals<sp/>with<sp/>90<sp/>positive<sp/>readings<sp/>were<sp/>spent<sp/>above<sp/>the<sp/>threshold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(millis()<sp/>/<sp/>1000L<sp/>&gt;<sp/>7200L)<sp/>{</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>been<sp/>awake<sp/>for<sp/>120<sp/>minutes.<sp/>Assume<sp/>we&apos;ve<sp/>launched<sp/>then.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Pressure<sp/>count:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(pressure_count);</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;<sp/>Alt<sp/>Count:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(alt_count);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>90)<sp/>{</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight></codeline>
<codeline lineno="3043" refid="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a3151528daf13a7c96e797c4ab9e5e08a" kindref="member">check_decent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>[<ref refid="_weather___balloon_8cpp_1a96c477bde962eaccf0ae6b1505ffa47b" kindref="member">pressure_hist_tail</ref>]<sp/>&lt;<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.pressure_alarm<sp/>&amp;&amp;<sp/><ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>[<ref refid="_weather___balloon_8cpp_1a0f650962534ec0668deb66f3237e9eed" kindref="member">pressure_hist_head</ref>]<sp/>&lt;<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.pressure_alarm)<sp/>{</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"></highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>[<ref refid="_weather___balloon_8cpp_1a90b100050af8f0504debe37992583950" kindref="member">altitude_hist_tail</ref>]<sp/>&lt;<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.altitude_alarm<sp/>&amp;&amp;<sp/><ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>[<ref refid="_weather___balloon_8cpp_1a01f6f8f79051a19987e9d93f549cd7be" kindref="member">altitude_hist_head</ref>]<sp/>&lt;<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.altitude_alarm)<sp/>{</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>counter<sp/>&gt;<sp/>30)<sp/>{</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>least<sp/>30<sp/>seconds<sp/>were<sp/>spent<sp/>below<sp/>the<sp/>threshold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.decent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//}<sp/>&amp;&amp;<sp/>millis()<sp/>/<sp/>1000L<sp/>&gt;<sp/>14400L)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>been<sp/>awake<sp/>for<sp/>4<sp/>hours.<sp/>Assume<sp/>we&apos;ve<sp/>landed<sp/>then.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.decent<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"></highlight></codeline>
<codeline lineno="3063" refid="_weather___balloon_8cpp_1a15e6d9ae56a77e3b476ba9804077a809" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a15e6d9ae56a77e3b476ba9804077a809" kindref="member">check_landing</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>110;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pres_threshold<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alt_threshold<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>);<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>&lt;<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.pressure_alarm<sp/>||<sp/><ref refid="_weather___balloon_8cpp_1ad4d2baeae9f4dcfffceaf318c35b77a4" kindref="member">pressure_hist</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pres_threshold<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>);<sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>&gt;<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.altitude_alarm<sp/>||<sp/><ref refid="_weather___balloon_8cpp_1abf83abf80c4f9710e3d5aafce776fe41" kindref="member">altitude_hist</ref>[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt_threshold<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pres_threshold<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>||<sp/>alt_threshold<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.alarm<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(millis()<sp/>/<sp/>1000L<sp/>&gt;<sp/>14400L)<sp/>{</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>been<sp/>awake<sp/>for<sp/>240<sp/>minutes.<sp/>Assume<sp/>we&apos;ve<sp/>landed<sp/>then.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.alarm<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>110)<sp/>{</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>120;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"></highlight></codeline>
<codeline lineno="3099" refid="_weather___balloon_8cpp_1a4a9cf795fe57230a3204ad8a66f4144d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a4a9cf795fe57230a3204ad8a66f4144d" kindref="member">configure_write</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3103" refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" kindref="member">check_alarms</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>170)<sp/>{</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>180;</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEPROM.put(0,<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;*****<sp/>LAUNCHED<sp/>*****&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delay(1000);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" kindref="member">piezo_power</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" kindref="member">flash_landing</ref>(10);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(1000,<sp/>250,<sp/><ref refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" kindref="member">PIEZO_PIN</ref>);</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" kindref="member">flash_landing</ref>(250);</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(2000,<sp/>500,<sp/><ref refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" kindref="member">PIEZO_PIN</ref>);</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a8cc7d86d6ef1fa4f680bfe19b3246307" kindref="member">piezo_power</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a63f902cc1f2e24f8a484f7ef780dda08" kindref="member">led_power</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.alarm<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEPROM.put(0,<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>);</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(100);</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a905910daced665e99b1c14fa51ef9938" kindref="member">watchdog_sleep</ref>();</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a36e4683d7523a3b1e303d70a2989af58" kindref="member">power_sensors</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a6cc16c4213f4098ade81a6c9a7919bf7" kindref="member">location_alarm</ref>();</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>180)<sp/>{</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>190;</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"></highlight></codeline>
<codeline lineno="3140" refid="_weather___balloon_8cpp_1a23601be8cb3753e62a44c58a70575fe8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a23601be8cb3753e62a44c58a70575fe8" kindref="member">print_serial_help</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prints<sp/>the<sp/>serial<sp/>command<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;\n\n\n\rCommand<sp/>help<sp/>list&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Commands<sp/>NOT<sp/>case<sp/>sensitive&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;=============================================================================================&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;help<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>command<sp/>list.\n\r&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;help<sp/>read<sp/>sdcard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Help<sp/>with<sp/>SDCard<sp/>commands.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;help<sp/>set<sp/>altitude<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Help<sp/>with<sp/>altitude<sp/>threshold<sp/>commands.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;help<sp/>set<sp/>pressure<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Help<sp/>with<sp/>pressure<sp/>threshold<sp/>commands.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;help<sp/>set<sp/>launch<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Help<sp/>with<sp/>launch<sp/>timer<sp/>commands&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;help<sp/>set<sp/>location<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Help<sp/>with<sp/>location<sp/>timer<sp/>commands\n\r&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;read<sp/>sdcard<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Output<sp/>the<sp/>SDCard<sp/>data<sp/>as<sp/>a<sp/>CSV<sp/>to<sp/>serial<sp/>console.\n\r&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;set<sp/>altitude<sp/>###<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>GPS<sp/>altitude<sp/>threshold<sp/>to<sp/>###<sp/>meters.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;set<sp/>pressure<sp/>###<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>barometric<sp/>pressure<sp/>threshold<sp/>to<sp/>###<sp/>Pascals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;set<sp/>launch<sp/>###<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>auto<sp/>launch<sp/>timer<sp/>to<sp/>###<sp/>minutes<sp/>after<sp/>power-on&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;set<sp/>location<sp/>###<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>auto<sp/>location<sp/>timer<sp/>to<sp/>###<sp/>minutes<sp/>after<sp/>power-on&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;set<sp/>dwell<sp/>location<sp/>###<sp/><sp/>Set<sp/>num<sp/>of<sp/>readings<sp/>under<sp/>altitude/pressure<sp/>to<sp/>trigger<sp/>location<sp/>mode.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;=============================================================================================&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delay(1000);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3163" refid="_weather___balloon_8cpp_1a15ac45cd15b43e174eeb8f4272f0c875" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a15ac45cd15b43e174eeb8f4272f0c875" kindref="member">Atmosphere</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>alt,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>geometric<sp/>altitude,<sp/>km.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>sigma,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>density/sea-level<sp/>standard<sp/>density</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>delta,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pressure/sea-level<sp/>standard<sp/>pressure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>theta)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temperature/sea-level<sp/>standard<sp/>temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>temperature,density,<sp/>and<sp/>pressure<sp/>in<sp/>the<sp/>standard<sp/>atmosphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Correct<sp/>to<sp/>86<sp/>km.<sp/><sp/>Only<sp/>approximate<sp/>thereafter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>REARTH=6369.0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>radius<sp/>of<sp/>the<sp/>Earth<sp/>(km)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>GMR<sp/>=<sp/>34.163195;</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NTAB<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>,j,k;</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>htab[NTAB]<sp/>=<sp/>{0.0,<sp/><sp/>11.0,<sp/>20.0,<sp/>32.0,<sp/>47.0,</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>51.0,<sp/>71.0,<sp/>84.852<sp/>};</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ttab[NTAB]<sp/>=<sp/>{<sp/>288.15,<sp/>216.65,<sp/>216.65,<sp/>228.65,<sp/>270.65,</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>270.65,<sp/>214.65,<sp/>186.946<sp/>};</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ptab[NTAB]<sp/>=<sp/>{<sp/>1.0,<sp/>2.2336110E-1,<sp/>5.4032950E-2,<sp/>8.5666784E-3,</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>1.0945601E-3,<sp/>6.6063531E-4,<sp/>3.9046834E-5,<sp/>3.68501E-6<sp/>};</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gtab[NTAB]<sp/>=<sp/>{<sp/>-6.5,<sp/>0,<sp/>1.0,<sp/>2.8,<sp/>0,<sp/>-2.8,<sp/>-2.0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h=alt*REARTH/(alt+REARTH);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>geometric<sp/>to<sp/>geopotential<sp/>altitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/>i=0;<sp/>j=NTAB-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>starting<sp/>values<sp/>for<sp/>binary<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k=(i+j)/2;</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>&lt;<sp/>htab[k])<sp/>j=k;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>i=k;</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>i+1);</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tgrad=gtab[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temp.<sp/>gradient<sp/>of<sp/>local<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tbase=ttab[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>base<sp/>temp.<sp/>of<sp/>local<sp/>layer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltah=h-htab[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>above<sp/>local<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tlocal=tbase+tgrad*deltah;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/>theta=tlocal/ttab[0];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temperature<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0.0<sp/>==<sp/>tgrad)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pressure<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/>delta=ptab[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]*exp(-GMR*deltah/tbase);</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/>delta=ptab[<ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]*pow(tbase/tlocal,<sp/>GMR/tgrad);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/>sigma=delta/theta;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>density<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"></highlight></codeline>
<codeline lineno="3207" refid="_weather___balloon_8cpp_1ad125fd2e1dac4c129e6735549100fc2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ad125fd2e1dac4c129e6735549100fc2b" kindref="member">set_alt_threshold</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>altitude,<sp/>String<sp/>entered)<sp/>{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sigma,delta,theta;</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp,pressure,density,asound;</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>viscosity,kinematicViscosity;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(altitude<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>altitude<sp/>&lt;=<sp/>50000)<sp/>{</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a15ac45cd15b43e174eeb8f4272f0c875" kindref="member">Atmosphere</ref>(altitude/1000,<sp/>sigma,delta,theta);</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure=<ref refid="_weather___balloon_8cpp_1a728acecfd86626b2ad3b9cf88c206434" kindref="member">PZERO</ref>*delta;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.altitude_alarm<sp/>=<sp/>altitude;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.pressure_alarm<sp/>=<sp/>pressure;</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEPROM.put(0,<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>);</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Note<sp/>that<sp/>a<sp/>low<sp/>altitude<sp/>will<sp/>disable<sp/>the<sp/>altitude<sp/>arming<sp/>since\n\rthe<sp/>GPS<sp/>signal<sp/>will<sp/>never<sp/>trigger<sp/>the<sp/>threshold.\n\rAlso<sp/>note<sp/>that<sp/>valid<sp/>positive<sp/>numbers<sp/>are<sp/>parsed.<sp/>Invalid<sp/>entries<sp/>are<sp/>converted<sp/>to<sp/>0.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Entered<sp/>value:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(entered);</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Altitude<sp/>threshold<sp/>set<sp/>to:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(altitude);</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>meters&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Calculated<sp/>barometric<sp/>pressure<sp/>at<sp/>altitude<sp/>is<sp/>set<sp/>to:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(pressure);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>Pascals&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>altitude.\n\rAcceptable<sp/>range<sp/>is<sp/>0-500000<sp/>m.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"></highlight></codeline>
<codeline lineno="3231" refid="_weather___balloon_8cpp_1a5bd0afab414acd06263043d17db76643" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a5bd0afab414acd06263043d17db76643" kindref="member">set_pressure_threshold</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pressure)<sp/>{</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"></highlight></codeline>
<codeline lineno="3235" refid="_weather___balloon_8cpp_1ac3c063a9e5c7c5bc74ee3ebd70141634" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1ac3c063a9e5c7c5bc74ee3ebd70141634" kindref="member">set_launch_timeout</ref>(uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="3236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"></highlight></codeline>
<codeline lineno="3238" refid="_weather___balloon_8cpp_1a0d89228eb4827497c54f4628c463e5bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a0d89228eb4827497c54f4628c463e5bc" kindref="member">set_location_timeout</ref>(uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight></codeline>
<codeline lineno="3240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"></highlight></codeline>
<codeline lineno="3242" refid="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" kindref="member">read_serial</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>String<sp/>incoming<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>original<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>loops<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>altitude;</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Serial.available()<sp/>&amp;&amp;<sp/>loops<sp/>&lt;<sp/>35)<sp/>{</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>Serial.read();</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incoming<sp/>+=<sp/>c;</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Echo<sp/>to<sp/>the<sp/>screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Serial.print(c);</highlight></codeline>
<codeline lineno="3257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>0x&quot;));</highlight></codeline>
<codeline lineno="3258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(c,<sp/>HEX);</highlight></codeline>
<codeline lineno="3259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(&quot;<sp/>&quot;));</highlight></codeline>
<codeline lineno="3260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(incoming.length());*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incoming.length()<sp/>&gt;<sp/>34)<sp/>{</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>length<sp/>of<sp/>string<sp/>to<sp/>prevent<sp/>eating<sp/>all<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>2<sp/>characters<sp/>for<sp/>a<sp/>32<sp/>byte<sp/>command<sp/>plus<sp/>a<sp/>new<sp/>line<sp/>and<sp/>carriage<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incoming<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;\n\r***<sp/>Entry<sp/>to<sp/>long,<sp/>please<sp/>retry.<sp/>Max<sp/>limit<sp/>is<sp/>32<sp/>characters.<sp/>***&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loops++;</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incoming.trim();</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incoming.length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>string<sp/>has<sp/>length,<sp/>let&apos;s<sp/>see<sp/>what<sp/>it<sp/>says.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original<sp/>=<sp/>incoming;</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>to<sp/>lower<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incoming.toLowerCase();</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;Command<sp/>received:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(incoming);</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incoming<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;read<sp/>sdcard&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a450f53a446d117859c49aeaac6c31f9f" kindref="member">read_sdcard</ref>();</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incoming<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;debug<sp/>on&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a117352cc494cc62c6b2f1882786a332c" kindref="member">DEBUG</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEPROM.put(0,<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incoming<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;debug<sp/>off&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a117352cc494cc62c6b2f1882786a332c" kindref="member">DEBUG</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEPROM.put(0,<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>);</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incoming<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;help&quot;</highlight><highlight class="normal"><sp/>||<sp/>incoming<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal"><sp/>||<sp/>incoming<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;??&quot;</highlight><highlight class="normal"><sp/>||<sp/>incoming<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;/?&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a23601be8cb3753e62a44c58a70575fe8" kindref="member">print_serial_help</ref>();</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(incoming.startsWith(</highlight><highlight class="stringliteral">&quot;set<sp/>altitude&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incoming.remove(0,12);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incoming.trim();</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>altitude<sp/>=<sp/>incoming.toFloat();</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ad125fd2e1dac4c129e6735549100fc2b" kindref="member">set_alt_threshold</ref>(altitude,<sp/>incoming);</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(F(</highlight><highlight class="stringliteral">&quot;***<sp/>Command<sp/>unknown:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(original);</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;<sp/>***&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a23601be8cb3753e62a44c58a70575fe8" kindref="member">print_serial_help</ref>();</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delay(1000);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/>incoming<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight><highlight class="comment">//int8_t<sp/>direction<sp/>=<sp/>10;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3317" refid="_weather___balloon_8cpp_1abdf5b290d72a0f43221cc3461db70810" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1abdf5b290d72a0f43221cc3461db70810" kindref="member">pet_watchdog</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>that<sp/>registers<sp/>are<sp/>flushed<sp/>and<sp/>optimizations<sp/>don&apos;t<sp/>fiddle<sp/>with<sp/>our<sp/>watchdog<sp/>variable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/>_MemoryBarrier();</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>210)<sp/>{</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wdt_reset();</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MemoryBarrier();</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330" refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_weather___balloon_8cpp_1afe461d27b9c48d5921c00d521181f12f" kindref="member">loop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//static<sp/>float<sp/>test_altitude<sp/>=<sp/>400;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temp<sp/>override.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a450f53a446d117859c49aeaac6c31f9f" kindref="member">read_sdcard</ref>();</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" kindref="member">reset_flag</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EEPROM.put(0,<sp/><ref refid="_weather___balloon_8cpp_1af913d90b1b4908442e095aaba6f05119" kindref="member">default_config</ref>);</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a01160b0d5f07d7951ac857adf93c33b3" kindref="member">reset_flag</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" kindref="member">flash_landing</ref>(10);</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(1000,<sp/>250,<sp/><ref refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" kindref="member">PIEZO_PIN</ref>);</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delay(100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1af51f9e3565b0bfa3e28998f39b6a5217" kindref="member">flash_landing</ref>(10);</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a538a7506e344ec9bf046564b160e9e7f" kindref="member">beep_piezo</ref>(2000,<sp/>250,<sp/><ref refid="_weather___balloon_8cpp_1a9c5a2d5d726c32c4b09f1d2de0355a7d" kindref="member">PIEZO_PIN</ref>);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Reading<sp/>sensors...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>sensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ad40ccf803c2eff76d7e0e7a24c9937ef" kindref="member">readSensors</ref>();</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3356"><highlight class="comment"><sp/><sp/><sp/><sp/>dataLog.gps.altitude<sp/>=<sp/>test_altitude;</highlight></codeline>
<codeline lineno="3357"><highlight class="comment"><sp/><sp/><sp/><sp/>test_altitude<sp/>+=<sp/>direction;</highlight></codeline>
<codeline lineno="3358"><highlight class="comment"></highlight></codeline>
<codeline lineno="3359"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(test_altitude<sp/>&gt;<sp/>3000)<sp/>{</highlight></codeline>
<codeline lineno="3360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>direction<sp/>=<sp/>-10;</highlight></codeline>
<codeline lineno="3361"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3362"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aef169403f1360281f7d4532c26949b6a" kindref="member">queue_altitude</ref>(dataLog.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref>.altitude);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1adeef8e326e21e271b7542e6e7c4e4bd9" kindref="member">queue_pressure</ref>(dataLog.<ref refid="structdata__struct_1a66a25e7f8b144d70d91ad0a9f7703cb1" kindref="member">ms5607</ref>.pressure);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ad470b7ae913b35bcd1e424b925a0277b" kindref="member">check_launch</ref>();</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a15e6d9ae56a77e3b476ba9804077a809" kindref="member">check_landing</ref>();</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"></highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1acebeac8bcb741e46517b79c4b8bb8ed5" kindref="member">launched</ref><sp/>=<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.launched;</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a6882559eb75dfd48ce00d14c2a82121c" kindref="member">alarm</ref><sp/>=<sp/><ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.alarm;</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.main<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a42c24a594dab5a32356a22bfbece40e8" kindref="member">main_vPID</ref>.pwm;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.<ref refid="structdata__struct_1adc9fc98fd00ac000fde2f2a4e7c2094d" kindref="member">gps</ref><sp/>=<sp/><ref refid="_weather___balloon_8cpp_1af8d9b98a57487d52e092fcf34476b905" kindref="member">gps_vPID</ref>.pwm;</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.<ref refid="structdata__struct_1a97c2e1e9042cd4bb3125779e96e1852a" kindref="member">sht31</ref><sp/>=<sp/><ref refid="_weather___balloon_8cpp_1ae24ff64da9bc21ba0e9b46918a60a2d9" kindref="member">sht_vPID</ref>.pwm;</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.tsl2561<sp/>=<sp/><ref refid="_weather___balloon_8cpp_1ae2e19feb6f43ef5148ce00d74d9bc31d" kindref="member">tsl_vPID</ref>.pwm;</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/>dataLog.<ref refid="structdata__struct_1a707f8d5848359c1b2e948b24a4a22ba5" kindref="member">pwm</ref>.<ref refid="structdata__struct_1a0a895e3ba629b91b7b2de586eb442f60" kindref="member">uv</ref><sp/>=<sp/><ref refid="_weather___balloon_8cpp_1a225972b886c522ebff85e388a404ef52" kindref="member">uv_vPID</ref>.pwm;</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a66d17868f5a5bcc68dc70243bb439959" kindref="member">log_data</ref>();</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How&apos;s<sp/>our<sp/>battery?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ad3d8902d8758d33ba2a536403243f47c" kindref="member">check_battery</ref>();</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Control<sp/>heat<sp/>and<sp/>power<sp/>consumption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1aef763e1e054693bbaf47392b64590d72" kindref="member">heater_control</ref>();</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a8644e7f4d35c348e0292bc7062c5147c" kindref="member">print_sensors</ref>();</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ab910b93345327069fe8f3809d819b669" kindref="member">configuration</ref>.DEBUG<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(F(</highlight><highlight class="stringliteral">&quot;Logging<sp/>data...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a3f16b26bef419adf4e427a66af7fad37" kindref="member">check_alarms</ref>();</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1a65d5c1fd6eda6f08406245b655c69907" kindref="member">read_serial</ref>();</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>==<sp/>200)<sp/>{</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1ac273c0e3f7143f7d3c6227763c4da844" kindref="member">watchdog</ref><sp/>=<sp/>210;</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_weather___balloon_8cpp_1abdf5b290d72a0f43221cc3461db70810" kindref="member">pet_watchdog</ref>();</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//delay(100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//flash_landing(10);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Weather_Balloon/Weather_Balloon.cpp"/>
  </compounddef>
</doxygen>
