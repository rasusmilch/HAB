<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_m_a_x17043___simple_8cpp" kind="file" language="C++">
    <compoundname>MAX17043_Simple.cpp</compoundname>
    <includes local="yes">SparkFunMAX17043/SparkFunMAX17043.h</includes>
    <incdepgraph>
      <node id="998">
        <label>Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp</label>
        <link refid="MAX17043_Simple.cpp"/>
        <childnode refid="999" relation="include">
        </childnode>
      </node>
      <node id="999">
        <label>SparkFunMAX17043/SparkFunMAX17043.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_m_a_x17043___simple_8cpp_1ad3c64efcaba662da1a2f4393d00584e9" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double voltage</definition>
        <argsstring></argsstring>
        <name>voltage</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" line="32" column="1" bodyfile="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" bodystart="32" bodyend="-1"/>
        <referencedby refid="_m_a_x17043___simple_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_m_a_x17043___simple_8cpp" startline="59" endline="83">loop</referencedby>
        <referencedby refid="_m_a_x17043___simple_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_m_a_x17043___simple_8cpp" startline="36" endline="57">setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_m_a_x17043___simple_8cpp_1a991957902833b18d327c2d8a0ea1eb42" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double soc</definition>
        <argsstring></argsstring>
        <name>soc</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" line="33" column="1" bodyfile="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" bodystart="33" bodyend="-1"/>
        <referencedby refid="class_m_a_x17043_1a9567ba1006631e2d262a01ced542523f" compoundref="_spark_fun_m_a_x17043_8cpp" startline="88" endline="97">MAX17043::getSOC</referencedby>
        <referencedby refid="_m_a_x17043___simple_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_m_a_x17043___simple_8cpp" startline="59" endline="83">loop</referencedby>
        <referencedby refid="_m_a_x17043___simple_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_m_a_x17043___simple_8cpp" startline="36" endline="57">setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_m_a_x17043___simple_8cpp_1a314d1cb4094807055c27666728aa9f44" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool alert</definition>
        <argsstring></argsstring>
        <name>alert</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" line="34" column="1" bodyfile="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" bodystart="34" bodyend="-1"/>
        <referencedby refid="_m_a_x17043___simple_8cpp_1afe461d27b9c48d5921c00d521181f12f" compoundref="_m_a_x17043___simple_8cpp" startline="59" endline="83">loop</referencedby>
        <referencedby refid="_m_a_x17043___simple_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" compoundref="_m_a_x17043___simple_8cpp" startline="36" endline="57">setup</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_m_a_x17043___simple_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" line="36" column="1" bodyfile="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" bodystart="36" bodyend="57"/>
        <references refid="_m_a_x17043___simple_8cpp_1a314d1cb4094807055c27666728aa9f44" compoundref="_m_a_x17043___simple_8cpp" startline="34">alert</references>
        <references refid="class_m_a_x17043_1a7f434b44531c65f4a3b31c4f5ebcb887" compoundref="_spark_fun_m_a_x17043_8cpp" startline="61" endline="65">MAX17043::begin</references>
        <references refid="_spark_fun_m_a_x17043_8cpp_1a77fcbce49b6bf9f478040b7b6ce3db20" compoundref="_spark_fun_m_a_x17043_8cpp" startline="242">lipo</references>
        <references refid="class_m_a_x17043_1a853dbf7908a1c4a37405050ec5e9c9e6" compoundref="_spark_fun_m_a_x17043_8cpp" startline="67" endline="76">MAX17043::quickStart</references>
        <references refid="class_m_a_x17043_1a1399c759fa7039420a2ac324db843a1f" compoundref="_spark_fun_m_a_x17043_8cpp" startline="116" endline="133">MAX17043::setThreshold</references>
        <references refid="_m_a_x17043___simple_8cpp_1a991957902833b18d327c2d8a0ea1eb42" compoundref="_m_a_x17043___simple_8cpp" startline="33">soc</references>
        <references refid="_m_a_x17043___simple_8cpp_1ad3c64efcaba662da1a2f4393d00584e9" compoundref="_m_a_x17043___simple_8cpp" startline="32">voltage</references>
      </memberdef>
      <memberdef kind="function" id="_m_a_x17043___simple_8cpp_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" line="59" column="1" bodyfile="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp" bodystart="59" bodyend="83"/>
        <references refid="_m_a_x17043___simple_8cpp_1a314d1cb4094807055c27666728aa9f44" compoundref="_m_a_x17043___simple_8cpp" startline="34">alert</references>
        <references refid="class_m_a_x17043_1ab62ceb6112cf661a9ca4ffa54d4e72c5" compoundref="_spark_fun_m_a_x17043_8cpp" startline="144" endline="159">MAX17043::getAlert</references>
        <references refid="class_m_a_x17043_1a9567ba1006631e2d262a01ced542523f" compoundref="_spark_fun_m_a_x17043_8cpp" startline="88" endline="97">MAX17043::getSOC</references>
        <references refid="class_m_a_x17043_1afcba3e7ee660335c78995d337cab1678" compoundref="_spark_fun_m_a_x17043_8cpp" startline="78" endline="86">MAX17043::getVoltage</references>
        <references refid="_spark_fun_m_a_x17043_8cpp_1a77fcbce49b6bf9f478040b7b6ce3db20" compoundref="_spark_fun_m_a_x17043_8cpp" startline="242">lipo</references>
        <references refid="_m_a_x17043___simple_8cpp_1a991957902833b18d327c2d8a0ea1eb42" compoundref="_m_a_x17043___simple_8cpp" startline="33">soc</references>
        <references refid="_m_a_x17043___simple_8cpp_1ad3c64efcaba662da1a2f4393d00584e9" compoundref="_m_a_x17043___simple_8cpp" startline="32">voltage</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">MAX17043_Simple_Serial.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment">SparkFun<sp/>MAX17043<sp/>Example<sp/>Code</highlight></codeline>
<codeline lineno="4"><highlight class="comment">Jim<sp/>Lindblom<sp/>@<sp/>SparkFun<sp/>Electronics</highlight></codeline>
<codeline lineno="5"><highlight class="comment">Original<sp/>Creation<sp/>Date:<sp/>June<sp/>22,<sp/>2015</highlight></codeline>
<codeline lineno="6"><highlight class="comment">https://github.com/sparkfun/SparkFun_MAX17043_Particle_Library</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">This<sp/>file<sp/>demonstrates<sp/>the<sp/>simple<sp/>API<sp/>of<sp/>the<sp/>SparkFun<sp/>MAX17043<sp/>Particle<sp/>library.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">Pair<sp/>the<sp/>Photon<sp/>up<sp/>to<sp/>a<sp/>SparkFun<sp/>Photon<sp/>Battery<sp/>Shield</highlight></codeline>
<codeline lineno="10"><highlight class="comment">(https://www.sparkfun.com/products/13626),<sp/>and<sp/>away<sp/>you<sp/>go!</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">This<sp/>example<sp/>will<sp/>print<sp/>the<sp/>gauge&apos;s<sp/>voltage<sp/>and<sp/>state-of-charge<sp/>(SOC)<sp/>readings</highlight></codeline>
<codeline lineno="13"><highlight class="comment">to<sp/>both<sp/>serial<sp/>(9600<sp/>baud)<sp/>and<sp/>out<sp/>to<sp/>the<sp/>Particle<sp/>cloud.<sp/>Navigate<sp/>to</highlight></codeline>
<codeline lineno="14"><highlight class="comment">https://api.particle.io/v1/devices/{DEVICE_ID}/voltage?access_token={ACCESS_TOKEN}</highlight></codeline>
<codeline lineno="15"><highlight class="comment">https://api.particle.io/v1/devices/{DEVICE_ID}/soc?access_token={ACCESS_TOKEN}</highlight></codeline>
<codeline lineno="16"><highlight class="comment">https://api.particle.io/v1/devices/{DEVICE_ID}/alert?access_token={ACCESS_TOKEN}</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">And<sp/>read<sp/>your<sp/>Photon&apos;s<sp/>battery<sp/>charge<sp/>from<sp/>the<sp/>Cloud!</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">Development<sp/>environment<sp/>specifics:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/>IDE:<sp/>Particle<sp/>Build</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>Hardware<sp/>Platform:<sp/>Particle<sp/>Photon</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SparkFun<sp/>Photon<sp/>Battery<sp/>Shield</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight></codeline>
<codeline lineno="25"><highlight class="comment">This<sp/>code<sp/>is<sp/>released<sp/>under<sp/>the<sp/>MIT<sp/>license.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">Distributed<sp/>as-is;<sp/>no<sp/>warranty<sp/>is<sp/>given.</highlight></codeline>
<codeline lineno="28"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SparkFunMAX17043/SparkFunMAX17043.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>the<sp/>SparkFun<sp/>MAX17043<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="_m_a_x17043___simple_8cpp_1ad3c64efcaba662da1a2f4393d00584e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_m_a_x17043___simple_8cpp_1ad3c64efcaba662da1a2f4393d00584e9" kindref="member">voltage</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Variable<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>LiPo<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="_m_a_x17043___simple_8cpp_1a991957902833b18d327c2d8a0ea1eb42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_m_a_x17043___simple_8cpp_1a991957902833b18d327c2d8a0ea1eb42" kindref="member">soc</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Variable<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>LiPo<sp/>state-of-charge<sp/>(SOC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="_m_a_x17043___simple_8cpp_1a314d1cb4094807055c27666728aa9f44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_m_a_x17043___simple_8cpp_1a314d1cb4094807055c27666728aa9f44" kindref="member">alert</ref>;<sp/></highlight><highlight class="comment">//<sp/>Variable<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>whether<sp/>alert<sp/>has<sp/>been<sp/>triggered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_m_a_x17043___simple_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_a_x17043___simple_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" kindref="member">setup</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.begin(9600);<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>serial,<sp/>to<sp/>output<sp/>debug<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>Spark<sp/>variables<sp/>(voltage,<sp/>soc,<sp/>and<sp/>alert):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>Particle.variable(</highlight><highlight class="stringliteral">&quot;voltage&quot;</highlight><highlight class="normal">,<sp/><ref refid="_m_a_x17043___simple_8cpp_1ad3c64efcaba662da1a2f4393d00584e9" kindref="member">voltage</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>Particle.variable(</highlight><highlight class="stringliteral">&quot;soc&quot;</highlight><highlight class="normal">,<sp/><ref refid="_m_a_x17043___simple_8cpp_1a991957902833b18d327c2d8a0ea1eb42" kindref="member">soc</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>Particle.variable(</highlight><highlight class="stringliteral">&quot;alert&quot;</highlight><highlight class="normal">,<sp/><ref refid="_m_a_x17043___simple_8cpp_1a314d1cb4094807055c27666728aa9f44" kindref="member">alert</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>read<sp/>the<sp/>values<sp/>from<sp/>a<sp/>browser,<sp/>go<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>http://api.particle.io/v1/devices/{DEVICE_ID}/{VARIABLE}?access_token={ACCESS_TOKEN}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>the<sp/>MAX17043<sp/>LiPo<sp/>fuel<sp/>gauge:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_spark_fun_m_a_x17043_8cpp_1a77fcbce49b6bf9f478040b7b6ce3db20" kindref="member">lipo</ref>.<ref refid="class_m_a_x17043_1a7f434b44531c65f4a3b31c4f5ebcb887" kindref="member">begin</ref>();<sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>MAX17043<sp/>LiPo<sp/>fuel<sp/>gauge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quick<sp/>start<sp/>restarts<sp/>the<sp/>MAX17043<sp/>in<sp/>hopes<sp/>of<sp/>getting<sp/>a<sp/>more<sp/>accurate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>guess<sp/>for<sp/>the<sp/>SOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_spark_fun_m_a_x17043_8cpp_1a77fcbce49b6bf9f478040b7b6ce3db20" kindref="member">lipo</ref>.<ref refid="class_m_a_x17043_1a853dbf7908a1c4a37405050ec5e9c9e6" kindref="member">quickStart</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>an<sp/>interrupt<sp/>to<sp/>alert<sp/>when<sp/>the<sp/>battery<sp/>SoC<sp/>gets<sp/>too<sp/>low.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>alert<sp/>at<sp/>anywhere<sp/>between<sp/>1%<sp/>-<sp/>32%:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_spark_fun_m_a_x17043_8cpp_1a77fcbce49b6bf9f478040b7b6ce3db20" kindref="member">lipo</ref>.<ref refid="class_m_a_x17043_1a1399c759fa7039420a2ac324db843a1f" kindref="member">setThreshold</ref>(20);<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>alert<sp/>threshold<sp/>to<sp/>20%.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="_m_a_x17043___simple_8cpp_1afe461d27b9c48d5921c00d521181f12f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_a_x17043___simple_8cpp_1afe461d27b9c48d5921c00d521181f12f" kindref="member">loop</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lipo.getVoltage()<sp/>returns<sp/>a<sp/>voltage<sp/>value<sp/>(e.g.<sp/>3.93)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_a_x17043___simple_8cpp_1ad3c64efcaba662da1a2f4393d00584e9" kindref="member">voltage</ref><sp/>=<sp/><ref refid="_spark_fun_m_a_x17043_8cpp_1a77fcbce49b6bf9f478040b7b6ce3db20" kindref="member">lipo</ref>.<ref refid="class_m_a_x17043_1afcba3e7ee660335c78995d337cab1678" kindref="member">getVoltage</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lipo.getSOC()<sp/>returns<sp/>the<sp/>estimated<sp/>state<sp/>of<sp/>charge<sp/>(e.g.<sp/>79%)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_a_x17043___simple_8cpp_1a991957902833b18d327c2d8a0ea1eb42" kindref="member">soc</ref><sp/>=<sp/><ref refid="_spark_fun_m_a_x17043_8cpp_1a77fcbce49b6bf9f478040b7b6ce3db20" kindref="member">lipo</ref>.<ref refid="class_m_a_x17043_1a9567ba1006631e2d262a01ced542523f" kindref="member">getSOC</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lipo.getAlert()<sp/>returns<sp/>a<sp/>0<sp/>or<sp/>1<sp/>(0=alert<sp/>not<sp/>triggered)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_m_a_x17043___simple_8cpp_1a314d1cb4094807055c27666728aa9f44" kindref="member">alert</ref><sp/>=<sp/><ref refid="_spark_fun_m_a_x17043_8cpp_1a77fcbce49b6bf9f478040b7b6ce3db20" kindref="member">lipo</ref>.<ref refid="class_m_a_x17043_1ab62ceb6112cf661a9ca4ffa54d4e72c5" kindref="member">getAlert</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Those<sp/>variables<sp/>will<sp/>update<sp/>to<sp/>the<sp/>Spark<sp/>Cloud,<sp/>but<sp/>we&apos;ll<sp/>also<sp/>print<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>locally<sp/>over<sp/>serial<sp/>for<sp/>debugging:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Voltage:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_m_a_x17043___simple_8cpp_1ad3c64efcaba662da1a2f4393d00584e9" kindref="member">voltage</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>battery<sp/>voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;<sp/>V&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Alert:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="_m_a_x17043___simple_8cpp_1a314d1cb4094807055c27666728aa9f44" kindref="member">alert</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Percentage:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<ref refid="_m_a_x17043___simple_8cpp_1a991957902833b18d327c2d8a0ea1eb42" kindref="member">soc</ref>);<sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>battery<sp/>state<sp/>of<sp/>charge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;<sp/>%&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(500);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp"/>
  </compounddef>
</doxygen>
