<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_a_x25_8h" kind="file" language="C++">
    <compoundname>AX25.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="device_8h" local="yes">device.h</includes>
    <includedby refid="_a_x25_8cpp" local="yes">Weather_Balloon/library/LibAPRS/AX25.cpp</includedby>
    <includedby refid="_lib_a_p_r_s_8cpp" local="yes">Weather_Balloon/library/LibAPRS/LibAPRS.cpp</includedby>
    <includedby refid="_lib_a_p_r_s_8h" local="yes">Weather_Balloon/library/LibAPRS/LibAPRS.h</includedby>
    <incdepgraph>
      <node id="1053">
        <label>stdbool.h</label>
      </node>
      <node id="1051">
        <label>Weather_Balloon/library/LibAPRS/AX25.h</label>
        <link refid="AX25.h"/>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
      </node>
      <node id="1055">
        <label>constants.h</label>
        <link refid="constants_8h"/>
      </node>
      <node id="1052">
        <label>stdio.h</label>
      </node>
      <node id="1054">
        <label>device.h</label>
        <link refid="device_8h"/>
        <childnode refid="1055" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1056">
        <label>Weather_Balloon/library/LibAPRS/AX25.h</label>
        <link refid="AX25.h"/>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
      </node>
      <node id="1059">
        <label>Weather_Balloon/library/LibAPRS/LibAPRS.h</label>
        <link refid="_lib_a_p_r_s_8h"/>
      </node>
      <node id="1057">
        <label>Weather_Balloon/library/LibAPRS/AX25.cpp</label>
        <link refid="_a_x25_8cpp"/>
      </node>
      <node id="1058">
        <label>Weather_Balloon/library/LibAPRS/LibAPRS.cpp</label>
        <link refid="_lib_a_p_r_s_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_x25_ctx" prot="public">AX25Ctx</innerclass>
    <innerclass refid="struct_a_x25_call" prot="public">AX25Call</innerclass>
    <innerclass refid="struct_a_x25_msg" prot="public">AX25Msg</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_a_x25_8h_1a4dc6bc53a35714e315e64780885500d5" prot="public" static="no">
        <name>AX25_MIN_FRAME_LEN</name>
        <initializer>18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="8" column="9" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_x25_8h_1a84c25cdacf7147bae59a835fe317c865" prot="public" static="no">
        <name>AX25_MAX_FRAME_LEN</name>
        <initializer>330</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="10" column="13" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_x25_8h_1ae8a60e641e91e4c15b901fdefa6809cf" prot="public" static="no">
        <name>AX25_CRC_CORRECT</name>
        <initializer>0xF0B8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="15" column="9" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_x25_8h_1a814fed3e2218ff674eb8866493379c66" prot="public" static="no">
        <name>AX25_CTRL_UI</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="17" column="9" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_x25_8h_1a88892802325a651f80dcc1c7947ad2eb" prot="public" static="no">
        <name>AX25_PID_NOLAYER3</name>
        <initializer>0xF0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="18" column="9" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_x25_8h_1a5327edd4421eb544c6ef1a6b6b57c3d5" prot="public" static="no">
        <name>AX25_CALL</name>
        <param><defname>str</defname></param>
        <param><defname>id</defname></param>
        <initializer>{.call = (str), .<ref refid="wifi_config_8h_1a375b545f86fd7e1d5d44926f28b75800" kindref="member">ssid</ref> = (id) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="37" column="9" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_x25_8h_1aca2813d00ec3666b450f4de16c225d38" prot="public" static="no">
        <name>AX25_MAX_RPT</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="38" column="9" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_x25_8h_1a48bce5d15e3ba689eb73816b4b31c71d" prot="public" static="no">
        <name>AX25_REPEATED</name>
        <param><defname>msg</defname></param>
        <param><defname>n</defname></param>
        <initializer>((msg)-&gt;rpt_flags &amp; BV(n))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="39" column="9" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_x25_8h_1a52717a0e06746d47ce30bc51123ff655" prot="public" static="no">
        <name>CALL_OVERSPACE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="41" column="9" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_x25_8h_1a239dd54aca232c9713d7cfbde19f547e" prot="public" static="no">
        <name>ax25_send</name>
        <param><defname>ctx</defname></param>
        <param><defname>dst</defname></param>
        <param><defname>src</defname></param>
        <param><defname>buf</defname></param>
        <param><defname>len</defname></param>
        <initializer><ref refid="_a_x25_8h_1aeb4be1c44c0faeb1fc73dbb04ac59a6e" kindref="member">ax25_sendVia</ref>(ctx, ({static <ref refid="struct_a_x25_call" kindref="compound">AX25Call</ref> __path[]={<ref refid="_lib_a_p_r_s_8cpp_1af80502b9580f50d6f8ee6b1e0eaff2ca" kindref="member">dst</ref>, <ref refid="_lib_a_p_r_s_8cpp_1a6d4972a88e5d7cc0aa00e10c5e03e8bc" kindref="member">src</ref>}; __path;}), 2, buf, len)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="62" column="9" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_a_x25_8h_1a15689cdcc5425113afb9b0588d76c273" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* ax25_callback_t) (struct AX25Msg *msg)</definition>
        <argsstring>)(struct AX25Msg *msg)</argsstring>
        <name>ax25_callback_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="23" column="1" bodyfile="Weather_Balloon/library/LibAPRS/AX25.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_x25_8h_1a0f29015c88788eb20f3497203589a626" prot="public" static="no">
        <type>struct <ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref></type>
        <definition>typedef struct AX25Ctx  AX25Ctx</definition>
        <argsstring></argsstring>
        <name>AX25Ctx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_x25_8h_1a196ef314b4bcf0843eb623093c5f2867" prot="public" static="no">
        <type>struct <ref refid="struct_a_x25_call" kindref="compound">AX25Call</ref></type>
        <definition>typedef struct AX25Call  AX25Call</definition>
        <argsstring></argsstring>
        <name>AX25Call</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_x25_8h_1a468b20dd26d34134d407145b7bd550ec" prot="public" static="no">
        <type>struct <ref refid="struct_a_x25_msg" kindref="compound">AX25Msg</ref></type>
        <definition>typedef struct AX25Msg  AX25Msg</definition>
        <argsstring></argsstring>
        <name>AX25Msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="59" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_a_x25_8h_1aeb4be1c44c0faeb1fc73dbb04ac59a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ax25_sendVia</definition>
        <argsstring>(AX25Ctx *ctx, const AX25Call *path, size_t path_len, const void *_buf, size_t len)</argsstring>
        <name>ax25_sendVia</name>
        <param>
          <type><ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_x25_call" kindref="compound">AX25Call</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>path_len</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="61" column="1" bodyfile="Weather_Balloon/library/LibAPRS/AX25.cpp" bodystart="141" bodyend="164"/>
        <references refid="struct_a_x25_ctx_1aea6a6b921e34e3ed514e4598a907adf1" compoundref="_a_x25_8h" startline="30">AX25Ctx::crc_out</references>
        <references refid="_c_r_c-_c_c_i_t_8h_1ae53bd48601e15e51c3d3c658afae6419" compoundref="_c_r_c-_c_c_i_t_8h" startline="9">CRC_CCIT_INIT_VAL</references>
        <references refid="_a_f_s_k_8cpp_1a68893c6a77f5945c30a7528e9841e5f3" compoundref="_a_f_s_k_8cpp" startline="95" endline="99">afsk_putchar</references>
        <references refid="_h_d_l_c_8h_1a7dfaac00ac4dc67fd47f2cbdf51d5c72" compoundref="_h_d_l_c_8h" startline="4">HDLC_FLAG</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="_a_x25_8h_1a814fed3e2218ff674eb8866493379c66" compoundref="_a_x25_8h" startline="17">AX25_CTRL_UI</references>
        <references refid="_a_x25_8h_1a88892802325a651f80dcc1c7947ad2eb" compoundref="_a_x25_8h" startline="18">AX25_PID_NOLAYER3</references>
        <referencedby refid="_lib_a_p_r_s_8h_1ae5f394441f5ec861b661e0a63e33f44e" compoundref="_lib_a_p_r_s_8cpp" startline="197" endline="219">APRS_sendPkt</referencedby>
      </memberdef>
      <memberdef kind="function" id="_a_x25_8h_1a852682ef0f0f2764ea1dbacebfa2a4e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ax25_poll</definition>
        <argsstring>(AX25Ctx *ctx)</argsstring>
        <name>ax25_poll</name>
        <param>
          <type><ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="66" column="1" bodyfile="Weather_Balloon/library/LibAPRS/AX25.cpp" bodystart="60" bodyend="99"/>
        <references refid="_a_f_s_k_8cpp_1a52e815cce13ae490f2fed9988b75c16c" compoundref="_a_f_s_k_8cpp" startline="101" endline="107">afsk_getchar</references>
        <references refid="struct_a_x25_ctx_1a2cf354b3ec66e851815667cf1ac43c06" compoundref="_a_x25_8h" startline="33">AX25Ctx::escape</references>
        <references refid="_h_d_l_c_8h_1a7dfaac00ac4dc67fd47f2cbdf51d5c72" compoundref="_h_d_l_c_8h" startline="4">HDLC_FLAG</references>
        <references refid="struct_a_x25_ctx_1a4863474d8ded80b51d5cc1c2aff9f840" compoundref="_a_x25_8h" startline="28">AX25Ctx::frame_len</references>
        <references refid="_a_x25_8h_1a4dc6bc53a35714e315e64780885500d5" compoundref="_a_x25_8h" startline="8">AX25_MIN_FRAME_LEN</references>
        <references refid="struct_a_x25_ctx_1acba5c6c48b277cd5520a4060abac3a63" compoundref="_a_x25_8h" startline="29">AX25Ctx::crc_in</references>
        <references refid="_a_x25_8h_1ae8a60e641e91e4c15b901fdefa6809cf" compoundref="_a_x25_8h" startline="15">AX25_CRC_CORRECT</references>
        <references refid="_a_x25_8cpp_1a2218d613dcf94d2a7c6385575ffb7955" compoundref="_lib_a_p_r_s_8cpp" startline="11">LibAPRS_open_squelch</references>
        <references refid="_a_f_s_k_8h_1a8581cc8306ae1bd1d32e66a01889a0de" compoundref="_a_f_s_k_8h" startline="128">LED_RX_ON</references>
        <references refid="struct_a_x25_ctx_1a9ff9110cc05e86005aaab19c41aa3237" compoundref="_a_x25_8h" startline="32">AX25Ctx::sync</references>
        <references refid="_c_r_c-_c_c_i_t_8h_1ae53bd48601e15e51c3d3c658afae6419" compoundref="_c_r_c-_c_c_i_t_8h" startline="9">CRC_CCIT_INIT_VAL</references>
        <references refid="_h_d_l_c_8h_1a69a2c8271c865acf4cfa1c1d8ee9443e" compoundref="_h_d_l_c_8h" startline="5">HDLC_RESET</references>
        <references refid="_h_d_l_c_8h_1ae1d8d5447af97b18578d75c6d69ac46a" compoundref="_h_d_l_c_8h" startline="6">AX25_ESC</references>
        <references refid="_a_x25_8h_1a84c25cdacf7147bae59a835fe317c865" compoundref="_a_x25_8h" startline="10">AX25_MAX_FRAME_LEN</references>
        <references refid="struct_a_x25_ctx_1aa1dc2643a8179b3a662cbe8b1e78433e" compoundref="_a_x25_8h" startline="26">AX25Ctx::buf</references>
        <references refid="_c_r_c-_c_c_i_t_8h_1a290cec53667d36f549f18f42d1539442" compoundref="_c_r_c-_c_c_i_t_8h" startline="13" endline="15">update_crc_ccit</references>
        <references refid="_a_f_s_k_8cpp_1a68893c6a77f5945c30a7528e9841e5f3" compoundref="_a_f_s_k_8cpp" startline="95" endline="99">afsk_putchar</references>
        <references refid="struct_a_x25_ctx_1aea6a6b921e34e3ed514e4598a907adf1" compoundref="_a_x25_8h" startline="30">AX25Ctx::crc_out</references>
        <referencedby refid="_lib_a_p_r_s_8h_1a0e02a071a97738c3c3d32a6c18f897bc" compoundref="_lib_a_p_r_s_8cpp" startline="62" endline="64">APRS_poll</referencedby>
      </memberdef>
      <memberdef kind="function" id="_a_x25_8h_1ab37e8746a65819795b43d43072ce4555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ax25_sendRaw</definition>
        <argsstring>(AX25Ctx *ctx, void *_buf, size_t len)</argsstring>
        <name>ax25_sendRaw</name>
        <param>
          <type><ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="67" column="1" bodyfile="Weather_Balloon/library/LibAPRS/AX25.cpp" bodystart="108" bodyend="120"/>
        <references refid="struct_a_x25_ctx_1aea6a6b921e34e3ed514e4598a907adf1" compoundref="_a_x25_8h" startline="30">AX25Ctx::crc_out</references>
        <references refid="_c_r_c-_c_c_i_t_8h_1ae53bd48601e15e51c3d3c658afae6419" compoundref="_c_r_c-_c_c_i_t_8h" startline="9">CRC_CCIT_INIT_VAL</references>
        <references refid="_a_f_s_k_8cpp_1a68893c6a77f5945c30a7528e9841e5f3" compoundref="_a_f_s_k_8cpp" startline="95" endline="99">afsk_putchar</references>
        <references refid="_h_d_l_c_8h_1a7dfaac00ac4dc67fd47f2cbdf51d5c72" compoundref="_h_d_l_c_8h" startline="4">HDLC_FLAG</references>
        <references refid="_a_x25_8cpp_1a3acffbd305ee72dcd4593c0d8af64a4f" compoundref="_a_x25_8cpp" startline="12">MIN</references>
        <references refid="struct_a_x25_call_1a6700a0ae4644c06bf1637e9cf91f48ce" compoundref="_a_x25_8h" startline="44">AX25Call::call</references>
        <references refid="_a_x25_8h_1a52717a0e06746d47ce30bc51123ff655" compoundref="_a_x25_8h" startline="41">CALL_OVERSPACE</references>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="wifi_config_8h_1a375b545f86fd7e1d5d44926f28b75800" compoundref="wifi_config_8h" startline="119">ssid</references>
        <references refid="struct_a_x25_call_1aab01f56f5e1cd0599dcf01f6a65b2415" compoundref="_a_x25_8h" startline="46">AX25Call::ssid</references>
      </memberdef>
      <memberdef kind="function" id="_a_x25_8h_1a23e83c05decc0769bfd8f62d860bc636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ax25_init</definition>
        <argsstring>(AX25Ctx *ctx, ax25_callback_t hook)</argsstring>
        <name>ax25_init</name>
        <param>
          <type><ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="_a_x25_8h_1a15689cdcc5425113afb9b0588d76c273" kindref="member">ax25_callback_t</ref></type>
          <declname>hook</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/LibAPRS/AX25.h" line="68" column="1" bodyfile="Weather_Balloon/library/LibAPRS/AX25.cpp" bodystart="19" bodyend="23"/>
        <references refid="struct_a_x25_ctx_1aaf4149ca8e0ac15cb846f57b5a2056cd" compoundref="_a_x25_8h" startline="31">AX25Ctx::hook</references>
        <references refid="struct_a_x25_ctx_1acba5c6c48b277cd5520a4060abac3a63" compoundref="_a_x25_8h" startline="29">AX25Ctx::crc_in</references>
        <references refid="struct_a_x25_ctx_1aea6a6b921e34e3ed514e4598a907adf1" compoundref="_a_x25_8h" startline="30">AX25Ctx::crc_out</references>
        <references refid="_c_r_c-_c_c_i_t_8h_1ae53bd48601e15e51c3d3c658afae6419" compoundref="_c_r_c-_c_c_i_t_8h" startline="9">CRC_CCIT_INIT_VAL</references>
        <references refid="struct_a_x25_ctx_1aa1dc2643a8179b3a662cbe8b1e78433e" compoundref="_a_x25_8h" startline="26">AX25Ctx::buf</references>
        <references refid="_a_x25_8cpp_1a9811a94def98591b5b05aa6491bbcfef" compoundref="_a_x25_8cpp" startline="13">DECODE_CALL</references>
        <references refid="struct_a_x25_msg_1a38dc18966290b4f8cb24651e9e75ef66" compoundref="_a_x25_8h" startline="51">AX25Msg::dst</references>
        <references refid="struct_a_x25_call_1a6700a0ae4644c06bf1637e9cf91f48ce" compoundref="_a_x25_8h" startline="44">AX25Call::call</references>
        <references refid="struct_a_x25_call_1aab01f56f5e1cd0599dcf01f6a65b2415" compoundref="_a_x25_8h" startline="46">AX25Call::ssid</references>
        <references refid="struct_a_x25_msg_1a1f0571ab6f708e1725ad9a8be8e6b28a" compoundref="_a_x25_8h" startline="50">AX25Msg::src</references>
        <references refid="struct_a_x25_msg_1ab4a4b29611190548f3cba0c0f4969f24" compoundref="_a_x25_8h" startline="53">AX25Msg::rpt_count</references>
        <references refid="_a_x25_8cpp_1a3c5cd622462bb50b6dab4c189e219eb9" compoundref="_a_x25_8cpp" startline="11">countof</references>
        <references refid="struct_a_x25_msg_1aca3c075fa9ad0af3cea5c850153e7b83" compoundref="_a_x25_8h" startline="52">AX25Msg::rpt_list</references>
        <references refid="_a_x25_8cpp_1ae3bbef27f5837cc521995314afbf622b" compoundref="_a_x25_8cpp" startline="14">AX25_SET_REPEATED</references>
        <references refid="struct_a_x25_msg_1a375105fdcb83cb525082d8dbc22c2d33" compoundref="_a_x25_8h" startline="55">AX25Msg::ctrl</references>
        <references refid="_a_x25_8h_1a814fed3e2218ff674eb8866493379c66" compoundref="_a_x25_8h" startline="17">AX25_CTRL_UI</references>
        <references refid="struct_a_x25_msg_1ae2e8532da38c1a6fac980377ab9b494b" compoundref="_a_x25_8h" startline="56">AX25Msg::pid</references>
        <references refid="_a_x25_8h_1a88892802325a651f80dcc1c7947ad2eb" compoundref="_a_x25_8h" startline="18">AX25_PID_NOLAYER3</references>
        <references refid="struct_a_x25_msg_1a45b0f4c6c77aec02cd647b51e0f736e1" compoundref="_a_x25_8h" startline="58">AX25Msg::len</references>
        <references refid="struct_a_x25_ctx_1a4863474d8ded80b51d5cc1c2aff9f840" compoundref="_a_x25_8h" startline="28">AX25Ctx::frame_len</references>
        <references refid="struct_a_x25_msg_1ac2aec986679b69baa42af40caf9a48bd" compoundref="_a_x25_8h" startline="57">AX25Msg::info</references>
        <referencedby refid="_lib_a_p_r_s_8h_1a4112ffe044a152d02f86f8f25a30d45a" compoundref="_lib_a_p_r_s_8cpp" startline="54" endline="60">APRS_init</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PROTOCOL_AX25_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROTOCOL_AX25_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="device_8h" kindref="compound">device.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="_a_x25_8h_1a4dc6bc53a35714e315e64780885500d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AX25_MIN_FRAME_LEN<sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CUSTOM_FRAME_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="_a_x25_8h_1a84c25cdacf7147bae59a835fe317c865" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>AX25_MAX_FRAME_LEN<sp/>330</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>AX25_MAX_FRAME_LEN<sp/>CUSTOM_FRAME_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="_a_x25_8h_1ae8a60e641e91e4c15b901fdefa6809cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AX25_CRC_CORRECT<sp/><sp/>0xF0B8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="_a_x25_8h_1a814fed3e2218ff674eb8866493379c66" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AX25_CTRL_UI<sp/><sp/><sp/><sp/><sp/><sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="_a_x25_8h_1a88892802325a651f80dcc1c7947ad2eb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AX25_PID_NOLAYER3<sp/>0xF0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_x25_msg" kindref="compound">AX25Msg</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_a_x25_8h_1a15689cdcc5425113afb9b0588d76c273" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_a_x25_8h_1a15689cdcc5425113afb9b0588d76c273" kindref="member">ax25_callback_t</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_x25_msg" kindref="compound">AX25Msg</ref><sp/>*msg);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct_a_x25_ctx" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="struct_a_x25_ctx_1aa1dc2643a8179b3a662cbe8b1e78433e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_a_x25_ctx_1aa1dc2643a8179b3a662cbe8b1e78433e" kindref="member">buf</ref>[<ref refid="_a_x25_8h_1a84c25cdacf7147bae59a835fe317c865" kindref="member">AX25_MAX_FRAME_LEN</ref>];</highlight></codeline>
<codeline lineno="27" refid="struct_a_x25_ctx_1a1e358851f9443aae7fb781c76044e62f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<ref refid="struct_a_x25_ctx_1a1e358851f9443aae7fb781c76044e62f" kindref="member">ch</ref>;</highlight></codeline>
<codeline lineno="28" refid="struct_a_x25_ctx_1a4863474d8ded80b51d5cc1c2aff9f840" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_a_x25_ctx_1a4863474d8ded80b51d5cc1c2aff9f840" kindref="member">frame_len</ref>;</highlight></codeline>
<codeline lineno="29" refid="struct_a_x25_ctx_1acba5c6c48b277cd5520a4060abac3a63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_a_x25_ctx_1acba5c6c48b277cd5520a4060abac3a63" kindref="member">crc_in</ref>;</highlight></codeline>
<codeline lineno="30" refid="struct_a_x25_ctx_1aea6a6b921e34e3ed514e4598a907adf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_a_x25_ctx_1aea6a6b921e34e3ed514e4598a907adf1" kindref="member">crc_out</ref>;</highlight></codeline>
<codeline lineno="31" refid="struct_a_x25_ctx_1aaf4149ca8e0ac15cb846f57b5a2056cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_x25_8h_1a15689cdcc5425113afb9b0588d76c273" kindref="member">ax25_callback_t</ref><sp/><ref refid="struct_a_x25_ctx_1aaf4149ca8e0ac15cb846f57b5a2056cd" kindref="member">hook</ref>;</highlight></codeline>
<codeline lineno="32" refid="struct_a_x25_ctx_1a9ff9110cc05e86005aaab19c41aa3237" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_a_x25_ctx_1a9ff9110cc05e86005aaab19c41aa3237" kindref="member">sync</ref>;</highlight></codeline>
<codeline lineno="33" refid="struct_a_x25_ctx_1a2cf354b3ec66e851815667cf1ac43c06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_a_x25_ctx_1a2cf354b3ec66e851815667cf1ac43c06" kindref="member">escape</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/><ref refid="_a_x25_8h_1a0f29015c88788eb20f3497203589a626" kindref="member">AX25Ctx</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_a_x25_8h_1a5327edd4421eb544c6ef1a6b6b57c3d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AX25_CALL(str,<sp/>id)<sp/>{.call<sp/>=<sp/>(str),<sp/>.ssid<sp/>=<sp/>(id)<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_a_x25_8h_1aca2813d00ec3666b450f4de16c225d38" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AX25_MAX_RPT<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="_a_x25_8h_1a48bce5d15e3ba689eb73816b4b31c71d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AX25_REPEATED(msg,<sp/>n)<sp/>((msg)-&gt;rpt_flags<sp/>&amp;<sp/>BV(n))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_a_x25_8h_1a52717a0e06746d47ce30bc51123ff655" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CALL_OVERSPACE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="struct_a_x25_call" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_x25_call" kindref="compound">AX25Call</ref><sp/>{</highlight></codeline>
<codeline lineno="44" refid="struct_a_x25_call_1a6700a0ae4644c06bf1637e9cf91f48ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>call[6+<ref refid="_a_x25_8h_1a52717a0e06746d47ce30bc51123ff655" kindref="member">CALL_OVERSPACE</ref>];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//char<sp/>STRING_TERMINATION<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="struct_a_x25_call_1aab01f56f5e1cd0599dcf01f6a65b2415" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_a_x25_call_1aab01f56f5e1cd0599dcf01f6a65b2415" kindref="member">ssid</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/><ref refid="_a_x25_8h_1a196ef314b4bcf0843eb623093c5f2867" kindref="member">AX25Call</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="struct_a_x25_msg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_x25_msg" kindref="compound">AX25Msg</ref><sp/>{</highlight></codeline>
<codeline lineno="50" refid="struct_a_x25_msg_1a1f0571ab6f708e1725ad9a8be8e6b28a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_x25_call" kindref="compound">AX25Call</ref><sp/><ref refid="struct_a_x25_msg_1a1f0571ab6f708e1725ad9a8be8e6b28a" kindref="member">src</ref>;</highlight></codeline>
<codeline lineno="51" refid="struct_a_x25_msg_1a38dc18966290b4f8cb24651e9e75ef66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_x25_call" kindref="compound">AX25Call</ref><sp/><ref refid="struct_a_x25_msg_1a38dc18966290b4f8cb24651e9e75ef66" kindref="member">dst</ref>;</highlight></codeline>
<codeline lineno="52" refid="struct_a_x25_msg_1aca3c075fa9ad0af3cea5c850153e7b83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_x25_call" kindref="compound">AX25Call</ref><sp/>rpt_list[<ref refid="_a_x25_8h_1aca2813d00ec3666b450f4de16c225d38" kindref="member">AX25_MAX_RPT</ref>];</highlight></codeline>
<codeline lineno="53" refid="struct_a_x25_msg_1ab4a4b29611190548f3cba0c0f4969f24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_a_x25_msg_1ab4a4b29611190548f3cba0c0f4969f24" kindref="member">rpt_count</ref>;</highlight></codeline>
<codeline lineno="54" refid="struct_a_x25_msg_1a7d77c823411d1c0eded96c29ca7586a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_a_x25_msg_1a7d77c823411d1c0eded96c29ca7586a5" kindref="member">rpt_flags</ref>;</highlight></codeline>
<codeline lineno="55" refid="struct_a_x25_msg_1a375105fdcb83cb525082d8dbc22c2d33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_a_x25_msg_1a375105fdcb83cb525082d8dbc22c2d33" kindref="member">ctrl</ref>;</highlight></codeline>
<codeline lineno="56" refid="struct_a_x25_msg_1ae2e8532da38c1a6fac980377ab9b494b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_a_x25_msg_1ae2e8532da38c1a6fac980377ab9b494b" kindref="member">pid</ref>;</highlight></codeline>
<codeline lineno="57" refid="struct_a_x25_msg_1ac2aec986679b69baa42af40caf9a48bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="struct_a_x25_msg_1ac2aec986679b69baa42af40caf9a48bd" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="58" refid="struct_a_x25_msg_1a45b0f4c6c77aec02cd647b51e0f736e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_a_x25_msg_1a45b0f4c6c77aec02cd647b51e0f736e1" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/><ref refid="_a_x25_8h_1a468b20dd26d34134d407145b7bd550ec" kindref="member">AX25Msg</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_x25_8h_1aeb4be1c44c0faeb1fc73dbb04ac59a6e" kindref="member">ax25_sendVia</ref>(<ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_x25_call" kindref="compound">AX25Call</ref><sp/>*<ref refid="_lib_a_p_r_s_8cpp_1ae9279326b6ef5ef489e2c37e8b764a4d" kindref="member">path</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>path_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="62" refid="_a_x25_8h_1a239dd54aca232c9713d7cfbde19f547e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ax25_send(ctx,<sp/>dst,<sp/>src,<sp/>buf,<sp/>len)<sp/>ax25_sendVia(ctx,<sp/>({static<sp/>AX25Call<sp/>__path[]={dst,<sp/>src};<sp/>__path;}),<sp/>2,<sp/>buf,<sp/>len)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_x25_8h_1a852682ef0f0f2764ea1dbacebfa2a4e7" kindref="member">ax25_poll</ref>(<ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref><sp/>*ctx);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_x25_8h_1ab37e8746a65819795b43d43072ce4555" kindref="member">ax25_sendRaw</ref>(<ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref><sp/>*ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_x25_8h_1a23e83c05decc0769bfd8f62d860bc636" kindref="member">ax25_init</ref>(<ref refid="struct_a_x25_ctx" kindref="compound">AX25Ctx</ref><sp/>*ctx,<sp/><ref refid="_a_x25_8h_1a15689cdcc5425113afb9b0588d76c273" kindref="member">ax25_callback_t</ref><sp/><ref refid="struct_a_x25_ctx_1aaf4149ca8e0ac15cb846f57b5a2056cd" kindref="member">hook</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Weather_Balloon/library/LibAPRS/AX25.h"/>
  </compounddef>
</doxygen>
