<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_time_8cpp" kind="file" language="C++">
    <compoundname>Time.cpp</compoundname>
    <includes local="no">WProgram.h</includes>
    <includes refid="_time_lib_8h" local="yes">TimeLib.h</includes>
    <incdepgraph>
      <node id="1018">
        <label>TimeLib.h</label>
        <link refid="_time_lib_8h"/>
      </node>
      <node id="1016">
        <label>Weather_Balloon/library/Time-master/Time.cpp</label>
        <link refid="Time.cpp"/>
        <childnode refid="1017" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
      </node>
      <node id="1017">
        <label>WProgram.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_time_8cpp_1a7408f7b32a75c5f071a8096be049bc4d" prot="public" static="no">
        <name>LEAP_YEAR</name>
        <param><defname>Y</defname></param>
        <initializer>( ((1970+Y)&gt;0) &amp;&amp; !((1970+Y)%4) &amp;&amp; ( ((1970+Y)%100) || !((1970+Y)%400) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="147" column="9" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="147" bodyend="-1"/>
        <referencedby refid="_time_8cpp_1af08cc091ce5590067f695e51bfdefd17" compoundref="_time_8cpp" startline="151" endline="202">breakTime</referencedby>
        <referencedby refid="_time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" compoundref="_time_8cpp" startline="204" endline="233">makeTime</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_time_8cpp_1a52357cbf68af66972047f7aed7a45218" prot="public" static="yes" mutable="no">
        <type>tmElements_t</type>
        <definition>tmElements_t tm</definition>
        <argsstring></argsstring>
        <name>tm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="38" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_time_8cpp_1a40798fbd78721ae01927d9df12960b33" prot="public" static="yes" mutable="no">
        <type>time_t</type>
        <definition>time_t cacheTime</definition>
        <argsstring></argsstring>
        <name>cacheTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="39" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_time_8cpp_1a2f682476794ee90f3cd499a0cffd3dc9" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t syncInterval</definition>
        <argsstring></argsstring>
        <name>syncInterval</name>
        <initializer>= 300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="40" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_time_8cpp_1a5e6556161021464d855f3d1c974a2748" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t monthDays[]</definition>
        <argsstring>[]</argsstring>
        <name>monthDays</name>
        <initializer>={31,28,31,30,31,30,31,31,30,31,30,31}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="149" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_time_8cpp_1ac7083e439046dbeaff7f1792f069c12f" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t sysTime</definition>
        <argsstring></argsstring>
        <name>sysTime</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="237" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_time_8cpp_1ab8ef0cdf0feb6aed8d34707b0c92fe5c" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t prevMillis</definition>
        <argsstring></argsstring>
        <name>prevMillis</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="238" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_time_8cpp_1a92e3ebb504612f7f6831a123c4d91a33" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t nextSyncTime</definition>
        <argsstring></argsstring>
        <name>nextSyncTime</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="239" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_time_8cpp_1a713572b69298a2ee90d6ac091e9f105b" prot="public" static="yes" mutable="no">
        <type>timeStatus_t</type>
        <definition>timeStatus_t Status</definition>
        <argsstring></argsstring>
        <name>Status</name>
        <initializer>= timeNotSet</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="240" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" prot="public" static="no" mutable="no">
        <type>getExternalTime</type>
        <definition>getExternalTime getTimePtr</definition>
        <argsstring></argsstring>
        <name>getTimePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="242" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="242" bodyend="-1"/>
        <referencedby refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</referencedby>
        <referencedby refid="_time_8cpp_1afb0bd098acb0d2ab18392313c38c636d" compoundref="_time_8cpp" startline="312" endline="316">setSyncProvider</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refreshCache</definition>
        <argsstring>(time_t t)</argsstring>
        <name>refreshCache</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="42" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="42" bodyend="47"/>
        <references refid="_time_8cpp_1af08cc091ce5590067f695e51bfdefd17" compoundref="_time_8cpp" startline="151" endline="202">breakTime</references>
        <referencedby refid="_time_8cpp_1a51dcd9f072551ba8f47449a4e7f78c29" compoundref="_time_8cpp" startline="110" endline="113">day</referencedby>
        <referencedby refid="_time_8cpp_1ac4706d0cffc9e111a6c6a757b462e88e" compoundref="_time_8cpp" startline="53" endline="56">hour</referencedby>
        <referencedby refid="_time_8cpp_1a3cf3a2a5bc98d77739dd1c8c4c0909b9" compoundref="_time_8cpp" startline="62" endline="70">hourFormat12</referencedby>
        <referencedby refid="_time_8cpp_1a88285e3771bcb970424122a6ee4b40fa" compoundref="_time_8cpp" startline="92" endline="95">minute</referencedby>
        <referencedby refid="_time_8cpp_1a726c707dded9d78cf076554eceb956ec" compoundref="_time_8cpp" startline="128" endline="131">month</referencedby>
        <referencedby refid="_time_8cpp_1a10a4dd811353baa12dadadee7c7e5099" compoundref="_time_8cpp" startline="101" endline="104">second</referencedby>
        <referencedby refid="_time_8cpp_1a397d9b2a739891092b487211668b496f" compoundref="_time_8cpp" startline="119" endline="122">weekday</referencedby>
        <referencedby refid="_time_8cpp_1a8608865f8292c0505e02b67fd1cf39e8" compoundref="_time_8cpp" startline="137" endline="140">year</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hour</definition>
        <argsstring>()</argsstring>
        <name>hour</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="49" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="49" bodyend="51"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
        <referencedby refid="class_d_s3231_1ace5ee2a9d9cc6b6ecb16ca749514d2a3" compoundref="_d_s3231_8cpp" startline="931" endline="944">DS3231::isAlarm2</referencedby>
        <referencedby refid="_time_8cpp_1af53f46c9c1e0ad141f99045e3f96d688" compoundref="_time_8cpp" startline="84" endline="86">isPM</referencedby>
        <referencedby refid="class_d_s3231_1ac8ccbb72f7cfbb27df1558a8896ef236" compoundref="_d_s3231_8cpp" startline="88" endline="138">DS3231::setDateTime</referencedby>
        <referencedby refid="struct_tiny_g_p_s_time_1afcdb632fee9d144b1414c9d7b95719f1" compoundref="_tiny_g_p_s_09_09_8h" startline="109" endline="109">TinyGPSTime::value</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1ac4706d0cffc9e111a6c6a757b462e88e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hour</definition>
        <argsstring>(time_t t)</argsstring>
        <name>hour</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="53" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="53" bodyend="56"/>
        <references refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" compoundref="_time_8cpp" startline="42" endline="47">refreshCache</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a5a99d1c070206fef196539dec629443e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hourFormat12</definition>
        <argsstring>()</argsstring>
        <name>hourFormat12</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="58" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="58" bodyend="60"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a3cf3a2a5bc98d77739dd1c8c4c0909b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hourFormat12</definition>
        <argsstring>(time_t t)</argsstring>
        <name>hourFormat12</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="62" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="62" bodyend="70"/>
        <references refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" compoundref="_time_8cpp" startline="42" endline="47">refreshCache</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isAM</definition>
        <argsstring>()</argsstring>
        <name>isAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="72" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="72" bodyend="74"/>
        <references refid="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" compoundref="_time_8cpp" startline="80" endline="82">isPM</references>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a4334ceb57e1ed381be82347e196aabc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isAM</definition>
        <argsstring>(time_t t)</argsstring>
        <name>isAM</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="76" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="76" bodyend="78"/>
        <references refid="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" compoundref="_time_8cpp" startline="80" endline="82">isPM</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isPM</definition>
        <argsstring>()</argsstring>
        <name>isPM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="80" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="80" bodyend="82"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
        <referencedby refid="_time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" compoundref="_time_8cpp" startline="72" endline="74">isAM</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1af53f46c9c1e0ad141f99045e3f96d688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t isPM</definition>
        <argsstring>(time_t t)</argsstring>
        <name>isPM</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="84" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="84" bodyend="86"/>
        <references refid="_time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" compoundref="_time_8cpp" startline="49" endline="51">hour</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int minute</definition>
        <argsstring>()</argsstring>
        <name>minute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="88" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="88" bodyend="90"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
        <referencedby refid="class_d_s3231_1ac8ccbb72f7cfbb27df1558a8896ef236" compoundref="_d_s3231_8cpp" startline="88" endline="138">DS3231::setDateTime</referencedby>
        <referencedby refid="struct_tiny_g_p_s_time_1afcdb632fee9d144b1414c9d7b95719f1" compoundref="_tiny_g_p_s_09_09_8h" startline="109" endline="109">TinyGPSTime::value</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a88285e3771bcb970424122a6ee4b40fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int minute</definition>
        <argsstring>(time_t t)</argsstring>
        <name>minute</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="92" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="92" bodyend="95"/>
        <references refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" compoundref="_time_8cpp" startline="42" endline="47">refreshCache</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int second</definition>
        <argsstring>()</argsstring>
        <name>second</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="97" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="97" bodyend="99"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
        <referencedby refid="class_d_s3231_1ac8ccbb72f7cfbb27df1558a8896ef236" compoundref="_d_s3231_8cpp" startline="88" endline="138">DS3231::setDateTime</referencedby>
        <referencedby refid="struct_tiny_g_p_s_time_1afcdb632fee9d144b1414c9d7b95719f1" compoundref="_tiny_g_p_s_09_09_8h" startline="109" endline="109">TinyGPSTime::value</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a10a4dd811353baa12dadadee7c7e5099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int second</definition>
        <argsstring>(time_t t)</argsstring>
        <name>second</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="101" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="101" bodyend="104"/>
        <references refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" compoundref="_time_8cpp" startline="42" endline="47">refreshCache</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a075786e0a525a2bba638889efcc42385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int day</definition>
        <argsstring>()</argsstring>
        <name>day</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="106" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="106" bodyend="108"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
        <referencedby refid="class_d_s3231_1ace5ee2a9d9cc6b6ecb16ca749514d2a3" compoundref="_d_s3231_8cpp" startline="931" endline="944">DS3231::isAlarm2</referencedby>
        <referencedby refid="class_r_t_c_zero_1a4519ba0e3eee8a3bf03f7c14b3ffa902" compoundref="_r_t_c_zero_8cpp" startline="331" endline="338">RTCZero::setAlarmDay</referencedby>
        <referencedby refid="class_d_s3231_1ac8ccbb72f7cfbb27df1558a8896ef236" compoundref="_d_s3231_8cpp" startline="88" endline="138">DS3231::setDateTime</referencedby>
        <referencedby refid="class_r_t_c_zero_1aa1d8a2279ae41b6a7b50c5ccc974b29f" compoundref="_r_t_c_zero_8cpp" startline="259" endline="266">RTCZero::setDay</referencedby>
        <referencedby refid="struct_tiny_g_p_s_date_1a718150ae16f68afa9ae81f9d1b3ce3f4" compoundref="_tiny_g_p_s_09_09_8h" startline="85" endline="85">TinyGPSDate::value</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a51dcd9f072551ba8f47449a4e7f78c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int day</definition>
        <argsstring>(time_t t)</argsstring>
        <name>day</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="110" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="110" bodyend="113"/>
        <references refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" compoundref="_time_8cpp" startline="42" endline="47">refreshCache</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weekday</definition>
        <argsstring>()</argsstring>
        <name>weekday</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="115" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="115" bodyend="117"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a397d9b2a739891092b487211668b496f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int weekday</definition>
        <argsstring>(time_t t)</argsstring>
        <name>weekday</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="119" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="119" bodyend="122"/>
        <references refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" compoundref="_time_8cpp" startline="42" endline="47">refreshCache</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int month</definition>
        <argsstring>()</argsstring>
        <name>month</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="124" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="124" bodyend="126"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
        <referencedby refid="_time_8cpp_1af08cc091ce5590067f695e51bfdefd17" compoundref="_time_8cpp" startline="151" endline="202">breakTime</referencedby>
        <referencedby refid="class_d_s3231_1ace5ee2a9d9cc6b6ecb16ca749514d2a3" compoundref="_d_s3231_8cpp" startline="931" endline="944">DS3231::isAlarm2</referencedby>
        <referencedby refid="class_r_t_c_zero_1a8fe74d0c1ec7922f893addd67dc16aba" compoundref="_r_t_c_zero_8cpp" startline="340" endline="347">RTCZero::setAlarmMonth</referencedby>
        <referencedby refid="class_d_s3231_1ac8ccbb72f7cfbb27df1558a8896ef236" compoundref="_d_s3231_8cpp" startline="88" endline="138">DS3231::setDateTime</referencedby>
        <referencedby refid="class_r_t_c_zero_1af91e416057bf96c8ae94b053e94ec722" compoundref="_r_t_c_zero_8cpp" startline="268" endline="275">RTCZero::setMonth</referencedby>
        <referencedby refid="struct_tiny_g_p_s_date_1a718150ae16f68afa9ae81f9d1b3ce3f4" compoundref="_tiny_g_p_s_09_09_8h" startline="85" endline="85">TinyGPSDate::value</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a726c707dded9d78cf076554eceb956ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int month</definition>
        <argsstring>(time_t t)</argsstring>
        <name>month</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="128" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="128" bodyend="131"/>
        <references refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" compoundref="_time_8cpp" startline="42" endline="47">refreshCache</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int year</definition>
        <argsstring>()</argsstring>
        <name>year</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="133" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="133" bodyend="135"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
        <referencedby refid="_time_8cpp_1af08cc091ce5590067f695e51bfdefd17" compoundref="_time_8cpp" startline="151" endline="202">breakTime</referencedby>
        <referencedby refid="class_d_s3231_1ace5ee2a9d9cc6b6ecb16ca749514d2a3" compoundref="_d_s3231_8cpp" startline="931" endline="944">DS3231::isAlarm2</referencedby>
        <referencedby refid="class_r_t_c_zero_1ae55ef909edbb893eba4becc8676dd8d6" compoundref="_r_t_c_zero_8cpp" startline="349" endline="356">RTCZero::setAlarmYear</referencedby>
        <referencedby refid="class_d_s3231_1ac8ccbb72f7cfbb27df1558a8896ef236" compoundref="_d_s3231_8cpp" startline="88" endline="138">DS3231::setDateTime</referencedby>
        <referencedby refid="class_r_t_c_zero_1ad71c689f526dd7e40c6f134b2a223b81" compoundref="_r_t_c_zero_8cpp" startline="277" endline="284">RTCZero::setYear</referencedby>
        <referencedby refid="struct_tiny_g_p_s_date_1a718150ae16f68afa9ae81f9d1b3ce3f4" compoundref="_tiny_g_p_s_09_09_8h" startline="85" endline="85">TinyGPSDate::value</referencedby>
        <referencedby refid="struct_tiny_g_p_s_date_1ae2cc914fec377b429d99f01204f50d60" compoundref="_tiny_g_p_s_09_09_8cpp" startline="391" endline="396">TinyGPSDate::year</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a8608865f8292c0505e02b67fd1cf39e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int year</definition>
        <argsstring>(time_t t)</argsstring>
        <name>year</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="137" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="137" bodyend="140"/>
        <references refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" compoundref="_time_8cpp" startline="42" endline="47">refreshCache</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1af08cc091ce5590067f695e51bfdefd17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void breakTime</definition>
        <argsstring>(time_t timeInput, tmElements_t &amp;tm)</argsstring>
        <name>breakTime</name>
        <param>
          <type>time_t</type>
          <declname>timeInput</declname>
        </param>
        <param>
          <type>tmElements_t &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="151" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="151" bodyend="202"/>
        <references refid="_time_8cpp_1a7408f7b32a75c5f071a8096be049bc4d" compoundref="_time_8cpp" startline="147">LEAP_YEAR</references>
        <references refid="_time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" compoundref="_time_8cpp" startline="124" endline="126">month</references>
        <references refid="_time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" compoundref="_time_8cpp" startline="133" endline="135">year</references>
        <referencedby refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" compoundref="_time_8cpp" startline="42" endline="47">refreshCache</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t makeTime</definition>
        <argsstring>(tmElements_t &amp;tm)</argsstring>
        <name>makeTime</name>
        <param>
          <type>tmElements_t &amp;</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="204" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="204" bodyend="233"/>
        <references refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="_r_t_clib_8cpp" startline="18">i</references>
        <references refid="_time_8cpp_1a7408f7b32a75c5f071a8096be049bc4d" compoundref="_time_8cpp" startline="147">LEAP_YEAR</references>
        <referencedby refid="_time_8cpp_1a6b60a4747bafcd553c95a2110649c31d" compoundref="_time_8cpp" startline="286" endline="300">setTime</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t now</definition>
        <argsstring>()</argsstring>
        <name>now</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="250" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="250" bodyend="272"/>
        <references refid="_time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" compoundref="_time_8cpp" startline="242">getTimePtr</references>
        <references refid="_time_8cpp_1a1ce752bee962425a697f513db46964d4" compoundref="_time_8cpp" startline="274" endline="284">setTime</references>
        <referencedby refid="class_r_t_c___millis_1a17670c5fcf820867a8018aa2083c62cd" compoundref="_r_t_clib_8h" startline="63" endline="66">RTC_Millis::begin</referencedby>
        <referencedby refid="class_p_i_d_1a8d154fe921cba7963c49d7d2b42eccf1" compoundref="_p_i_d__v1_8cpp" startline="47" endline="75">PID::Compute</referencedby>
        <referencedby refid="_time_8cpp_1a075786e0a525a2bba638889efcc42385" compoundref="_time_8cpp" startline="106" endline="108">day</referencedby>
        <referencedby refid="_time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" compoundref="_time_8cpp" startline="49" endline="51">hour</referencedby>
        <referencedby refid="_time_8cpp_1a5a99d1c070206fef196539dec629443e" compoundref="_time_8cpp" startline="58" endline="60">hourFormat12</referencedby>
        <referencedby refid="struct_filter_two_pole_1a77a802a3767a4d55290fb581a557f2ee" compoundref="_filter_two_pole_8cpp" startline="120" endline="148">FilterTwoPole::input</referencedby>
        <referencedby refid="_time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" compoundref="_time_8cpp" startline="72" endline="74">isAM</referencedby>
        <referencedby refid="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" compoundref="_time_8cpp" startline="80" endline="82">isPM</referencedby>
        <referencedby refid="_time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" compoundref="_time_8cpp" startline="88" endline="90">minute</referencedby>
        <referencedby refid="_time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" compoundref="_time_8cpp" startline="124" endline="126">month</referencedby>
        <referencedby refid="class_dallas_temperature_1aee2a2abd5f8293df9a0a030b3e982c90" compoundref="_dallas_temperature_8cpp" startline="342" endline="364">DallasTemperature::requestTemperaturesByAddress</referencedby>
        <referencedby refid="_time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" compoundref="_time_8cpp" startline="97" endline="99">second</referencedby>
        <referencedby refid="_time_8cpp_1afb0bd098acb0d2ab18392313c38c636d" compoundref="_time_8cpp" startline="312" endline="316">setSyncProvider</referencedby>
        <referencedby refid="struct_filter_one_pole_1a5b54248319d02b3f15d93e6333339389" compoundref="_filter_one_pole_8cpp" startline="89" endline="119">FilterOnePole::test</referencedby>
        <referencedby refid="struct_filter_two_pole_1a9d600c9c4c07239f34740f07a1487c2a" compoundref="_filter_two_pole_8cpp" startline="180" endline="208">FilterTwoPole::test</referencedby>
        <referencedby refid="struct_filter_one_pole_cascade_1a48b7253c9eec2765bce755b6fc985e34" compoundref="_filter_one_pole_8cpp" startline="155" endline="227">FilterOnePoleCascade::test</referencedby>
        <referencedby refid="_time_8cpp_1a9d95a01859478796c4d60525bdaa9c59" compoundref="_time_8cpp" startline="307" endline="310">timeStatus</referencedby>
        <referencedby refid="_time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" compoundref="_time_8cpp" startline="115" endline="117">weekday</referencedby>
        <referencedby refid="_time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" compoundref="_time_8cpp" startline="133" endline="135">year</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a1ce752bee962425a697f513db46964d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setTime</definition>
        <argsstring>(time_t t)</argsstring>
        <name>setTime</name>
        <param>
          <type>time_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="274" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="274" bodyend="284"/>
        <referencedby refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</referencedby>
        <referencedby refid="_time_8cpp_1a6b60a4747bafcd553c95a2110649c31d" compoundref="_time_8cpp" startline="286" endline="300">setTime</referencedby>
        <referencedby refid="struct_tiny_g_p_s_time_1abd6dd7a576fd42cd6980c92eec77ab1d" compoundref="_tiny_g_p_s_09_09_8h" startline="115" endline="116">TinyGPSTime::TinyGPSTime</referencedby>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a6b60a4747bafcd553c95a2110649c31d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setTime</definition>
        <argsstring>(int hr, int min, int sec, int dy, int mnth, int yr)</argsstring>
        <name>setTime</name>
        <param>
          <type>int</type>
          <declname>hr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mnth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="286" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="286" bodyend="300"/>
        <references refid="_time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" compoundref="_time_8cpp" startline="204" endline="233">makeTime</references>
        <references refid="_time_8cpp_1a1ce752bee962425a697f513db46964d4" compoundref="_time_8cpp" startline="274" endline="284">setTime</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1acc6ec9a3678824ee0b252511300cf070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void adjustTime</definition>
        <argsstring>(long adjustment)</argsstring>
        <name>adjustTime</name>
        <param>
          <type>long</type>
          <declname>adjustment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="302" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="302" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a9d95a01859478796c4d60525bdaa9c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>timeStatus_t</type>
        <definition>timeStatus_t timeStatus</definition>
        <argsstring>()</argsstring>
        <name>timeStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="307" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="307" bodyend="310"/>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1afb0bd098acb0d2ab18392313c38c636d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setSyncProvider</definition>
        <argsstring>(getExternalTime getTimeFunction)</argsstring>
        <name>setSyncProvider</name>
        <param>
          <type>getExternalTime</type>
          <declname>getTimeFunction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="312" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="312" bodyend="316"/>
        <references refid="_time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" compoundref="_time_8cpp" startline="242">getTimePtr</references>
        <references refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" compoundref="_time_8cpp" startline="250" endline="272">now</references>
      </memberdef>
      <memberdef kind="function" id="_time_8cpp_1a1cc2f564b2cdcbfdea2d9d65378878ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setSyncInterval</definition>
        <argsstring>(time_t interval)</argsstring>
        <name>setSyncInterval</name>
        <param>
          <type>time_t</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Weather_Balloon/library/Time-master/Time.cpp" line="318" column="1" bodyfile="Weather_Balloon/library/Time-master/Time.cpp" bodystart="318" bodyend="321"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>time.c<sp/>-<sp/>low<sp/>level<sp/>time<sp/>and<sp/>date<sp/>functions</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>Michael<sp/>Margolis<sp/>2009-2014</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>1.0<sp/><sp/>6<sp/><sp/>Jan<sp/>2010<sp/>-<sp/>initial<sp/>release</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>1.1<sp/><sp/>12<sp/>Feb<sp/>2010<sp/>-<sp/>fixed<sp/>leap<sp/>year<sp/>calculation<sp/>error</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>1.2<sp/><sp/>1<sp/><sp/>Nov<sp/>2010<sp/>-<sp/>fixed<sp/>setTime<sp/>bug<sp/>(thanks<sp/>to<sp/>Korman<sp/>for<sp/>this)</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/>1.3<sp/><sp/>24<sp/>Mar<sp/>2012<sp/>-<sp/>many<sp/>edits<sp/>by<sp/>Paul<sp/>Stoffregen:<sp/>fixed<sp/>timeStatus()<sp/>to<sp/>update</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status,<sp/>updated<sp/>examples<sp/>for<sp/>Arduino<sp/>1.0,<sp/>fixed<sp/>ARM</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compatibility<sp/>issues,<sp/>added<sp/>TimeArduinoDue<sp/>and<sp/>TimeTeensy3</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>examples,<sp/>add<sp/>error<sp/>checking<sp/>and<sp/>messages<sp/>to<sp/>RTC<sp/>examples,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>examples<sp/>to<sp/>DS1307RTC<sp/>library.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/>1.4<sp/><sp/>5<sp/><sp/>Sep<sp/>2014<sp/>-<sp/>compatibility<sp/>with<sp/>Arduino<sp/>1.5.7</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ARDUINO<sp/>&gt;=<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;WProgram.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_time_lib_8h" kindref="compound">TimeLib.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>tmElements_t<sp/>tm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>cache<sp/>of<sp/>time<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>time_t<sp/>cacheTime;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>time<sp/>the<sp/>cache<sp/>was<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>syncInterval<sp/>=<sp/>300;<sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>sync<sp/>will<sp/>be<sp/>attempted<sp/>after<sp/>this<sp/>many<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(time_t<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/>cacheTime)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_time_8cpp_1af08cc091ce5590067f695e51bfdefd17" kindref="member">breakTime</ref>(t,<sp/>tm);<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>cacheTime<sp/>=<sp/>t;<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>now<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="_time_8cpp_1ac4706d0cffc9e111a6c6a757b462e88e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Hour;<sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="_time_8cpp_1a5a99d1c070206fef196539dec629443e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a5a99d1c070206fef196539dec629443e" kindref="member">hourFormat12</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>now<sp/>in<sp/>12<sp/>hour<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a5a99d1c070206fef196539dec629443e" kindref="member">hourFormat12</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="_time_8cpp_1a3cf3a2a5bc98d77739dd1c8c4c0909b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a5a99d1c070206fef196539dec629443e" kindref="member">hourFormat12</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>hour<sp/>for<sp/>the<sp/>given<sp/>time<sp/>in<sp/>12<sp/>hour<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tm.Hour<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>12;<sp/></highlight><highlight class="comment">//<sp/>12<sp/>midnight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tm.Hour<sp/><sp/>&gt;<sp/>12)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Hour<sp/>-<sp/>12<sp/>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Hour<sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="_time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="_time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" kindref="member">isAM</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>time<sp/>now<sp/>is<sp/>AM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="_time_8cpp_1a4334ceb57e1ed381be82347e196aabc6" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="_time_8cpp_1a93f95d54044b6bea7e53d820c2b3ac45" kindref="member">isAM</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>given<sp/>time<sp/>is<sp/>AM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>(t);<sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>()<sp/>{<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="_time_8cpp_1af53f46c9c1e0ad141f99045e3f96d688" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="_time_8cpp_1a25dad3cd574983eff789b04781e57de8" kindref="member">isPM</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="_time_8cpp_1a721ff0d06e8367ee5d2c5cf1a2c40ab5" kindref="member">hour</ref>(t)<sp/>&gt;=<sp/>12);<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="_time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" kindref="member">minute</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" kindref="member">minute</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="_time_8cpp_1a88285e3771bcb970424122a6ee4b40fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1adf618b3bac7dcfac69d4e1f5a68159b7" kindref="member">minute</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>minute<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Minute;<sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="_time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" kindref="member">second</ref>()<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" kindref="member">second</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="_time_8cpp_1a10a4dd811353baa12dadadee7c7e5099" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1aed5657208944fe098e4e5f3380e0a1f9" kindref="member">second</ref>(time_t<sp/>t)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>second<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Second;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="_time_8cpp_1a075786e0a525a2bba638889efcc42385" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>(){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="_time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>()));<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="_time_8cpp_1a51dcd9f072551ba8f47449a4e7f78c29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a075786e0a525a2bba638889efcc42385" kindref="member">day</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>day<sp/>for<sp/>the<sp/>given<sp/>time<sp/>(0-6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Day;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="_time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" kindref="member">weekday</ref>()<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sunday<sp/>is<sp/>day<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" kindref="member">weekday</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="_time_8cpp_1a397d9b2a739891092b487211668b496f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a73117e8164575afa4e25dab22d4f3ff0" kindref="member">weekday</ref>(time_t<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Wday;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="_time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>(){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="_time_8cpp_1a726c707dded9d78cf076554eceb956ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>(time_t<sp/>t)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>month<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tm.Month;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="_time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>()<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>in<sp/>Processing,<sp/>the<sp/>full<sp/>four<sp/>digit<sp/>year:<sp/>(2009,<sp/>2010<sp/>etc)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>(<ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>());<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="_time_8cpp_1a8608865f8292c0505e02b67fd1cf39e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>(time_t<sp/>t)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>the<sp/>year<sp/>for<sp/>the<sp/>given<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a1f13327e0831cde49d525fe035d55fd8" kindref="member">refreshCache</ref>(t);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmYearToCalendar(tm.Year);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*============================================================================*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>functions<sp/>to<sp/>convert<sp/>to<sp/>and<sp/>from<sp/>system<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>These<sp/>are<sp/>for<sp/>interfacing<sp/>with<sp/>time<sp/>serivces<sp/>and<sp/>are<sp/>not<sp/>normally<sp/>needed<sp/>in<sp/>a<sp/>sketch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>leap<sp/>year<sp/>calulator<sp/>expects<sp/>year<sp/>argument<sp/>as<sp/>years<sp/>offset<sp/>from<sp/>1970</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="_time_8cpp_1a7408f7b32a75c5f071a8096be049bc4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LEAP_YEAR(Y)<sp/><sp/><sp/><sp/><sp/>(<sp/>((1970+Y)&gt;0)<sp/>&amp;&amp;<sp/>!((1970+Y)%4)<sp/>&amp;&amp;<sp/>(<sp/>((1970+Y)%100)<sp/>||<sp/>!((1970+Y)%400)<sp/>)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>monthDays[]={31,28,31,30,31,30,31,31,30,31,30,31};<sp/></highlight><highlight class="comment">//<sp/>API<sp/>starts<sp/>months<sp/>from<sp/>1,<sp/>this<sp/>array<sp/>starts<sp/>from<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="151" refid="_time_8cpp_1af08cc091ce5590067f695e51bfdefd17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1af08cc091ce5590067f695e51bfdefd17" kindref="member">breakTime</ref>(time_t<sp/>timeInput,<sp/>tmElements_t<sp/>&amp;tm){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>break<sp/>the<sp/>given<sp/>time_t<sp/>into<sp/>time<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>a<sp/>more<sp/>compact<sp/>version<sp/>of<sp/>the<sp/>C<sp/>library<sp/>localtime<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>year<sp/>is<sp/>offset<sp/>from<sp/>1970<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="_time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="_time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>,<sp/>monthLength;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>uint32_t<sp/>time;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>days;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>(uint32_t)timeInput;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>tm.Second<sp/>=<sp/>time<sp/>%<sp/>60;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>time<sp/>/=<sp/>60;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>it<sp/>is<sp/>minutes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>tm.Minute<sp/>=<sp/>time<sp/>%<sp/>60;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>time<sp/>/=<sp/>60;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>it<sp/>is<sp/>hours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>tm.Hour<sp/>=<sp/>time<sp/>%<sp/>24;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>time<sp/>/=<sp/>24;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>it<sp/>is<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>tm.Wday<sp/>=<sp/>((time<sp/>+<sp/>4)<sp/>%<sp/>7)<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Sunday<sp/>is<sp/>day<sp/>1<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>year<sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>days<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)(days<sp/>+=<sp/>(<ref refid="_time_8cpp_1a7408f7b32a75c5f071a8096be049bc4d" kindref="member">LEAP_YEAR</ref>(year)<sp/>?<sp/>366<sp/>:<sp/>365))<sp/>&lt;=<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>year++;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>tm.Year<sp/>=<sp/><ref refid="_time_8cpp_1a98bf680dbfa28f79514ba50d33fee63f" kindref="member">year</ref>;<sp/></highlight><highlight class="comment">//<sp/>year<sp/>is<sp/>offset<sp/>from<sp/>1970<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>days<sp/>-=<sp/><ref refid="_time_8cpp_1a7408f7b32a75c5f071a8096be049bc4d" kindref="member">LEAP_YEAR</ref>(year)<sp/>?<sp/>366<sp/>:<sp/>365;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>time<sp/><sp/>-=<sp/>days;<sp/></highlight><highlight class="comment">//<sp/>now<sp/>it<sp/>is<sp/>days<sp/>in<sp/>this<sp/>year,<sp/>starting<sp/>at<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>days=0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>month=0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>monthLength=0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(month=0;<sp/>month&lt;12;<sp/>month++)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(month==1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>february</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_time_8cpp_1a7408f7b32a75c5f071a8096be049bc4d" kindref="member">LEAP_YEAR</ref>(year))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monthLength=29;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monthLength=28;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>monthLength<sp/>=<sp/>monthDays[<ref refid="_time_8cpp_1a3f3be7ce4301fc1896efac6f0952f772" kindref="member">month</ref>];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&gt;=<sp/>monthLength)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>-=<sp/>monthLength;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>tm.Month<sp/>=<sp/>month<sp/>+<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>jan<sp/>is<sp/>month<sp/>1<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>tm.Day<sp/>=<sp/>time<sp/>+<sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>day<sp/>of<sp/>month</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="_time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" refkind="member"><highlight class="normal">time_t<sp/><ref refid="_time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" kindref="member">makeTime</ref>(tmElements_t<sp/>&amp;tm){<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>assemble<sp/>time<sp/>elements<sp/>into<sp/>time_t<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>note<sp/>year<sp/>argument<sp/>is<sp/>offset<sp/>from<sp/>1970<sp/>(see<sp/>macros<sp/>in<sp/>time.h<sp/>to<sp/>convert<sp/>to<sp/>other<sp/>formats)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>previous<sp/>version<sp/>used<sp/>full<sp/>four<sp/>digit<sp/>year<sp/>(or<sp/>digits<sp/>since<sp/>2000),i.e.<sp/>2009<sp/>was<sp/>2009<sp/>or<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_r_t_clib_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>uint32_t<sp/>seconds;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>seconds<sp/>from<sp/>1970<sp/>till<sp/>1<sp/>jan<sp/>00:00:00<sp/>of<sp/>the<sp/>given<sp/>year</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>seconds=<sp/>tm.Year*(SECS_PER_DAY<sp/>*<sp/>365);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tm.Year;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_time_8cpp_1a7408f7b32a75c5f071a8096be049bc4d" kindref="member">LEAP_YEAR</ref>(i))<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seconds<sp/>+=<sp/><sp/>SECS_PER_DAY;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>extra<sp/>days<sp/>for<sp/>leap<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>days<sp/>for<sp/>this<sp/>year,<sp/>months<sp/>start<sp/>from<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>tm.Month;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(i<sp/>==<sp/>2)<sp/>&amp;&amp;<sp/><ref refid="_time_8cpp_1a7408f7b32a75c5f071a8096be049bc4d" kindref="member">LEAP_YEAR</ref>(tm.Year))<sp/>{<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seconds<sp/>+=<sp/>SECS_PER_DAY<sp/>*<sp/>29;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seconds<sp/>+=<sp/>SECS_PER_DAY<sp/>*<sp/>monthDays[i-1];<sp/><sp/></highlight><highlight class="comment">//monthDay<sp/>array<sp/>starts<sp/>from<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>seconds+=<sp/>(tm.Day-1)<sp/>*<sp/>SECS_PER_DAY;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>seconds+=<sp/>tm.Hour<sp/>*<sp/>SECS_PER_HOUR;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>seconds+=<sp/>tm.Minute<sp/>*<sp/>SECS_PER_MIN;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>seconds+=<sp/>tm.Second;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(time_t)seconds;<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*=====================================================*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Low<sp/>level<sp/>system<sp/>time<sp/>functions<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>sysTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>prevMillis<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>nextSyncTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>timeStatus_t<sp/>Status<sp/>=<sp/>timeNotSet;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="_time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" refkind="member"><highlight class="normal">getExternalTime<sp/><ref refid="_time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" kindref="member">getTimePtr</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>external<sp/>sync<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//setExternalTime<sp/>setTimePtr;<sp/>//<sp/>not<sp/>used<sp/>in<sp/>this<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIME_DRIFT_INFO<sp/><sp/><sp/>//<sp/>define<sp/>this<sp/>to<sp/>get<sp/>drift<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">time_t<sp/>sysUnsyncedTime<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>time<sp/>sysTime<sp/>unadjusted<sp/>by<sp/>sync<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" refkind="member"><highlight class="normal">time_t<sp/><ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>()<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>number<sp/>of<sp/>seconds<sp/>passed<sp/>since<sp/>last<sp/>call<sp/>to<sp/>now()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/>prevMillis<sp/>&gt;=<sp/>1000)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>millis()<sp/>and<sp/>prevMillis<sp/>are<sp/>both<sp/>unsigned<sp/>ints<sp/>thus<sp/>the<sp/>subtraction<sp/>will<sp/>always<sp/>be<sp/>the<sp/>absolute<sp/>value<sp/>of<sp/>the<sp/>difference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>sysTime++;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>prevMillis<sp/>+=<sp/>1000;<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIME_DRIFT_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>sysUnsyncedTime++;<sp/></highlight><highlight class="comment">//<sp/>this<sp/>can<sp/>be<sp/>compared<sp/>to<sp/>the<sp/>synced<sp/>time<sp/>to<sp/>measure<sp/>long<sp/>term<sp/>drift<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextSyncTime<sp/>&lt;=<sp/>sysTime)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" kindref="member">getTimePtr</ref><sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>t<sp/>=<sp/><ref refid="_time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" kindref="member">getTimePtr</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(t);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextSyncTime<sp/>=<sp/>sysTime<sp/>+<sp/>syncInterval;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>(Status<sp/>==<sp/>timeNotSet)<sp/>?<sp/><sp/>timeNotSet<sp/>:<sp/>timeNeedsSync;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(time_t)sysTime;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="_time_8cpp_1a1ce752bee962425a697f513db46964d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(time_t<sp/>t)<sp/>{<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TIME_DRIFT_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sysUnsyncedTime<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>sysUnsyncedTime<sp/>=<sp/>t;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>time<sp/>of<sp/>the<sp/>first<sp/>call<sp/>to<sp/>set<sp/>a<sp/>valid<sp/>Time<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>sysTime<sp/>=<sp/>(uint32_t)t;<sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>nextSyncTime<sp/>=<sp/>(uint32_t)t<sp/>+<sp/>syncInterval;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>Status<sp/>=<sp/>timeSet;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>prevMillis<sp/>=<sp/>millis();<sp/><sp/></highlight><highlight class="comment">//<sp/>restart<sp/>counting<sp/>from<sp/>now<sp/>(thanks<sp/>to<sp/>Korman<sp/>for<sp/>this<sp/>fix)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="_time_8cpp_1a6b60a4747bafcd553c95a2110649c31d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hr,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mnth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yr){</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>year<sp/>can<sp/>be<sp/>given<sp/>as<sp/>full<sp/>four<sp/>digit<sp/>year<sp/>or<sp/>two<sp/>digts<sp/>(2010<sp/>or<sp/>10<sp/>for<sp/>2010);<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/></highlight><highlight class="comment">//it<sp/>is<sp/>converted<sp/>to<sp/>years<sp/>since<sp/>1970</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>yr<sp/>&gt;<sp/>99)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr<sp/>=<sp/>yr<sp/>-<sp/>1970;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yr<sp/>+=<sp/>30;<sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>tm.Year<sp/>=<sp/>yr;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>tm.Month<sp/>=<sp/>mnth;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>tm.Day<sp/>=<sp/>dy;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>tm.Hour<sp/>=<sp/>hr;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>tm.Minute<sp/>=<sp/>min;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>tm.Second<sp/>=<sp/>sec;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1a1ce752bee962425a697f513db46964d4" kindref="member">setTime</ref>(<ref refid="_time_8cpp_1a0b205c43ee3c17d8d84a83b6f2f77bc8" kindref="member">makeTime</ref>(tm));</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="_time_8cpp_1acc6ec9a3678824ee0b252511300cf070" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1acc6ec9a3678824ee0b252511300cf070" kindref="member">adjustTime</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>adjustment)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>sysTime<sp/>+=<sp/>adjustment;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>indicates<sp/>if<sp/>time<sp/>has<sp/>been<sp/>set<sp/>and<sp/>recently<sp/>synchronized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="_time_8cpp_1a9d95a01859478796c4d60525bdaa9c59" refkind="member"><highlight class="normal">timeStatus_t<sp/><ref refid="_time_8cpp_1a9d95a01859478796c4d60525bdaa9c59" kindref="member">timeStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>();<sp/></highlight><highlight class="comment">//<sp/>required<sp/>to<sp/>actually<sp/>update<sp/>the<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Status;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="_time_8cpp_1afb0bd098acb0d2ab18392313c38c636d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1afb0bd098acb0d2ab18392313c38c636d" kindref="member">setSyncProvider</ref>(<sp/>getExternalTime<sp/>getTimeFunction){</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1adfb6edd80f1ed7139bc779b8aaada8b7" kindref="member">getTimePtr</ref><sp/>=<sp/>getTimeFunction;<sp/><sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>nextSyncTime<sp/>=<sp/>sysTime;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="_time_8cpp_1adea6c108853185c1d856fa38ec74992c" kindref="member">now</ref>();<sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>sync<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="_time_8cpp_1a1cc2f564b2cdcbfdea2d9d65378878ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_time_8cpp_1a1cc2f564b2cdcbfdea2d9d65378878ee" kindref="member">setSyncInterval</ref>(time_t<sp/>interval){<sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>number<sp/>of<sp/>seconds<sp/>between<sp/>re-sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>syncInterval<sp/>=<sp/>(uint32_t)interval;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>nextSyncTime<sp/>=<sp/>sysTime<sp/>+<sp/>syncInterval;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Weather_Balloon/library/Time-master/Time.cpp"/>
  </compounddef>
</doxygen>
