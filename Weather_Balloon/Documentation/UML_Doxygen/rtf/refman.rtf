{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\info 
{\title {\comment Weather Balloon }Weather Balloon}
{\comment Generated byDoxgyen. }
{\creatim \yr2016\mo11\dy5\hr14\min37\sec19}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Weather Balloon}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Sat Nov 5 2016 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
README{\tc \v README}\par \pard\plain 
{\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
#Adafruit ADXL345 Accelerometer Driver #\par
This driver is for the Adafruit ADXL345 Breakout ({\f2 http://www.adafruit.com/products/1231}), and is based on Adafruit's Unified Sensor Library ({\b Adafruit_Sensor}).\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}About the ADXL345\par}
The ADXL345 is a digital accelerometer that supports both SPI and I2C mode, with adjustable data rata and 'range' (+/-2/4/8/16g). The Adafruit_ADXL345 driver takes advantage of I2C mode to reduce the total pin count required to use the sensor.\par
More information on the ADXL345 can be found in the datasheet: {\f2 http://www.analog.com/static/imported-files/data_sheets/ADXL345.pdf}\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}What is the Adafruit Unified Sensor Library?\par}
The Adafruit Unified Sensor Library ({\f2 https://github.com/adafruit/Adafruit_Sensor}) provides a common interface and data type for any supported sensor. It defines some basic information about the sensor (sensor limits, etc.), and returns standard SI units of a specific type and scale for each supported sensor type.\par
It provides a simple abstraction layer between your application and the actual sensor HW, allowing you to drop in any comparable sensor with only one or two lines of code to change in your project (essentially the constructor since the functions to read sensor data and get information about the sensor are defined in the base {\b Adafruit_Sensor} class).\par
This is imporant useful for two reasons:\par
1.) You can use the data right away because it's already converted to SI units that you understand and can compare, rather than meaningless values like 0..1023.\par
2.) Because SI units are standardised in the sensor library, you can also do quick sanity checks working with new sensors, or drop in any comparable sensor if you need better sensitivity or if a lower cost unit becomes available, etc.\par
Light sensors will always report units in lux, gyroscopes will always report units in rad/s, etc. ... freeing you up to focus on the data, rather than digging through the datasheet to understand what the sensor's raw numbers really mean.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}About this Driver\par}
Adafruit invests time and resources providing this open source code. Please support Adafruit and open-source hardware by purchasing products from Adafruit!\par
Written by Kevin (KTOWN) Townsend for Adafruit Industries.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Compatibility\par}
MCU | Tested Works | Doesn't Work | Not Tested | Notes ---------------\'97 | :-------\'97: | :-------\'97: | :------\'97: | --\'97 Atmega328 @ 16MHz | X | | | Atmega328 @ 12MHz | X | | | Atmega32u4 @ 16MHz | X | | | Atmega32u4 @ 8MHz | X | | | ESP8266 | X | | | Atmega2560 @ 16MHz | X | | | ATSAM3X8E | X | | | ATSAM21D | X | | | ATtiny85 @ 16MHz | | X | | sketch too big ATtiny85 @ 8MHz | | X | | sketch too big Intel Curie @ 32MHz | X | | | STM32F2 | | | X |\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega328 @ 16MHz : Arduino UNO, Adafruit Pro Trinket 5V, Adafruit Metro 328, Adafruit Metro Mini\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega328 @ 12MHz : Adafruit Pro Trinket 3V\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega32u4 @ 16MHz : Arduino Leonardo, Arduino Micro, Arduino Yun, Teensy 2.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega32u4 @ 8MHz : Adafruit Flora, Bluefruit Micro\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ESP8266 : Adafruit Huzzah\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega2560 @ 16MHz : Arduino Mega\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATSAM3X8E : Arduino Due\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATSAM21D : Arduino Zero, M0 Pro\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATtiny85 @ 16MHz : Adafruit Trinket 5V\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATtiny85 @ 8MHz : Adafruit Gemma, Arduino Gemma, Adafruit Trinket 3V \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Adafruit Unified Sensor Driver{\tc \v Adafruit Unified Sensor Driver}\par \pard\plain 
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Many small embedded systems exist to collect data from sensors, analyse the data, and either take an appropriate action or send that sensor data to another system for processing.\par
One of the many challenges of embedded systems design is the fact that parts you used today may be out of production tomorrow, or system requirements may change and you may need to choose a different sensor down the road.\par
Creating new drivers is a relatively easy task, but integrating them into existing systems is both error prone and time consuming since sensors rarely use the exact same units of measurement.\par
By reducing all data to a single {\b {\b sensors_event_t}}  'type' and settling on specific, {\b standardised SI units}  for each sensor family the same sensor types return values that are comparable with any other similar sensor. This enables you to switch sensor models with very little impact on the rest of the system, which can help mitigate some of the risks and problems of sensor availability and code reuse.\par
The unified sensor abstraction layer is also useful for data-logging and data-transmission since you only have one well-known type to log or transmit over the air or wire.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Unified Sensor Drivers\par}
The following drivers are based on the Adafruit Unified Sensor Driver:\par
{\b Accelerometers} {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_ADXL345}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_LSM303DLHC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_MMA8451_Library}\par}
{\b Gyroscope} {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_L3GD20_U}\par}
{\b Light} {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_TSL2561}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_TSL2591_Library}\par}
{\b Magnetometers} {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_LSM303DLHC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_HMC5883_Unified}\par}
{\b Barometric Pressure} {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_BMP085_Unified}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_BMP183_Unified_Library}\par}
{\b Humidity & Temperature} {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_DHT_Unified}\par}
{\b Orientation} {
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Adafruit_BNO055}\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}How Does it Work?\par}
Any driver that supports the Adafruit unified sensor abstraction layer will implement the {\b Adafruit_Sensor} base class. There are two main typedefs and one enum defined in {\b Adafruit_Sensor.h} that are used to 'abstract' away the sensor details and values:\par
{\b Sensor Types (sensors_type_t)} \par
These pre-defined sensor types are used to properly handle the two related typedefs below, and allows us determine what types of units the sensor uses, etc.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 /** Sensor types */\par
    2 typedef enum\par
    3 \{\par
    4   SENSOR_TYPE_ACCELEROMETER         = (1),\par
    5   SENSOR_TYPE_MAGNETIC_FIELD        = (2),\par
    6   SENSOR_TYPE_ORIENTATION           = (3),\par
    7   SENSOR_TYPE_GYROSCOPE             = (4),\par
    8   SENSOR_TYPE_LIGHT                 = (5),\par
    9   SENSOR_TYPE_PRESSURE              = (6),\par
   10   SENSOR_TYPE_PROXIMITY             = (8),\par
   11   SENSOR_TYPE_GRAVITY               = (9),\par
   12   SENSOR_TYPE_LINEAR_ACCELERATION   = (10),\par
   13   SENSOR_TYPE_ROTATION_VECTOR       = (11),\par
   14   SENSOR_TYPE_RELATIVE_HUMIDITY     = (12),\par
   15   SENSOR_TYPE_AMBIENT_TEMPERATURE   = (13),\par
   16   SENSOR_TYPE_VOLTAGE               = (15),\par
   17   SENSOR_TYPE_CURRENT               = (16),\par
   18   SENSOR_TYPE_COLOR                 = (17)\par
   19 \} sensors_type_t;\par
}
\par
{\b Sensor Details ({\b sensor_t})} \par
This typedef describes the specific capabilities of this sensor, and allows us to know what sensor we are using beneath the abstraction layer.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 /* Sensor details (40 bytes) */\par
    2 /** struct sensor_s is used to describe basic information about a specific sensor. */\par
    3 typedef struct\par
    4 \{\par
    5     char     name[12];\par
    6     int32_t  version;\par
    7     int32_t  sensor_id;\par
    8     int32_t  type;\par
    9     float    max_value;\par
   10     float    min_value;\par
   11     float    resolution;\par
   12     int32_t  min_delay;\par
   13 \} sensor_t;\par
}
\par
The individual fields are intended to be used as follows:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b name} : The sensor name or ID, up to a maximum of twelve characters (ex. "MPL115A2")\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b version} : The version of the sensor HW and the driver to allow us to differentiate versions of the board or driver\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b sensor_id} : A unique sensor identifier that is used to differentiate this specific sensor instance from any others that are present on the system or in the sensor network\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b type} : The sensor type, based on {\b sensors_type_t}  in sensors.h\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b max_value} : The maximum value that this sensor can return (in the appropriate SI unit)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b min_value} : The minimum value that this sensor can return (in the appropriate SI unit)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b resolution} : The smallest difference between two values that this sensor can report (in the appropriate SI unit)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b min_delay} : The minimum delay in microseconds between two sensor events, or '0' if there is no constant sensor rate\par}
{\b Sensor Data/Events ({\b sensors_event_t})} \par
This typedef is used to return sensor data from any sensor supported by the abstraction layer, using standard SI units and scales.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 /* Sensor event (36 bytes) */\par
    2 /** struct sensor_event_s is used to provide a single sensor event in a common format. */\par
    3 typedef struct\par
    4 \{\par
    5     int32_t version;\par
    6     int32_t sensor_id;\par
    7     int32_t type;\par
    8     int32_t reserved0;\par
    9     int32_t timestamp;\par
   10     union\par
   11     \{\par
   12         float           data[4];\par
   13         sensors_vec_t   acceleration;\par
   14         sensors_vec_t   magnetic;\par
   15         sensors_vec_t   orientation;\par
   16         sensors_vec_t   gyro;\par
   17         float           temperature;\par
   18         float           distance;\par
   19         float           light;\par
   20         float           pressure;\par
   21         float           relative_humidity;\par
   22         float           current;\par
   23         float           voltage;\par
   24         sensors_color_t color;\par
   25     \};\par
   26 \} sensors_event_t;\par
}
 It includes the following fields:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b version} : Contain 'sizeof(sensors_event_t)' to identify which version of the API we're using in case this changes in the future\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b sensor_id} : A unique sensor identifier that is used to differentiate this specific sensor instance from any others that are present on the system or in the sensor network (must match the sensor_id value in the corresponding {\b sensor_t} enum above!)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b type} : the sensor type, based on {\b sensors_type_t}  in sensors.h\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b timestamp} : time in milliseconds when the sensor value was read\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b data[4]} : An array of four 32-bit values that allows us to encapsulate any type of sensor data via a simple union (further described below)\par}
{\b Required Functions} \par
In addition to the two standard types and the sensor type enum, all drivers based on {\b Adafruit_Sensor} must also implement the following two functions:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 bool getEvent(sensors_event_t*);\par
}
 Calling this function will populate the supplied {\b sensors_event_t} reference with the latest available sensor data. You should call this function as often as you want to update your data.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 void getSensor(sensor_t*);\par
}
 Calling this function will provide some basic information about the sensor (the sensor name, driver version, min and max values, etc.\par
{\b Standardised SI values for {\b sensors_event_t}} \par
A key part of the abstraction layer is the standardisation of values on SI units of a particular scale, which is accomplished via the data[4] union in {\b sensors_event_t} above. This 16 byte union includes fields for each main sensor type, and uses the following SI units and scales:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b acceleration} : values are in {\b meter per second per second}  (m/s^2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b magnetic} : values are in {\b micro-Tesla}  (uT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b orientation} : values are in {\b degrees} \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gyro} : values are in {\b rad/s} \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b temperature} : values in {\b degrees centigrade}  (Celsius)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b distance} : values are in {\b centimeters} \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b light} : values are in {\b SI lux}  units\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pressure} : values are in {\b hectopascal}  (hPa)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b relative_humidity} : values are in {\b percent} \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b current} : values are in {\b milliamps}  (mA)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b voltage} : values are in {\b volts}  (V)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b color} : values are in 0..1.0 RGB channel luminosity and 32-bit RGBA format\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}The Unified Driver Abstraction Layer in Practice\par}
Using the unified sensor abstraction layer is relatively easy once a compliant driver has been created.\par
Every compliant sensor can now be read using a single, well-known 'type' ({\b sensors_event_t}), and there is a standardised way of interrogating a sensor about its specific capabilities (via {\b sensor_t}).\par
An example of reading the {\f2 TSL2561} light sensor can be seen below:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 Adafruit_TSL2561 tsl = Adafruit_TSL2561(TSL2561_ADDR_FLOAT, 12345);\par
    2 ...\par
    3 /* Get a new sensor event */ \par
    4 sensors_event_t event;\par
    5 tsl.getEvent(&event);\par
    6 \par
    7 /* Display the results (light is measured in lux) */\par
    8 if (event.light)\par
    9 \{\par
   10   Serial.print(event.light); Serial.println(" lux");\par
   11 \}\par
   12 else\par
   13 \{\par
   14   /* If event.light = 0 lux the sensor is probably saturated\par
   15      and no reliable data could be generated! */\par
   16   Serial.println("Sensor overload");\par
   17 \}\par
}
\par
Similarly, we can get the basic technical capabilities of this sensor with the following code:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 sensor_t sensor;\par
    2 \par
    3 sensor_t sensor;\par
    4 tsl.getSensor(&sensor);\par
    5 \par
    6 /* Display the sensor details */\par
    7 Serial.println("------------------------------------");\par
    8 Serial.print  ("Sensor:       "); Serial.println(sensor.name);\par
    9 Serial.print  ("Driver Ver:   "); Serial.println(sensor.version);\par
   10 Serial.print  ("Unique ID:    "); Serial.println(sensor.sensor_id);\par
   11 Serial.print  ("Max Value:    "); Serial.print(sensor.max_value); Serial.println(" lux");\par
   12 Serial.print  ("Min Value:    "); Serial.print(sensor.min_value); Serial.println(" lux");\par
   13 Serial.print  ("Resolution:   "); Serial.print(sensor.resolution); Serial.println(" lux");  \par
   14 Serial.println("------------------------------------");\par
   15 Serial.println("");\par
}
 \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Adafruit_SHT31{\tc \v Adafruit_SHT31}\par \pard\plain 
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Compatibility\par}
MCU | Tested Works | Doesn't Work | Not Tested | Notes ---------------\'97 | :-------\'97: | :-------\'97: | :------\'97: | --\'97 Atmega328 @ 16MHz | X | | | Atmega328 @ 12MHz | X | | | Atmega32u4 @ 16MHz | X | | | Atmega32u4 @ 8MHz | X | | | ESP8266 | X | | | Atmega2560 @ 16MHz | X | | | ATSAM3X8E | X | | | ATSAM21D | X | | | ATtiny85 @ 16MHz | X | | | ATtiny85 @ 8MHz | X | | | Intel Curie @ 32MHz | | | X | STM32F2 | | | X |\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega328 @ 16MHz : Arduino UNO, Adafruit Pro Trinket 5V, Adafruit Metro 328, Adafruit Metro Mini\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega328 @ 12MHz : Adafruit Pro Trinket 3V\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega32u4 @ 16MHz : Arduino Leonardo, Arduino Micro, Arduino Yun, Teensy 2.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega32u4 @ 8MHz : Adafruit Flora, Bluefruit Micro\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ESP8266 : Adafruit Huzzah\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATmega2560 @ 16MHz : Arduino Mega\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATSAM3X8E : Arduino Due\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATSAM21D : Arduino Zero, M0 Pro\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATtiny85 @ 16MHz : Adafruit Trinket 5V\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ATtiny85 @ 8MHz : Adafruit Gemma, Arduino Gemma, Adafruit Trinket 3V \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
README{\tc \v README}\par \pard\plain 
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
#Adafruit TSL2561 Light Sensor Driver #\par
This driver is for the Adafruit TSL2561 Breakout, and is based on Adafruit's Unified Sensor Library ({\b Adafruit_Sensor}).\par
The driver supports manual or 'auto' gain. Adjusting the gain allows you to make the sensor more or less 'sensitive' to light (depending on if you are indoors or outdoors, for example): {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 tsl.setGain(TSL2561_GAIN_1X);      /* No gain ... use in bright light to avoid sensor saturation */\par
    2 tsl.setGain(TSL2561_GAIN_16X);     /* 16x gain ... use in low light to boost sensitivity */\par
    3 tsl.enableAutoGain(true);          /* Auto-gain ... switches automatically between 1x and 16x */\par
}
\par
The driver also supports as automatic clipping detection, and will return '65536' lux when the sensor is saturated and data is unreliable. tsl.getEvent will return false in case of saturation and true in case of valid light data.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}About the TSL2561\par}
The TSL2561 is a 16-bit digital (I2C) light sensor, with adjustable gain and 'integration time'.\par
Adjusting the 'integration time' essentially increases the resolution of the device, since the analog converter inside the chip has time to take more samples. The integration time can be set as follows: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 tsl.setIntegrationTime(TSL2561_INTEGRATIONTIME_13MS);      /* fast but low resolution */\par
    2 tsl.setIntegrationTime(TSL2561_INTEGRATIONTIME_101MS);  /* medium resolution and speed   */\par
    3 tsl.setIntegrationTime(TSL2561_INTEGRATIONTIME_402MS);  /* 16-bit data but slowest conversions */\par
}
\par
One of the big advantages of the TSL2561 is that it is capable of measuring both broadband (visible plus infrared) and infrared light thanks to two distinct sensing units on the device. This is important in certain lighting environments to be able to read the light level reliably.\par
More information on the TSL2561 can be found in the datasheet: {\f2 http://www.adafruit.com/datasheets/TSL2561.pdf}\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}What is the Adafruit Unified Sensor Library?\par}
The Adafruit Unified Sensor Library ({\b Adafruit_Sensor}) provides a common interface and data type for any supported sensor. It defines some basic information about the sensor (sensor limits, etc.), and returns standard SI units of a specific type and scale for each supported sensor type.\par
It provides a simple abstraction layer between your application and the actual sensor HW, allowing you to drop in any comparable sensor with only one or two lines of code to change in your project (essentially the constructor since the functions to read sensor data and get information about the sensor are defined in the base {\b Adafruit_Sensor} class).\par
This is imporant useful for two reasons:\par
1.) You can use the data right away because it's already converted to SI units that you understand and can compare, rather than meaningless values like 0..1023.\par
2.) Because SI units are standardised in the sensor library, you can also do quick sanity checks working with new sensors, or drop in any comparable sensor if you need better sensitivity or if a lower cost unit becomes available, etc.\par
Light sensors will always report units in lux, gyroscopes will always report units in rad/s, etc. ... freeing you up to focus on the data, rather than digging through the datasheet to understand what the sensor's raw numbers really mean.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}About this Driver\par}
Adafruit invests time and resources providing this open source code. Please support Adafruit and open-source hardware by purchasing products from Adafruit!\par
Written by Kevin (KTOWN) Townsend for Adafruit Industries. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arduino-DS3231{\tc \v Arduino-DS3231}\par \pard\plain 
{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b DS3231} Real-Time Clock.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Date formats (Day) \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
d : Day of the month, 2 digits with leading zeros (01 to 31)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
D : A textual representation of a day, three letters (Mon through Sun)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
j : Day of the month without leading zeros (1 to 31)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
l : A full textual representation of the day of the week (Sunday through Saturday)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
N : ISO-8601 numeric representation of the day of the week (1 for Monday through 7 for Sunday)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
S : English ordinal suffix for the day of the month, 2 characters (st, nd, rd or th. Works well with j)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
w : Numeric representation of the day of the week (0 for Sunday through 6 for Saturday)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
z : The day of the year (0 through 365)\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Date formats (Month) \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
F : A full textual representation of a month, such as January or March (January through December)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
m : Numeric representation of a month, with leading zeros (01 through 12)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
M : A short textual representation of a month, three letters (Jan through Dec)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
n : Numeric representation of a month, without leading zeros (1 through 12)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
t : Number of days in the given month (28 through 31)\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Date formats (Year) \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
L : Whether it's a leap year (1 if it is a leap year, 0 otherwise)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Y : A full numeric representation of a year, 4 digits (Examples: 1999 or 2003)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
y : A two digit representation of a year (Examples: 99 or 03)\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Date formats (Time) \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
a : Lowercase Ante meridiem and Post meridiem (am or pm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
A : Uppercase Ante meridiem and Post meridiem (AM or PM)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
g : 2-hour format of an hour without leading zeros (1 through 12)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
G : 24-hour format of an hour without leading zeros (0 through 23)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
h : 12-hour format of an hour with leading zeros (01 through 12)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
H : 24-hour format of an hour with leading zeros (00 through 23)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
i : Minutes with leading zeros (00 to 59)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
s : Seconds, with leading zeros (00 through 59)\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Dare formats (Full Date/Time) \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
U : Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}More info \par}
Tutorials: www.jarzebski.pl/arduino/komponenty/zegar-czasu-rzeczywistego-rtc-ds3231.html\par
This library use I2C to communicate, 2 pins are required to interface.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Credits \par}
Original Code by JeeLabs {\f2 http://news.jeelabs.org/code/}\par
First fork by adafruit {\f2 https://github.com/adafruit/RTClib} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
LICENSE{\tc \v LICENSE}\par \pard\plain 
{\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007\par
Copyright (C) 2007 Free Software Foundation, Inc. {\f2 http://fsf.org/} Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                        Preamble\par
}
\par
The GNU General Public License is a free, copyleft license for software and other kinds of works.\par
The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program\'96to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too.\par
When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\par
To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.\par
For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\par
Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.\par
For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.\par
Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.\par
Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free.\par
The precise terms and conditions for copying, distribution and modification follow. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                    TERMS AND CONDITIONS\par
}
\par
0. Definitions.\par
"This License" refers to version 3 of the GNU General Public License.\par
"Copyright" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\par
"The Program" refers to any copyrightable work licensed under this License. Each licensee is addressed as "you". "Licensees" and "recipients" may be individuals or organizations.\par
To "modify" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a "modified version" of the earlier work or a work "based on" the earlier work.\par
A "covered work" means either the unmodified Program or a work based on the Program.\par
To "propagate" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.\par
To "convey" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.\par
An interactive user interface displays "Appropriate Legal Notices" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Source Code.\par}
The "source code" for a work means the preferred form of the work for making modifications to it. "Object code" means any non-source form of a work.\par
A "Standard Interface" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.\par
The "System Libraries" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A "Major Component", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.\par
The "Corresponding Source" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.\par
The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\par
The Corresponding Source for a work in source code form is that same work.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Basic Permissions.\par}
All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\par
You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\par
Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Protecting Users' Legal Rights From Anti-Circumvention Law.\par}
No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\par
When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Conveying Verbatim Copies.\par}
You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\par
You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Conveying Modified Source Versions.\par}
You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid a) The work must carry prominent notices stating that you modified\par
it, and giving a relevant date.\par
\par
b) The work must carry prominent notices stating that it is\par
released under this License and any conditions added under section\par
7.  This requirement modifies the requirement in section 4 to\par
"keep intact all notices".\par
\par
c) You must license the entire work, as a whole, under this\par
License to anyone who comes into possession of a copy.  This\par
License will therefore apply, along with any applicable section 7\par
additional terms, to the whole of the work, and all its parts,\par
regardless of how they are packaged.  This License gives no\par
permission to license the work in any other way, but it does not\par
invalidate such permission if you have separately received it.\par
\par
d) If the work has interactive user interfaces, each must display\par
Appropriate Legal Notices; however, if the Program has interactive\par
interfaces that do not display Appropriate Legal Notices, your\par
work need not make them do so.\par
}
\par
A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an "aggregate" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Conveying Non-Source Forms.\par}
You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid a) Convey the object code in, or embodied in, a physical product\par
(including a physical distribution medium), accompanied by the\par
Corresponding Source fixed on a durable physical medium\par
customarily used for software interchange.\par
\par
b) Convey the object code in, or embodied in, a physical product\par
(including a physical distribution medium), accompanied by a\par
written offer, valid for at least three years and valid for as\par
long as you offer spare parts or customer support for that product\par
model, to give anyone who possesses the object code either (1) a\par
copy of the Corresponding Source for all the software in the\par
product that is covered by this License, on a durable physical\par
medium customarily used for software interchange, for a price no\par
more than your reasonable cost of physically performing this\par
conveying of source, or (2) access to copy the\par
Corresponding Source from a network server at no charge.\par
\par
c) Convey individual copies of the object code with a copy of the\par
written offer to provide the Corresponding Source.  This\par
alternative is allowed only occasionally and noncommercially, and\par
only if you received the object code with such an offer, in accord\par
with subsection 6b.\par
\par
d) Convey the object code by offering access from a designated\par
place (gratis or for a charge), and offer equivalent access to the\par
Corresponding Source in the same way through the same place at no\par
further charge.  You need not require recipients to copy the\par
Corresponding Source along with the object code.  If the place to\par
copy the object code is a network server, the Corresponding Source\par
may be on a different server (operated by you or a third party)\par
that supports equivalent copying facilities, provided you maintain\par
clear directions next to the object code saying where to find the\par
Corresponding Source.  Regardless of what server hosts the\par
Corresponding Source, you remain obligated to ensure that it is\par
available for as long as needed to satisfy these requirements.\par
\par
e) Convey the object code using peer-to-peer transmission, provided\par
you inform other peers where the object code and Corresponding\par
Source of the work are being offered to the general public at no\par
charge under subsection 6d.\par
}
\par
A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.\par
A "User Product" is either (1) a "consumer product", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, "normally used" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\par
"Installation Information" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\par
If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\par
The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\par
Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Additional Terms.\par}
"Additional permissions" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\par
When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\par
Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid a) Disclaiming warranty or limiting liability differently from the\par
terms of sections 15 and 16 of this License; or\par
\par
b) Requiring preservation of specified reasonable legal notices or\par
author attributions in that material or in the Appropriate Legal\par
Notices displayed by works containing it; or\par
\par
c) Prohibiting misrepresentation of the origin of that material, or\par
requiring that modified versions of such material be marked in\par
reasonable ways as different from the original version; or\par
\par
d) Limiting the use for publicity purposes of names of licensors or\par
authors of the material; or\par
\par
e) Declining to grant rights under trademark law for use of some\par
trade names, trademarks, or service marks; or\par
\par
f) Requiring indemnification of licensors and authors of that\par
material by anyone who conveys the material (or modified versions of\par
it) with contractual assumptions of liability to the recipient, for\par
any liability that these contractual assumptions directly impose on\par
those licensors and authors.\par
}
\par
All other non-permissive additional terms are considered "further
restrictions" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\par
If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\par
Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Termination.\par}
You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\par
However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\par
Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\par
Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Acceptance Not Required for Having Copies.\par}
You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Automatic Licensing of Downstream Recipients.\par}
Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.\par
An "entity transaction" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\par
You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Patents.\par}
A "contributor" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's "contributor version".\par
A contributor's "essential patent claims" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, "control" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.\par
Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.\par
In the following three paragraphs, a "patent license" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To "grant" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.\par
If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. "Knowingly relying" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.\par
If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.\par
A patent license is "discriminatory" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\par
Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab No Surrender of Others' Freedom.\par}
If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Use with the GNU Affero General Public License.\par}
Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Revised Versions of this License.\par}
The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\par
Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License "or any later version" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.\par
If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\par
Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Disclaimer of Warranty.\par}
THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Limitation of Liability.\par}
IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Interpretation of Sections 15 and 16.\par}
If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                  END OF TERMS AND CONDITIONS\par
\par
        How to Apply These Terms to Your New Programs\par
}
\par
If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\par
To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the "copyright" line and a pointer to where the full notice is found. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{one line to give the program's name and a brief idea of what it does.\}\par
Copyright (C) \{year\}  \{name of author\}\par
\par
This program is free software: you can redistribute it and/or modify\par
it under the terms of the GNU General Public License as published by\par
the Free Software Foundation, either version 3 of the License, or\par
(at your option) any later version.\par
\par
This program is distributed in the hope that it will be useful,\par
but WITHOUT ANY WARRANTY; without even the implied warranty of\par
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\par
GNU General Public License for more details.\par
\par
You should have received a copy of the GNU General Public License\par
along with this program.  If not, see <http://www.gnu.org/licenses/>.\par
}
\par
Also add information on how to contact you by electronic and paper mail.\par
If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{project\}  Copyright (C) \{year\}  \{fullname\}\par
This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\par
This is free software, and you are welcome to redistribute it\par
under certain conditions; type `show c' for details.\par
}
\par
The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an "about box".\par
You should also get your employer (if you work as a programmer) or school, if any, to sign a "copyright disclaimer" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see {\f2 http://www.gnu.org/licenses/}.\par
The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read {\f2 http://www.gnu.org/philosophy/why-not-lgpl.html}. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
arduino-ms5xxx{\tc \v arduino-ms5xxx}\par \pard\plain 
{\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arduino Library with examples for using digital pressure sensors MS5607/MS5611 (and MS56xx, MS57xx, MS58xx) based on AN520 by manufacturer and the datasheets. This library has been tested extensively (over almost a year of datataking) with MS5607 and also tested newer {\b MS5611} sensors. Note the different I2C-addresses, calculations and correction functions between the different chips. One generic MS5xxx-class as well as a derived class {\b MS5611} with the new I2C address and the new calculations have been implemented.\par
The examples nicely show how to use this library with the standard MS5xxx-class. For usage with {\b MS5611} chips just use the class {\b MS5611} in the same way. "Standard units" are Pascals for pressure and 0.01 \'B0C for temperature as calculations are done exactly as shown in the manufacturers datasheet.\par
{\f2 } \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arduino Library for Maxim Temperature Integrated Circuits{\tc \v Arduino Library for Maxim Temperature Integrated Circuits}\par \pard\plain 
{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Usage\par}
This library supports the following devices :\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS18B20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS18S20 - Please note there appears to be an issue with this series.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS1822\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS1820\par}
You will need a pull-up resistor of about 5 KOhm between the 1-Wire data line and your 5V power. If you are using the DS18B20, ground pins 1 and 3. The centre pin is the data line '1-wire'.\par
We have included a "REQUIRESNEW" and "REQUIRESALARMS" definition. If you want to slim down the code feel free to use either of these by including\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid #define REQUIRESNEW \par
}
\par
or {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid #define REQUIRESALARMS\par
}
\par
at the top of {\b DallasTemperature.h}\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Credits\par}
The {\b OneWire} code has been derived from {\f2 http://www.arduino.cc/playground/Learning/OneWire}. Miles Burton {\f2 miles@mnetcs.com} originally developed this library. Tim Newsome {\f2 nuisance@casualhacker.net} added support for multiple sensors on the same bus. Guil Barros [{\f2 gfbarros@bappos.com}] added getTempByAddress (v3.5) Rob Tillaart [{\f2 rob.tillaart@gmail.com}] added async modus (v3.7.0)\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Website\par}
You can find the latest version of the library at {\f2 http://milesburton.com/index.php?title=Dallas_Temperature_Control_Library}\par
{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid {\tc\tcl \v 3}License\par}
This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.\par
This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\par
You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
arduino ZeroRegs{\tc \v arduino ZeroRegs}\par \pard\plain 
{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
prints the configuration registers for the Arduino Zero (and similar boards)\par
{\b Intended Audience:}  advanced users who have already looked at the SAM D21 datasheet\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Simple Example \par}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid #include <ZeroRegs.h>\par
void setup() \{\par
    SerialUSB.begin(9600);\par
    while (! SerialUSB) \{\}  // wait for serial monitor to attach\par
    ZeroRegOptions opts = \{ SerialUSB, false \};\par
    printZeroRegs(opts);\par
\}\par
}
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Function Reference \par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}struct {\b ZeroRegOptions}\par}
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2916
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx5832
\clcbpat16\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{type \cell }{name \cell }{description  \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2916
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx5832
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\f2 Stream&}  \cell }{{\f2 ser}  \cell }{stream used for printing output \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx2916
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx5832
\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr \brdrs\brdrw10 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\f2 bool}  \cell }{{\f2 showDisabled}  \cell }{whether to show itmes which are disabled \cell }
\pard \widctlpar\intbl\adjustright
{\row }
\pard\plain
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegs(ZeroRegOptions &opts)}\par}
Prints out configuration registers, as many as the library knows how.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegAC(ZeroRegOptions &opts)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for the {\f2 AC}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegADC(ZeroRegOptions &opts)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for the {\f2 ADC}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegDAC(ZeroRegOptions &opts)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for the {\f2 DAC}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegDMAC(ZeroRegOptions &opts)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for the {\f2 DMAC}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegDSU(ZeroRegOptions &opts)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for the {\f2 DSU}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegEIC(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 EIC}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegEVSYS(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 EVSYS}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegGCLK(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 GCLK}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegI2S(ZeroRegOptions &opts)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for the {\f2 I2S}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegMTB(ZeroRegOptions &opts)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for the {\f2 MTB}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegNVMCTRL(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 NVMCTRL}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void printZeroRegPACs(ZeroRegOptions &opts)\par}
Prints out the configuration registers for the {\f2 PAC}  peripherals.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegPM(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 PM}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegPORT(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 PORT}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegRTC(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 RTC}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegSBMATRIX(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 SBMATRIX}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegSERCOM(ZeroRegOptions &opts, Sercom* sercom, uint8_t idx)}\par}
Prints out the configuration registers for a {\f2 SERCOM}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegSYSCTRL(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 SYSCTRL}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegTC(ZeroRegOptions &opts, Tc* tc, uint8_t idx)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for a {\f2 TC}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegTCC(ZeroRegOptions &opts, Tcc* tcc, uint8_t idx)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for a {\f2 TCC}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegUSB(ZeroRegOptions &opts)} \'96 {\b NOT YET IMPLEMENTED} \par}
Prints out the configuration registers for the {\f2 USB}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}void {\b printZeroRegWDT(ZeroRegOptions &opts)}\par}
Prints out the configuration registers for the {\f2 WDT}  peripheral.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}License \par}
This code is licensed under the MIT license. See the {\f2 LICENSE}  file for details. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
readme{\tc \v readme}\par \pard\plain 
{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Firmata}\par
{\f2 }\par
Firmata is a protocol for communicating with microcontrollers from software on a host computer. The {\f2 protocol} can be implemented in firmware on any microcontroller architecture as well as software on any host computer software package. The Arduino repository described here is a Firmata library for Arduino and Arduino-compatible devices. If you would like to contribute to Firmata, please see the {\f2 Contributing} section below.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Usage\par}
There are two main models of usage of Firmata. In one model, the author of the Arduino sketch uses the various methods provided by the Firmata library to selectively send and receive data between the Arduino device and the software running on the host computer. For example, a user can send analog data to the host using {\f2 Firmata.sendAnalog(analogPin, analogRead(analogPin))}  or send data packed in a string using {\f2 Firmata.sendString(stringToSend)} . See File -> Examples -> Firmata -> AnalogFirmata & EchoString respectively for examples.\par
The second and more common model is to load a general purpose sketch called StandardFirmata (or one of the variants such as StandardFirmataPlus or StandardFirmataEthernet depending on your needs) on the Arduino board and then use the host computer exclusively to interact with the Arduino board. StandardFirmata is located in the Arduino IDE in File -> Examples -> Firmata.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Firmata Client Libraries\par}
Most of the time you will be interacting with Arduino with a client library on the host computers. Several Firmata client libraries have been implemented in a variety of popular programming languages:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
processing{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/firmata/processing}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 http://funnel.cc}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
python{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/MrYsLab/pymata-aio}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/MrYsLab/PyMata}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/tino/pyFirmata}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/lupeke/python-firmata}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/firmata/pyduino}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
perl{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/ntruchsess/perl-firmata}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/rcaputo/rx-firmata}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ruby{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/hardbap/firmata}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/PlasticLizard/rufinol}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 http://funnel.cc}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
clojure{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/nakkaya/clodiuno}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/peterschwarz/clj-firmata}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
javascript{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/jgautier/firmata}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/rwldrn/johnny-five}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 http://breakoutjs.com}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
java{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/kurbatov/firmata4j}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/4ntoine/Firmata}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/reapzor/FiloFirmata}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
.NET{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/SolidSoils/Arduino}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 http://www.imagitronics.org/projects/firmatanet/}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Flash/AS3{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 http://funnel.cc}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 http://code.google.com/p/as3glue/}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
PHP{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/ThomasWeinert/carica-firmata}]\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/oasynnoum/phpmake_firmata}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Haskell{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 http://hackage.haskell.org/package/hArduino}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
iOS{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/jacobrosenthal/iosfirmata}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dart{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/nfrancois/firmata}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Max/MSP{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 http://www.maxuino.org/}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Elixir{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/kfatehi/firmata}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Modelica{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://www.wolfram.com/system-modeler/libraries/model-plug/}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Go{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/kraman/go-firmata}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vvvv{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://vvvv.org/blog/arduino-second-service}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
openFrameworks{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 http://openframeworks.cc/documentation/communication/ofArduino/}]\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Rust{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
[{\f2 https://github.com/zankich/rust-firmata}]\par}
\par}
Note: The above libraries may support various versions of the Firmata protocol and therefore may not support all features of the latest Firmata spec nor all Arduino and Arduino-compatible boards. Refer to the respective projects for details.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Updating Firmata in the Arduino IDE - Arduino 1.6.4 and higher\par}
If you want to update to the latest stable version:\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Open the Arduino IDE and navigate to: {\f2 Sketch > Include Library > Manage Libraries} \par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Filter by "Firmata" and click on the "Firmata by Firmata Developers" item in the list of results.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Click the {\f2 Select version}  dropdown and select the most recent version (note you can also install previous versions)\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Click {\f2 Install} .\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Cloning Firmata\par}
If you are contributing to Firmata or otherwise need a version newer than the latest tagged release, you can clone Firmata directly to your Arduino/libraries/ directory (where 3rd party libraries are installed). This only works for Arduino 1.6.4 and higher, for older versions you need to clone into the Arduino application directory (see section below titled "Using the Source code rather than release archive"). Be sure to change the name to Firmata as follows:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 $ git clone git@github.com:firmata/arduino.git ~/Documents/Arduino/libraries/Firmata\par
}
\par
{\i Update path above if you're using Windows or Linux or changed the default Arduino directory on OS X} \par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Updating Firmata in the Arduino IDE - older versions (<= 1.6.3 or 1.0.x)\par}
Download the latest {\f2 release} (for Arduino 1.0.x or Arduino 1.5.6 or higher) and replace the existing Firmata folder in your Arduino application. See the instructions below for your platform.\par
{\i Note that Arduino 1.5.0 - 1.5.5 are not supported. Please use Arduino 1.5.6 or higher (or Arduino 1.0.5 or 1.0.6).} \par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Mac OSX:\par}
The Firmata library is contained within the Arduino package.\par
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Navigate to the Arduino application\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Right click on the application icon and select {\f2 Show Package Contents} \par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Navigate to: {\f2 /Contents/Resources/Java/libraries/}  and replace the existing {\f2 Firmata}  folder with latest {\f2 Firmata release} (note there is a different download for Arduino 1.0.x vs 1.6.x)\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Restart the Arduino application and the latest version of Firmata will be available.\par}
{\i If you are using the Java 7 version of Arduino 1.5.7 or higher, the file path will differ slightly: {\f2 Contents/Java/libraries/Firmata}  (no Resources directory).} \par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Windows:\par}
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Navigate to {\f2 c:/Program\\ Files/arduino-1.x/libraries/}  and replace the existing {\f2 Firmata}  folder with the latest {\f2 Firmata release} (note there is a different download for Arduino 1.0.x vs 1.6.x).\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Restart the Arduino application and the latest version of Firmata will be available.\par}
{\i Update the path and Arduino version as necessary} \par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Linux:\par}
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Navigate to {\f2 ~/arduino-1.x/libraries/}  and replace the existing {\f2 Firmata}  folder with the latest {\f2 Firmata release} (note there is a different download for Arduino 1.0.x vs 1.6.x).\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Restart the Arduino application and the latest version of Firmata will be available.\par}
{\i Update the path and Arduino version as necessary} \par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Using the Source code rather than release archive (only for versions older than Arduino 1.6.3)\par}
{\i It is recommended you update to Arduino 1.6.4 or higher if possible, that way you can clone directly into the external Arduino/libraries/ directory which persists between Arduino application updates. Otherwise you will need to move your clone each time you update to a newer version of the Arduino IDE.} \par
If you're stuck with an older version of the IDE, then follow these keep reading otherwise jump up to the "Cloning Firmata section above".\par
Clone this repo directly into the core Arduino application libraries directory. If you are using Arduino 1.5.x or <= 1.6.3, the repo directory structure will not match the Arduino library format, however it should still compile as long as you are using Arduino 1.5.7 or higher.\par
You will first need to remove the existing Firmata library, then clone firmata/arduino into an empty Firmata directory:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 $ rm -r /Applications/Arduino.app/Contents/Resources/Java/libraries/Firmata\par
    2 $ git clone git@github.com:firmata/arduino.git /Applications/Arduino.app/Contents/Resources/Java/libraries/Firmata\par
}
\par
{\i Update paths if you're using Windows or Linux} \par
To generate properly formatted versions of Firmata (for Arduino 1.0.x and Arduino 1.6.x), run the {\f2 release.sh}  script.\par
{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
 {\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Contributing\par}
If you discover a bug or would like to propose a new feature, please open a new {\f2 issue}. Due to the limited memory of standard Arduino boards we cannot add every requested feature to StandardFirmata. Requests to add new features to StandardFirmata will be evaluated by the Firmata developers. However it is still possible to add new features to other Firmata implementations (Firmata is a protocol whereas StandardFirmata is just one of many possible implementations).\par
To contribute, fork this repository and create a new topic branch for the bug, feature or other existing issue you are addressing. Submit the pull request against the {\i master}  branch.\par
If you would like to contribute but don't have a specific bugfix or new feature to contribute, you can take on an existing issue, see issues labeled "pull-request-encouraged". Add a comment to the issue to express your intent to begin work and/or to get any additional information about the issue.\par
You must thoroughly test your contributed code. In your pull request, describe tests performed to ensure that no existing code is broken and that any changes maintain backwards compatibility with the existing api. Test on multiple Arduino board variants if possible. We hope to enable some form of automated (or at least semi-automated) testing in the future, but for now any tests will need to be executed manually by the contributor and reviewers.\par
Use {\f2 Artistic Style} (astyle) to format your code. Set the following rules for the astyle formatter:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     1 style = ""\par
    2 indent-spaces = 2\par
    3 indent-classes = true\par
    4 indent-switches = true\par
    5 indent-cases = true\par
    6 indent-col1-comments = true\par
    7 pad-oper = true\par
    8 pad-header = true\par
    9 keep-one-line-statements = true\par
}
\par
If you happen to use Sublime Text, {\f2 this astyle plugin} is helpful. Set the above rules in the user settings file. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
readme{\tc \v readme}\par \pard\plain 
{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
#Testing Firmata\par
Tests tests are written using the {\f2 ArduinoUnit} library (version 2.0).\par
Follow the instructions in the https://github.com/mmurdoch/arduinounit/blob/master/readme.md "ArduinoUnit readme" to install the library.\par
Compile and upload the test sketch as you would any other sketch. Then open the Serial Monitor to view the test results.\par
If you make changes to {\b Firmata.cpp}, run the tests in /test/ to ensure that your changes have not produced any unexpected errors.\par
You should also perform manual tests against actual hardware. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
LedControl{\tc \v LedControl}\par \pard\plain 
{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b LedControl} is an {\f2 Arduino} library for MAX7219 and MAX7221 Led display drivers. The code also works with the {\f2 Teensy (3.1)}\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Documentation \par}
Documentation for the library is on the {\f2 Github Project Pages}\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Download \par}
The lastest binary version of the Library is always available from the {\f2 LedControl Release Page}\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Install \par}
The library can be installed using the {\f2 standard Arduino library install procedure} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
RTClib{\tc \v RTClib}\par \pard\plain 
{\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A fork of Jeelab's fantastic RTC library updated to add support for the high accuracy {\b DS3231} and the wonderful CHRONODOT by macetech.com. Includes full-functioned example set for Chronodot. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
License Information{\tc \v License Information}\par \pard\plain 
{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The hardware is released under {\f2 Creative Commons Share-alike 3.0}.\par
All other code is open source so please feel free to do anything you want with it; you buy me a beer if you use this and we meet someday ({\f2 Beerware license}). \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
SparkFun LSM9DS1 Arduino Library{\tc \v SparkFun LSM9DS1 Arduino Library}\par \pard\plain 
{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\f2 }\par
{\i {\f2 LSM9DS1 Breakout Board (SEN-13284)}} \par
This is a breakout board for ST Micro's {\b LSM9DS1} \'96 a 3D accelerometer, gyroscope, and magnetometer.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Repository Contents \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/examples** - Example sketches for the library (.ino). Run these from the Arduino IDE.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/extras** - {\b LSM9DS1} documentation.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/src** - Source files for the library (.cpp, .h).\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b keywords.txt}  - Keywords from this library that will be highlighted in the Arduino IDE.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b library.properties}  - General library properties for the Arduino package manager.\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Documentation \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b {\f2 Installing an Arduino Library Guide}}  - Basic information on how to install an Arduino library.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b {\f2 Product Repository}}  - Main repository (including hardware files) for the {\b LSM9DS1} Breakout.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b {\f2 LSM9DS1 Breakout Hookup Guide}}  - Basic hookup guide for the {\b LSM9DS1} Breakout.\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Products that use this Library \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 LSM9DS1 Breakout Board (SEN-13284)}- {\b LSM9DS1} Breakout board.\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Version History \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 V 1.0.0} - Initial release\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}License Information \par}
This product is _**open source**_!\par
The {\b code}  is beerware; if you see me (or any other SparkFun employee) at the local, and you've found our code helpful, please buy us a round!\par
Please use, reuse, and modify these files as you see fit. Please maintain attribution to SparkFun Electronics and release anything derivative under the same license.\par
Distributed as-is; no warranty is given.\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Your friends at SparkFun. \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
SparkFun MAX17043 Particle Library{\tc \v SparkFun MAX17043 Particle Library}\par \pard\plain 
{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Firmware library SparkFun's Photon Battery Shield and the {\b MAX17043} Breakout.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}About \par}
This is a firmware library for {\f2 SparkFun's Photon Battery Shield}.\par
{\f2 }.\par
The {\b MAX17043} interfaces between a LiPo battery and a microcontroller. The {\b MAX17043} can read a battery's voltage and, using a sophisticated battery-modelling algorithm, estimate the state of charge (SOC).\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Repository Contents \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/doc** - Additional documentation for the user. These files are ignored by the IDE.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/firmware** - Source files for the library (.cpp, .h).\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
**/firmware/examples** - Example sketches for the library (.cpp). Run these from the Particle IDE.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b spark.json}  - General library properties for the Particel library manager.\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Example Usage \par}
Include the {\b MAX17043} library: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid #include "SparkFunMAX17043.h" // Include the SparkFun MAX17043 library\par
}
\par
Then use the {\f2 lipo}  object to interact with it. Begin by initializing the IC: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid void setup()\par
\{\par
    // Set up the MAX17043 LiPo fuel gauge:\par
    lipo.begin(); // Initialize the MAX17043 LiPo fuel gauge\par
\par
    // Quick start restarts the MAX17043 in hopes of getting a more accurate\par
    // guess for the SOC.\par
    lipo.quickStart();\par
\par
    // We can set an interrupt to alert when the battery SoC gets too low.\par
    // We can alert at anywhere between 1% - 32%:\par
    lipo.setThreshold(10); // Set alert threshold to 10%.\par
\}\par
}
\par
Then you can read the voltage and state-of-charge (SOC) values like this: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid // lipo.getVoltage() returns a voltage value (e.g. 3.93)\par
voltage = lipo.getVoltage();\par
// lipo.getSOC() returns the estimated state of charge (e.g. 79%)\par
soc = lipo.getSOC();\par
}
\par
Check out the example files in the {\f2 examples directory} for more guidance.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Recommended Components \par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Particle Photon}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 SparkFun Photon Battery Shield}\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}License Information \par}
This product is _**open source**_!\par
Please review the LICENSE.md file for license information.\par
If you have any questions or concerns on licensing, please contact {\f2 techsupport@sparkfun.com}.\par
Distributed as-is; no warranty is given.\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Your friends at SparkFun. \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
accelSettings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Adafruit_Sensor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Adafruit_ADXL345_Unified\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Adafruit_TSL2561_Unified\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Adafruit_SHT31\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Adafruit_SI1145\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BLEPeripheral
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BLEStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
cid_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
csd1_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
csd2_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
csd_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DallasTemperature\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.accel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.battery\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.enabled\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.found\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.geiger\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.gps\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.gyro\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.mag\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.ms5607\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.pwm\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.sht31\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.temp\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
data_struct.tsl\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DateTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
deviceSettings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
DS3231\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
eeprom_struct\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FilterDerivative\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FilterOnePole\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FilterOnePoleCascade\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FilterTwoPole\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirmataClass\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FirmataFeature\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SerialFirmata\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
gyroSettings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IMUSettings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LedControl\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
LSM9DS1\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MAG3110\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
magSettings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MAX17043\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MS5xxx\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MS5611\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
OneWire\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PID\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Port_Pin\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RawDegrees\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RTC_DS1307\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RTC_DS3231\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RTC_DS3234\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RTC_Millis\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RTCAlarmTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RTCDateTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RTCZero\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RunningStatistics\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Sd2Card\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sd_data\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensor_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensors_color_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensors_color_t.__unnamed__\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensors_color_t.__unnamed__.__unnamed__\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensors_event_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensors_event_t.__unnamed__\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensors_vec_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensors_vec_t.__unnamed__\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensors_vec_t.__unnamed__.__unnamed__\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
sensors_vec_t.__unnamed__.__unnamed__\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Stream
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
BLEStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
EthernetClientStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
WiFiStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHW \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
WiFiClientStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
WiFiServerStream\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
temperatureSettings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TinyGPSCustom\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TinyGPSDate\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TinyGPSDecimal\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEV \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TinyGPSAltitude\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TinyGPSCourse\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TinyGPSSpeed\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
TinyGPSInteger\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TinyGPSLocation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TinyGPSPlus\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
TinyGPSTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ZeroRegOptions\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Adafruit_ADXL345_Unified} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Adafruit_Sensor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Adafruit_SHT31} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Adafruit_SI1145} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Adafruit_TSL2561_Unified} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BLEStream} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DallasTemperature} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DateTime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DS3231} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EthernetClientStream} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FilterDerivative} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FilterOnePole} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FilterOnePoleCascade} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FilterTwoPole} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FirmataClass} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FirmataFeature} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LedControl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LSM9DS1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MAG3110} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MAX17043} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MS5611} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MS5xxx} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OneWire} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PID} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RawDegrees} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RTC_DS1307} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RTC_DS3231} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RTC_DS3234} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACZY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RTC_Millis} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RTCZero} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RunningStatistics} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Sd2Card} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw access to SD and SDHC flash memory cards })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADCT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SerialFirmata} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSAltitude} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSCourse} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSCustom} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSDate} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSDecimal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSInteger} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSLocation} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSPlus} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSSpeed} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TinyGPSTime} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WiFiClientStream} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WiFiServerStream} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WiFiStream} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b Weather_Balloon/{\b EEPROM_anything.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/{\b Weather_Balloon.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_ADXL345-master/{\b Adafruit_ADXL345_U.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_ADXL345-master/{\b Adafruit_ADXL345_U.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_Sensor-master/{\b Adafruit_Sensor.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_SHT31-master/{\b Adafruit_SHT31.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_SHT31-master/{\b Adafruit_SHT31.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_SI1145_Library-master/{\b Adafruit_SI1145.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_SI1145_Library-master/{\b Adafruit_SI1145.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_TSL2561-master/{\b Adafruit_TSL2561_U.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_TSL2561-master/{\b Adafruit_TSL2561_U.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Adafruit_TSL2561-master/{\b pgmspace.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Arduino-DS3231-master/{\b DS3231.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Arduino-DS3231-master/{\b DS3231.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/arduino-ms5xxx-master/src/{\b MS5611.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/arduino-ms5xxx-master/src/{\b MS5611.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/arduino-ms5xxx-master/src/{\b MS5xxx.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/arduino-ms5xxx-master/src/{\b MS5xxx.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Arduino-PID-Library/{\b PID_v1.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Arduino-PID-Library/{\b PID_v1.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Arduino-Temperature-Control-Library/{\b DallasTemperature.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Arduino-Temperature-Control-Library/{\b DallasTemperature.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/arduino-ZeroRegs/src/{\b ZeroRegs.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/arduino-ZeroRegs/src/{\b ZeroRegs.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b FilterDerivative.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b FilterDerivative.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b FilterOnePole.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b FilterOnePole.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b Filters.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b FilterTwoPole.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b FilterTwoPole.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b FloatDefine.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b RunningStatistics.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Filters/{\b RunningStatistics.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/{\b Boards.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/{\b Firmata.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/{\b Firmata.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/examples/StandardFirmataBLE/{\b bleConfig.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/examples/StandardFirmataEthernet/{\b ethernetConfig.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/examples/StandardFirmataWiFi/{\b wifiConfig.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b BLEStream.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b BLEStream.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b EthernetClientStream.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b EthernetClientStream.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b firmataDebug.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b FirmataFeature.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b SerialFirmata.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b SerialFirmata.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b WiFiClientStream.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b WiFiServerStream.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b WiFiStream.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Firmata/utility/{\b WiFiStream.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/LedControl-master/src/{\b LedControl.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/LedControl-master/src/{\b LedControl.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/MAG3110/{\b MAG3110.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/MAG3110/{\b MAG3110.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/OneWire2/{\b OneWire.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/OneWire2/{\b OneWire.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTClib-master/{\b RTC_DS1307.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTClib-master/{\b RTC_DS1307.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTClib-master/{\b RTC_DS3231.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTClib-master/{\b RTC_DS3231.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTClib-master/{\b RTC_DS3234.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTClib-master/{\b RTC_DS3234.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTClib-master/{\b RTClib.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTClib-master/{\b RTClib.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTCZero/src/{\b RTCZero.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/RTCZero/src/{\b RTCZero.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SD-master/{\b Sd2Card.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SD-master/{\b Sd2Card.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SD-master/{\b Sd2PinMap.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SD-master/{\b SdInfo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SparkFun_LSM9DS1/src/{\b LSM9DS1_Registers.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SparkFun_LSM9DS1/src/{\b LSM9DS1_Types.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SparkFun_LSM9DS1/src/{\b SparkFunLSM9DS1.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SparkFun_LSM9DS1/src/{\b SparkFunLSM9DS1.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SparkFun_MAX17043/{\b SparkFunMAX17043.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SparkFun_MAX17043/{\b SparkFunMAX17043.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/SparkFun_MAX17043/examples/{\b MAX17043_Simple.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Time-master/{\b DateStrings.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Time-master/{\b Time.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Time-master/{\b Time.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/Time-master/{\b TimeLib.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Adafruit_ADXL345_Unified Class Reference\par \pard\plain 
{\tc\tcl2 \v Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified}
{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
\par
{
{\f2 #include <Adafruit_ADXL345_U.h>}}\par
Inheritance diagram for Adafruit_ADXL345_Unified:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Adafruit_ADXL345_Unified:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_ADXL345_Unified} (int32_t sensorID=-1)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new ADXL345 class. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_ADXL345_Unified} (uint8_t {\b clock}, uint8_t miso, uint8_t mosi, uint8_t cs, int32_t sensorID=-1)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new ADXL345 class in SPI mode. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b begin} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setups the HW (reads coefficients values, etc.) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRange} ({\b range_t} range)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the g range for the accelerometer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b range_t} {\b getRange} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the g range for the accelerometer. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDataRate} ({\b dataRate_t} dataRate)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the data rate for the ADXL345 (controls power consumption) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dataRate_t} {\b getDataRate} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the data rate for the ADXL345 (controls power consumption) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getEvent} ({\b sensors_event_t} *)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent sensor event. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getSensor} ({\b sensor_t} *)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\b sensor_t} data. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getDeviceID} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the device ID (can be used to check connection) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeRegister} (uint8_t reg, uint8_t value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes 8-bits to the specified destination register. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b readRegister} (uint8_t reg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads 8-bits from the specified register. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b read16} (uint8_t reg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads 16-bits from the specified register. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b getX} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent X axis value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b getY} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent Y axis value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b getZ} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent Z axis value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCorrection} (double)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 106 of file Adafruit_ADXL345_U.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Adafruit_ADXL345_Unified\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:Adafruit_ADXL345_Unified}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_ADXL345_Unified::Adafruit_ADXL345_Unified (int32_t  {\i sensorID} = {\f2 -1})}}
\par
{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new ADXL345 class. }}\par
{
Definition at line 183 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_RANGE_2_G.}\par
}
{\xe \v Adafruit_ADXL345_Unified\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:Adafruit_ADXL345_Unified}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_ADXL345_Unified::Adafruit_ADXL345_Unified (uint8_t  {\i clock}, uint8_t  {\i miso}, uint8_t  {\i mosi}, uint8_t  {\i cs}, int32_t  {\i sensorID} = {\f2 -1})}}
\par
{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new ADXL345 class in SPI mode. }}\par
{
Definition at line 195 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_RANGE_2_G, and clock.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Adafruit_ADXL345_Unified::begin (void )}}
\par
{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Setups the HW (reads coefficients values, etc.) }}\par
{
Definition at line 210 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_REG_POWER_CTL, getDeviceID(), Wire, and writeRegister().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_a55b74a63bbb1317228d5bb5905589a02_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getDataRate\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:getDataRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b dataRate_t} Adafruit_ADXL345_Unified::getDataRate (void )}}
\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the data rate for the ADXL345 (controls power consumption) }}\par
{
Definition at line 289 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_REG_BW_RATE, and readRegister().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_a3b8ae7da9a66e28b38b70a08c5646b02_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getDeviceID\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:getDeviceID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Adafruit_ADXL345_Unified::getDeviceID (void )}}
\par
{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the device ID (can be used to check connection) }}\par
{
Definition at line 146 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_REG_DEVID, and readRegister().}\par
{
Referenced by begin().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_acf54ca46aa7e6a613807f489711a8ceb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_acf54ca46aa7e6a613807f489711a8ceb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getEvent\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:getEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Adafruit_ADXL345_Unified::getEvent ({\b sensors_event_t} *  {\i event}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent sensor event. }}\par
{
Implements {\b Adafruit_Sensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACIK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 299 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_MG2G_MULTIPLIER, getX(), getY(), getZ(), SENSOR_TYPE_ACCELEROMETER, and SENSORS_GRAVITY_STANDARD.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_a830e4a9d1729310c9cf0d0504b3d0229_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getRange\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:getRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b range_t} Adafruit_ADXL345_Unified::getRange (void )}}
\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the g range for the accelerometer. }}\par
{
Definition at line 266 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_REG_DATA_FORMAT, and readRegister().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_adcdcd1ddcd58af6b1d4f85f9ab30d7a4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getSensor\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:getSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_ADXL345_Unified::getSensor ({\b sensor_t} *  {\i sensor}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\b sensor_t} data. }}\par
{
Implements {\b Adafruit_Sensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACIN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 319 of file Adafruit_ADXL345_U.cpp.}\par
{
References sensor_t::max_value, sensor_t::min_delay, sensor_t::min_value, sensor_t::name, sensor_t::resolution, sensor_t::sensor_id, SENSOR_TYPE_PRESSURE, sensor_t::type, and sensor_t::version.}\par
}
{\xe \v getX\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:getX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t Adafruit_ADXL345_Unified::getX (void )}}
\par
{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent X axis value. }}\par
{
Definition at line 156 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_REG_DATAX0, and read16().}\par
{
Referenced by getEvent().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_a5ad11ba3d12aa4f4aaaec38b3400fa6f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_a5ad11ba3d12aa4f4aaaec38b3400fa6f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getY\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:getY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t Adafruit_ADXL345_Unified::getY (void )}}
\par
{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent Y axis value. }}\par
{
Definition at line 165 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_REG_DATAY0, and read16().}\par
{
Referenced by getEvent().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_ac745aefc2a66094a9c46115564939610_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_ac745aefc2a66094a9c46115564939610_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getZ\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:getZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t Adafruit_ADXL345_Unified::getZ (void )}}
\par
{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent Z axis value. }}\par
{
Definition at line 174 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_REG_DATAZ0, and read16().}\par
{
Referenced by getEvent().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_ae61417ef16d19ff86ecd82efc14e960b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_ae61417ef16d19ff86ecd82efc14e960b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v read16\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:read16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t Adafruit_ADXL345_Unified::read16 (uint8_t  {\i reg})}}
\par
{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads 16-bits from the specified register. }}\par
{
Definition at line 124 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_ADDRESS, and Wire.}\par
{
Referenced by getX(), getY(), and getZ().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_a62c1c34b81fdcb7825d7c9911fba988b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readRegister\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:readRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Adafruit_ADXL345_Unified::readRegister (uint8_t  {\i reg})}}
\par
{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads 8-bits from the specified register. }}\par
{
Definition at line 102 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_ADDRESS, and Wire.}\par
{
Referenced by getDataRate(), getDeviceID(), getRange(), and setRange().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_ab56b668f36793605d7be009a7efb74e8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setCorrection\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:setCorrection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_ADXL345_Unified::setCorrection (double  {\i correction_value})}}
\par
{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 335 of file Adafruit_ADXL345_U.cpp.}\par
}
{\xe \v setDataRate\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:setDataRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_ADXL345_Unified::setDataRate ({\b dataRate_t}  {\i dataRate})}}
\par
{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the data rate for the ADXL345 (controls power consumption) }}\par
{
Definition at line 277 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_REG_BW_RATE, and writeRegister().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_a8e837a3e456e5e17839447bbf65f76bd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setRange\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:setRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_ADXL345_Unified::setRange ({\b range_t}  {\i range})}}
\par
{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the g range for the accelerometer. }}\par
{
Definition at line 242 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_REG_DATA_FORMAT, readRegister(), and writeRegister().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_ad722e964df59c7691b1666472940aa99_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v writeRegister\:Adafruit_ADXL345_Unified}
{\xe \v Adafruit_ADXL345_Unified\:writeRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_ADXL345_Unified::writeRegister (uint8_t  {\i reg}, uint8_t  {\i value})}}
\par
{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes 8-bits to the specified destination register. }}\par
{
Definition at line 83 of file Adafruit_ADXL345_U.cpp.}\par
{
References ADXL345_ADDRESS, and Wire.}\par
{
Referenced by begin(), setDataRate(), and setRange().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___a_d_x_l345___unified_a8f6b9e9598618fc0cf221c4b62f924d9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Adafruit_ADXL345-master/{\b Adafruit_ADXL345_U.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Adafruit_ADXL345-master/{\b Adafruit_ADXL345_U.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Adafruit_Sensor Class Reference\par \pard\plain 
{\tc\tcl2 \v Adafruit_Sensor}
{\xe \v Adafruit_Sensor}
{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
\par
{
{\f2 #include <Adafruit_Sensor.h>}}\par
Inheritance diagram for Adafruit_Sensor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___sensor__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_Sensor} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Adafruit_Sensor} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b enableAutoRange} (bool enabled)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b getEvent} ({\b sensors_event_t} *)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b getSensor} ({\b sensor_t} *)=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 139 of file Adafruit_Sensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Adafruit_Sensor\:Adafruit_Sensor}
{\xe \v Adafruit_Sensor\:Adafruit_Sensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_Sensor::Adafruit_Sensor (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 142 of file Adafruit_Sensor.h.}\par
}
{\xe \v ~Adafruit_Sensor\:Adafruit_Sensor}
{\xe \v Adafruit_Sensor\:~Adafruit_Sensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Adafruit_Sensor::~Adafruit_Sensor (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file Adafruit_Sensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v enableAutoRange\:Adafruit_Sensor}
{\xe \v Adafruit_Sensor\:enableAutoRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Adafruit_Sensor::enableAutoRange (bool  {\i enabled}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b Adafruit_TSL2561_Unified} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 146 of file Adafruit_Sensor.h.}\par
{
References getEvent(), and getSensor().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___sensor_ace6c1f26eeb956f95801b9fc1841f3a0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getEvent\:Adafruit_Sensor}
{\xe \v Adafruit_Sensor\:getEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool Adafruit_Sensor::getEvent ({\b sensors_event_t} * ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Adafruit_TSL2561_Unified} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJC \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Adafruit_ADXL345_Unified} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by enableAutoRange().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___sensor_a0636562b9bc853b796ecc87b5d4b1bec_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getSensor\:Adafruit_Sensor}
{\xe \v Adafruit_Sensor\:getSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Adafruit_Sensor::getSensor ({\b sensor_t} * ){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Adafruit_TSL2561_Unified} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Adafruit_ADXL345_Unified} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACIM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by enableAutoRange().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___sensor_a19e844c1eb2dc37cb72705d5572c4676_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Adafruit_Sensor-master/{\b Adafruit_Sensor.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Adafruit_SHT31 Class Reference\par \pard\plain 
{\tc\tcl2 \v Adafruit_SHT31}
{\xe \v Adafruit_SHT31}
{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
\par
{
{\f2 #include <Adafruit_SHT31.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_SHT31} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b begin} (uint8_t i2caddr={\b SHT31_DEFAULT_ADDR})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readTemperature} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readHumidity} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b readStatus} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b heater} (boolean)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b crc8} (const uint8_t *data, int len)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 37 of file Adafruit_SHT31.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Adafruit_SHT31\:Adafruit_SHT31}
{\xe \v Adafruit_SHT31\:Adafruit_SHT31}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_SHT31::Adafruit_SHT31 ()}}
\par
{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file Adafruit_SHT31.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:Adafruit_SHT31}
{\xe \v Adafruit_SHT31\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean Adafruit_SHT31::begin (uint8_t  {\i i2caddr} = {\f2 {\b SHT31_DEFAULT_ADDR}})}}
\par
{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file Adafruit_SHT31.cpp.}\par
{
References reset(), and Wire.}\par
{
Referenced by configure_sht31().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___s_h_t31_a104eb2dfd27a732420e1fc3755516690_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___s_h_t31_a104eb2dfd27a732420e1fc3755516690_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v crc8\:Adafruit_SHT31}
{\xe \v Adafruit_SHT31\:crc8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Adafruit_SHT31::crc8 (const uint8_t *  {\i data}, int  {\i len})}}
\par
{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file Adafruit_SHT31.cpp.}\par
{
References i.}\par
{
Referenced by readHumidity().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___s_h_t31_a9fe74b3c5be1794ec00a961d91227716_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v heater\:Adafruit_SHT31}
{\xe \v Adafruit_SHT31\:heater}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_SHT31::heater (boolean  {\i h})}}
\par
{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file Adafruit_SHT31.cpp.}\par
{
References SHT31_HEATERDIS, and SHT31_HEATEREN.}\par
}
{\xe \v readHumidity\:Adafruit_SHT31}
{\xe \v Adafruit_SHT31\:readHumidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Adafruit_SHT31::readHumidity (void )}}
\par
{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file Adafruit_SHT31.cpp.}\par
{
References crc8(), i, SHT31_MEAS_HIGHREP, and Wire.}\par
{
Referenced by readSensors().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___s_h_t31_a2b522bec65225d5c2aadfccd31bb91e0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___s_h_t31_a2b522bec65225d5c2aadfccd31bb91e0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readStatus\:Adafruit_SHT31}
{\xe \v Adafruit_SHT31\:readStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Adafruit_SHT31::readStatus (void )}}
\par
{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file Adafruit_SHT31.cpp.}\par
{
References SHT31_READSTATUS, and Wire.}\par
}
{\xe \v readTemperature\:Adafruit_SHT31}
{\xe \v Adafruit_SHT31\:readTemperature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Adafruit_SHT31::readTemperature (void )}}
\par
{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file Adafruit_SHT31.cpp.}\par
{
Referenced by readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___s_h_t31_a3b518218705509eb0ab35050bf79f00a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v reset\:Adafruit_SHT31}
{\xe \v Adafruit_SHT31\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_SHT31::reset (void )}}
\par
{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file Adafruit_SHT31.cpp.}\par
{
References SHT31_SOFTRESET.}\par
{
Referenced by begin().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___s_h_t31_a4cfa42c7211e1c5c3de411f3b099c827_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Adafruit_SHT31-master/{\b Adafruit_SHT31.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Adafruit_SHT31-master/{\b Adafruit_SHT31.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Adafruit_SI1145 Class Reference\par \pard\plain 
{\tc\tcl2 \v Adafruit_SI1145}
{\xe \v Adafruit_SI1145}
{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
\par
{
{\f2 #include <Adafruit_SI1145.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_SI1145} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b readUV} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b readIR} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b readVisible} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b readProx} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getRegister} (uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b setRegister} (uint8_t, uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset_uv} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b nop} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b force_convert} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 156 of file Adafruit_SI1145.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Adafruit_SI1145\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:Adafruit_SI1145}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_SI1145::Adafruit_SI1145 (void )}}
\par
{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file Adafruit_SI1145.cpp.}\par
{
References SI1145_ADDR.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean Adafruit_SI1145::begin (void )}}
\par
{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file Adafruit_SI1145.cpp.}\par
{
References reset(), SI1145_PARAM_ADCCOUNTER_511CLK, SI1145_PARAM_ADCMUX_LARGEIR, SI1145_PARAM_ADCMUX_SMALLIR, SI1145_PARAM_ALSIRADCGAIN, SI1145_PARAM_ALSIRADCMISC, SI1145_PARAM_ALSIRADCMISC_RANGE, SI1145_PARAM_ALSIRADCMUX, SI1145_PARAM_ALSIRADCOUNTER, SI1145_PARAM_ALSVISADCGAIN, SI1145_PARAM_ALSVISADCMISC, SI1145_PARAM_ALSVISADCMISC_VISRANGE, SI1145_PARAM_ALSVISADCOUNTER, SI1145_PARAM_CHLIST, SI1145_PARAM_CHLIST_ENALSIR, SI1145_PARAM_CHLIST_ENALSVIS, SI1145_PARAM_CHLIST_ENPS1, SI1145_PARAM_CHLIST_ENUV, SI1145_PARAM_PS1ADCMUX, SI1145_PARAM_PSADCGAIN, SI1145_PARAM_PSADCMISC, SI1145_PARAM_PSADCMISC_PSMODE, SI1145_PARAM_PSADCMISC_RANGE, SI1145_PARAM_PSADCOUNTER, SI1145_PARAM_PSLED12SEL, SI1145_PARAM_PSLED12SEL_PS1LED1, SI1145_REG_INTCFG, SI1145_REG_INTCFG_INTOE, SI1145_REG_IRQEN, SI1145_REG_IRQEN_ALSEVERYSAMPLE, SI1145_REG_PARTID, SI1145_REG_PSLED21, SI1145_REG_UCOEFF0, SI1145_REG_UCOEFF1, SI1145_REG_UCOEFF2, SI1145_REG_UCOEFF3, and Wire.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___s_i1145_ad17eb7214e6fba886b5595cf14e45cf0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v force_convert\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:force_convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_SI1145::force_convert ()}}
\par
{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 135 of file Adafruit_SI1145.cpp.}\par
{
References SI1145_PSALS_FORCE, and SI1145_REG_COMMAND.}\par
}
{\xe \v getRegister\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:getRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Adafruit_SI1145::getRegister (uint8_t  {\i reg})}}
\par
{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file Adafruit_SI1145.cpp.}\par
}
{\xe \v nop\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:nop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_SI1145::nop ()}}
\par
{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 131 of file Adafruit_SI1145.cpp.}\par
{
References SI1145_REG_COMMAND, and SI1145_RESET.}\par
}
{\xe \v readIR\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:readIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Adafruit_SI1145::readIR (void )}}
\par
{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 145 of file Adafruit_SI1145.cpp.}\par
}
{\xe \v readProx\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:readProx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Adafruit_SI1145::readProx (void )}}
\par
{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file Adafruit_SI1145.cpp.}\par
{
References SI1145_PARAM_QUERY, SI1145_PARAM_SET, SI1145_REG_COMMAND, SI1145_REG_PARAMRD, SI1145_REG_PARAMWR, and Wire.}\par
}
{\xe \v readUV\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:readUV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Adafruit_SI1145::readUV (void )}}
\par
{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file Adafruit_SI1145.cpp.}\par
}
{\xe \v readVisible\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:readVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Adafruit_SI1145::readVisible (void )}}
\par
{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file Adafruit_SI1145.cpp.}\par
}
{\xe \v reset\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_SI1145::reset (void )}}
\par
{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file Adafruit_SI1145.cpp.}\par
{
References SI1145_REG_COMMAND, SI1145_REG_HWKEY, SI1145_REG_INTCFG, SI1145_REG_IRQEN, SI1145_REG_IRQMODE1, SI1145_REG_IRQMODE2, SI1145_REG_IRQSTAT, SI1145_REG_MEASRATE0, SI1145_REG_MEASRATE1, and SI1145_RESET.}\par
{
Referenced by begin().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___s_i1145_ab7a22b92c14315e36b84a42498e970ea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v reset_uv\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:reset_uv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_SI1145::reset_uv ()}}
\par
{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file Adafruit_SI1145.cpp.}\par
{
References SI1145_NOP, and SI1145_REG_COMMAND.}\par
}
{\xe \v setRegister\:Adafruit_SI1145}
{\xe \v Adafruit_SI1145\:setRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Adafruit_SI1145::setRegister (uint8_t  {\i reg}, uint8_t  {\i value})}}
\par
{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file Adafruit_SI1145.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Adafruit_SI1145_Library-master/{\b Adafruit_SI1145.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Adafruit_SI1145_Library-master/{\b Adafruit_SI1145.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Adafruit_TSL2561_Unified Class Reference\par \pard\plain 
{\tc\tcl2 \v Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified}
{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
\par
{
{\f2 #include <Adafruit_TSL2561_U.h>}}\par
Inheritance diagram for Adafruit_TSL2561_Unified:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Adafruit_TSL2561_Unified:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_TSL2561_Unified} (uint8_t addr, int32_t sensorID=-1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b begin} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enableAutoRange} (bool enable)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables or disables the auto-gain settings when reading data from the sensor. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIntegrationTime} ({\b tsl2561IntegrationTime_t} time)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setGain} ({\b tsl2561Gain_t} gain)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getLuminosity} (uint16_t *broadband, uint16_t *ir)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the broadband (mixed lighting) and IR only values from the TSL2561, adjusting gain if auto-gain is enabled. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b calculateLux} (uint16_t broadband, uint16_t ir)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getEvent} ({\b sensors_event_t} *)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent sensor event returns true if sensor reading is between 0 and 65535 lux returns false if sensor is saturated. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getSensor} ({\b sensor_t} *)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\b sensor_t} data. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 178 of file Adafruit_TSL2561_U.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Adafruit_TSL2561_Unified\:Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified\:Adafruit_TSL2561_Unified}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_TSL2561_Unified::Adafruit_TSL2561_Unified (uint8_t  {\i addr}, int32_t  {\i sensorID} = {\f2 -1})}}
\par
{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor \par
}{
Definition at line 176 of file Adafruit_TSL2561_U.cpp.}\par
{
References TSL2561_GAIN_1X, and TSL2561_INTEGRATIONTIME_13MS.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean Adafruit_TSL2561_Unified::begin (void )}}
\par
{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes I2C and configures the sensor (call this function before doing anything else) \par
}{
Definition at line 196 of file Adafruit_TSL2561_U.cpp.}\par
{
References setGain(), setIntegrationTime(), TSL2561_REGISTER_ID, and Wire.}\par
{
Referenced by configure_TSL2561(), getLuminosity(), setGain(), and setIntegrationTime().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_ac2781d263ae73533628d5844ca38b6de_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_ac2781d263ae73533628d5844ca38b6de_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v calculateLux\:Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified\:calculateLux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t Adafruit_TSL2561_Unified::calculateLux (uint16_t  {\i broadband}, uint16_t  {\i ir})}}
\par
{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts the raw sensor values to the standard SI lux equivalent. Returns 0 if the sensor is saturated and the values are unreliable. \par
}{
Definition at line 367 of file Adafruit_TSL2561_U.cpp.}\par
{
References TSL2561_CLIPPING_101MS, TSL2561_CLIPPING_13MS, TSL2561_CLIPPING_402MS, TSL2561_INTEGRATIONTIME_101MS, TSL2561_INTEGRATIONTIME_13MS, TSL2561_LUX_B1C, TSL2561_LUX_B1T, TSL2561_LUX_B2C, TSL2561_LUX_B2T, TSL2561_LUX_B3C, TSL2561_LUX_B3T, TSL2561_LUX_B4C, TSL2561_LUX_B4T, TSL2561_LUX_B5C, TSL2561_LUX_B5T, TSL2561_LUX_B6C, TSL2561_LUX_B6T, TSL2561_LUX_B7C, TSL2561_LUX_B7T, TSL2561_LUX_B8C, TSL2561_LUX_B8T, TSL2561_LUX_CHSCALE, TSL2561_LUX_CHSCALE_TINT0, TSL2561_LUX_CHSCALE_TINT1, TSL2561_LUX_K1C, TSL2561_LUX_K1T, TSL2561_LUX_K2C, TSL2561_LUX_K2T, TSL2561_LUX_K3C, TSL2561_LUX_K3T, TSL2561_LUX_K4C, TSL2561_LUX_K4T, TSL2561_LUX_K5C, TSL2561_LUX_K5T, TSL2561_LUX_K6C, TSL2561_LUX_K6T, TSL2561_LUX_K7C, TSL2561_LUX_K7T, TSL2561_LUX_K8C, TSL2561_LUX_K8T, TSL2561_LUX_LUXSCALE, TSL2561_LUX_M1C, TSL2561_LUX_M1T, TSL2561_LUX_M2C, TSL2561_LUX_M2T, TSL2561_LUX_M3C, TSL2561_LUX_M3T, TSL2561_LUX_M4C, TSL2561_LUX_M4T, TSL2561_LUX_M5C, TSL2561_LUX_M5T, TSL2561_LUX_M6C, TSL2561_LUX_M6T, TSL2561_LUX_M7C, TSL2561_LUX_M7T, TSL2561_LUX_M8C, TSL2561_LUX_M8T, and TSL2561_LUX_RATIOSCALE.}\par
{
Referenced by getEvent(), and readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_a5059ebabcbd037d53459ec9f3c6cdc4b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v enableAutoRange\:Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified\:enableAutoRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_TSL2561_Unified::enableAutoRange (bool  {\i enable}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables or disables the auto-gain settings when reading data from the sensor. }}\par
{
Reimplemented from {\b Adafruit_Sensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 224 of file Adafruit_TSL2561_U.cpp.}\par
{
Referenced by configure_TSL2561().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_a9bb93fc9a1af24175c9838cdfe7b8904_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getEvent\:Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified\:getEvent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Adafruit_TSL2561_Unified::getEvent ({\b sensors_event_t} *  {\i event}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the most recent sensor event returns true if sensor reading is between 0 and 65535 lux returns false if sensor is saturated. }}\par
{
Implements {\b Adafruit_Sensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACIK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 483 of file Adafruit_TSL2561_U.cpp.}\par
{
References calculateLux(), getLuminosity(), and SENSOR_TYPE_LIGHT.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_a6a133ea86b7a7158408519214c4d0aef_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getLuminosity\:Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified\:getLuminosity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_TSL2561_Unified::getLuminosity (uint16_t *  {\i broadband}, uint16_t *  {\i ir})}}
\par
{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the broadband (mixed lighting) and IR only values from the TSL2561, adjusting gain if auto-gain is enabled. }}\par
{
Definition at line 279 of file Adafruit_TSL2561_U.cpp.}\par
{
References begin(), setGain(), TSL2561_AGC_THI_101MS, TSL2561_AGC_THI_13MS, TSL2561_AGC_THI_402MS, TSL2561_AGC_TLO_101MS, TSL2561_AGC_TLO_13MS, TSL2561_AGC_TLO_402MS, TSL2561_GAIN_16X, TSL2561_GAIN_1X, TSL2561_INTEGRATIONTIME_101MS, and TSL2561_INTEGRATIONTIME_13MS.}\par
{
Referenced by getEvent(), and readSensors().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_a23378e7c4792b8b8c721d5a4def960fb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_a23378e7c4792b8b8c721d5a4def960fb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getSensor\:Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified\:getSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_TSL2561_Unified::getSensor ({\b sensor_t} *  {\i sensor}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the {\b sensor_t} data. }}\par
{
Implements {\b Adafruit_Sensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACIN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 511 of file Adafruit_TSL2561_U.cpp.}\par
{
References sensor_t::max_value, sensor_t::min_delay, sensor_t::min_value, sensor_t::name, sensor_t::resolution, sensor_t::sensor_id, SENSOR_TYPE_LIGHT, sensor_t::type, and sensor_t::version.}\par
}
{\xe \v setGain\:Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified\:setGain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_TSL2561_Unified::setGain ({\b tsl2561Gain_t}  {\i gain})}}
\par
{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adjusts the gain on the TSL2561 (adjusts the sensitivity to light) \par
}{
Definition at line 256 of file Adafruit_TSL2561_U.cpp.}\par
{
References begin(), TSL2561_COMMAND_BIT, and TSL2561_REGISTER_TIMING.}\par
{
Referenced by begin(), and getLuminosity().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_ad4189a1cb97b07366b5014bec629f29a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_ad4189a1cb97b07366b5014bec629f29a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setIntegrationTime\:Adafruit_TSL2561_Unified}
{\xe \v Adafruit_TSL2561_Unified\:setIntegrationTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_TSL2561_Unified::setIntegrationTime ({\b tsl2561IntegrationTime_t}  {\i time})}}
\par
{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the integration time for the TSL2561 \par
}{
Definition at line 234 of file Adafruit_TSL2561_U.cpp.}\par
{
References begin(), TSL2561_COMMAND_BIT, and TSL2561_REGISTER_TIMING.}\par
{
Referenced by begin(), and configure_TSL2561().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_a594636810e6e26dc025b7f1b7a16024f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_adafruit___t_s_l2561___unified_a594636810e6e26dc025b7f1b7a16024f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Adafruit_TSL2561-master/{\b Adafruit_TSL2561_U.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Adafruit_TSL2561-master/{\b Adafruit_TSL2561_U.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BLEStream Class Reference\par \pard\plain 
{\tc\tcl2 \v BLEStream}
{\xe \v BLEStream}
{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
\par
{
{\f2 #include <BLEStream.h>}}\par
Inheritance diagram for BLEStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_b_l_e_stream__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for BLEStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_b_l_e_stream__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BLEStream} (unsigned char req=0, unsigned char rdy=0, unsigned char rst=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} (...)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b poll} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b end} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFlushInterval} (int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b available} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b peek} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b read} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b flush} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual size_t {\b write} (uint8_t byte)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b operator bool} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 27 of file BLEStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BLEStream\:BLEStream}
{\xe \v BLEStream\:BLEStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BLEStream::BLEStream (unsigned char  {\i req} = {\f2 0}, unsigned char  {\i rdy} = {\f2 0}, unsigned char  {\i rst} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file BLEStream.h.}\par
{
References BLESTREAM_TXBUFFER_FLUSH_INTERVAL.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v available\:BLEStream}
{\xe \v BLEStream\:available}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int BLEStream::available (void ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file BLEStream.h.}\par
}
{\xe \v begin\:BLEStream}
{\xe \v BLEStream\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BLEStream::begin (  {\i ...})}}
\par
{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file BLEStream.h.}\par
}
{\xe \v end\:BLEStream}
{\xe \v BLEStream\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BLEStream::end ()}}
\par
{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file BLEStream.h.}\par
{
References flush().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_b_l_e_stream_a2f571566304b41339d8a74cee6f98d2d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v flush\:BLEStream}
{\xe \v BLEStream\:flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BLEStream::flush (void ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file BLEStream.h.}\par
{
Referenced by end(), poll(), and write().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_b_l_e_stream_af22a00b80511025785543d107422874a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v operator bool\:BLEStream}
{\xe \v BLEStream\:operator bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BLEStream::operator bool (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 207 of file BLEStream.h.}\par
}
{\xe \v peek\:BLEStream}
{\xe \v BLEStream\:peek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int BLEStream::peek (void ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 145 of file BLEStream.h.}\par
}
{\xe \v poll\:BLEStream}
{\xe \v BLEStream\:poll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool BLEStream::poll ()}}
\par
{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file BLEStream.h.}\par
{
References flush().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_b_l_e_stream_a58d4d0684a7c9f5434736af31ea2ab98_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v read\:BLEStream}
{\xe \v BLEStream\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int BLEStream::read (void ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file BLEStream.h.}\par
}
{\xe \v setFlushInterval\:BLEStream}
{\xe \v BLEStream\:setFlushInterval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BLEStream::setFlushInterval (int  {\i interval})}}
\par
{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 217 of file BLEStream.h.}\par
{
References BLESTREAM_MIN_FLUSH_INTERVAL, and i.}\par
}
{\xe \v write\:BLEStream}
{\xe \v BLEStream\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t BLEStream::write (uint8_t  {\i byte}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 191 of file BLEStream.h.}\par
{
References flush().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_b_l_e_stream_ad3e299ba3ad439d077f1b7bb74617698_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/utility/{\b BLEStream.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DallasTemperature Class Reference\par \pard\plain 
{\tc\tcl2 \v DallasTemperature}
{\xe \v DallasTemperature}
{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
\par
{
{\f2 #include <DallasTemperature.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DallasTemperature} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DallasTemperature} ({\b OneWire} *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOneWire} ({\b OneWire} *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getDeviceCount} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b validAddress} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b validFamily} (const uint8_t *deviceAddress)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getAddress} (uint8_t *, uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isConnected} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isConnected} (const uint8_t *, uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b readScratchPad} (const uint8_t *, uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeScratchPad} (const uint8_t *, const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b readPowerSupply} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getResolution} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setResolution} (uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getResolution} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setResolution} (const uint8_t *, uint8_t, bool skipGlobalBitResolutionCalculation=false)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWaitForConversion} (bool)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getWaitForConversion} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCheckForConversion} (bool)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getCheckForConversion} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b requestTemperatures} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b requestTemperaturesByAddress} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b requestTemperaturesByIndex} (uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b getTemp} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getTempC} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getTempF} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getTempCByIndex} (uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getTempFByIndex} (uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isParasitePowerMode} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isConversionAvailable} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isConversionComplete} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUserData} (const uint8_t *, int16_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUserDataByIndex} (uint8_t, int16_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b getUserData} (const uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b getUserDataByIndex} (uint8_t)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b toFahrenheit} (float)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b toCelsius} (float)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b rawToCelsius} (int16_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b rawToFahrenheit} (int16_t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 63 of file DallasTemperature.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DallasTemperature\:DallasTemperature}
{\xe \v DallasTemperature\:DallasTemperature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DallasTemperature::DallasTemperature ()}}
\par
{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file DallasTemperature.cpp.}\par
}
{\xe \v DallasTemperature\:DallasTemperature}
{\xe \v DallasTemperature\:DallasTemperature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DallasTemperature::DallasTemperature ({\b OneWire} *  {\i _oneWire})}}
\par
{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 18 of file DallasTemperature.cpp.}\par
{
References setOneWire().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a37139ebd1a6122e232800528aee8cb2b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:DallasTemperature}
{\xe \v DallasTemperature\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DallasTemperature::begin (void )}}
\par
{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file DallasTemperature.cpp.}\par
{
References getResolution(), readPowerSupply(), OneWire::reset_search(), OneWire::search(), and validAddress().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_aea297b5f2a720a5455245c0fbf7333ec_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getAddress\:DallasTemperature}
{\xe \v DallasTemperature\:getAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::getAddress (uint8_t *  {\i deviceAddress}, uint8_t  {\i index})}}
\par
{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file DallasTemperature.cpp.}\par
{
References OneWire::reset_search(), and validAddress().}\par
{
Referenced by getTempCByIndex(), getTempFByIndex(), getUserDataByIndex(), requestTemperaturesByIndex(), setResolution(), and setUserDataByIndex().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_afa644bebf50c81b6641a31c585b62538_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_afa644bebf50c81b6641a31c585b62538_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getCheckForConversion\:DallasTemperature}
{\xe \v DallasTemperature\:getCheckForConversion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::getCheckForConversion (void )}}
\par
{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 307 of file DallasTemperature.cpp.}\par
}
{\xe \v getDeviceCount\:DallasTemperature}
{\xe \v DallasTemperature\:getDeviceCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DallasTemperature::getDeviceCount (void )}}
\par
{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file DallasTemperature.cpp.}\par
}
{\xe \v getResolution\:DallasTemperature}
{\xe \v DallasTemperature\:getResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DallasTemperature::getResolution ()}}
\par
{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 250 of file DallasTemperature.cpp.}\par
{
Referenced by begin(), requestTemperaturesByAddress(), and setResolution().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a9dac13206229d7c8fb75f21bf44e75ed_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getResolution\:DallasTemperature}
{\xe \v DallasTemperature\:getResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DallasTemperature::getResolution (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 256 of file DallasTemperature.cpp.}\par
{
References CONFIGURATION, DS18S20MODEL, isConnected(), TEMP_10_BIT, TEMP_11_BIT, TEMP_12_BIT, and TEMP_9_BIT.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a2266822561e864c4921955697c1ac7f5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getTemp\:DallasTemperature}
{\xe \v DallasTemperature\:getTemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t DallasTemperature::getTemp (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 481 of file DallasTemperature.cpp.}\par
{
References DEVICE_DISCONNECTED_RAW, and isConnected().}\par
{
Referenced by getTempC(), and getTempF().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a37c3723cc15d5e46d0a6caa96a3c4781_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a37c3723cc15d5e46d0a6caa96a3c4781_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getTempC\:DallasTemperature}
{\xe \v DallasTemperature\:getTempC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float DallasTemperature::getTempC (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 494 of file DallasTemperature.cpp.}\par
{
References getTemp(), and rawToCelsius().}\par
{
Referenced by getTempCByIndex().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a20f94b59909b46e55a77b399d99591a2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a20f94b59909b46e55a77b399d99591a2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getTempCByIndex\:DallasTemperature}
{\xe \v DallasTemperature\:getTempCByIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float DallasTemperature::getTempCByIndex (uint8_t  {\i deviceIndex})}}
\par
{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 408 of file DallasTemperature.cpp.}\par
{
References DEVICE_DISCONNECTED_C, getAddress(), and getTempC().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a7e3e2e23257aac6b6c896df205d5b3b5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getTempF\:DallasTemperature}
{\xe \v DallasTemperature\:getTempF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float DallasTemperature::getTempF (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 503 of file DallasTemperature.cpp.}\par
{
References getTemp(), and rawToFahrenheit().}\par
{
Referenced by getTempFByIndex().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_ace033fbd8e4c7e17c4bcd7ecc8f3ebea_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_ace033fbd8e4c7e17c4bcd7ecc8f3ebea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getTempFByIndex\:DallasTemperature}
{\xe \v DallasTemperature\:getTempFByIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float DallasTemperature::getTempFByIndex (uint8_t  {\i deviceIndex})}}
\par
{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 420 of file DallasTemperature.cpp.}\par
{
References COUNT_PER_C, COUNT_REMAIN, DEVICE_DISCONNECTED_F, DS18S20MODEL, getAddress(), getTempF(), TEMP_LSB, and TEMP_MSB.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a96318d36b313e1f4f413e2ed2b7501c7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getUserData\:DallasTemperature}
{\xe \v DallasTemperature\:getUserData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t DallasTemperature::getUserData (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 532 of file DallasTemperature.cpp.}\par
{
References HIGH_ALARM_TEMP, isConnected(), and LOW_ALARM_TEMP.}\par
{
Referenced by getUserDataByIndex(), and setUserData().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a3601e8ee63c4770b716817ed68664400_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a3601e8ee63c4770b716817ed68664400_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getUserDataByIndex\:DallasTemperature}
{\xe \v DallasTemperature\:getUserDataByIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t DallasTemperature::getUserDataByIndex (uint8_t  {\i deviceIndex})}}
\par
{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 545 of file DallasTemperature.cpp.}\par
{
References getAddress(), and getUserData().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a4af999e72b9c5b85430666ad90fa9644_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getWaitForConversion\:DallasTemperature}
{\xe \v DallasTemperature\:getWaitForConversion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::getWaitForConversion (void )}}
\par
{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 294 of file DallasTemperature.cpp.}\par
}
{\xe \v isConnected\:DallasTemperature}
{\xe \v DallasTemperature\:isConnected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::isConnected (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file DallasTemperature.cpp.}\par
{
Referenced by getResolution(), getTemp(), getUserData(), rawToFahrenheit(), setResolution(), and setUserData().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a19afa5e594de0ab6caa5a48a70650927_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isConnected\:DallasTemperature}
{\xe \v DallasTemperature\:isConnected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::isConnected (const uint8_t *  {\i deviceAddress}, uint8_t *  {\i scratchPad})}}
\par
{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file DallasTemperature.cpp.}\par
{
References OneWire::crc8(), readScratchPad(), and SCRATCHPAD_CRC.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a624f64b186c13927d4f74bd7c5b92c2e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isConversionAvailable\:DallasTemperature}
{\xe \v DallasTemperature\:isConversionAvailable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::isConversionAvailable (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 311 of file DallasTemperature.cpp.}\par
{
References readScratchPad().}\par
{
Referenced by requestTemperaturesByAddress().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_adaf460a3b8004218e97af7059d41053a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_adaf460a3b8004218e97af7059d41053a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isConversionComplete\:DallasTemperature}
{\xe \v DallasTemperature\:isConversionComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::isConversionComplete (void )}}
\par
{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 320 of file DallasTemperature.cpp.}\par
{
References OneWire::read_bit().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a9e92719781d3ead44b95964d59edd41d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isParasitePowerMode\:DallasTemperature}
{\xe \v DallasTemperature\:isParasitePowerMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::isParasitePowerMode (void )}}
\par
{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 508 of file DallasTemperature.cpp.}\par
}
{\xe \v rawToCelsius\:DallasTemperature}
{\xe \v DallasTemperature\:rawToCelsius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float DallasTemperature::rawToCelsius (int16_t  {\i raw}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 571 of file DallasTemperature.cpp.}\par
{
References DEVICE_DISCONNECTED_C, and DEVICE_DISCONNECTED_RAW.}\par
{
Referenced by getTempC().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a75accb4a56858189accda00e5eabb06e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v rawToFahrenheit\:DallasTemperature}
{\xe \v DallasTemperature\:rawToFahrenheit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float DallasTemperature::rawToFahrenheit (int16_t  {\i raw}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 581 of file DallasTemperature.cpp.}\par
{
References DEVICE_DISCONNECTED_C, DEVICE_DISCONNECTED_F, DEVICE_DISCONNECTED_RAW, HIGH_ALARM_TEMP, i, isConnected(), LOW_ALARM_TEMP, OneWire::read_bit(), OneWire::reset(), validAddress(), OneWire::write(), OneWire::write_bit(), and writeScratchPad().}\par
{
Referenced by getTempF().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a48bc1a4d0e33f1735964c22c8bd2f6fb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a48bc1a4d0e33f1735964c22c8bd2f6fb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readPowerSupply\:DallasTemperature}
{\xe \v DallasTemperature\:readPowerSupply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::readPowerSupply (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 169 of file DallasTemperature.cpp.}\par
{
References OneWire::read_bit(), READPOWERSUPPLY, OneWire::reset(), OneWire::select(), and OneWire::write().}\par
{
Referenced by begin().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_af6a28c1d1009dd6d010d97dffaf5942d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_af6a28c1d1009dd6d010d97dffaf5942d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readScratchPad\:DallasTemperature}
{\xe \v DallasTemperature\:readScratchPad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::readScratchPad (const uint8_t *  {\i deviceAddress}, uint8_t *  {\i scratchPad})}}
\par
{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file DallasTemperature.cpp.}\par
{
References i, OneWire::read(), READSCRATCH, OneWire::reset(), OneWire::select(), and OneWire::write().}\par
{
Referenced by isConnected(), and isConversionAvailable().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a2b55774207d0211fd679247a7137142b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a2b55774207d0211fd679247a7137142b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v requestTemperatures\:DallasTemperature}
{\xe \v DallasTemperature\:requestTemperatures}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DallasTemperature::requestTemperatures (void )}}
\par
{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 327 of file DallasTemperature.cpp.}\par
{
References OneWire::reset(), OneWire::skip(), STARTCONVO, and OneWire::write().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a5d28cff0d7e317c28e28c0f1a62fbe6d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v requestTemperaturesByAddress\:DallasTemperature}
{\xe \v DallasTemperature\:requestTemperaturesByAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::requestTemperaturesByAddress (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 342 of file DallasTemperature.cpp.}\par
{
References getResolution(), isConversionAvailable(), now(), OneWire::reset(), OneWire::select(), STARTCONVO, and OneWire::write().}\par
{
Referenced by requestTemperaturesByIndex().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_aee2a2abd5f8293df9a0a030b3e982c90_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_aee2a2abd5f8293df9a0a030b3e982c90_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v requestTemperaturesByIndex\:DallasTemperature}
{\xe \v DallasTemperature\:requestTemperaturesByIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::requestTemperaturesByIndex (uint8_t  {\i deviceIndex})}}
\par
{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 398 of file DallasTemperature.cpp.}\par
{
References getAddress(), and requestTemperaturesByAddress().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_ae9a7bf62321615519242d2421c8b349a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setCheckForConversion\:DallasTemperature}
{\xe \v DallasTemperature\:setCheckForConversion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DallasTemperature::setCheckForConversion (bool  {\i flag})}}
\par
{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 302 of file DallasTemperature.cpp.}\par
}
{\xe \v setOneWire\:DallasTemperature}
{\xe \v DallasTemperature\:setOneWire}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DallasTemperature::setOneWire ({\b OneWire} *  {\i _oneWire})}}
\par
{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file DallasTemperature.cpp.}\par
{
Referenced by DallasTemperature().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_af985bf5f9ed6857424e8a9532eaf5e2f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setResolution\:DallasTemperature}
{\xe \v DallasTemperature\:setResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DallasTemperature::setResolution (uint8_t  {\i newResolution})}}
\par
{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file DallasTemperature.cpp.}\par
{
References getAddress(), and i.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a43363ee4b227f1ecf9c33cd4e072c0c9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setResolution\:DallasTemperature}
{\xe \v DallasTemperature\:setResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::setResolution (const uint8_t *  {\i deviceAddress}, uint8_t  {\i newResolution}, bool  {\i skipGlobalBitResolutionCalculation} = {\f2 false})}}
\par
{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 198 of file DallasTemperature.cpp.}\par
{
References CONFIGURATION, DS18S20MODEL, getAddress(), getResolution(), i, isConnected(), TEMP_10_BIT, TEMP_11_BIT, TEMP_12_BIT, TEMP_9_BIT, and writeScratchPad().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a394897437dfb8de4c8fd2198a1d1c356_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setUserData\:DallasTemperature}
{\xe \v DallasTemperature\:setUserData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DallasTemperature::setUserData (const uint8_t *  {\i deviceAddress}, int16_t  {\i data})}}
\par
{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 518 of file DallasTemperature.cpp.}\par
{
References getUserData(), HIGH_ALARM_TEMP, isConnected(), LOW_ALARM_TEMP, and writeScratchPad().}\par
{
Referenced by setUserDataByIndex().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a0ed69b03ed848936ea0c8deea0e5c2ba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a0ed69b03ed848936ea0c8deea0e5c2ba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setUserDataByIndex\:DallasTemperature}
{\xe \v DallasTemperature\:setUserDataByIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DallasTemperature::setUserDataByIndex (uint8_t  {\i deviceIndex}, int16_t  {\i data})}}
\par
{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 552 of file DallasTemperature.cpp.}\par
{
References getAddress(), and setUserData().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a65ae6994218200e92ce43bffd122d46b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setWaitForConversion\:DallasTemperature}
{\xe \v DallasTemperature\:setWaitForConversion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DallasTemperature::setWaitForConversion (bool  {\i flag})}}
\par
{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 289 of file DallasTemperature.cpp.}\par
}
{\xe \v toCelsius\:DallasTemperature}
{\xe \v DallasTemperature\:toCelsius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float DallasTemperature::toCelsius (float  {\i fahrenheit}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 566 of file DallasTemperature.cpp.}\par
}
{\xe \v toFahrenheit\:DallasTemperature}
{\xe \v DallasTemperature\:toFahrenheit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float DallasTemperature::toFahrenheit (float  {\i celsius}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 561 of file DallasTemperature.cpp.}\par
}
{\xe \v validAddress\:DallasTemperature}
{\xe \v DallasTemperature\:validAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::validAddress (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file DallasTemperature.cpp.}\par
{
References OneWire::crc8().}\par
{
Referenced by begin(), getAddress(), and rawToFahrenheit().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a71e4744b8d7b2f1c05a96cd158c83007_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a71e4744b8d7b2f1c05a96cd158c83007_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v validFamily\:DallasTemperature}
{\xe \v DallasTemperature\:validFamily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DallasTemperature::validFamily (const uint8_t *  {\i deviceAddress})}}
\par
{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file DallasTemperature.cpp.}\par
{
References DS1822MODEL, DS1825MODEL, DS18B20MODEL, and DS18S20MODEL.}\par
}
{\xe \v writeScratchPad\:DallasTemperature}
{\xe \v DallasTemperature\:writeScratchPad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DallasTemperature::writeScratchPad (const uint8_t *  {\i deviceAddress}, const uint8_t *  {\i scratchPad})}}
\par
{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file DallasTemperature.cpp.}\par
{
References CONFIGURATION, COPYSCRATCH, DS18S20MODEL, HIGH_ALARM_TEMP, LOW_ALARM_TEMP, OneWire::reset(), OneWire::select(), OneWire::write(), and WRITESCRATCH.}\par
{
Referenced by rawToFahrenheit(), setResolution(), and setUserData().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a74c275dabf103f268c5a271d379dcb7e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_dallas_temperature_a74c275dabf103f268c5a271d379dcb7e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Arduino-Temperature-Control-Library/{\b DallasTemperature.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Arduino-Temperature-Control-Library/{\b DallasTemperature.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DateTime Class Reference\par \pard\plain 
{\tc\tcl2 \v DateTime}
{\xe \v DateTime}
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
\par
{
{\f2 #include <RTClib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DateTime} (uint32_t t=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DateTime} (uint16_t {\b year}, uint8_t {\b month}, uint8_t {\b day}, uint8_t {\b hour}=0, uint8_t min=0, uint8_t sec=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DateTime} (const char *date, const char *time)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b year} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b month} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b day} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b hour} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b minute} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b second} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b dayOfWeek} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b secondstime} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b unixtime} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b toString} (char *buf, int maxlen) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b operator+=} (uint32_t)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b yOff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b m}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b d}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b hh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b mm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b ss}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 8 of file RTClib.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v DateTime\:DateTime}
{\xe \v DateTime\:DateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DateTime::DateTime (uint32_t  {\i t} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file RTClib.cpp.}\par
{
References d, hh, m, mm, pgm_read_byte, SECONDS_FROM_1970_TO_2000, ss, and yOff.}\par
{
Referenced by operator+=(), and RTC_Millis::RTC_Millis().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_af42f356752ec542faf262f485bd44a0b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v DateTime\:DateTime}
{\xe \v DateTime\:DateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DateTime::DateTime (uint16_t  {\i year}, uint8_t  {\i month}, uint8_t  {\i day}, uint8_t  {\i hour} = {\f2 0}, uint8_t  {\i min} = {\f2 0}, uint8_t  {\i sec} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file RTClib.cpp.}\par
{
References d, hh, m, mm, ss, year(), and yOff.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_aad62a6709a1e65e6860b1efaf8c347e9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v DateTime\:DateTime}
{\xe \v DateTime\:DateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DateTime::DateTime (const char *  {\i date}, const char *  {\i time})}}
\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file RTClib.cpp.}\par
{
References d, hh, m, mm, ss, and yOff.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v day\:DateTime}
{\xe \v DateTime\:day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::day () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file RTClib.h.}\par
{
References d.}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS3234::adjust(), RTC_DS3231::adjust(), and dayOfWeek().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a0cedf8c399d4a38df0b8b8c4049bbac4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v dayOfWeek\:DateTime}
{\xe \v DateTime\:dayOfWeek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::dayOfWeek () const}}
\par
{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 142 of file RTClib.cpp.}\par
{
References d, day(), m, and yOff.}\par
{
Referenced by RTC_DS3234::adjust(), and second().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a4f3e0999a04238348adf390c29b889f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a4f3e0999a04238348adf390c29b889f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v hour\:DateTime}
{\xe \v DateTime\:hour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::hour () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file RTClib.h.}\par
{
References hh.}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS3234::adjust(), and RTC_DS3231::adjust().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a71816802ff06e06d53ae3e7f420f0196_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v minute\:DateTime}
{\xe \v DateTime\:minute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::minute () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file RTClib.h.}\par
{
References mm.}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS3234::adjust(), and RTC_DS3231::adjust().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a9990c5958c55b3aa7018e21df9d490e5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v month\:DateTime}
{\xe \v DateTime\:month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::month () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file RTClib.h.}\par
{
References m.}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS3234::adjust(), and RTC_DS3231::adjust().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a58beb18aec346e7081d02a2962032a43_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v operator+=\:DateTime}
{\xe \v DateTime\:operator+=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DateTime::operator+= (uint32_t  {\i additional})}}
\par
{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file RTClib.cpp.}\par
{
References DateTime(), and unixtime().}\par
{
Referenced by second().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a87adbc2ee0bfcb9417ffeadca2e3f375_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a87adbc2ee0bfcb9417ffeadca2e3f375_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v second\:DateTime}
{\xe \v DateTime\:second}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::second () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file RTClib.h.}\par
{
References dayOfWeek(), operator+=(), secondstime(), ss, toString(), and unixtime().}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS3234::adjust(), and RTC_DS3231::adjust().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a9b9a89a83e823b4a55e731d2b2d82f60_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a9b9a89a83e823b4a55e731d2b2d82f60_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v secondstime\:DateTime}
{\xe \v DateTime\:secondstime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long DateTime::secondstime () const}}
\par
{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by second().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a6dd7642f7f7a2d7ff7aec465bbc78187_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v toString\:DateTime}
{\xe \v DateTime\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * DateTime::toString (char *  {\i buf}, int  {\i maxlen}) const}}
\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 161 of file RTClib.cpp.}\par
{
References d, hh, m, mm, months, ss, and yOff.}\par
{
Referenced by second().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a839ec24c6bec99875ac7336deed49ac7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v unixtime\:DateTime}
{\xe \v DateTime\:unixtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t DateTime::unixtime (void ) const}}
\par
{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file RTClib.cpp.}\par
{
References d, hh, m, mm, SECONDS_FROM_1970_TO_2000, ss, and yOff.}\par
{
Referenced by RTC_Millis::adjust(), operator+=(), and second().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_afb578f26cf9eddc7d6a0891021ee77f3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v year\:DateTime}
{\xe \v DateTime\:year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t DateTime::year () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file RTClib.h.}\par
{
References yOff.}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS3234::adjust(), RTC_DS3231::adjust(), and DateTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_date_time_a019cf3799acc8c9a44fdc501fce33881_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v d\:DateTime}
{\xe \v DateTime\:d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::d{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file RTClib.h.}\par
{
Referenced by DateTime(), day(), dayOfWeek(), toString(), and unixtime().}\par
}
{\xe \v hh\:DateTime}
{\xe \v DateTime\:hh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::hh{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file RTClib.h.}\par
{
Referenced by DateTime(), hour(), toString(), and unixtime().}\par
}
{\xe \v m\:DateTime}
{\xe \v DateTime\:m}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::m{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file RTClib.h.}\par
{
Referenced by DateTime(), dayOfWeek(), month(), toString(), and unixtime().}\par
}
{\xe \v mm\:DateTime}
{\xe \v DateTime\:mm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::mm{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file RTClib.h.}\par
{
Referenced by DateTime(), minute(), toString(), and unixtime().}\par
}
{\xe \v ss\:DateTime}
{\xe \v DateTime\:ss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::ss{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file RTClib.h.}\par
{
Referenced by DateTime(), second(), toString(), and unixtime().}\par
}
{\xe \v yOff\:DateTime}
{\xe \v DateTime\:yOff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DateTime::yOff{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file RTClib.h.}\par
{
Referenced by DateTime(), dayOfWeek(), toString(), unixtime(), and year().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTClib.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTClib.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DS3231 Class Reference\par \pard\plain 
{\tc\tcl2 \v DS3231}
{\xe \v DS3231}
{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
\par
{
{\f2 #include <DS3231.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b begin} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDateTime} (uint16_t {\b year}, uint8_t {\b month}, uint8_t {\b day}, uint8_t {\b hour}, uint8_t {\b minute}, uint8_t {\b second})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDateTime} (uint32_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDateTime} (const char *date, const char *time)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RTCDateTime} {\b getDateTime} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b isReady} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DS3231_sqw_t} {\b getOutput} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOutput} ({\b DS3231_sqw_t} mode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enableOutput} (bool enabled)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isOutput} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enable32kHz} (bool enabled)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is32kHz} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b forceConversion} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readTemperature} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarm1} (uint8_t dydw, uint8_t {\b hour}, uint8_t {\b minute}, uint8_t {\b second}, {\b DS3231_alarm1_t} mode, bool armed=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RTCAlarmTime} {\b getAlarm1} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DS3231_alarm1_t} {\b getAlarmType1} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isAlarm1} (bool clear=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b armAlarm1} (bool armed)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isArmed1} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearAlarm1} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarm2} (uint8_t dydw, uint8_t {\b hour}, uint8_t {\b minute}, {\b DS3231_alarm2_t} mode, bool armed=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RTCAlarmTime} {\b getAlarm2} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DS3231_alarm2_t} {\b getAlarmType2} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isAlarm2} (bool clear=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b armAlarm2} (bool armed)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isArmed2} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearAlarm2} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBattery} (bool timeBattery, bool squareBattery)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b dateFormat} (const char *dateFormat, {\b RTCDateTime} dt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b dateFormat} (const char *dateFormat, {\b RTCAlarmTime} dt)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 89 of file DS3231.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v armAlarm1\:DS3231}
{\xe \v DS3231\:armAlarm1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::armAlarm1 (bool  {\i armed})}}
\par
{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 728 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
{
Referenced by setAlarm1().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_ad8333b85e1bcbf40e471e67ed63cc4bc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v armAlarm2\:DS3231}
{\xe \v DS3231\:armAlarm2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::armAlarm2 (bool  {\i armed})}}
\par
{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 894 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
{
Referenced by setAlarm2().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a40cab51de53184c4be9c68cc41b9468c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v begin\:DS3231}
{\xe \v DS3231\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DS3231::begin (void )}}
\par
{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file DS3231.cpp.}\par
{
References RTCDateTime::day, RTCDateTime::dayOfWeek, RTCDateTime::hour, RTCDateTime::minute, RTCDateTime::month, RTCDateTime::second, setBattery(), RTCDateTime::unixtime, Wire, and RTCDateTime::year.}\par
{
Referenced by setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a1b6b23f76ae2a8c27f78e946608467ae_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a1b6b23f76ae2a8c27f78e946608467ae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v clearAlarm1\:DS3231}
{\xe \v DS3231\:clearAlarm1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::clearAlarm1 (void )}}
\par
{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 752 of file DS3231.cpp.}\par
{
References DS3231_REG_STATUS.}\par
{
Referenced by isAlarm1(), and setAlarm1().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_aad73bcd32141177f36dbf0dc10feb2fd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v clearAlarm2\:DS3231}
{\xe \v DS3231\:clearAlarm2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::clearAlarm2 (void )}}
\par
{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 920 of file DS3231.cpp.}\par
{
References DS3231_REG_STATUS.}\par
{
Referenced by isAlarm2(), and setAlarm2().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a950e95ad7dd8658037a3a4d08e83cf64_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v dateFormat\:DS3231}
{\xe \v DS3231\:dateFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * DS3231::dateFormat (const char *  {\i dateFormat}, {\b RTCDateTime}  {\i dt})}}
\par
{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file DS3231.cpp.}\par
{
References RTCDateTime::day, RTCDateTime::dayOfWeek, RTCDateTime::hour, RTCDateTime::minute, RTCDateTime::month, RTCDateTime::second, RTCDateTime::unixtime, and RTCDateTime::year.}\par
}
{\xe \v dateFormat\:DS3231}
{\xe \v DS3231\:dateFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * DS3231::dateFormat (const char *  {\i dateFormat}, {\b RTCAlarmTime}  {\i dt})}}
\par
{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 299 of file DS3231.cpp.}\par
{
References RTCAlarmTime::day, RTCAlarmTime::hour, RTCAlarmTime::minute, and RTCAlarmTime::second.}\par
}
{\xe \v enable32kHz\:DS3231}
{\xe \v DS3231\:enable32kHz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::enable32kHz (bool  {\i enabled})}}
\par
{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 501 of file DS3231.cpp.}\par
{
References DS3231_REG_STATUS.}\par
}
{\xe \v enableOutput\:DS3231}
{\xe \v DS3231\:enableOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::enableOutput (bool  {\i enabled})}}
\par
{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 428 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
}
{\xe \v forceConversion\:DS3231}
{\xe \v DS3231\:forceConversion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::forceConversion (void )}}
\par
{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 525 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
{
Referenced by readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_ad398fd513aae24b219d19574e20da550_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getAlarm1\:DS3231}
{\xe \v DS3231\:getAlarm1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RTCAlarmTime} DS3231::getAlarm1 (void )}}
\par
{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 565 of file DS3231.cpp.}\par
{
References RTCAlarmTime::day, DS3231_ADDRESS, DS3231_REG_ALARM_1, RTCAlarmTime::hour, i, RTCAlarmTime::minute, RTCAlarmTime::second, and Wire.}\par
}
{\xe \v getAlarm2\:DS3231}
{\xe \v DS3231\:getAlarm2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RTCAlarmTime} DS3231::getAlarm2 (void )}}
\par
{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 762 of file DS3231.cpp.}\par
{
References RTCAlarmTime::day, DS3231_ADDRESS, DS3231_REG_ALARM_2, RTCAlarmTime::hour, i, RTCAlarmTime::minute, RTCAlarmTime::second, and Wire.}\par
}
{\xe \v getAlarmType1\:DS3231}
{\xe \v DS3231\:getAlarmType1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DS3231_alarm1_t} DS3231::getAlarmType1 (void )}}
\par
{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 601 of file DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_ALARM_1, i, and Wire.}\par
}
{\xe \v getAlarmType2\:DS3231}
{\xe \v DS3231\:getAlarmType2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DS3231_alarm2_t} DS3231::getAlarmType2 (void )}}
\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 798 of file DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_ALARM_2, i, and Wire.}\par
}
{\xe \v getDateTime\:DS3231}
{\xe \v DS3231\:getDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RTCDateTime} DS3231::getDateTime (void )}}
\par
{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 384 of file DS3231.cpp.}\par
{
References RTCDateTime::day, RTCDateTime::dayOfWeek, DS3231_ADDRESS, DS3231_REG_TIME, RTCDateTime::hour, i, RTCDateTime::minute, RTCDateTime::month, RTCDateTime::second, RTCDateTime::unixtime, Wire, and RTCDateTime::year.}\par
{
Referenced by readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_adc4bc3149377fef827a7e504264fbd40_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getOutput\:DS3231}
{\xe \v DS3231\:getOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DS3231_sqw_t} DS3231::getOutput (void )}}
\par
{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 489 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
}
{\xe \v is32kHz\:DS3231}
{\xe \v DS3231\:is32kHz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DS3231::is32kHz (void )}}
\par
{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 513 of file DS3231.cpp.}\par
{
References DS3231_REG_STATUS.}\par
}
{\xe \v isAlarm1\:DS3231}
{\xe \v DS3231\:isAlarm1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DS3231::isAlarm1 (bool  {\i clear} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 713 of file DS3231.cpp.}\par
{
References clearAlarm1(), and DS3231_REG_STATUS.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a9e07f99282167c3e799bef2d2d163e17_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isAlarm2\:DS3231}
{\xe \v DS3231\:isAlarm2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DS3231::isAlarm2 (bool  {\i clear} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 931 of file DS3231.cpp.}\par
{
References clearAlarm2(), RTCDateTime::day, day(), DS3231_ADDRESS, DS3231_REG_STATUS, RTCDateTime::hour, hour(), i, RTCDateTime::minute, RTCDateTime::month, month(), pgm_read_byte, RTCDateTime::second, Wire, RTCDateTime::year, and year().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_ace5ee2a9d9cc6b6ecb16ca749514d2a3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isArmed1\:DS3231}
{\xe \v DS3231\:isArmed1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DS3231::isArmed1 (void )}}
\par
{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 744 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
}
{\xe \v isArmed2\:DS3231}
{\xe \v DS3231\:isArmed2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DS3231::isArmed2 (void )}}
\par
{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 910 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
}
{\xe \v isOutput\:DS3231}
{\xe \v DS3231\:isOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DS3231::isOutput (void )}}
\par
{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 465 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
}
{\xe \v isReady\:DS3231}
{\xe \v DS3231\:isReady}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t DS3231::isReady (void )}}
\par
{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 423 of file DS3231.cpp.}\par
}
{\xe \v readTemperature\:DS3231}
{\xe \v DS3231\:readTemperature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float DS3231::readTemperature (void )}}
\par
{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 538 of file DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_TEMPERATURE, and Wire.}\par
{
Referenced by readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a82074e0d3f0a4a646fc14f1afcb80448_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAlarm1\:DS3231}
{\xe \v DS3231\:setAlarm1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::setAlarm1 (uint8_t  {\i dydw}, uint8_t  {\i hour}, uint8_t  {\i minute}, uint8_t  {\i second}, {\b DS3231_alarm1_t}  {\i mode}, bool  {\i armed} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 638 of file DS3231.cpp.}\par
{
References armAlarm1(), clearAlarm1(), DS3231_ADDRESS, DS3231_EVERY_SECOND, DS3231_MATCH_DT_H_M_S, DS3231_MATCH_DY_H_M_S, DS3231_MATCH_H_M_S, DS3231_MATCH_M_S, DS3231_MATCH_S, DS3231_REG_ALARM_1, and Wire.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a23cea53349c55fba93c706b6e263e574_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAlarm2\:DS3231}
{\xe \v DS3231\:setAlarm2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::setAlarm2 (uint8_t  {\i dydw}, uint8_t  {\i hour}, uint8_t  {\i minute}, {\b DS3231_alarm2_t}  {\i mode}, bool  {\i armed} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 834 of file DS3231.cpp.}\par
{
References armAlarm2(), clearAlarm2(), DS3231_ADDRESS, DS3231_EVERY_MINUTE, DS3231_MATCH_DT_H_M, DS3231_MATCH_DY_H_M, DS3231_MATCH_H_M, DS3231_MATCH_M, DS3231_REG_ALARM_2, and Wire.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_ad505857c3594da9a4c159f607845364e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setBattery\:DS3231}
{\xe \v DS3231\:setBattery}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::setBattery (bool  {\i timeBattery}, bool  {\i squareBattery})}}
\par
{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 440 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
{
Referenced by begin().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a7a92e389dd214168bb73fcf2d1b88e8c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setDateTime\:DS3231}
{\xe \v DS3231\:setDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::setDateTime (uint16_t  {\i year}, uint8_t  {\i month}, uint8_t  {\i day}, uint8_t  {\i hour}, uint8_t  {\i minute}, uint8_t  {\i second})}}
\par
{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_TIME, and Wire.}\par
{
Referenced by read_GPS(), and setDateTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a15eb3576feaa3535415e9b82367c344c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setDateTime\:DS3231}
{\xe \v DS3231\:setDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::setDateTime (uint32_t  {\i t})}}
\par
{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file DS3231.cpp.}\par
{
References day(), hour(), minute(), month(), pgm_read_byte, second(), setDateTime(), and year().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_ac8ccbb72f7cfbb27df1558a8896ef236_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setDateTime\:DS3231}
{\xe \v DS3231\:setDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::setDateTime (const char *  {\i date}, const char *  {\i time})}}
\par
{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file DS3231.cpp.}\par
{
References day(), hour(), minute(), month(), second(), setDateTime(), and year().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_d_s3231_a95352ab8a40b383e4680e489ec3ee68a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setOutput\:DS3231}
{\xe \v DS3231\:setOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void DS3231::setOutput ({\b DS3231_sqw_t}  {\i mode})}}
\par
{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 477 of file DS3231.cpp.}\par
{
References DS3231_REG_CONTROL.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Arduino-DS3231-master/{\b DS3231.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Arduino-DS3231-master/{\b DS3231.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EthernetClientStream Class Reference\par \pard\plain 
{\tc\tcl2 \v EthernetClientStream}
{\xe \v EthernetClientStream}
{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
\par
{
{\f2 #include <EthernetClientStream.h>}}\par
Inheritance diagram for EthernetClientStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ethernet_client_stream__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for EthernetClientStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ethernet_client_stream__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EthernetClientStream} (Client &client, IPAddress localip, IPAddress ip, const char *host, uint16_t port)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b available} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b read} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b peek} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b flush} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b write} (uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b maintain} (IPAddress localip)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 31 of file EthernetClientStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EthernetClientStream\:EthernetClientStream}
{\xe \v EthernetClientStream\:EthernetClientStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EthernetClientStream::EthernetClientStream (Client &  {\i client}, IPAddress  {\i localip}, IPAddress  {\i ip}, const char *  {\i host}, uint16_t  {\i port})}}
\par
{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file EthernetClientStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v available\:EthernetClientStream}
{\xe \v EthernetClientStream\:available}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int EthernetClientStream::available (void )}}
\par
{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file EthernetClientStream.h.}\par
{
References maintain().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ethernet_client_stream_af791449a05185d079c66a3ce7ceb8867_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v flush\:EthernetClientStream}
{\xe \v EthernetClientStream\:flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EthernetClientStream::flush (void )}}
\par
{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file EthernetClientStream.h.}\par
{
References maintain().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ethernet_client_stream_a6bfd307971b4f6936cbb00eb04276e7f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v maintain\:EthernetClientStream}
{\xe \v EthernetClientStream\:maintain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EthernetClientStream::maintain (IPAddress  {\i localip})}}
\par
{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file EthernetClientStream.h.}\par
{
References DEBUG_PRINTLN, maintain(), and MILLIS_RECONNECT.}\par
{
Referenced by available(), flush(), maintain(), peek(), read(), and write().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ethernet_client_stream_a2cb7fc9f588d352ad57527e7189196ea_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ethernet_client_stream_a2cb7fc9f588d352ad57527e7189196ea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v peek\:EthernetClientStream}
{\xe \v EthernetClientStream\:peek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int EthernetClientStream::peek (void )}}
\par
{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file EthernetClientStream.h.}\par
{
References maintain().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ethernet_client_stream_ab48794c4ecdcf568ca915c54849e33d3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v read\:EthernetClientStream}
{\xe \v EthernetClientStream\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int EthernetClientStream::read (void )}}
\par
{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file EthernetClientStream.h.}\par
{
References maintain().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ethernet_client_stream_ab09d7fee2e6e57a4ae63227226991673_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v write\:EthernetClientStream}
{\xe \v EthernetClientStream\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t EthernetClientStream::write (uint8_t  {\i c})}}
\par
{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file EthernetClientStream.h.}\par
{
References maintain().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ethernet_client_stream_aca0236433d48beb3ada438dbdb425bbd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/utility/{\b EthernetClientStream.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FilterDerivative Struct Reference\par \pard\plain 
{\tc\tcl2 \v FilterDerivative}
{\xe \v FilterDerivative}
{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
\par
{
{\f2 #include <FilterDerivative.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b input} (float inVal)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b output} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b LastUS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b LastInput}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Derivative}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 5 of file FilterDerivative.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v input\:FilterDerivative}
{\xe \v FilterDerivative\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterDerivative::input (float  {\i inVal})}}
\par
{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 4 of file FilterDerivative.cpp.}\par
{
References Derivative, LastInput, LastUS, and output().}\par
{
Referenced by testFilterDerivative().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_derivative_a2251c16508ad353fc0573b3f8ddcdc8f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_derivative_a2251c16508ad353fc0573b3f8ddcdc8f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v output\:FilterDerivative}
{\xe \v FilterDerivative\:output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterDerivative::output ()}}
\par
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file FilterDerivative.cpp.}\par
{
References Derivative.}\par
{
Referenced by input(), and testFilterDerivative().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_derivative_a0794f9bc873d2bfaa9ee974e21b6a02d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Derivative\:FilterDerivative}
{\xe \v FilterDerivative\:Derivative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterDerivative::Derivative}}
\par
{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 9 of file FilterDerivative.h.}\par
{
Referenced by input(), and output().}\par
}
{\xe \v LastInput\:FilterDerivative}
{\xe \v FilterDerivative\:LastInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterDerivative::LastInput}}
\par
{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 7 of file FilterDerivative.h.}\par
{
Referenced by input().}\par
}
{\xe \v LastUS\:FilterDerivative}
{\xe \v FilterDerivative\:LastUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long FilterDerivative::LastUS}}
\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 6 of file FilterDerivative.h.}\par
{
Referenced by input().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b FilterDerivative.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b FilterDerivative.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FilterOnePole Struct Reference\par \pard\plain 
{\tc\tcl2 \v FilterOnePole}
{\xe \v FilterOnePole}
{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
\par
{
{\f2 #include <FilterOnePole.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FilterOnePole} ({\b FILTER_TYPE} ft={\b LOWPASS}, float fc=1.0, float initialValue=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFilter} ({\b FILTER_TYPE} ft, float tauS, float initialValue)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFrequency} (float newFrequency)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTau} (float newTau)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b input} (float inVal)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b output} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b test} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setToNewValue} (float newVal)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FILTER_TYPE} {\b FT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b TauUS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b TauSamps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Y}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Ylast}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b X}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b ElapsedUS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b LastUS}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 17 of file FilterOnePole.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FilterOnePole\:FilterOnePole}
{\xe \v FilterOnePole\:FilterOnePole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FilterOnePole::FilterOnePole ({\b FILTER_TYPE}  {\i ft} = {\f2 {\b LOWPASS}}, float  {\i fc} = {\f2 1.0}, float  {\i initialValue} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 4 of file FilterOnePole.cpp.}\par
{
References setFilter().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_adc98d3d03b508f5796c3971c9d0c1f6a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v input\:FilterOnePole}
{\xe \v FilterOnePole\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePole::input (float  {\i inVal})}}
\par
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file FilterOnePole.cpp.}\par
{
References ElapsedUS, LastUS, output(), TauSamps, TauUS, X, Y, and Ylast.}\par
{
Referenced by test().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_a90ad61a0bbbf2b6db7c6b281f2747c24_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_a90ad61a0bbbf2b6db7c6b281f2747c24_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v output\:FilterOnePole}
{\xe \v FilterOnePole\:output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePole::output ()}}
\par
{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file FilterOnePole.cpp.}\par
{
References DIFFERENTIATOR, FT, HIGHPASS, INTEGRATOR, LOWPASS, TauUS, X, and Y.}\par
{
Referenced by input(), FilterOnePoleCascade::input(), and test().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_a571c2df141dab2b1072afcd192623f76_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v print\:FilterOnePole}
{\xe \v FilterOnePole\:print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterOnePole::print ()}}
\par
{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file FilterOnePole.cpp.}\par
{
References ElapsedUS, TauSamps, TauUS, X, Y, and Ylast.}\par
}
{\xe \v setFilter\:FilterOnePole}
{\xe \v FilterOnePole\:setFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterOnePole::setFilter ({\b FILTER_TYPE}  {\i ft}, float  {\i tauS}, float  {\i initialValue})}}
\par
{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 8 of file FilterOnePole.cpp.}\par
{
References FT, LastUS, setFrequency(), X, Y, and Ylast.}\par
{
Referenced by FilterOnePole().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_a7fe2658a2bf6d171895586d0bb9fba8f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_a7fe2658a2bf6d171895586d0bb9fba8f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setFrequency\:FilterOnePole}
{\xe \v FilterOnePole\:setFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterOnePole::setFrequency (float  {\i newFrequency})}}
\par
{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file FilterOnePole.cpp.}\par
{
References setTau().}\par
{
Referenced by setFilter().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_a258a86ec2ee6db608f5839b3b2995185_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_a258a86ec2ee6db608f5839b3b2995185_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setTau\:FilterOnePole}
{\xe \v FilterOnePole\:setTau}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterOnePole::setTau (float  {\i newTau})}}
\par
{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file FilterOnePole.cpp.}\par
{
References TauUS.}\par
{
Referenced by setFrequency().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_a90433addfb2a5509e7ace6c4d5da8fe9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setToNewValue\:FilterOnePole}
{\xe \v FilterOnePole\:setToNewValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterOnePole::setToNewValue (float  {\i newVal})}}
\par
{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file FilterOnePole.cpp.}\par
{
References X, Y, and Ylast.}\par
{
Referenced by FilterOnePoleCascade::FilterOnePoleCascade().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_ad7393515a5f4d972714321a3a2ab7fdd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v test\:FilterOnePole}
{\xe \v FilterOnePole\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterOnePole::test ()}}
\par
{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file FilterOnePole.cpp.}\par
{
References HIGHPASS, input(), LOWPASS, now(), and output().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_a5b54248319d02b3f15d93e6333339389_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ElapsedUS\:FilterOnePole}
{\xe \v FilterOnePole\:ElapsedUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePole::ElapsedUS}}
\par
{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file FilterOnePole.h.}\par
{
Referenced by input(), and print().}\par
}
{\xe \v FT\:FilterOnePole}
{\xe \v FilterOnePole\:FT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FILTER_TYPE} FilterOnePole::FT}}
\par
{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 18 of file FilterOnePole.h.}\par
{
Referenced by output(), and setFilter().}\par
}
{\xe \v LastUS\:FilterOnePole}
{\xe \v FilterOnePole\:LastUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long FilterOnePole::LastUS}}
\par
{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file FilterOnePole.h.}\par
{
Referenced by input(), and setFilter().}\par
}
{\xe \v TauSamps\:FilterOnePole}
{\xe \v FilterOnePole\:TauSamps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePole::TauSamps}}
\par
{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file FilterOnePole.h.}\par
{
Referenced by input(), and print().}\par
}
{\xe \v TauUS\:FilterOnePole}
{\xe \v FilterOnePole\:TauUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePole::TauUS}}
\par
{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file FilterOnePole.h.}\par
{
Referenced by input(), output(), print(), and setTau().}\par
}
{\xe \v X\:FilterOnePole}
{\xe \v FilterOnePole\:X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePole::X}}
\par
{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 26 of file FilterOnePole.h.}\par
{
Referenced by input(), output(), print(), setFilter(), and setToNewValue().}\par
}
{\xe \v Y\:FilterOnePole}
{\xe \v FilterOnePole\:Y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePole::Y}}
\par
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file FilterOnePole.h.}\par
{
Referenced by input(), output(), print(), setFilter(), and setToNewValue().}\par
}
{\xe \v Ylast\:FilterOnePole}
{\xe \v FilterOnePole\:Ylast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePole::Ylast}}
\par
{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file FilterOnePole.h.}\par
{
Referenced by input(), print(), setFilter(), and setToNewValue().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b FilterOnePole.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b FilterOnePole.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FilterOnePoleCascade Struct Reference\par \pard\plain 
{\tc\tcl2 \v FilterOnePoleCascade}
{\xe \v FilterOnePoleCascade}
{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
\par
{
{\f2 #include <FilterOnePole.h>}}\par
Collaboration diagram for FilterOnePoleCascade:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_cascade__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FilterOnePoleCascade} (float riseTime=1.0, float initialValue=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRiseTime} (float riseTime)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setToNewValue} (float newVal)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b input} (float inVal)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b output} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b test} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FilterOnePole} {\b Pole1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FilterOnePole} {\b Pole2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 55 of file FilterOnePole.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FilterOnePoleCascade\:FilterOnePoleCascade}
{\xe \v FilterOnePoleCascade\:FilterOnePoleCascade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FilterOnePoleCascade::FilterOnePoleCascade (float  {\i riseTime} = {\f2 1.0}, float  {\i initialValue} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 128 of file FilterOnePole.cpp.}\par
{
References FilterOnePole::setToNewValue().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_cascade_a57f396fd01e54c8a6f3d3a6213b4d5a6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v input\:FilterOnePoleCascade}
{\xe \v FilterOnePoleCascade\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePoleCascade::input (float  {\i inVal})}}
\par
{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file FilterOnePole.cpp.}\par
{
References FilterOnePole::output().}\par
{
Referenced by RunningStatistics::input(), and test().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_cascade_ae35052126bde0f0f197317b2ad003d26_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_cascade_ae35052126bde0f0f197317b2ad003d26_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v output\:FilterOnePoleCascade}
{\xe \v FilterOnePoleCascade\:output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterOnePoleCascade::output ()}}
\par
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file FilterOnePole.cpp.}\par
{
Referenced by RunningStatistics::mean(), test(), and RunningStatistics::variance().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_cascade_ae8ba6b966183057560bb0d84e3ea549a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setRiseTime\:FilterOnePoleCascade}
{\xe \v FilterOnePoleCascade\:setRiseTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterOnePoleCascade::setRiseTime (float  {\i riseTime})}}
\par
{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file FilterOnePole.cpp.}\par
{
Referenced by RunningStatistics::setWindowSecs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_cascade_a06aed75defb8dc7cd252436944ca0baf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setToNewValue\:FilterOnePoleCascade}
{\xe \v FilterOnePoleCascade\:setToNewValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterOnePoleCascade::setToNewValue (float  {\i newVal})}}
\par
{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file FilterOnePole.cpp.}\par
{
Referenced by RunningStatistics::setInitialValue(), and test().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_cascade_a1bcac6613d187073873a825d9826ed82_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v test\:FilterOnePoleCascade}
{\xe \v FilterOnePoleCascade\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterOnePoleCascade::test ()}}
\par
{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 155 of file FilterOnePole.cpp.}\par
{
References i, input(), now(), output(), and setToNewValue().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_one_pole_cascade_a48b7253c9eec2765bce755b6fc985e34_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Pole1\:FilterOnePoleCascade}
{\xe \v FilterOnePoleCascade\:Pole1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FilterOnePole} FilterOnePoleCascade::Pole1}}
\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file FilterOnePole.h.}\par
}
{\xe \v Pole2\:FilterOnePoleCascade}
{\xe \v FilterOnePoleCascade\:Pole2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FilterOnePole} FilterOnePoleCascade::Pole2}}
\par
{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file FilterOnePole.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b FilterOnePole.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b FilterOnePole.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FilterTwoPole Struct Reference\par \pard\plain 
{\tc\tcl2 \v FilterTwoPole}
{\xe \v FilterTwoPole}
{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
\par
{
{\f2 #include <FilterTwoPole.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FilterTwoPole} (float frequency0=1, float qualityFactor=1, float xInit=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setQ} (float qualityFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFrequency0} (float f)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAsFilter} ({\b OSCILLATOR_TYPE} ft, float frequency3db, float initialValue=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b input} (float drive=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b output} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getMaxAmp} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b test} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b X}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Vprev}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Vavg}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Fprev}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b Q}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b W0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsHighpass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b LastTimeUS}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 31 of file FilterTwoPole.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FilterTwoPole\:FilterTwoPole}
{\xe \v FilterTwoPole\:FilterTwoPole}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FilterTwoPole::FilterTwoPole (float  {\i frequency0} = {\f2 1}, float  {\i qualityFactor} = {\f2 1}, float  {\i xInit} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file FilterTwoPole.cpp.}\par
{
References IsHighpass, LastTimeUS, setFrequency0(), setQ(), Vprev, and X.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_two_pole_a211ce9be7fd6863d5cf6cc4b6bd7b8d9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getMaxAmp\:FilterTwoPole}
{\xe \v FilterTwoPole\:getMaxAmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterTwoPole::getMaxAmp ()}}
\par
{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 158 of file FilterTwoPole.cpp.}\par
{
References Vprev, W0, and X.}\par
}
{\xe \v input\:FilterTwoPole}
{\xe \v FilterTwoPole\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterTwoPole::input (float  {\i drive} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 120 of file FilterTwoPole.cpp.}\par
{
References Fprev, LastTimeUS, now(), output(), Q, Vavg, Vprev, W0, and X.}\par
{
Referenced by test().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_two_pole_a77a802a3767a4d55290fb581a557f2ee_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_two_pole_a77a802a3767a4d55290fb581a557f2ee_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v output\:FilterTwoPole}
{\xe \v FilterTwoPole\:output}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterTwoPole::output ()}}
\par
{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file FilterTwoPole.cpp.}\par
{
References X.}\par
{
Referenced by input(), and test().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_two_pole_a55a8b2160b02117d9c054161eeee0452_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v print\:FilterTwoPole}
{\xe \v FilterTwoPole\:print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterTwoPole::print ()}}
\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file FilterTwoPole.cpp.}\par
{
References Vprev, and X.}\par
}
{\xe \v setAsFilter\:FilterTwoPole}
{\xe \v FilterTwoPole\:setAsFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterTwoPole::setAsFilter ({\b OSCILLATOR_TYPE}  {\i ft}, float  {\i frequency3db}, float  {\i initialValue} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file FilterTwoPole.cpp.}\par
{
References IsHighpass, LOWPASS_BESSEL, LOWPASS_BUTTERWORTH, setFrequency0(), setQ(), and X.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_two_pole_a65e7ce2eaa6b3c5a79c05b47a00466ad_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setFrequency0\:FilterTwoPole}
{\xe \v FilterTwoPole\:setFrequency0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterTwoPole::setFrequency0 (float  {\i f})}}
\par
{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file FilterTwoPole.cpp.}\par
{
References W0.}\par
{
Referenced by FilterTwoPole(), and setAsFilter().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_two_pole_ab50ffd53b3c0d563c245dc728ae23973_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setQ\:FilterTwoPole}
{\xe \v FilterTwoPole\:setQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterTwoPole::setQ (float  {\i qualityFactor})}}
\par
{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file FilterTwoPole.cpp.}\par
{
References Q.}\par
{
Referenced by FilterTwoPole(), and setAsFilter().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_two_pole_ad74accd8618604291a9153ccaba856a6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v test\:FilterTwoPole}
{\xe \v FilterTwoPole\:test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FilterTwoPole::test ()}}
\par
{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file FilterTwoPole.cpp.}\par
{
References input(), now(), and output().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_filter_two_pole_a9d600c9c4c07239f34740f07a1487c2a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v Fprev\:FilterTwoPole}
{\xe \v FilterTwoPole\:Fprev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterTwoPole::Fprev}}
\par
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file FilterTwoPole.h.}\par
{
Referenced by input().}\par
}
{\xe \v IsHighpass\:FilterTwoPole}
{\xe \v FilterTwoPole\:IsHighpass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FilterTwoPole::IsHighpass}}
\par
{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file FilterTwoPole.h.}\par
{
Referenced by FilterTwoPole(), and setAsFilter().}\par
}
{\xe \v LastTimeUS\:FilterTwoPole}
{\xe \v FilterTwoPole\:LastTimeUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long FilterTwoPole::LastTimeUS}}
\par
{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file FilterTwoPole.h.}\par
{
Referenced by FilterTwoPole(), and input().}\par
}
{\xe \v Q\:FilterTwoPole}
{\xe \v FilterTwoPole\:Q}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterTwoPole::Q}}
\par
{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file FilterTwoPole.h.}\par
{
Referenced by input(), and setQ().}\par
}
{\xe \v Vavg\:FilterTwoPole}
{\xe \v FilterTwoPole\:Vavg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterTwoPole::Vavg}}
\par
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file FilterTwoPole.h.}\par
{
Referenced by input().}\par
}
{\xe \v Vprev\:FilterTwoPole}
{\xe \v FilterTwoPole\:Vprev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterTwoPole::Vprev}}
\par
{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file FilterTwoPole.h.}\par
{
Referenced by FilterTwoPole(), getMaxAmp(), input(), and print().}\par
}
{\xe \v W0\:FilterTwoPole}
{\xe \v FilterTwoPole\:W0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterTwoPole::W0}}
\par
{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file FilterTwoPole.h.}\par
{
Referenced by getMaxAmp(), input(), and setFrequency0().}\par
}
{\xe \v X\:FilterTwoPole}
{\xe \v FilterTwoPole\:X}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float FilterTwoPole::X}}
\par
{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file FilterTwoPole.h.}\par
{
Referenced by FilterTwoPole(), getMaxAmp(), input(), output(), print(), and setAsFilter().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b FilterTwoPole.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b FilterTwoPole.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirmataClass Class Reference\par \pard\plain 
{\tc\tcl2 \v FirmataClass}
{\xe \v FirmataClass}
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
\par
{
{\f2 #include <Firmata.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FirmataClass} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} (long)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} (Stream &s)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printVersion} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b blinkVersion} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printFirmwareVersion} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFirmwareNameAndVersion} (const char *name, byte major, byte minor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b disableBlinkVersion} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b available} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b processInput} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b parse} (unsigned char value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b isParsingMessage} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sendAnalog} (byte pin, int value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sendDigital} (byte pin, int value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sendDigitalPort} (byte portNumber, int portData)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sendString} (const char *string)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sendString} (byte command, const char *string)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sendSysex} (byte command, byte bytec, byte *bytev)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write} (byte c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b attach} (byte command, {\b callbackFunction} newFunction)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b attach} (byte command, {\b systemResetCallbackFunction} newFunction)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b attach} (byte command, {\b stringCallbackFunction} newFunction)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b attach} (byte command, {\b sysexCallbackFunction} newFunction)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b detach} (byte command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b getPinMode} (byte pin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPinMode} (byte pin, byte config)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPinState} (byte pin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPinState} (byte pin, int state)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sendValueAsTwo7bitBytes} (int value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b startSysex} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b endSysex} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 129 of file Firmata.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FirmataClass\:FirmataClass}
{\xe \v FirmataClass\:FirmataClass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FirmataClass::FirmataClass ()}}
\par
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The Firmata class. An instance named "Firmata" is created automatically for the user. \par
}{
Definition at line 64 of file Firmata.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v attach\:FirmataClass}
{\xe \v FirmataClass\:attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::attach (byte  {\i command}, {\b callbackFunction}  {\i newFunction})}}
\par
{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attach a generic sysex callback function to a command (options are: ANALOG_MESSAGE, DIGITAL_MESSAGE, REPORT_ANALOG, REPORT DIGITAL, SET_PIN_MODE and SET_DIGITAL_PIN_VALUE). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i command} \cell }{The ID of the command to attach a callback function to. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newFunction} \cell }{A reference to the callback function to attach. \cell }
{\row }
}
}{
Definition at line 498 of file Firmata.cpp.}\par
{
References ANALOG_MESSAGE, DIGITAL_MESSAGE, REPORT_ANALOG, REPORT_DIGITAL, SET_DIGITAL_PIN_VALUE, and SET_PIN_MODE.}\par
{
Referenced by detach().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a94d53e24e973eb18fd4202b9d26a87c1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v attach\:FirmataClass}
{\xe \v FirmataClass\:attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::attach (byte  {\i command}, {\b systemResetCallbackFunction}  {\i newFunction})}}
\par
{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attach a callback function for the SYSTEM_RESET command. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i command} \cell }{Must be set to SYSTEM_RESET or it will be ignored. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newFunction} \cell }{A reference to the system reset callback function to attach. \cell }
{\row }
}
}{
Definition at line 515 of file Firmata.cpp.}\par
{
References SYSTEM_RESET.}\par
}
{\xe \v attach\:FirmataClass}
{\xe \v FirmataClass\:attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::attach (byte  {\i command}, {\b stringCallbackFunction}  {\i newFunction})}}
\par
{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attach a callback function for the STRING_DATA command. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i command} \cell }{Must be set to STRING_DATA or it will be ignored. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newFunction} \cell }{A reference to the string callback function to attach. \cell }
{\row }
}
}{
Definition at line 527 of file Firmata.cpp.}\par
{
References STRING_DATA.}\par
}
{\xe \v attach\:FirmataClass}
{\xe \v FirmataClass\:attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::attach (byte  {\i command}, {\b sysexCallbackFunction}  {\i newFunction})}}
\par
{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attach a generic sysex callback function to sysex command. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i command} \cell }{The ID of the command to attach a callback function to. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i newFunction} \cell }{A reference to the sysex callback function to attach. \cell }
{\row }
}
}{
Definition at line 539 of file Firmata.cpp.}\par
}
{\xe \v available\:FirmataClass}
{\xe \v FirmataClass\:available}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FirmataClass::available (void )}}
\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A wrapper for Stream::available() \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of bytes remaining in the input stream buffer. \par
}}{
Definition at line 226 of file Firmata.cpp.}\par
{
References i, printFirmwareVersion(), REPORT_FIRMWARE, and STRING_DATA.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a119734b867186567c1cd011e52e59d2d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v begin\:FirmataClass}
{\xe \v FirmataClass\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::begin (void )}}
\par
{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the default Serial transport at the default baud of 57600. \par
}{
Definition at line 79 of file Firmata.cpp.}\par
}
{\xe \v begin\:FirmataClass}
{\xe \v FirmataClass\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::begin (long  {\i speed})}}
\par
{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the default Serial transport and override the default baud. Sends the protocol version to the host application followed by the firmware version and name. blinkVersion is also called. To skip the call to blinkVersion, call Firmata.disableBlinkVersion() before calling Firmata.begin(baud). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i speed} \cell }{The baud to use. 57600 baud is the default value. \cell }
{\row }
}
}{
Definition at line 91 of file Firmata.cpp.}\par
{
References blinkVersion(), printFirmwareVersion(), and printVersion().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_ab0b7b837d2c32b4ce79e62895ced2731_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v begin\:FirmataClass}
{\xe \v FirmataClass\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::begin (Stream &  {\i s})}}
\par
{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reassign the Firmata stream transport. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{A reference to the Stream transport object. This can be any type of transport that implements the Stream interface. Some examples include Ethernet, WiFi and other UARTs on the board (Serial1, Serial2, etc). \cell }
{\row }
}
}{
Definition at line 106 of file Firmata.cpp.}\par
{
References printFirmwareVersion(), and printVersion().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a0c7b0e10168e3c5dc6442d77c65a156e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v blinkVersion\:FirmataClass}
{\xe \v FirmataClass\:blinkVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::blinkVersion (void )}}
\par
{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blink the Firmata protocol version to the onboard LEDs (if the board has an onboard LED). If VERSION_BLINK_PIN is not defined in {\b Boards.h} for a particular board, then this method does nothing. The first series of flashes indicates the firmware major version (2 flashes = 2). The second series of flashes indicates the firmware minor version (5 flashes = 5). \par
}{
Definition at line 132 of file Firmata.cpp.}\par
{
References FIRMATA_FIRMWARE_MAJOR_VERSION, and FIRMATA_FIRMWARE_MINOR_VERSION.}\par
{
Referenced by begin().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a9421550f2501fc1df60fd174b154e606_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v detach\:FirmataClass}
{\xe \v FirmataClass\:detach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::detach (byte  {\i command})}}
\par
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Detach a callback function for a specified command (such as SYSTEM_RESET, STRING_DATA, ANALOG_MESSAGE, DIGITAL_MESSAGE, etc). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i command} \cell }{The ID of the command to detatch the callback function from. \cell }
{\row }
}
}{
Definition at line 549 of file Firmata.cpp.}\par
{
References attach(), START_SYSEX, STRING_DATA, and SYSTEM_RESET.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a8f6441132a0ffa4e548e9e9bce89044a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v disableBlinkVersion\:FirmataClass}
{\xe \v FirmataClass\:disableBlinkVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::disableBlinkVersion ()}}
\par
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a means to disable the version blink sequence on the onboard LED, trimming startup time by a couple of seconds. Call this before Firmata.begin(). It only applies when using the default Serial transport. \par
}{
Definition at line 150 of file Firmata.cpp.}\par
}
{\xe \v endSysex\:FirmataClass}
{\xe \v FirmataClass\:endSysex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::endSysex (void )}}
\par
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A helper method to write the end of a Sysex message transmission. \par
}{
Definition at line 51 of file Firmata.cpp.}\par
{
References END_SYSEX.}\par
{
Referenced by printFirmwareVersion(), and sendSysex().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a9bb68afbb1d37a7990f59a1d419e64c9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getPinMode\:FirmataClass}
{\xe \v FirmataClass\:getPinMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte FirmataClass::getPinMode (byte  {\i pin})}}
\par
{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{The pin to get the configuration of. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The configuration of the specified pin. \par
}}{
Definition at line 564 of file Firmata.cpp.}\par
}
{\xe \v getPinState\:FirmataClass}
{\xe \v FirmataClass\:getPinState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FirmataClass::getPinState (byte  {\i pin})}}
\par
{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{The pin to get the state of. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The state of the specified pin. \par
}}{
Definition at line 588 of file Firmata.cpp.}\par
}
{\xe \v isParsingMessage\:FirmataClass}
{\xe \v FirmataClass\:isParsingMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean FirmataClass::isParsingMessage (void )}}
\par
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Returns true if the parser is actively parsing data. \par
}}{
Definition at line 378 of file Firmata.cpp.}\par
}
{\xe \v parse\:FirmataClass}
{\xe \v FirmataClass\:parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::parse (unsigned char  {\i value})}}
\par
{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse data from the input stream. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputData} \cell }{A single byte to be added to the parser. \cell }
{\row }
}
}{
Definition at line 286 of file Firmata.cpp.}\par
{
References ANALOG_MESSAGE, DIGITAL_MESSAGE, END_SYSEX, Firmata, printVersion(), REPORT_ANALOG, REPORT_DIGITAL, REPORT_VERSION, SET_DIGITAL_PIN_VALUE, SET_PIN_MODE, START_SYSEX, and SYSTEM_RESET.}\par
{
Referenced by processInput().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_aaeaac8b1f8facf070615b0035120c432_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_aaeaac8b1f8facf070615b0035120c432_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printFirmwareVersion\:FirmataClass}
{\xe \v FirmataClass\:printFirmwareVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::printFirmwareVersion (void )}}
\par
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sends the firmware name and version to the Firmata host application. The major and minor version numbers are the first 2 bytes in the message. The following bytes are the characters of the firmware name. \par
}{
Definition at line 160 of file Firmata.cpp.}\par
{
References endSysex(), i, REPORT_FIRMWARE, sendValueAsTwo7bitBytes(), and startSysex().}\par
{
Referenced by available(), and begin().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_abe49261eab0bd4892a09fa8b8980b11a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_abe49261eab0bd4892a09fa8b8980b11a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printVersion\:FirmataClass}
{\xe \v FirmataClass\:printVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::printVersion (void )}}
\par
{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send the Firmata protocol version to the Firmata host application. \par
}{
Definition at line 118 of file Firmata.cpp.}\par
{
References FIRMATA_PROTOCOL_MAJOR_VERSION, FIRMATA_PROTOCOL_MINOR_VERSION, and REPORT_VERSION.}\par
{
Referenced by begin(), and parse().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_abd8a0370db6d9e923e7e3d5836e78d7a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v processInput\:FirmataClass}
{\xe \v FirmataClass\:processInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::processInput (void )}}
\par
{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a single int from the input stream. If the value is not = -1, pass it on to parse(byte) \par
}{
Definition at line 274 of file Firmata.cpp.}\par
{
References parse().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_aa698f5f5a234173d5eebb54831350676_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sendAnalog\:FirmataClass}
{\xe \v FirmataClass\:sendAnalog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::sendAnalog (byte  {\i pin}, int  {\i value})}}
\par
{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send an analog message to the Firmata host application. The range of pins is limited to [0..15] when using the ANALOG_MESSAGE. The maximum value of the ANALOG_MESSAGE is limited to 14 bits (16384). To increase the pin range or value, see the documentation for the EXTENDED_ANALOG message. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{The analog pin to send the value of (limited to pins 0 - 15). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The value of the analog pin (0 - 1024 for 10-bit analog, 0 - 4096 for 12-bit, etc). The maximum value is 14-bits (16384). \cell }
{\row }
}
}{
Definition at line 395 of file Firmata.cpp.}\par
{
References ANALOG_MESSAGE, and sendValueAsTwo7bitBytes().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_ae14e1d8d9bd72068f6e8ca07721e8dda_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sendDigital\:FirmataClass}
{\xe \v FirmataClass\:sendDigital}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::sendDigital (byte  {\i pin}, int  {\i value})}}
\par
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 408 of file Firmata.cpp.}\par
}
{\xe \v sendDigitalPort\:FirmataClass}
{\xe \v FirmataClass\:sendDigitalPort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::sendDigitalPort (byte  {\i portNumber}, int  {\i portData})}}
\par
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send an 8-bit port in a single digital message (protocol v2 and later). Send 14-bits in a single digital message (protocol v1). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i portNumber} \cell }{The port number to send. Note that this is not the same as a "port" on the physical microcontroller. Ports are defined in order per every 8 pins in ascending order of the Arduino digital pin numbering scheme. Port 0 = pins D0 - D7, port 1 = pins D8 - D15, etc. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i portData} \cell }{The value of the port. The value of each pin in the port is represented by a bit. \cell }
{\row }
}
}{
Definition at line 436 of file Firmata.cpp.}\par
{
References DIGITAL_MESSAGE.}\par
}
{\xe \v sendString\:FirmataClass}
{\xe \v FirmataClass\:sendString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::sendString (const char *  {\i string})}}
\par
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send a string to the Firmata host application. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i string} \cell }{A pointer to the char string \cell }
{\row }
}
}{
Definition at line 477 of file Firmata.cpp.}\par
{
References STRING_DATA.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_abe11f621154afd308926129de349fc6e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sendString\:FirmataClass}
{\xe \v FirmataClass\:sendString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::sendString (byte  {\i command}, const char *  {\i string})}}
\par
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send a string to the Firmata host application. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i command} \cell }{Must be STRING_DATA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i string} \cell }{A pointer to the char string \cell }
{\row }
}
}{
Definition at line 466 of file Firmata.cpp.}\par
{
References sendSysex(), and STRING_DATA.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_ab139c0d784e69003c88eb5be8807dcdf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sendSysex\:FirmataClass}
{\xe \v FirmataClass\:sendSysex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::sendSysex (byte  {\i command}, byte  {\i bytec}, byte *  {\i bytev})}}
\par
{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Send a sysex message where all values after the command byte are packet as 2 7-bit bytes (this is not always the case so this function is not always used to send sysex messages). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i command} \cell }{The sysex command byte. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytec} \cell }{The number of data bytes in the message (excludes start, command and end bytes). \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bytev} \cell }{A pointer to the array of data bytes to send in the message. \cell }
{\row }
}
}{
Definition at line 450 of file Firmata.cpp.}\par
{
References endSysex(), i, sendValueAsTwo7bitBytes(), and startSysex().}\par
{
Referenced by sendString().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a81e2de5b37eb2372c8a3d9a43d5eb0cc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a81e2de5b37eb2372c8a3d9a43d5eb0cc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sendValueAsTwo7bitBytes\:FirmataClass}
{\xe \v FirmataClass\:sendValueAsTwo7bitBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::sendValueAsTwo7bitBytes (int  {\i value})}}
\par
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Split a 16-bit byte into two 7-bit values and write each value. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{The 16-bit value to be split and written separately. \cell }
{\row }
}
}{
Definition at line 34 of file Firmata.cpp.}\par
{
Referenced by printFirmwareVersion(), sendAnalog(), and sendSysex().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a770e43f26f18204e43acebf9202a6d39_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setFirmwareNameAndVersion\:FirmataClass}
{\xe \v FirmataClass\:setFirmwareNameAndVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::setFirmwareNameAndVersion (const char *  {\i name}, byte  {\i major}, byte  {\i minor})}}
\par
{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the name and version of the firmware. This is not the same version as the Firmata protocol (although at times the firmware version and protocol version may be the same number). {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{A pointer to the name char array \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i major} \cell }{The major version number \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i minor} \cell }{The minor version number \cell }
{\row }
}
}{
Definition at line 183 of file Firmata.cpp.}\par
}
{\xe \v setPinMode\:FirmataClass}
{\xe \v FirmataClass\:setPinMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::setPinMode (byte  {\i pin}, byte  {\i config})}}
\par
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the pin mode/configuration. The pin configuration (or mode) in Firmata represents the current function of the pin. Examples are digital input or output, analog input, pwm, i2c, serial (uart), etc. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{The pin to configure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i config} \cell }{The configuration value for the specified pin. \cell }
{\row }
}
}{
Definition at line 576 of file Firmata.cpp.}\par
{
References PIN_MODE_IGNORE.}\par
{
Referenced by SerialFirmata::handlePinMode(), and SerialFirmata::handleSysex().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a32c41dd94c1d23aa0e6d3d1dbe5c0c04_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setPinState\:FirmataClass}
{\xe \v FirmataClass\:setPinState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::setPinState (byte  {\i pin}, int  {\i state})}}
\par
{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the pin state. The pin state of an output pin is the pin value. The state of an input pin is 0, unless the pin has it's internal pull up resistor enabled, then the value is 1. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pin} \cell }{The pin to set the state of \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i state} \cell }{Set the state of the specified pin \cell }
{\row }
}
}{
Definition at line 599 of file Firmata.cpp.}\par
{
References i, and MAX_DATA_BYTES.}\par
}
{\xe \v startSysex\:FirmataClass}
{\xe \v FirmataClass\:startSysex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::startSysex (void )}}
\par
{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A helper method to write the beginning of a Sysex message transmission. \par
}{
Definition at line 43 of file Firmata.cpp.}\par
{
References START_SYSEX.}\par
{
Referenced by printFirmwareVersion(), and sendSysex().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_a3cc7ea1af348bca3ea0bd570314cada3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v write\:FirmataClass}
{\xe \v FirmataClass\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FirmataClass::write (byte  {\i c})}}
\par
{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A wrapper for Stream::available(). Write a single byte to the output stream. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{The byte to be written. \cell }
{\row }
}
}{
Definition at line 487 of file Firmata.cpp.}\par
{
Referenced by SerialFirmata::checkSerial(), and SerialFirmata::handleCapability().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_class_ae8f29a829e17379602fcb9fd6a497807_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/{\b Firmata.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/{\b Firmata.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FirmataFeature Class Reference\par \pard\plain 
{\tc\tcl2 \v FirmataFeature}
{\xe \v FirmataFeature}
{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
\par
{
{\f2 #include <FirmataFeature.h>}}\par
Inheritance diagram for FirmataFeature:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_firmata_feature__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b handleCapability} (byte pin)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual boolean {\b handlePinMode} (byte pin, int mode)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual boolean {\b handleSysex} (byte command, byte argc, byte *argv)=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b reset} ()=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 29 of file FirmataFeature.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v handleCapability\:FirmataFeature}
{\xe \v FirmataFeature\:handleCapability}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void FirmataFeature::handleCapability (byte  {\i pin}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b SerialFirmata} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v handlePinMode\:FirmataFeature}
{\xe \v FirmataFeature\:handlePinMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual boolean FirmataFeature::handlePinMode (byte  {\i pin}, int  {\i mode}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b SerialFirmata} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v handleSysex\:FirmataFeature}
{\xe \v FirmataFeature\:handleSysex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual boolean FirmataFeature::handleSysex (byte  {\i command}, byte  {\i argc}, byte *  {\i argv}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b SerialFirmata} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v reset\:FirmataFeature}
{\xe \v FirmataFeature\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void FirmataFeature::reset (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b SerialFirmata} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/utility/{\b FirmataFeature.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LedControl Class Reference\par \pard\plain 
{\tc\tcl2 \v LedControl}
{\xe \v LedControl}
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
\par
{
{\f2 #include <LedControl.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LedControl} (int dataPin, int clkPin, int csPin, int numDevices=1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getDeviceCount} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b shutdown} (int addr, bool status)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScanLimit} (int addr, int limit)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setIntensity} (int addr, int intensity)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearDisplay} (int addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLed} (int addr, int row, int col, boolean state)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRow} (int addr, int row, byte value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setColumn} (int addr, int col, byte value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDigit} (int addr, int digit, byte value, boolean dp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setChar} (int addr, int digit, char value, boolean dp)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 199 of file LedControl.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LedControl\:LedControl}
{\xe \v LedControl\:LedControl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LedControl::LedControl (int  {\i dataPin}, int  {\i clkPin}, int  {\i csPin}, int  {\i numDevices} = {\f2 1})}}
\par
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file LedControl.cpp.}\par
{
References clearDisplay(), i, OP_DECODEMODE, OP_DISPLAYTEST, setScanLimit(), and shutdown().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_led_control_ab478602bf6a1bd9a6b2bc72d9700794e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clearDisplay\:LedControl}
{\xe \v LedControl\:clearDisplay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedControl::clearDisplay (int  {\i addr})}}
\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file LedControl.cpp.}\par
{
References i.}\par
{
Referenced by LedControl().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_led_control_ae162b960d838588bf5cfafc1ba3858bc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getDeviceCount\:LedControl}
{\xe \v LedControl\:getDeviceCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int LedControl::getDeviceCount (void )}}
\par
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file LedControl.cpp.}\par
}
{\xe \v setChar\:LedControl}
{\xe \v LedControl\:setChar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedControl::setChar (int  {\i addr}, int  {\i digit}, char  {\i value}, boolean  {\i dp})}}
\par
{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file LedControl.cpp.}\par
{
References i, and pgm_read_byte_near.}\par
}
{\xe \v setColumn\:LedControl}
{\xe \v LedControl\:setColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedControl::setColumn (int  {\i addr}, int  {\i col}, byte  {\i value})}}
\par
{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file LedControl.cpp.}\par
{
References setLed().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_led_control_af3cb40a45c736af5a3b3b970510d6b84_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setDigit\:LedControl}
{\xe \v LedControl\:setDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedControl::setDigit (int  {\i addr}, int  {\i digit}, byte  {\i value}, boolean  {\i dp})}}
\par
{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 155 of file LedControl.cpp.}\par
{
References pgm_read_byte_near.}\par
}
{\xe \v setIntensity\:LedControl}
{\xe \v LedControl\:setIntensity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedControl::setIntensity (int  {\i addr}, int  {\i intensity})}}
\par
{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file LedControl.cpp.}\par
{
References OP_INTENSITY.}\par
}
{\xe \v setLed\:LedControl}
{\xe \v LedControl\:setLed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedControl::setLed (int  {\i addr}, int  {\i row}, int  {\i col}, boolean  {\i state})}}
\par
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file LedControl.cpp.}\par
{
Referenced by setColumn().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_led_control_aca456866199ac52f40e0a6e91c57b443_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setRow\:LedControl}
{\xe \v LedControl\:setRow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedControl::setRow (int  {\i addr}, int  {\i row}, byte  {\i value})}}
\par
{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file LedControl.cpp.}\par
}
{\xe \v setScanLimit\:LedControl}
{\xe \v LedControl\:setScanLimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedControl::setScanLimit (int  {\i addr}, int  {\i limit})}}
\par
{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file LedControl.cpp.}\par
{
References OP_SCANLIMIT.}\par
{
Referenced by LedControl().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_led_control_a2d32bbde945924b1389df8cc158c821a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v shutdown\:LedControl}
{\xe \v LedControl\:shutdown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LedControl::shutdown (int  {\i addr}, bool  {\i status})}}
\par
{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file LedControl.cpp.}\par
{
References OP_SHUTDOWN.}\par
{
Referenced by LedControl().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_led_control_acae3eb6d78fc9b978fe6968611e48466_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/LedControl-master/src/{\b LedControl.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/LedControl-master/src/{\b LedControl.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LSM9DS1 Class Reference\par \pard\plain 
{\tc\tcl2 \v LSM9DS1}
{\xe \v LSM9DS1}
{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
\par
{
{\f2 #include <SparkFunLSM9DS1.h>}}\par
Collaboration diagram for LSM9DS1:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LSM9DS1} ({\b interface_mode} interface, uint8_t xgAddr, uint8_t mAddr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LSM9DS1} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calibrate} (bool autoCalc=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calibrateMag} (bool loadIn=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b magOffset} (uint8_t axis, int16_t offset)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b accelAvailable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b gyroAvailable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b tempAvailable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b magAvailable} ({\b lsm9ds1_axis} axis={\b ALL_AXIS})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readGyro} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b readGyro} ({\b lsm9ds1_axis} axis)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readAccel} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b readAccel} ({\b lsm9ds1_axis} axis)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readMag} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b readMag} ({\b lsm9ds1_axis} axis)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readTemp} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b calcGyro} (int16_t gyro)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b calcAccel} (int16_t accel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b calcMag} (int16_t mag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setGyroScale} (uint16_t gScl)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAccelScale} (uint8_t aScl)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMagScale} (uint8_t mScl)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setGyroODR} (uint8_t gRate)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAccelODR} (uint8_t aRate)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMagODR} (uint8_t mRate)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configInactivity} (uint8_t duration, uint8_t threshold, bool sleepOn)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configAccelInt} (uint8_t generator, bool andInterrupts=false)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configAccelThs} (uint8_t threshold, {\b lsm9ds1_axis} axis, uint8_t duration=0, bool wait=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configGyroInt} (uint8_t generator, bool aoi, bool latch)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configGyroThs} (int16_t threshold, {\b lsm9ds1_axis} axis, uint8_t duration, bool wait)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configInt} ({\b interrupt_select} interupt, uint8_t generator, {\b h_lactive} activeLow={\b INT_ACTIVE_LOW}, {\b pp_od} pushPull={\b INT_PUSH_PULL})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configMagInt} (uint8_t generator, {\b h_lactive} activeLow, bool latch=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configMagThs} (uint16_t threshold)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getGyroIntSrc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getAccelIntSrc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getMagIntSrc} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getInactivity} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sleepGyro} (bool enable=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enableFIFO} (bool enable=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFIFO} ({\b fifoMode_type} fifoMode, uint8_t fifoThs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getFIFOSamples} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IMUSettings} {\b settings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b gx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b gy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b gz}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b ax}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b ay}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b az}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b mx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b my}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b mz}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b temperature}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b gBias} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b aBias} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b mBias} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b gBiasRaw} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b aBiasRaw} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b mBiasRaw} [3]\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b init} ({\b interface_mode} interface, uint8_t xgAddr, uint8_t mAddr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initGyro} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initAccel} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initMag} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b mReadByte} (uint8_t subAddress)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mReadBytes} (uint8_t subAddress, uint8_t *dest, uint8_t count)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mWriteByte} (uint8_t subAddress, uint8_t data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b xgReadByte} (uint8_t subAddress)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b xgReadBytes} (uint8_t subAddress, uint8_t *dest, uint8_t count)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b xgWriteByte} (uint8_t subAddress, uint8_t data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcgRes} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcmRes} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcaRes} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b constrainScales} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initSPI} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SPIwriteByte} (uint8_t csPin, uint8_t subAddress, uint8_t data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b SPIreadByte} (uint8_t csPin, uint8_t subAddress)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SPIreadBytes} (uint8_t csPin, uint8_t subAddress, uint8_t *dest, uint8_t count)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initI2C} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b I2CwriteByte} (uint8_t address, uint8_t subAddress, uint8_t data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b I2CreadByte} (uint8_t address, uint8_t subAddress)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b I2CreadBytes} (uint8_t address, uint8_t subAddress, uint8_t *dest, uint8_t count)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b _mAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b _xgAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b gRes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b aRes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b mRes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b _autoCalc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 45 of file SparkFunLSM9DS1.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LSM9DS1\:LSM9DS1}
{\xe \v LSM9DS1\:LSM9DS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LSM9DS1::LSM9DS1 ({\b interface_mode}  {\i interface}, uint8_t  {\i xgAddr}, uint8_t  {\i mAddr})}}
\par
{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file SparkFunLSM9DS1.cpp.}\par
{
References init().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ab62923063ffc49dca82e6f311c5c8764_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v LSM9DS1\:LSM9DS1}
{\xe \v LSM9DS1\:LSM9DS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
LSM9DS1::LSM9DS1 ()}}
\par
{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file SparkFunLSM9DS1.cpp.}\par
{
References IMU_MODE_I2C, init(), LSM9DS1_AG_ADDR, and LSM9DS1_M_ADDR.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a399a80ee541823b301e81d1afab32b28_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v accelAvailable\:LSM9DS1}
{\xe \v LSM9DS1\:accelAvailable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::accelAvailable ()}}
\par
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 476 of file SparkFunLSM9DS1.cpp.}\par
{
References STATUS_REG_1, and xgReadByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a515ce6f5c199a86c6aa5be353b2a3a13_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v begin\:LSM9DS1}
{\xe \v LSM9DS1\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t LSM9DS1::begin (void )}}
\par
{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Todo: don't use _xgAddress or _mAddress, duplicating memory \par
}{
Definition at line 142 of file SparkFunLSM9DS1.cpp.}\par
{
References _mAddress, _xgAddress, deviceSettings::agAddress, calcaRes(), calcgRes(), calcmRes(), deviceSettings::commInterface, constrainScales(), IMUSettings::device, IMU_MODE_I2C, IMU_MODE_SPI, initAccel(), initGyro(), initI2C(), initMag(), initSPI(), deviceSettings::mAddress, mReadByte(), settings, WHO_AM_I_AG_RSP, WHO_AM_I_M, WHO_AM_I_M_RSP, WHO_AM_I_XG, and xgReadByte().}\par
{
Referenced by configure_LSM9DS1().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a8728e560c76bd120b3711af15a6ecbd6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a8728e560c76bd120b3711af15a6ecbd6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v calcAccel\:LSM9DS1}
{\xe \v LSM9DS1\:calcAccel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float LSM9DS1::calcAccel (int16_t  {\i accel})}}
\par
{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 592 of file SparkFunLSM9DS1.cpp.}\par
{
References aRes.}\par
{
Referenced by calibrate(), and readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a54e2a7888b67b47cf0dd986c5b91a3c5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v calcaRes\:LSM9DS1}
{\xe \v LSM9DS1\:calcaRes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::calcaRes (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 748 of file SparkFunLSM9DS1.cpp.}\par
{
References IMUSettings::accel, aRes, accelSettings::scale, and settings.}\par
{
Referenced by begin(), and setAccelScale().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a31597c9ae6c5a7de64a50cbbbcd24297_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v calcgRes\:LSM9DS1}
{\xe \v LSM9DS1\:calcgRes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::calcgRes (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 743 of file SparkFunLSM9DS1.cpp.}\par
{
References gRes, IMUSettings::gyro, gyroSettings::scale, and settings.}\par
{
Referenced by begin(), and setGyroScale().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a303e0dd33e000579dc3917aecedb6e63_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v calcGyro\:LSM9DS1}
{\xe \v LSM9DS1\:calcGyro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float LSM9DS1::calcGyro (int16_t  {\i gyro})}}
\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 586 of file SparkFunLSM9DS1.cpp.}\par
{
References gRes.}\par
{
Referenced by calibrate(), and readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a76707323565bc4170ea8e27a932c95e4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v calcMag\:LSM9DS1}
{\xe \v LSM9DS1\:calcMag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float LSM9DS1::calcMag (int16_t  {\i mag})}}
\par
{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 598 of file SparkFunLSM9DS1.cpp.}\par
{
References mRes.}\par
{
Referenced by calibrateMag(), and readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a7d0b0740497b1a10cd3e46a282a143ec_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v calcmRes\:LSM9DS1}
{\xe \v LSM9DS1\:calcmRes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::calcmRes (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 753 of file SparkFunLSM9DS1.cpp.}\par
{
References IMUSettings::mag, magSensitivity, mRes, magSettings::scale, and settings.}\par
{
Referenced by begin(), and setMagScale().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a830dfc95c7e2d8524720d78357b053cb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v calibrate\:LSM9DS1}
{\xe \v LSM9DS1\:calibrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::calibrate (bool  {\i autoCalc} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 326 of file SparkFunLSM9DS1.cpp.}\par
{
References _autoCalc, aBias, aBiasRaw, aRes, ax, ay, az, calcAccel(), calcGyro(), enableFIFO(), FIFO_OFF, FIFO_SRC, FIFO_THS, gBias, gBiasRaw, gx, gy, gz, readAccel(), readGyro(), setFIFO(), and xgReadByte().}\par
{
Referenced by configure_LSM9DS1().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a97939cb15fcb7e33abcd6d3a9230d943_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a97939cb15fcb7e33abcd6d3a9230d943_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v calibrateMag\:LSM9DS1}
{\xe \v LSM9DS1\:calibrateMag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::calibrateMag (bool  {\i loadIn} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 366 of file SparkFunLSM9DS1.cpp.}\par
{
References calcMag(), i, magAvailable(), magOffset(), mBias, mBiasRaw, mx, my, mz, and readMag().}\par
{
Referenced by configure_LSM9DS1().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_afb45f0bcbcbeb15d4bd1a28821b24d14_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_afb45f0bcbcbeb15d4bd1a28821b24d14_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configAccelInt\:LSM9DS1}
{\xe \v LSM9DS1\:configAccelInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::configAccelInt (uint8_t  {\i generator}, bool  {\i andInterrupts} = {\f2 false})}}
\par
{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 813 of file SparkFunLSM9DS1.cpp.}\par
{
References INT_GEN_CFG_XL, and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a1e8ebc6c1e3876d8936197dc93f76717_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configAccelThs\:LSM9DS1}
{\xe \v LSM9DS1\:configAccelThs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::configAccelThs (uint8_t  {\i threshold}, {\b lsm9ds1_axis}  {\i axis}, uint8_t  {\i duration} = {\f2 0}, bool  {\i wait} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 822 of file SparkFunLSM9DS1.cpp.}\par
{
References INT_GEN_DUR_XL, INT_GEN_THS_X_XL, and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_acebcf64ab4e6ea7ed7a23c09ef16afe9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configGyroInt\:LSM9DS1}
{\xe \v LSM9DS1\:configGyroInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::configGyroInt (uint8_t  {\i generator}, bool  {\i aoi}, bool  {\i latch})}}
\par
{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 848 of file SparkFunLSM9DS1.cpp.}\par
{
References INT_GEN_CFG_G, and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a19a341728c4e5b454de045c8a531cf06_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configGyroThs\:LSM9DS1}
{\xe \v LSM9DS1\:configGyroThs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::configGyroThs (int16_t  {\i threshold}, {\b lsm9ds1_axis}  {\i axis}, uint8_t  {\i duration}, bool  {\i wait})}}
\par
{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 858 of file SparkFunLSM9DS1.cpp.}\par
{
References INT_GEN_DUR_G, INT_GEN_THS_XH_G, and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ad865cc972960ed476fabd54f698adf6e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configInactivity\:LSM9DS1}
{\xe \v LSM9DS1\:configInactivity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::configInactivity (uint8_t  {\i duration}, uint8_t  {\i threshold}, bool  {\i sleepOn})}}
\par
{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 795 of file SparkFunLSM9DS1.cpp.}\par
{
References ACT_DUR, ACT_THS, and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a1e318c5e7c1d500c3ab2602c46265354_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configInt\:LSM9DS1}
{\xe \v LSM9DS1\:configInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::configInt ({\b interrupt_select}  {\i interupt}, uint8_t  {\i generator}, {\b h_lactive}  {\i activeLow} = {\f2 {\b INT_ACTIVE_LOW}}, {\b pp_od}  {\i pushPull} = {\f2 {\b INT_PUSH_PULL}})}}
\par
{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 774 of file SparkFunLSM9DS1.cpp.}\par
{
References CTRL_REG8, xgReadByte(), and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a5b6948b9d4caf57cfe9e0559a0c7f54c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configMagInt\:LSM9DS1}
{\xe \v LSM9DS1\:configMagInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::configMagInt (uint8_t  {\i generator}, {\b h_lactive}  {\i activeLow}, bool  {\i latch} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 888 of file SparkFunLSM9DS1.cpp.}\par
{
References INT_ACTIVE_HIGH, INT_CFG_M, and mWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a54a521668eb63d504d227c6d460723e0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configMagThs\:LSM9DS1}
{\xe \v LSM9DS1\:configMagThs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::configMagThs (uint16_t  {\i threshold})}}
\par
{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 902 of file SparkFunLSM9DS1.cpp.}\par
{
References INT_THS_H_M, INT_THS_L_M, and mWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a87cf3dd3a4d9ca79106eb7c1c866a224_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v constrainScales\:LSM9DS1}
{\xe \v LSM9DS1\:constrainScales}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::constrainScales (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 952 of file SparkFunLSM9DS1.cpp.}\par
{
References IMUSettings::accel, IMUSettings::gyro, IMUSettings::mag, gyroSettings::scale, accelSettings::scale, magSettings::scale, and settings.}\par
{
Referenced by begin().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a5aadcd09cf9157de817c359e49304ca7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v enableFIFO\:LSM9DS1}
{\xe \v LSM9DS1\:enableFIFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::enableFIFO (bool  {\i enable} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 931 of file SparkFunLSM9DS1.cpp.}\par
{
References CTRL_REG9, xgReadByte(), and xgWriteByte().}\par
{
Referenced by calibrate().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a5f01141131318697838f15d7e5d10f2c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a5f01141131318697838f15d7e5d10f2c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getAccelIntSrc\:LSM9DS1}
{\xe \v LSM9DS1\:getAccelIntSrc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::getAccelIntSrc ()}}
\par
{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 835 of file SparkFunLSM9DS1.cpp.}\par
{
References INT_GEN_SRC_XL, and xgReadByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ae42ae3b368370f977d090ba0e53c7f5c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getFIFOSamples\:LSM9DS1}
{\xe \v LSM9DS1\:getFIFOSamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::getFIFOSamples ()}}
\par
{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 947 of file SparkFunLSM9DS1.cpp.}\par
{
References FIFO_SRC, and xgReadByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ac03ef2ff928a25c4a80af7707cd92dc8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getGyroIntSrc\:LSM9DS1}
{\xe \v LSM9DS1\:getGyroIntSrc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::getGyroIntSrc ()}}
\par
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 875 of file SparkFunLSM9DS1.cpp.}\par
{
References INT_GEN_SRC_G, and xgReadByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_aaba6696754df62a411a6a190100f9ca3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getInactivity\:LSM9DS1}
{\xe \v LSM9DS1\:getInactivity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::getInactivity ()}}
\par
{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 806 of file SparkFunLSM9DS1.cpp.}\par
{
References STATUS_REG_0, and xgReadByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a9dab029d1d24e49709258d893042d28f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getMagIntSrc\:LSM9DS1}
{\xe \v LSM9DS1\:getMagIntSrc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::getMagIntSrc ()}}
\par
{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 910 of file SparkFunLSM9DS1.cpp.}\par
{
References INT_SRC_M, and mReadByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a2bc92a37db982059b89e0a06e7d05a95_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v gyroAvailable\:LSM9DS1}
{\xe \v LSM9DS1\:gyroAvailable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::gyroAvailable ()}}
\par
{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 483 of file SparkFunLSM9DS1.cpp.}\par
{
References STATUS_REG_1, and xgReadByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a65b71a03a30f4e8ed1ffd46de3db0560_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v I2CreadByte\:LSM9DS1}
{\xe \v LSM9DS1\:I2CreadByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::I2CreadByte (uint8_t  {\i address}, uint8_t  {\i subAddress}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bad! 255 will be misinterpreted as a good value. \par
}{
Definition at line 1104 of file SparkFunLSM9DS1.cpp.}\par
{
References LSM9DS1_COMMUNICATION_TIMEOUT, and Wire.}\par
{
Referenced by mReadByte(), and xgReadByte().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a7fc046d4b335494331905fdeb5c81c9e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v I2CreadBytes\:LSM9DS1}
{\xe \v LSM9DS1\:I2CreadBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::I2CreadBytes (uint8_t  {\i address}, uint8_t  {\i subAddress}, uint8_t *  {\i dest}, uint8_t  {\i count}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1123 of file SparkFunLSM9DS1.cpp.}\par
{
References i, LSM9DS1_COMMUNICATION_TIMEOUT, and Wire.}\par
{
Referenced by mReadBytes(), and xgReadBytes().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_adfc9a22290daddd7787e8023fa8f12cc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v I2CwriteByte\:LSM9DS1}
{\xe \v LSM9DS1\:I2CwriteByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::I2CwriteByte (uint8_t  {\i address}, uint8_t  {\i subAddress}, uint8_t  {\i data}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1096 of file SparkFunLSM9DS1.cpp.}\par
{
References Wire.}\par
{
Referenced by mWriteByte(), and xgWriteByte().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a8e66108a002cc15ec4c0db0a608d20c6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v init\:LSM9DS1}
{\xe \v LSM9DS1\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::init ({\b interface_mode}  {\i interface}, uint8_t  {\i xgAddr}, uint8_t  {\i mAddr}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file SparkFunLSM9DS1.cpp.}\par
{
References _autoCalc, aBias, aBiasRaw, IMUSettings::accel, deviceSettings::agAddress, gyroSettings::bandwidth, accelSettings::bandwidth, deviceSettings::commInterface, IMUSettings::device, gyroSettings::enabled, accelSettings::enabled, magSettings::enabled, temperatureSettings::enabled, gyroSettings::enableX, accelSettings::enableX, gyroSettings::enableY, accelSettings::enableY, gyroSettings::enableZ, accelSettings::enableZ, gyroSettings::flipX, gyroSettings::flipY, gyroSettings::flipZ, gBias, gBiasRaw, IMUSettings::gyro, accelSettings::highResBandwidth, accelSettings::highResEnable, gyroSettings::HPFCutoff, gyroSettings::HPFEnable, i, gyroSettings::latchInterrupt, gyroSettings::lowPowerEnable, magSettings::lowPowerEnable, deviceSettings::mAddress, IMUSettings::mag, mBias, mBiasRaw, magSettings::operatingMode, gyroSettings::orientation, gyroSettings::sampleRate, accelSettings::sampleRate, magSettings::sampleRate, gyroSettings::scale, accelSettings::scale, magSettings::scale, settings, IMUSettings::temp, magSettings::tempCompensationEnable, magSettings::XYPerformance, and magSettings::ZPerformance.}\par
{
Referenced by LSM9DS1().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_aa4f74e09e93c0133dc30545d4492849e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v initAccel\:LSM9DS1}
{\xe \v LSM9DS1\:initAccel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::initAccel (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 255 of file SparkFunLSM9DS1.cpp.}\par
{
References IMUSettings::accel, accelSettings::bandwidth, CTRL_REG5_XL, CTRL_REG6_XL, CTRL_REG7_XL, accelSettings::enabled, accelSettings::enableX, accelSettings::enableY, accelSettings::enableZ, accelSettings::highResBandwidth, accelSettings::highResEnable, accelSettings::sampleRate, accelSettings::scale, settings, and xgWriteByte().}\par
{
Referenced by begin().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a143ff5abf4f7ba8e1c42325859106f84_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a143ff5abf4f7ba8e1c42325859106f84_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v initGyro\:LSM9DS1}
{\xe \v LSM9DS1\:initGyro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::initGyro (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file SparkFunLSM9DS1.cpp.}\par
{
References gyroSettings::bandwidth, CTRL_REG1_G, CTRL_REG2_G, CTRL_REG3_G, CTRL_REG4, gyroSettings::enabled, gyroSettings::enableX, gyroSettings::enableY, gyroSettings::enableZ, gyroSettings::flipX, gyroSettings::flipY, gyroSettings::flipZ, IMUSettings::gyro, gyroSettings::HPFCutoff, gyroSettings::HPFEnable, gyroSettings::latchInterrupt, gyroSettings::lowPowerEnable, ORIENT_CFG_G, gyroSettings::sampleRate, gyroSettings::scale, settings, and xgWriteByte().}\par
{
Referenced by begin().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a66a7b02acb28964ffc9362f25988e270_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a66a7b02acb28964ffc9362f25988e270_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v initI2C\:LSM9DS1}
{\xe \v LSM9DS1\:initI2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::initI2C (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1090 of file SparkFunLSM9DS1.cpp.}\par
{
References Wire.}\par
{
Referenced by begin().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ae60332c2836bd3f19846b7a44c015ddd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v initMag\:LSM9DS1}
{\xe \v LSM9DS1\:initMag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::initMag (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 407 of file SparkFunLSM9DS1.cpp.}\par
{
References CTRL_REG1_M, CTRL_REG2_M, CTRL_REG3_M, CTRL_REG4_M, CTRL_REG5_M, magSettings::lowPowerEnable, IMUSettings::mag, mWriteByte(), magSettings::operatingMode, magSettings::sampleRate, magSettings::scale, settings, magSettings::tempCompensationEnable, magSettings::XYPerformance, and magSettings::ZPerformance.}\par
{
Referenced by begin().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a492aa6edcf891f273d932636e3cc470d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a492aa6edcf891f273d932636e3cc470d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v initSPI\:LSM9DS1}
{\xe \v LSM9DS1\:initSPI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::initSPI (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1033 of file SparkFunLSM9DS1.cpp.}\par
{
References _mAddress, and _xgAddress.}\par
{
Referenced by begin().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a4286d5803ab028c657e007ae99acc60a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v magAvailable\:LSM9DS1}
{\xe \v LSM9DS1\:magAvailable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::magAvailable ({\b lsm9ds1_axis}  {\i axis} = {\f2 {\b ALL_AXIS}})}}
\par
{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 497 of file SparkFunLSM9DS1.cpp.}\par
{
References mReadByte(), and STATUS_REG_M.}\par
{
Referenced by calibrateMag().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a85afd29e95bead7b3f0083a9a235d1df_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a85afd29e95bead7b3f0083a9a235d1df_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v magOffset\:LSM9DS1}
{\xe \v LSM9DS1\:magOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::magOffset (uint8_t  {\i axis}, int16_t  {\i offset})}}
\par
{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 396 of file SparkFunLSM9DS1.cpp.}\par
{
References mWriteByte(), OFFSET_X_REG_H_M, and OFFSET_X_REG_L_M.}\par
{
Referenced by calibrateMag().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a0d461614bd058b082c94481dc916c18b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a0d461614bd058b082c94481dc916c18b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v mReadByte\:LSM9DS1}
{\xe \v LSM9DS1\:mReadByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::mReadByte (uint8_t  {\i subAddress}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1013 of file SparkFunLSM9DS1.cpp.}\par
{
References _mAddress, deviceSettings::commInterface, IMUSettings::device, I2CreadByte(), IMU_MODE_I2C, IMU_MODE_SPI, settings, and SPIreadByte().}\par
{
Referenced by begin(), getMagIntSrc(), magAvailable(), setMagODR(), and setMagScale().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ae4e470321567e4f93fc09f4cc6cd9efa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ae4e470321567e4f93fc09f4cc6cd9efa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v mReadBytes\:LSM9DS1}
{\xe \v LSM9DS1\:mReadBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::mReadBytes (uint8_t  {\i subAddress}, uint8_t *  {\i dest}, uint8_t  {\i count}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1023 of file SparkFunLSM9DS1.cpp.}\par
{
References _mAddress, deviceSettings::commInterface, IMUSettings::device, I2CreadBytes(), IMU_MODE_I2C, IMU_MODE_SPI, settings, and SPIreadBytes().}\par
{
Referenced by readMag().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_acfdf9862cad1e66c9fb61a17bfbe7477_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_acfdf9862cad1e66c9fb61a17bfbe7477_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v mWriteByte\:LSM9DS1}
{\xe \v LSM9DS1\:mWriteByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::mWriteByte (uint8_t  {\i subAddress}, uint8_t  {\i data}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 983 of file SparkFunLSM9DS1.cpp.}\par
{
References _mAddress, deviceSettings::commInterface, IMUSettings::device, I2CwriteByte(), IMU_MODE_I2C, IMU_MODE_SPI, settings, and SPIwriteByte().}\par
{
Referenced by configMagInt(), configMagThs(), initMag(), magOffset(), setMagODR(), and setMagScale().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_afc171c924102c97fa1d88fa7f48bd167_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_afc171c924102c97fa1d88fa7f48bd167_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readAccel\:LSM9DS1}
{\xe \v LSM9DS1\:readAccel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::readAccel ()}}
\par
{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 505 of file SparkFunLSM9DS1.cpp.}\par
{
References _autoCalc, aBiasRaw, ax, ay, az, OUT_X_L_XL, X_AXIS, xgReadBytes(), Y_AXIS, and Z_AXIS.}\par
{
Referenced by calibrate(), and readSensors().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a9953684a1ff652a7d3a4d91e72bccaa1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a9953684a1ff652a7d3a4d91e72bccaa1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readAccel\:LSM9DS1}
{\xe \v LSM9DS1\:readAccel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::readAccel ({\b lsm9ds1_axis}  {\i axis})}}
\par
{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 520 of file SparkFunLSM9DS1.cpp.}\par
{
References _autoCalc, aBiasRaw, OUT_X_L_XL, and xgReadBytes().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_acbe3bfc0b8db7fe3f77893d22c394594_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readGyro\:LSM9DS1}
{\xe \v LSM9DS1\:readGyro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::readGyro ()}}
\par
{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 556 of file SparkFunLSM9DS1.cpp.}\par
{
References _autoCalc, gBiasRaw, gx, gy, gz, OUT_X_L_G, X_AXIS, xgReadBytes(), Y_AXIS, and Z_AXIS.}\par
{
Referenced by calibrate(), and readSensors().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a56e9710cb538a4c7f7ab94c2ca256ce9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a56e9710cb538a4c7f7ab94c2ca256ce9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readGyro\:LSM9DS1}
{\xe \v LSM9DS1\:readGyro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::readGyro ({\b lsm9ds1_axis}  {\i axis})}}
\par
{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 571 of file SparkFunLSM9DS1.cpp.}\par
{
References _autoCalc, gBiasRaw, OUT_X_L_G, and xgReadBytes().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_adc1b37609a6c850328b16da4f911cefd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readMag\:LSM9DS1}
{\xe \v LSM9DS1\:readMag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::readMag ()}}
\par
{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 533 of file SparkFunLSM9DS1.cpp.}\par
{
References mReadBytes(), mx, my, mz, and OUT_X_L_M.}\par
{
Referenced by calibrateMag(), and readSensors().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ae127cf75aa5f3c5421e49363795dcd38_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ae127cf75aa5f3c5421e49363795dcd38_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readMag\:LSM9DS1}
{\xe \v LSM9DS1\:readMag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::readMag ({\b lsm9ds1_axis}  {\i axis})}}
\par
{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 542 of file SparkFunLSM9DS1.cpp.}\par
{
References mReadBytes(), and OUT_X_L_M.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a615fd3ab32a9af833ef9899663100330_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readTemp\:LSM9DS1}
{\xe \v LSM9DS1\:readTemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::readTemp ()}}
\par
{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 549 of file SparkFunLSM9DS1.cpp.}\par
{
References OUT_TEMP_L, temperature, and xgReadBytes().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_aca21a51dc79a1287b97ed9c326e2080b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAccelODR\:LSM9DS1}
{\xe \v LSM9DS1\:setAccelODR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::setAccelODR (uint8_t  {\i aRate})}}
\par
{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 713 of file SparkFunLSM9DS1.cpp.}\par
{
References IMUSettings::accel, CTRL_REG6_XL, accelSettings::sampleRate, settings, xgReadByte(), and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a76d72839cdecc3f1c4ee6fff578182c5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAccelScale\:LSM9DS1}
{\xe \v LSM9DS1\:setAccelScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::setAccelScale (uint8_t  {\i aScl})}}
\par
{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 629 of file SparkFunLSM9DS1.cpp.}\par
{
References IMUSettings::accel, calcaRes(), CTRL_REG6_XL, accelSettings::scale, settings, xgReadByte(), and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a8656d2de1ff9cc4cb76214e4561d02c4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setFIFO\:LSM9DS1}
{\xe \v LSM9DS1\:setFIFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::setFIFO ({\b fifoMode_type}  {\i fifoMode}, uint8_t  {\i fifoThs})}}
\par
{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 939 of file SparkFunLSM9DS1.cpp.}\par
{
References FIFO_CTRL, and xgWriteByte().}\par
{
Referenced by calibrate().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a0ec4a93a34545af1acc336bae9b360f1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a0ec4a93a34545af1acc336bae9b360f1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setGyroODR\:LSM9DS1}
{\xe \v LSM9DS1\:setGyroODR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::setGyroODR (uint8_t  {\i gRate})}}
\par
{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 696 of file SparkFunLSM9DS1.cpp.}\par
{
References CTRL_REG1_G, IMUSettings::gyro, gyroSettings::sampleRate, settings, xgReadByte(), and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ab8fc33c8da4fc5c379e880ff57d331fa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setGyroScale\:LSM9DS1}
{\xe \v LSM9DS1\:setGyroScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::setGyroScale (uint16_t  {\i gScl})}}
\par
{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 604 of file SparkFunLSM9DS1.cpp.}\par
{
References calcgRes(), CTRL_REG1_G, IMUSettings::gyro, gyroSettings::scale, settings, xgReadByte(), and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a115d304ebcdc8c701f3e5a5d397250aa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setMagODR\:LSM9DS1}
{\xe \v LSM9DS1\:setMagODR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::setMagODR (uint8_t  {\i mRate})}}
\par
{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 730 of file SparkFunLSM9DS1.cpp.}\par
{
References CTRL_REG1_M, IMUSettings::mag, mReadByte(), mWriteByte(), magSettings::sampleRate, and settings.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a8bc672fba680edc468a643fd58046b41_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setMagScale\:LSM9DS1}
{\xe \v LSM9DS1\:setMagScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::setMagScale (uint8_t  {\i mScl})}}
\par
{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 660 of file SparkFunLSM9DS1.cpp.}\par
{
References calcmRes(), CTRL_REG2_M, IMUSettings::mag, mReadByte(), mWriteByte(), magSettings::scale, and settings.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ad7604159a07b0d088cdfb6ba4a0093b0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sleepGyro\:LSM9DS1}
{\xe \v LSM9DS1\:sleepGyro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::sleepGyro (bool  {\i enable} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 923 of file SparkFunLSM9DS1.cpp.}\par
{
References CTRL_REG9, xgReadByte(), and xgWriteByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a13b61812069b399547f177b0b0af8fe3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SPIreadByte\:LSM9DS1}
{\xe \v LSM9DS1\:SPIreadByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::SPIreadByte (uint8_t  {\i csPin}, uint8_t  {\i subAddress}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1062 of file SparkFunLSM9DS1.cpp.}\par
{
References SPIreadBytes().}\par
{
Referenced by mReadByte(), and xgReadByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a6f0f50bb5e9b702d5a19c7441a3f9d8b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a6f0f50bb5e9b702d5a19c7441a3f9d8b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SPIreadBytes\:LSM9DS1}
{\xe \v LSM9DS1\:SPIreadBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::SPIreadBytes (uint8_t  {\i csPin}, uint8_t  {\i subAddress}, uint8_t *  {\i dest}, uint8_t  {\i count}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1071 of file SparkFunLSM9DS1.cpp.}\par
{
References _mAddress, and i.}\par
{
Referenced by mReadBytes(), SPIreadByte(), and xgReadBytes().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a26c0f164454eba84e6486033b7061d11_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SPIwriteByte\:LSM9DS1}
{\xe \v LSM9DS1\:SPIwriteByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::SPIwriteByte (uint8_t  {\i csPin}, uint8_t  {\i subAddress}, uint8_t  {\i data}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1050 of file SparkFunLSM9DS1.cpp.}\par
{
Referenced by mWriteByte(), and xgWriteByte().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a83321c9d6ec50f6b9944907d2be482cd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v tempAvailable\:LSM9DS1}
{\xe \v LSM9DS1\:tempAvailable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::tempAvailable ()}}
\par
{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 490 of file SparkFunLSM9DS1.cpp.}\par
{
References STATUS_REG_1, and xgReadByte().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_aaf6683c6f3f0281d5222b74f580f321b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v xgReadByte\:LSM9DS1}
{\xe \v LSM9DS1\:xgReadByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::xgReadByte (uint8_t  {\i subAddress}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 993 of file SparkFunLSM9DS1.cpp.}\par
{
References _xgAddress, deviceSettings::commInterface, IMUSettings::device, I2CreadByte(), IMU_MODE_I2C, IMU_MODE_SPI, settings, and SPIreadByte().}\par
{
Referenced by accelAvailable(), begin(), calibrate(), configInt(), enableFIFO(), getAccelIntSrc(), getFIFOSamples(), getGyroIntSrc(), getInactivity(), gyroAvailable(), setAccelODR(), setAccelScale(), setGyroODR(), setGyroScale(), sleepGyro(), and tempAvailable().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_af7f9789df6f0178764c815a3380c202a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_af7f9789df6f0178764c815a3380c202a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v xgReadBytes\:LSM9DS1}
{\xe \v LSM9DS1\:xgReadBytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::xgReadBytes (uint8_t  {\i subAddress}, uint8_t *  {\i dest}, uint8_t  {\i count}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1003 of file SparkFunLSM9DS1.cpp.}\par
{
References _xgAddress, deviceSettings::commInterface, IMUSettings::device, I2CreadBytes(), IMU_MODE_I2C, IMU_MODE_SPI, settings, and SPIreadBytes().}\par
{
Referenced by readAccel(), readGyro(), and readTemp().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ae0a9cbfd74b1f4676f091c2d8e491d77_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_ae0a9cbfd74b1f4676f091c2d8e491d77_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v xgWriteByte\:LSM9DS1}
{\xe \v LSM9DS1\:xgWriteByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LSM9DS1::xgWriteByte (uint8_t  {\i subAddress}, uint8_t  {\i data}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 973 of file SparkFunLSM9DS1.cpp.}\par
{
References _xgAddress, deviceSettings::commInterface, IMUSettings::device, I2CwriteByte(), IMU_MODE_I2C, IMU_MODE_SPI, settings, and SPIwriteByte().}\par
{
Referenced by configAccelInt(), configAccelThs(), configGyroInt(), configGyroThs(), configInactivity(), configInt(), enableFIFO(), initAccel(), initGyro(), setAccelODR(), setAccelScale(), setFIFO(), setGyroODR(), setGyroScale(), and sleepGyro().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a263eed4b52ad087a1195755c6ba49e62_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_l_s_m9_d_s1_a263eed4b52ad087a1195755c6ba49e62_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _autoCalc\:LSM9DS1}
{\xe \v LSM9DS1\:_autoCalc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool LSM9DS1::_autoCalc{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 345 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), init(), readAccel(), and readGyro().}\par
}
{\xe \v _mAddress\:LSM9DS1}
{\xe \v LSM9DS1\:_mAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::_mAddress{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 336 of file SparkFunLSM9DS1.h.}\par
{
Referenced by begin(), initSPI(), mReadByte(), mReadBytes(), mWriteByte(), and SPIreadBytes().}\par
}
{\xe \v _xgAddress\:LSM9DS1}
{\xe \v LSM9DS1\:_xgAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t LSM9DS1::_xgAddress{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 336 of file SparkFunLSM9DS1.h.}\par
{
Referenced by begin(), initSPI(), xgReadByte(), xgReadBytes(), and xgWriteByte().}\par
}
{\xe \v aBias\:LSM9DS1}
{\xe \v LSM9DS1\:aBias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float LSM9DS1::aBias[3]}}
\par
{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), and init().}\par
}
{\xe \v aBiasRaw\:LSM9DS1}
{\xe \v LSM9DS1\:aBiasRaw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::aBiasRaw[3]}}
\par
{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), init(), and readAccel().}\par
}
{\xe \v aRes\:LSM9DS1}
{\xe \v LSM9DS1\:aRes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float LSM9DS1::aRes{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 341 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calcAccel(), calcaRes(), and calibrate().}\par
}
{\xe \v ax\:LSM9DS1}
{\xe \v LSM9DS1\:ax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::ax}}
\par
{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), readAccel(), and readSensors().}\par
}
{\xe \v ay\:LSM9DS1}
{\xe \v LSM9DS1\:ay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::ay}}
\par
{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), readAccel(), and readSensors().}\par
}
{\xe \v az\:LSM9DS1}
{\xe \v LSM9DS1\:az}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::az}}
\par
{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), readAccel(), and readSensors().}\par
}
{\xe \v gBias\:LSM9DS1}
{\xe \v LSM9DS1\:gBias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float LSM9DS1::gBias[3]}}
\par
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), and init().}\par
}
{\xe \v gBiasRaw\:LSM9DS1}
{\xe \v LSM9DS1\:gBiasRaw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::gBiasRaw[3]}}
\par
{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), init(), and readGyro().}\par
}
{\xe \v gRes\:LSM9DS1}
{\xe \v LSM9DS1\:gRes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float LSM9DS1::gRes{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 341 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calcgRes(), and calcGyro().}\par
}
{\xe \v gx\:LSM9DS1}
{\xe \v LSM9DS1\:gx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::gx}}
\par
{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), readGyro(), and readSensors().}\par
}
{\xe \v gy\:LSM9DS1}
{\xe \v LSM9DS1\:gy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::gy}}
\par
{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), readGyro(), and readSensors().}\par
}
{\xe \v gz\:LSM9DS1}
{\xe \v LSM9DS1\:gz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::gz}}
\par
{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrate(), readGyro(), and readSensors().}\par
}
{\xe \v mBias\:LSM9DS1}
{\xe \v LSM9DS1\:mBias}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float LSM9DS1::mBias[3]}}
\par
{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrateMag(), and init().}\par
}
{\xe \v mBiasRaw\:LSM9DS1}
{\xe \v LSM9DS1\:mBiasRaw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::mBiasRaw[3]}}
\par
{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrateMag(), and init().}\par
}
{\xe \v mRes\:LSM9DS1}
{\xe \v LSM9DS1\:mRes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float LSM9DS1::mRes{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 341 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calcMag(), and calcmRes().}\par
}
{\xe \v mx\:LSM9DS1}
{\xe \v LSM9DS1\:mx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::mx}}
\par
{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrateMag(), readMag(), and readSensors().}\par
}
{\xe \v my\:LSM9DS1}
{\xe \v LSM9DS1\:my}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::my}}
\par
{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrateMag(), readMag(), and readSensors().}\par
}
{\xe \v mz\:LSM9DS1}
{\xe \v LSM9DS1\:mz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::mz}}
\par
{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file SparkFunLSM9DS1.h.}\par
{
Referenced by calibrateMag(), readMag(), and readSensors().}\par
}
{\xe \v settings\:LSM9DS1}
{\xe \v LSM9DS1\:settings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b IMUSettings} LSM9DS1::settings}}
\par
{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file SparkFunLSM9DS1.h.}\par
{
Referenced by begin(), calcaRes(), calcgRes(), calcmRes(), configure_LSM9DS1(), constrainScales(), init(), initAccel(), initGyro(), initMag(), mReadByte(), mReadBytes(), mWriteByte(), setAccelODR(), setAccelScale(), setGyroODR(), setGyroScale(), setMagODR(), setMagScale(), xgReadByte(), xgReadBytes(), and xgWriteByte().}\par
}
{\xe \v temperature\:LSM9DS1}
{\xe \v LSM9DS1\:temperature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t LSM9DS1::temperature}}
\par
{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file SparkFunLSM9DS1.h.}\par
{
Referenced by readTemp().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/SparkFun_LSM9DS1/src/{\b SparkFunLSM9DS1.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/SparkFun_LSM9DS1/src/{\b SparkFunLSM9DS1.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MAG3110 Class Reference\par \pard\plain 
{\tc\tcl2 \v MAG3110}
{\xe \v MAG3110}
{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
\par
{
{\f2 #include <MAG3110.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MAG3110} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~MAG3110} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b read_x} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b read_y} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b read_z} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b config} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 5 of file MAG3110.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MAG3110\:MAG3110}
{\xe \v MAG3110\:MAG3110}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MAG3110::MAG3110 ()}}
\par
{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 8 of file MAG3110.cpp.}\par
}
{\xe \v ~MAG3110\:MAG3110}
{\xe \v MAG3110\:~MAG3110}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MAG3110::~MAG3110 (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 12 of file MAG3110.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v config\:MAG3110}
{\xe \v MAG3110\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MAG3110::config (void )}}
\par
{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 16 of file MAG3110.cpp.}\par
{
References MAG_ADDR, and Wire.}\par
}
{\xe \v read_x\:MAG3110}
{\xe \v MAG3110\:read_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MAG3110::read_x (void )}}
\par
{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file MAG3110.cpp.}\par
{
References MAG_ADDR, and Wire.}\par
}
{\xe \v read_y\:MAG3110}
{\xe \v MAG3110\:read_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MAG3110::read_y (void )}}
\par
{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file MAG3110.cpp.}\par
{
References MAG_ADDR, and Wire.}\par
}
{\xe \v read_z\:MAG3110}
{\xe \v MAG3110\:read_z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MAG3110::read_z (void )}}
\par
{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 98 of file MAG3110.cpp.}\par
{
References MAG_ADDR, and Wire.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/MAG3110/{\b MAG3110.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/MAG3110/{\b MAG3110.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MAX17043 Class Reference\par \pard\plain 
{\tc\tcl2 \v MAX17043}
{\xe \v MAX17043}
{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
\par
{
{\f2 #include <SparkFunMAX17043.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MAX17043} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b begin} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b quickStart} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getVoltage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getSOC} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b getVersion} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getThreshold} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b setThreshold} (uint8_t percent)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getAlert} (bool clear=false)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b clearAlert} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b sleep} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b wake} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b reset} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b getConfigRegister} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getCompensation} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b setCompensation} (uint8_t newCompensation)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 28 of file SparkFunMAX17043.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MAX17043\:MAX17043}
{\xe \v MAX17043\:MAX17043}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MAX17043::MAX17043 ()}}
\par
{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file SparkFunMAX17043.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:MAX17043}
{\xe \v MAX17043\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::begin (void )}}
\par
{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file SparkFunMAX17043.cpp.}\par
{
References Wire.}\par
{
Referenced by setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_a_x17043_a7f434b44531c65f4a3b31c4f5ebcb887_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v clearAlert\:MAX17043}
{\xe \v MAX17043\:clearAlert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::clearAlert ()}}
\par
{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 135 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_CONFIG.}\par
}
{\xe \v getAlert\:MAX17043}
{\xe \v MAX17043\:getAlert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::getAlert (bool  {\i clear} = {\f2 false})}}
\par
{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_CONFIG.}\par
{
Referenced by loop().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_a_x17043_ab62ceb6112cf661a9ca4ffa54d4e72c5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getCompensation\:MAX17043}
{\xe \v MAX17043\:getCompensation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::getCompensation ()}}
\par
{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 188 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_CONFIG.}\par
}
{\xe \v getConfigRegister\:MAX17043}
{\xe \v MAX17043\:getConfigRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t MAX17043::getConfigRegister ()}}
\par
{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 195 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_CONFIG.}\par
}
{\xe \v getSOC\:MAX17043}
{\xe \v MAX17043\:getSOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float MAX17043::getSOC ()}}
\par
{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_SOC, and soc.}\par
{
Referenced by loop(), and readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_a_x17043_a9567ba1006631e2d262a01ced542523f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getThreshold\:MAX17043}
{\xe \v MAX17043\:getThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::getThreshold ()}}
\par
{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_CONFIG.}\par
}
{\xe \v getVersion\:MAX17043}
{\xe \v MAX17043\:getVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t MAX17043::getVersion ()}}
\par
{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_VERSION.}\par
}
{\xe \v getVoltage\:MAX17043}
{\xe \v MAX17043\:getVoltage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float MAX17043::getVoltage ()}}
\par
{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_VCELL.}\par
{
Referenced by loop(), and readSensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_a_x17043_afcba3e7ee660335c78995d337cab1678_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v quickStart\:MAX17043}
{\xe \v MAX17043\:quickStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::quickStart ()}}
\par
{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_MODE, and MAX17043_MODE_QUICKSTART.}\par
{
Referenced by setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_a_x17043_a853dbf7908a1c4a37405050ec5e9c9e6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v reset\:MAX17043}
{\xe \v MAX17043\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::reset (void )}}
\par
{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_COMMAND, and MAX17043_COMMAND_POR.}\par
}
{\xe \v setCompensation\:MAX17043}
{\xe \v MAX17043\:setCompensation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::setCompensation (uint8_t  {\i newCompensation})}}
\par
{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 200 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_ADDRESS, MAX17043_CONFIG, and Wire.}\par
}
{\xe \v setThreshold\:MAX17043}
{\xe \v MAX17043\:setThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::setThreshold (uint8_t  {\i percent})}}
\par
{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_CONFIG.}\par
{
Referenced by setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_a_x17043_a1399c759fa7039420a2ac324db843a1f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sleep\:MAX17043}
{\xe \v MAX17043\:sleep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::sleep ()}}
\par
{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 161 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_CONFIG.}\par
}
{\xe \v wake\:MAX17043}
{\xe \v MAX17043\:wake}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MAX17043::wake ()}}
\par
{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 172 of file SparkFunMAX17043.cpp.}\par
{
References MAX17043_CONFIG.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/SparkFun_MAX17043/{\b SparkFunMAX17043.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/SparkFun_MAX17043/{\b SparkFunMAX17043.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MS5611 Class Reference\par \pard\plain 
{\tc\tcl2 \v MS5611}
{\xe \v MS5611}
{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
\par
{
{\f2 #include <MS5611.h>}}\par
Inheritance diagram for MS5611:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5611__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for MS5611:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5611__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MS5611} (TwoWire *aWire)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Readout} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 27 of file MS5611.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MS5611\:MS5611}
{\xe \v MS5611\:MS5611}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MS5611::MS5611 (TwoWire *  {\i aWire})}}
\par
{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file MS5611.cpp.}\par
{
References I2C_MS5611, and MS5xxx::setI2Caddr().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5611_a48fcc0f37a1c9edcb510811f970b767b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Readout\:MS5611}
{\xe \v MS5611\:Readout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MS5611::Readout (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file MS5611.cpp.}\par
{
References MS5xxx::C, MS5xxx_CMD_ADC_4096, MS5xxx_CMD_ADC_D1, MS5xxx_CMD_ADC_D2, MS5xxx::P, MS5xxx::read_adc(), and MS5xxx::TEMP.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5611_a59c247e1180a8c4d62a6dcbe49f22b71_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/src/{\b MS5611.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/src/{\b MS5611.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MS5xxx Class Reference\par \pard\plain 
{\tc\tcl2 \v MS5xxx}
{\xe \v MS5xxx}
{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
\par
{
{\f2 #include <MS5xxx.h>}}\par
Inheritance diagram for MS5xxx:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MS5xxx} (TwoWire *aWire)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setI2Caddr} (char aAddr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b connect} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ReadProm} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Readout} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b Calc_CRC4} (unsigned char poly=0x30)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b Read_CRC4} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b CRCcodeTest} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b Read_C} (unsigned int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetTemp} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetPres} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b send_cmd} (unsigned char aCMD)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b read_adc} (unsigned char aCMD)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b C} [8]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b P}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TEMP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b i2caddr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TwoWire * {\b _Wire}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 45 of file MS5xxx.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MS5xxx\:MS5xxx}
{\xe \v MS5xxx\:MS5xxx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MS5xxx::MS5xxx (TwoWire *  {\i aWire})}}
\par
{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file MS5xxx.cpp.}\par
{
References _Wire.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Calc_CRC4\:MS5xxx}
{\xe \v MS5xxx\:Calc_CRC4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int MS5xxx::Calc_CRC4 (unsigned char  {\i poly} = {\f2 0x30})}}
\par
{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file MS5xxx.cpp.}\par
{
References C.}\par
{
Referenced by CRCcodeTest().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx_a2789efaa473b6bd09fa5d68d0cd0b838_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v connect\:MS5xxx}
{\xe \v MS5xxx\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t MS5xxx::connect ()}}
\par
{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file MS5xxx.cpp.}\par
{
References _Wire, and i2caddr.}\par
}
{\xe \v CRCcodeTest\:MS5xxx}
{\xe \v MS5xxx\:CRCcodeTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char MS5xxx::CRCcodeTest ()}}
\par
{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 191 of file MS5xxx.cpp.}\par
{
References C, Calc_CRC4(), i, and ReadProm().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx_ab302490c7aeb6cf7ce0f7086f33481cf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetPres\:MS5xxx}
{\xe \v MS5xxx\:GetPres}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MS5xxx::GetPres ()}}
\par
{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 187 of file MS5xxx.cpp.}\par
{
References P.}\par
}
{\xe \v GetTemp\:MS5xxx}
{\xe \v MS5xxx\:GetTemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MS5xxx::GetTemp ()}}
\par
{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file MS5xxx.cpp.}\par
{
References TEMP.}\par
}
{\xe \v read_adc\:MS5xxx}
{\xe \v MS5xxx\:read_adc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long MS5xxx::read_adc (unsigned char  {\i aCMD}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file MS5xxx.cpp.}\par
{
References _Wire, i2caddr, MS5xxx_CMD_ADC_1024, MS5xxx_CMD_ADC_2048, MS5xxx_CMD_ADC_256, MS5xxx_CMD_ADC_4096, MS5xxx_CMD_ADC_512, MS5xxx_CMD_ADC_CONV, MS5xxx_CMD_ADC_READ, and send_cmd().}\par
{
Referenced by MS5611::Readout(), and Readout().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx_add087d5023754831de3ff629c7ced410_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx_add087d5023754831de3ff629c7ced410_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v Read_C\:MS5xxx}
{\xe \v MS5xxx\:Read_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int MS5xxx::Read_C (unsigned int  {\i index})}}
\par
{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 108 of file MS5xxx.cpp.}\par
{
References C.}\par
}
{\xe \v Read_CRC4\:MS5xxx}
{\xe \v MS5xxx\:Read_CRC4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int MS5xxx::Read_CRC4 ()}}
\par
{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file MS5xxx.cpp.}\par
{
References C.}\par
}
{\xe \v Readout\:MS5xxx}
{\xe \v MS5xxx\:Readout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MS5xxx::Readout ()}}
\par
{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file MS5xxx.cpp.}\par
{
References C, MS5xxx_CMD_ADC_4096, MS5xxx_CMD_ADC_D1, MS5xxx_CMD_ADC_D2, P, read_adc(), and TEMP.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx_abb83428fd002519dc52a666a70966eda_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ReadProm\:MS5xxx}
{\xe \v MS5xxx\:ReadProm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MS5xxx::ReadProm ()}}
\par
{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file MS5xxx.cpp.}\par
{
References _Wire, C, i, i2caddr, MS5xxx_CMD_PROM_RD, MS5xxx_CMD_RESET, and send_cmd().}\par
{
Referenced by CRCcodeTest().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx_a654f0608616be8c4b13ec9850caaead0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx_a654f0608616be8c4b13ec9850caaead0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v send_cmd\:MS5xxx}
{\xe \v MS5xxx\:send_cmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte MS5xxx::send_cmd (unsigned char  {\i aCMD}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file MS5xxx.cpp.}\par
{
References _Wire, and i2caddr.}\par
{
Referenced by read_adc(), and ReadProm().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx_a8c77c76df98347ebf0bfcafd68825552_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setI2Caddr\:MS5xxx}
{\xe \v MS5xxx\:setI2Caddr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MS5xxx::setI2Caddr (char  {\i aAddr})}}
\par
{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file MS5xxx.cpp.}\par
{
References i2caddr.}\par
{
Referenced by MS5611::MS5611().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_m_s5xxx_a6c3d564fe39d14dfa8804fa1600077d7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _Wire\:MS5xxx}
{\xe \v MS5xxx\:_Wire}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TwoWire* MS5xxx::_Wire{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file MS5xxx.h.}\par
{
Referenced by connect(), MS5xxx(), read_adc(), ReadProm(), and send_cmd().}\par
}
{\xe \v C\:MS5xxx}
{\xe \v MS5xxx\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int MS5xxx::C[8]{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file MS5xxx.h.}\par
{
Referenced by Calc_CRC4(), CRCcodeTest(), Read_C(), Read_CRC4(), MS5611::Readout(), Readout(), and ReadProm().}\par
}
{\xe \v i2caddr\:MS5xxx}
{\xe \v MS5xxx\:i2caddr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char MS5xxx::i2caddr{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file MS5xxx.h.}\par
{
Referenced by connect(), read_adc(), ReadProm(), send_cmd(), and setI2Caddr().}\par
}
{\xe \v P\:MS5xxx}
{\xe \v MS5xxx\:P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MS5xxx::P{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file MS5xxx.h.}\par
{
Referenced by GetPres(), MS5611::Readout(), and Readout().}\par
}
{\xe \v TEMP\:MS5xxx}
{\xe \v MS5xxx\:TEMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MS5xxx::TEMP{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file MS5xxx.h.}\par
{
Referenced by GetTemp(), MS5611::Readout(), and Readout().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/src/{\b MS5xxx.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/src/{\b MS5xxx.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OneWire Class Reference\par \pard\plain 
{\tc\tcl2 \v OneWire}
{\xe \v OneWire}
{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
\par
{
{\f2 #include <OneWire.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OneWire} (uint8_t pin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b reset} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b select} (const uint8_t rom[8])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b skip} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write} (uint8_t v, uint8_t power=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write_bytes} (const uint8_t *buf, uint16_t count, bool power=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b read} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_bytes} (uint8_t *buf, uint16_t count)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write_bit} (uint8_t v)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b read_bit} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b depower} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset_search} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b target_search} (uint8_t family_code)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b search} (uint8_t *newAddr, bool search_mode=true)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint8_t {\b crc8} (const uint8_t *addr, uint8_t len)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b check_crc16} (const uint8_t *input, uint16_t len, const uint8_t *inverted_crc, uint16_t crc=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint16_t {\b crc16} (const uint8_t *input, uint16_t len, uint16_t crc=0)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 254 of file OneWire.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OneWire\:OneWire}
{\xe \v OneWire\:OneWire}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
OneWire::OneWire (uint8_t  {\i pin})}}
\par
{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file OneWire.cpp.}\par
{
References PIN_TO_BASEREG, PIN_TO_BITMASK, and reset_search().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_aa3f23dc51d861a8d257648c507b14e8d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v check_crc16\:OneWire}
{\xe \v OneWire\:check_crc16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool OneWire::check_crc16 (const uint8_t *  {\i input}, uint16_t  {\i len}, const uint8_t *  {\i inverted_crc}, uint16_t  {\i crc} = {\f2 0}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 541 of file OneWire.cpp.}\par
{
References crc16().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_a089c502d26caca5214264261db82d011_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v crc16\:OneWire}
{\xe \v OneWire\:crc16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t OneWire::crc16 (const uint8_t *  {\i input}, uint16_t  {\i len}, uint16_t  {\i crc} = {\f2 0}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 547 of file OneWire.cpp.}\par
{
References i.}\par
{
Referenced by check_crc16().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_a685131803ff9bd250926de68fb477998_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v crc8\:OneWire}
{\xe \v OneWire\:crc8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t OneWire::crc8 (const uint8_t *  {\i addr}, uint8_t  {\i len}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 505 of file OneWire.cpp.}\par
{
References i, and pgm_read_byte.}\par
{
Referenced by DallasTemperature::isConnected(), and DallasTemperature::validAddress().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_ae3486a669581b750e4fdf3f3a12b05f1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v depower\:OneWire}
{\xe \v OneWire\:depower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OneWire::depower (void )}}
\par
{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 292 of file OneWire.cpp.}\par
{
References DIRECT_MODE_INPUT.}\par
}
{\xe \v read\:OneWire}
{\xe \v OneWire\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t OneWire::read (void )}}
\par
{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 257 of file OneWire.cpp.}\par
{
References read_bit().}\par
{
Referenced by read_bytes(), and DallasTemperature::readScratchPad().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_afd9bdb8b5a5b69b394dfc76352e00e21_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_afd9bdb8b5a5b69b394dfc76352e00e21_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v read_bit\:OneWire}
{\xe \v OneWire\:read_bit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t OneWire::read_bit (void )}}
\par
{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 204 of file OneWire.cpp.}\par
{
References DIRECT_MODE_INPUT, DIRECT_MODE_OUTPUT, DIRECT_READ, DIRECT_WRITE_LOW, IO_REG_ASM, and IO_REG_TYPE.}\par
{
Referenced by DallasTemperature::isConversionComplete(), DallasTemperature::rawToFahrenheit(), read(), DallasTemperature::readPowerSupply(), and search().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_aeae4c2798b70d9d0ba3091c03ee2d056_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v read_bytes\:OneWire}
{\xe \v OneWire\:read_bytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OneWire::read_bytes (uint8_t *  {\i buf}, uint16_t  {\i count})}}
\par
{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 267 of file OneWire.cpp.}\par
{
References i, and read().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_a2407440e8e25b624617593f8ad6447d4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v reset\:OneWire}
{\xe \v OneWire\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t OneWire::reset (void )}}
\par
{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 142 of file OneWire.cpp.}\par
{
References DIRECT_MODE_INPUT, DIRECT_MODE_OUTPUT, DIRECT_READ, DIRECT_WRITE_LOW, IO_REG_ASM, and IO_REG_TYPE.}\par
{
Referenced by DallasTemperature::rawToFahrenheit(), DallasTemperature::readPowerSupply(), DallasTemperature::readScratchPad(), DallasTemperature::requestTemperatures(), DallasTemperature::requestTemperaturesByAddress(), search(), and DallasTemperature::writeScratchPad().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_a6a742a9112392567eae3d06dde067c07_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v reset_search\:OneWire}
{\xe \v OneWire\:reset_search}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OneWire::reset_search ()}}
\par
{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 305 of file OneWire.cpp.}\par
{
References FALSE, and i.}\par
{
Referenced by DallasTemperature::begin(), DallasTemperature::getAddress(), and OneWire().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_aae5efdf67928b5ee312ab7d7906416fa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v search\:OneWire}
{\xe \v OneWire\:search}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t OneWire::search (uint8_t *  {\i newAddr}, bool  {\i search_mode} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 347 of file OneWire.cpp.}\par
{
References FALSE, i, PROGMEM, read_bit(), reset(), TRUE, write(), and write_bit().}\par
{
Referenced by DallasTemperature::begin().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_ad84f9ed7a1b2617f580d0d1e96c52cac_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_ad84f9ed7a1b2617f580d0d1e96c52cac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v select\:OneWire}
{\xe \v OneWire\:select}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OneWire::select (const uint8_t  {\i rom}[8])}}
\par
{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 275 of file OneWire.cpp.}\par
{
References i, and write().}\par
{
Referenced by DallasTemperature::readPowerSupply(), DallasTemperature::readScratchPad(), DallasTemperature::requestTemperaturesByAddress(), and DallasTemperature::writeScratchPad().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_accf808390abd63d3c7bce35677784384_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_accf808390abd63d3c7bce35677784384_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v skip\:OneWire}
{\xe \v OneWire\:skip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OneWire::skip (void )}}
\par
{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 287 of file OneWire.cpp.}\par
{
References write().}\par
{
Referenced by DallasTemperature::requestTemperatures().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_ae3780e2b0ea2ebf6be88298412ac7798_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_ae3780e2b0ea2ebf6be88298412ac7798_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v target_search\:OneWire}
{\xe \v OneWire\:target_search}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OneWire::target_search (uint8_t  {\i family_code})}}
\par
{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 320 of file OneWire.cpp.}\par
{
References FALSE, and i.}\par
}
{\xe \v write\:OneWire}
{\xe \v OneWire\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OneWire::write (uint8_t  {\i v}, uint8_t  {\i power} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 229 of file OneWire.cpp.}\par
{
References DIRECT_MODE_INPUT, DIRECT_WRITE_LOW, and write_bit().}\par
{
Referenced by DallasTemperature::rawToFahrenheit(), DallasTemperature::readPowerSupply(), DallasTemperature::readScratchPad(), DallasTemperature::requestTemperatures(), DallasTemperature::requestTemperaturesByAddress(), search(), select(), skip(), write_bytes(), and DallasTemperature::writeScratchPad().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_a843e9e7e57ed615b4880be0b76b40b7d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_a843e9e7e57ed615b4880be0b76b40b7d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v write_bit\:OneWire}
{\xe \v OneWire\:write_bit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OneWire::write_bit (uint8_t  {\i v})}}
\par
{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 176 of file OneWire.cpp.}\par
{
References DIRECT_MODE_OUTPUT, DIRECT_WRITE_HIGH, DIRECT_WRITE_LOW, IO_REG_ASM, and IO_REG_TYPE.}\par
{
Referenced by DallasTemperature::rawToFahrenheit(), search(), and write().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_a6bbc58276d1cb08653dab3ea35378f94_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v write_bytes\:OneWire}
{\xe \v OneWire\:write_bytes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void OneWire::write_bytes (const uint8_t *  {\i buf}, uint16_t  {\i count}, bool  {\i power} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 243 of file OneWire.cpp.}\par
{
References DIRECT_MODE_INPUT, DIRECT_WRITE_LOW, i, and write().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_one_wire_a0fc1e0bdc2ab1f062c98567fa60a69ae_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/OneWire2/{\b OneWire.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/OneWire2/{\b OneWire.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PID Class Reference\par \pard\plain 
{\tc\tcl2 \v PID}
{\xe \v PID}
{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
\par
{
{\f2 #include <PID_v1.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PID} (double *, double *, double *, double, double, double, int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetMode} (int Mode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Compute} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetOutputLimits} (double, double)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetTunings} (double, double, double)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetControllerDirection} (int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetSampleTime} (int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetKp} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetKi} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetKd} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetMode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b GetDirection} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 5 of file PID_v1.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v PID\:PID}
{\xe \v PID\:PID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
PID::PID (double *  {\i Input}, double *  {\i Output}, double *  {\i Setpoint}, double  {\i Kp}, double  {\i Ki}, double  {\i Kd}, int  {\i ControllerDirection})}}
\par
{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file PID_v1.cpp.}\par
{
References SetControllerDirection(), SetOutputLimits(), and SetTunings().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_p_i_d_aba833737b9cb8a9da181d392a0306c1b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Compute\:PID}
{\xe \v PID\:Compute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool PID::Compute ()}}
\par
{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file PID_v1.cpp.}\par
{
References now().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_p_i_d_a8d154fe921cba7963c49d7d2b42eccf1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GetDirection\:PID}
{\xe \v PID\:GetDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int PID::GetDirection ()}}
\par
{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file PID_v1.cpp.}\par
}
{\xe \v GetKd\:PID}
{\xe \v PID\:GetKd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double PID::GetKd ()}}
\par
{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file PID_v1.cpp.}\par
}
{\xe \v GetKi\:PID}
{\xe \v PID\:GetKi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double PID::GetKi ()}}
\par
{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 191 of file PID_v1.cpp.}\par
}
{\xe \v GetKp\:PID}
{\xe \v PID\:GetKp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double PID::GetKp ()}}
\par
{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 190 of file PID_v1.cpp.}\par
}
{\xe \v GetMode\:PID}
{\xe \v PID\:GetMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int PID::GetMode ()}}
\par
{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 193 of file PID_v1.cpp.}\par
{
References AUTOMATIC, and MANUAL.}\par
}
{\xe \v SetControllerDirection\:PID}
{\xe \v PID\:SetControllerDirection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PID::SetControllerDirection (int  {\i Direction})}}
\par
{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 174 of file PID_v1.cpp.}\par
{
Referenced by PID().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_p_i_d_a66df966f739e19482aaba38cf9308c4e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetMode\:PID}
{\xe \v PID\:SetMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PID::SetMode (int  {\i Mode})}}
\par
{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file PID_v1.cpp.}\par
{
References AUTOMATIC.}\par
}
{\xe \v SetOutputLimits\:PID}
{\xe \v PID\:SetOutputLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PID::SetOutputLimits (double  {\i Min}, double  {\i Max})}}
\par
{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file PID_v1.cpp.}\par
{
Referenced by PID().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_p_i_d_a5645914427bd740b12faa97cc25a8414_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SetSampleTime\:PID}
{\xe \v PID\:SetSampleTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PID::SetSampleTime (int  {\i NewSampleTime})}}
\par
{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file PID_v1.cpp.}\par
}
{\xe \v SetTunings\:PID}
{\xe \v PID\:SetTunings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void PID::SetTunings (double  {\i Kp}, double  {\i Ki}, double  {\i Kd})}}
\par
{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file PID_v1.cpp.}\par
{
References REVERSE.}\par
{
Referenced by PID().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_p_i_d_a848bb1bbeabd59d38c9c955958e3e798_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Arduino-PID-Library/{\b PID_v1.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Arduino-PID-Library/{\b PID_v1.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RawDegrees Struct Reference\par \pard\plain 
{\tc\tcl2 \v RawDegrees}
{\xe \v RawDegrees}
{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RawDegrees} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b deg}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b billionths}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b negative}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 43 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RawDegrees\:RawDegrees}
{\xe \v RawDegrees\:RawDegrees}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RawDegrees::RawDegrees (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v billionths\:RawDegrees}
{\xe \v RawDegrees\:billionths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t RawDegrees::billionths}}
\par
{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSPlus::parseDegrees().}\par
}
{\xe \v deg\:RawDegrees}
{\xe \v RawDegrees\:deg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t RawDegrees::deg}}
\par
{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSPlus::libraryVersion(), and TinyGPSPlus::parseDegrees().}\par
}
{\xe \v negative\:RawDegrees}
{\xe \v RawDegrees\:negative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RawDegrees::negative}}
\par
{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSPlus::parseDegrees().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RTC_DS1307 Class Reference\par \pard\plain 
{\tc\tcl2 \v RTC_DS1307}
{\xe \v RTC_DS1307}
{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
\par
{
{\f2 #include <RTC_DS1307.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b isrunning} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint8_t {\b begin} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adjust} (const {\b DateTime} &dt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b DateTime} {\b now} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 10 of file RTC_DS1307.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v adjust\:RTC_DS1307}
{\xe \v RTC_DS1307\:adjust}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS1307::adjust (const {\b DateTime} &  {\i dt}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file RTC_DS1307.cpp.}\par
{
References bin2bcd(), DateTime::day(), DS1307_ADDRESS, DateTime::hour(), DateTime::minute(), DateTime::month(), DateTime::second(), Wire, and DateTime::year().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s1307_a6e38778b577a80008e9dc630384b8520_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v begin\:RTC_DS1307}
{\xe \v RTC_DS1307\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTC_DS1307::begin (void ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file RTC_DS1307.cpp.}\par
}
{\xe \v isrunning\:RTC_DS1307}
{\xe \v RTC_DS1307\:isrunning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTC_DS1307::isrunning (void )}}
\par
{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file RTC_DS1307.cpp.}\par
{
References DS1307_ADDRESS, and Wire.}\par
}
{\xe \v now\:RTC_DS1307}
{\xe \v RTC_DS1307\:now}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DateTime} RTC_DS1307::now (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file RTC_DS1307.cpp.}\par
{
References bcd2bin(), DS1307_ADDRESS, and Wire.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s1307_a9f5f5dbcce65b67e00b50808a45a4249_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTC_DS1307.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTC_DS1307.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RTC_DS3231 Class Reference\par \pard\plain 
{\tc\tcl2 \v RTC_DS3231}
{\xe \v RTC_DS3231}
{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
\par
{
{\f2 #include <RTC_DS3231.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b isrunning} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint8_t {\b begin} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adjust} (const {\b DateTime} &dt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b DateTime} {\b now} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static float {\b getTempAsFloat} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int16_t {\b getTempAsWord} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b enable32kHz} (uint8_t enable)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b forceTempConv} (uint8_t block)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SQWEnable} (uint8_t enable)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b BBSQWEnable} (uint8_t enable)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SQWFrequency} (uint8_t freq)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b getControlRegisterData} (char &datastr)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 19 of file RTC_DS3231.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v adjust\:RTC_DS3231}
{\xe \v RTC_DS3231\:adjust}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS3231::adjust (const {\b DateTime} &  {\i dt}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the datetime of the RTC \par
}{
Definition at line 51 of file RTC_DS3231.cpp.}\par
{
References bin2bcd(), DateTime::day(), DS3231_ADDRESS, DS3231_REG_SECONDS, DateTime::hour(), DateTime::minute(), DateTime::month(), DateTime::second(), Wire, and DateTime::year().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3231_ae8d2a40c8ada023f5ab502a77631abb0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v BBSQWEnable\:RTC_DS3231}
{\xe \v RTC_DS3231\:BBSQWEnable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS3231::BBSQWEnable (uint8_t  {\i enable}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable or disable the output to the SQW pin. Send 1 or true to enable. This method enables BOTH the square wave and the battery backed output. \par
}{
Definition at line 266 of file RTC_DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_CONTROL, and Wire.}\par
}
{\xe \v begin\:RTC_DS3231}
{\xe \v RTC_DS3231\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTC_DS3231::begin (void ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file RTC_DS3231.cpp.}\par
}
{\xe \v enable32kHz\:RTC_DS3231}
{\xe \v RTC_DS3231\:enable32kHz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS3231::enable32kHz (uint8_t  {\i enable}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable or disable the 32kHz pin. When 1 it will output 32768kHz. \par
}{
Definition at line 164 of file RTC_DS3231.cpp.}\par
{
References bcd2bin(), DS3231_ADDRESS, DS3231_REG_STATUS_CTL, and Wire.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3231_ad892efd8d357db71da0c672523f6d699_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v forceTempConv\:RTC_DS3231}
{\xe \v RTC_DS3231\:forceTempConv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS3231::forceTempConv (uint8_t  {\i block}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Force the temp sensor to convert the temp into digital code and execute the TCXO algorithm. The {\b DS3231} normally does this every 64 seconds anyway.\par
NOTE: This is a BLOCKING method. You have been warned.\par
This method has not been fully debugged. \par
}{
Definition at line 198 of file RTC_DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_CONTROL, and Wire.}\par
}
{\xe \v getControlRegisterData\:RTC_DS3231}
{\xe \v RTC_DS3231\:getControlRegisterData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS3231::getControlRegisterData (char &  {\i datastr}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 318 of file RTC_DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_CONTROL, i, and Wire.}\par
}
{\xe \v getTempAsFloat\:RTC_DS3231}
{\xe \v RTC_DS3231\:getTempAsFloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RTC_DS3231::getTempAsFloat (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return temperature as a float in degrees C Data is 10bits provided in 2 bytes (11h and and 2bits in 12h) Resolution of 0.25C e.g. 00011001 01 = 25.25C 00011001 = 25 01 = 0.25 * 1 = .25\par
This function has not been tested \par
}{
Definition at line 101 of file RTC_DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_TEMP_MSB, and Wire.}\par
}
{\xe \v getTempAsWord\:RTC_DS3231}
{\xe \v RTC_DS3231\:getTempAsWord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t RTC_DS3231::getTempAsWord (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return temperature as a 2 bytes in degrees C MSB is the significant 00011001 = 25 LSB is the mantissa 00011001 = .25 Display by writing them out to the display MSB . LSB\par
Data from the 3231 10bits provided in 2 bytes (11h and and 2bits in 12h) Resolution of 0.25C e.g. 00011001 01 = 25.25C 00011001 = 25 01 = 0.25 * 1 = .25\par
This function has not been tested \par
}{
Definition at line 136 of file RTC_DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_TEMP_MSB, and Wire.}\par
}
{\xe \v isrunning\:RTC_DS3231}
{\xe \v RTC_DS3231\:isrunning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTC_DS3231::isrunning (void )}}
\par
{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file RTC_DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_STATUS_CTL, and Wire.}\par
}
{\xe \v now\:RTC_DS3231}
{\xe \v RTC_DS3231\:now}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DateTime} RTC_DS3231::now (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the datetime from the RTC \par
}{
Definition at line 71 of file RTC_DS3231.cpp.}\par
{
References bcd2bin(), DS3231_ADDRESS, DS3231_REG_SECONDS, and Wire.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3231_adc740b28876022b852e0f33842632fab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v SQWEnable\:RTC_DS3231}
{\xe \v RTC_DS3231\:SQWEnable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS3231::SQWEnable (uint8_t  {\i enable}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable or disable the output to the SQW pin. Send 1 or true to enable. This function does {\i not}  enable battery backed output which helps conserve battery life. \par
}{
Definition at line 234 of file RTC_DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_CONTROL, and Wire.}\par
}
{\xe \v SQWFrequency\:RTC_DS3231}
{\xe \v RTC_DS3231\:SQWFrequency}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS3231::SQWFrequency (uint8_t  {\i freq}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the output frequence of the squarewave SQW pin\par
HINT: Use the defined frequencies in the .h file \par
}{
Definition at line 298 of file RTC_DS3231.cpp.}\par
{
References DS3231_ADDRESS, DS3231_REG_CONTROL, and Wire.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTC_DS3231.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTC_DS3231.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RTC_DS3234 Class Reference\par \pard\plain 
{\tc\tcl2 \v RTC_DS3234}
{\xe \v RTC_DS3234}
{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
\par
{
{\f2 #include <RTC_DS3234.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RTC_DS3234} (int _cs_pin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b begin} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adjust} (const {\b DateTime} &dt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b isrunning} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DateTime} {\b now} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cs} (int _value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 10 of file RTC_DS3234.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RTC_DS3234\:RTC_DS3234}
{\xe \v RTC_DS3234\:RTC_DS3234}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RTC_DS3234::RTC_DS3234 (int  {\i _cs_pin}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 13 of file RTC_DS3234.h.}\par
{
References adjust(), begin(), cs(), isrunning(), and now().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_a28e48a48c9b04692e5c5049e94e389f1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v adjust\:RTC_DS3234}
{\xe \v RTC_DS3234\:adjust}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS3234::adjust (const {\b DateTime} &  {\i dt})}}
\par
{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file RTC_DS3234.cpp.}\par
{
References bin2bcd(), cs(), DateTime::day(), DateTime::dayOfWeek(), DateTime::hour(), DateTime::minute(), DateTime::month(), DateTime::second(), SECONDS_W, and DateTime::year().}\par
{
Referenced by RTC_DS3234().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_a13766581ca199cae55d02327c39f78da_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_a13766581ca199cae55d02327c39f78da_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v begin\:RTC_DS3234}
{\xe \v RTC_DS3234\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTC_DS3234::begin (void )}}
\par
{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file RTC_DS3234.cpp.}\par
{
References CONTROL_STATUS_W, CONTROL_W, and cs().}\par
{
Referenced by RTC_DS3234().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_acf87a4369cb5b08fd1be62696a6be1a8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_acf87a4369cb5b08fd1be62696a6be1a8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v cs\:RTC_DS3234}
{\xe \v RTC_DS3234\:cs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_DS3234::cs (int  {\i _value}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file RTC_DS3234.cpp.}\par
{
Referenced by adjust(), begin(), isrunning(), now(), and RTC_DS3234().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_a4c3b3cf6e91e926d0d038b8d60a99334_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isrunning\:RTC_DS3234}
{\xe \v RTC_DS3234\:isrunning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTC_DS3234::isrunning (void )}}
\par
{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file RTC_DS3234.cpp.}\par
{
References CONTROL_R, cs(), and OSF.}\par
{
Referenced by RTC_DS3234().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_aff58814e7f5706f341edbf9d68c4665b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_aff58814e7f5706f341edbf9d68c4665b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v now\:RTC_DS3234}
{\xe \v RTC_DS3234\:now}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DateTime} RTC_DS3234::now ()}}
\par
{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file RTC_DS3234.cpp.}\par
{
References bcd2bin(), cs(), and SECONDS_R.}\par
{
Referenced by RTC_DS3234().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_a1b22090fcfdbef26725da0232157a3c1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___d_s3234_a1b22090fcfdbef26725da0232157a3c1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTC_DS3234.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTC_DS3234.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RTC_Millis Class Reference\par \pard\plain 
{\tc\tcl2 \v RTC_Millis}
{\xe \v RTC_Millis}
{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
\par
{
{\f2 #include <RTClib.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} (const {\b DateTime} &dt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adjust} (const {\b DateTime} &dt)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DateTime} {\b now} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RTC_Millis} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b offset}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 60 of file RTClib.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RTC_Millis\:RTC_Millis}
{\xe \v RTC_Millis\:RTC_Millis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RTC_Millis::RTC_Millis (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file RTClib.h.}\par
{
References DateTime::DateTime().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___millis_a2bf3cc48adda7c115553a499a46b3506_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v adjust\:RTC_Millis}
{\xe \v RTC_Millis\:adjust}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_Millis::adjust (const {\b DateTime} &  {\i dt})}}
\par
{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file RTClib.cpp.}\par
{
References DateTime::unixtime().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___millis_adcf4a13317d9b785ae79613b3429a46a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v begin\:RTC_Millis}
{\xe \v RTC_Millis\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_Millis::begin (const {\b DateTime} &  {\i dt}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file RTClib.h.}\par
{
References now().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c___millis_a17670c5fcf820867a8018aa2083c62cd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v now\:RTC_Millis}
{\xe \v RTC_Millis\:now}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DateTime} RTC_Millis::now ()}}
\par
{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 197 of file RTClib.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v offset\:RTC_Millis}
{\xe \v RTC_Millis\:offset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long RTC_Millis::offset{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file RTClib.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTClib.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTClib-master/{\b RTClib.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RTCZero Class Reference\par \pard\plain 
{\tc\tcl2 \v RTCZero}
{\xe \v RTCZero}
{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
\par
{
{\f2 #include <RTCZero.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Alarm_Match} : uint8_t \{ {\b MATCH_OFF} = RTC_MODE2_MASK_SEL_OFF_Val, 
{\b MATCH_SS} = RTC_MODE2_MASK_SEL_SS_Val, 
{\b MATCH_MMSS} = RTC_MODE2_MASK_SEL_MMSS_Val, 
{\b MATCH_HHMMSS} = RTC_MODE2_MASK_SEL_HHMMSS_Val, 
{\b MATCH_DHHMMSS} = RTC_MODE2_MASK_SEL_DDHHMMSS_Val, 
{\b MATCH_MMDDHHMMSS} = RTC_MODE2_MASK_SEL_MMDDHHMMSS_Val, 
{\b MATCH_YYMMDDHHMMSS} = RTC_MODE2_MASK_SEL_YYMMDDHHMMSS_Val
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RTCZero} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} (bool resetTime=false)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enableAlarm} ({\b Alarm_Match} match)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b disableAlarm} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b attachInterrupt} ({\b voidFuncPtr} callback)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b detachInterrupt} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b standbyMode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getSeconds} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getMinutes} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getHours} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getDay} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getMonth} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getYear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getAlarmSeconds} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getAlarmMinutes} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getAlarmHours} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getAlarmDay} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getAlarmMonth} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b getAlarmYear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSeconds} (uint8_t seconds)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinutes} (uint8_t minutes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHours} (uint8_t hours)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTime} (uint8_t hours, uint8_t minutes, uint8_t seconds)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDay} (uint8_t {\b day})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMonth} (uint8_t {\b month})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setYear} (uint8_t {\b year})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDate} (uint8_t {\b day}, uint8_t {\b month}, uint8_t {\b year})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarmSeconds} (uint8_t seconds)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarmMinutes} (uint8_t minutes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarmHours} (uint8_t hours)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarmTime} (uint8_t hours, uint8_t minutes, uint8_t seconds)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarmDay} (uint8_t {\b day})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarmMonth} (uint8_t {\b month})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarmYear} (uint8_t {\b year})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAlarmDate} (uint8_t {\b day}, uint8_t {\b month}, uint8_t {\b year})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b getEpoch} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b getY2kEpoch} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEpoch} (uint32_t ts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY2kEpoch} (uint32_t ts)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 27 of file RTCZero.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v Alarm_Match\:RTCZero}
{\xe \v RTCZero\:Alarm_Match}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b RTCZero::Alarm_Match} : uint8_t}}
\par
{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v MATCH_OFF\:RTCZero}
{\xe \v RTCZero\:MATCH_OFF}
{\b {\i MATCH_OFF{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
}}  \par
{\xe \v MATCH_SS\:RTCZero}
{\xe \v RTCZero\:MATCH_SS}
{\b {\i MATCH_SS{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
}}  \par
{\xe \v MATCH_MMSS\:RTCZero}
{\xe \v RTCZero\:MATCH_MMSS}
{\b {\i MATCH_MMSS{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
}}  \par
{\xe \v MATCH_HHMMSS\:RTCZero}
{\xe \v RTCZero\:MATCH_HHMMSS}
{\b {\i MATCH_HHMMSS{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
}}  \par
{\xe \v MATCH_DHHMMSS\:RTCZero}
{\xe \v RTCZero\:MATCH_DHHMMSS}
{\b {\i MATCH_DHHMMSS{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
}}  \par
{\xe \v MATCH_MMDDHHMMSS\:RTCZero}
{\xe \v RTCZero\:MATCH_MMDDHHMMSS}
{\b {\i MATCH_MMDDHHMMSS{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
}}  \par
{\xe \v MATCH_YYMMDDHHMMSS\:RTCZero}
{\xe \v RTCZero\:MATCH_YYMMDDHHMMSS}
{\b {\i MATCH_YYMMDDHHMMSS{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
}}  \par
\par
}{
Definition at line 30 of file RTCZero.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RTCZero\:RTCZero}
{\xe \v RTCZero\:RTCZero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RTCZero::RTCZero ()}}
\par
{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file RTCZero.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v attachInterrupt\:RTCZero}
{\xe \v RTCZero\:attachInterrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::attachInterrupt ({\b voidFuncPtr}  {\i callback})}}
\par
{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 131 of file RTCZero.cpp.}\par
{
References RTC_callBack.}\par
}
{\xe \v begin\:RTCZero}
{\xe \v RTCZero\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::begin (bool  {\i resetTime} = {\f2 false})}}
\par
{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file RTCZero.cpp.}\par
{
References MATCH_OFF.}\par
}
{\xe \v detachInterrupt\:RTCZero}
{\xe \v RTCZero\:detachInterrupt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::detachInterrupt ()}}
\par
{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 136 of file RTCZero.cpp.}\par
{
References RTC_callBack.}\par
}
{\xe \v disableAlarm\:RTCZero}
{\xe \v RTCZero\:disableAlarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::disableAlarm ()}}
\par
{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file RTCZero.cpp.}\par
}
{\xe \v enableAlarm\:RTCZero}
{\xe \v RTCZero\:enableAlarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::enableAlarm ({\b Alarm_Match}  {\i match})}}
\par
{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file RTCZero.cpp.}\par
}
{\xe \v getAlarmDay\:RTCZero}
{\xe \v RTCZero\:getAlarmDay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getAlarmDay ()}}
\par
{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 204 of file RTCZero.cpp.}\par
}
{\xe \v getAlarmHours\:RTCZero}
{\xe \v RTCZero\:getAlarmHours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getAlarmHours ()}}
\par
{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 199 of file RTCZero.cpp.}\par
}
{\xe \v getAlarmMinutes\:RTCZero}
{\xe \v RTCZero\:getAlarmMinutes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getAlarmMinutes ()}}
\par
{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file RTCZero.cpp.}\par
}
{\xe \v getAlarmMonth\:RTCZero}
{\xe \v RTCZero\:getAlarmMonth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getAlarmMonth ()}}
\par
{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 209 of file RTCZero.cpp.}\par
}
{\xe \v getAlarmSeconds\:RTCZero}
{\xe \v RTCZero\:getAlarmSeconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getAlarmSeconds ()}}
\par
{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 189 of file RTCZero.cpp.}\par
}
{\xe \v getAlarmYear\:RTCZero}
{\xe \v RTCZero\:getAlarmYear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getAlarmYear ()}}
\par
{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 214 of file RTCZero.cpp.}\par
}
{\xe \v getDay\:RTCZero}
{\xe \v RTCZero\:getDay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getDay ()}}
\par
{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file RTCZero.cpp.}\par
}
{\xe \v getEpoch\:RTCZero}
{\xe \v RTCZero\:getEpoch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t RTCZero::getEpoch ()}}
\par
{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 367 of file RTCZero.cpp.}\par
{
References EPOCH_TIME_YEAR_OFF.}\par
{
Referenced by getY2kEpoch().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_aefda208cc548613b8af437ba6e7d1ff3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getHours\:RTCZero}
{\xe \v RTCZero\:getHours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getHours ()}}
\par
{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 165 of file RTCZero.cpp.}\par
}
{\xe \v getMinutes\:RTCZero}
{\xe \v RTCZero\:getMinutes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getMinutes ()}}
\par
{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file RTCZero.cpp.}\par
}
{\xe \v getMonth\:RTCZero}
{\xe \v RTCZero\:getMonth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getMonth ()}}
\par
{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 177 of file RTCZero.cpp.}\par
}
{\xe \v getSeconds\:RTCZero}
{\xe \v RTCZero\:getSeconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getSeconds ()}}
\par
{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 153 of file RTCZero.cpp.}\par
}
{\xe \v getY2kEpoch\:RTCZero}
{\xe \v RTCZero\:getY2kEpoch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t RTCZero::getY2kEpoch ()}}
\par
{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 388 of file RTCZero.cpp.}\par
{
References EPOCH_TIME_OFF, and getEpoch().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_ae660721e3ba20b6701431d8cd8bed697_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v getYear\:RTCZero}
{\xe \v RTCZero\:getYear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t RTCZero::getYear ()}}
\par
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file RTCZero.cpp.}\par
}
{\xe \v setAlarmDate\:RTCZero}
{\xe \v RTCZero\:setAlarmDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setAlarmDate (uint8_t  {\i day}, uint8_t  {\i month}, uint8_t  {\i year})}}
\par
{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 358 of file RTCZero.cpp.}\par
{
References setAlarmDay(), setAlarmMonth(), and setAlarmYear().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a12727934884612e1a125e6be3f461058_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAlarmDay\:RTCZero}
{\xe \v RTCZero\:setAlarmDay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setAlarmDay (uint8_t  {\i day})}}
\par
{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 331 of file RTCZero.cpp.}\par
{
References day().}\par
{
Referenced by setAlarmDate().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a4519ba0e3eee8a3bf03f7c14b3ffa902_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a4519ba0e3eee8a3bf03f7c14b3ffa902_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAlarmHours\:RTCZero}
{\xe \v RTCZero\:setAlarmHours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setAlarmHours (uint8_t  {\i hours})}}
\par
{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 313 of file RTCZero.cpp.}\par
{
Referenced by setAlarmTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a915e7bc9c446be99d52f87cdb76e6cfe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAlarmMinutes\:RTCZero}
{\xe \v RTCZero\:setAlarmMinutes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setAlarmMinutes (uint8_t  {\i minutes})}}
\par
{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 304 of file RTCZero.cpp.}\par
{
Referenced by setAlarmTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a06a7ea4b7bc9d61df4fef51329927b22_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAlarmMonth\:RTCZero}
{\xe \v RTCZero\:setAlarmMonth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setAlarmMonth (uint8_t  {\i month})}}
\par
{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 340 of file RTCZero.cpp.}\par
{
References month().}\par
{
Referenced by setAlarmDate().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a8fe74d0c1ec7922f893addd67dc16aba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a8fe74d0c1ec7922f893addd67dc16aba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAlarmSeconds\:RTCZero}
{\xe \v RTCZero\:setAlarmSeconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setAlarmSeconds (uint8_t  {\i seconds})}}
\par
{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 295 of file RTCZero.cpp.}\par
{
Referenced by setAlarmTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a1b52a726c30602d3769426974f56710f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAlarmTime\:RTCZero}
{\xe \v RTCZero\:setAlarmTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setAlarmTime (uint8_t  {\i hours}, uint8_t  {\i minutes}, uint8_t  {\i seconds})}}
\par
{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 322 of file RTCZero.cpp.}\par
{
References setAlarmHours(), setAlarmMinutes(), and setAlarmSeconds().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_ac16225fa8a9c07a6e8d1157b6d699747_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setAlarmYear\:RTCZero}
{\xe \v RTCZero\:setAlarmYear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setAlarmYear (uint8_t  {\i year})}}
\par
{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 349 of file RTCZero.cpp.}\par
{
References year().}\par
{
Referenced by setAlarmDate().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_ae55ef909edbb893eba4becc8676dd8d6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_ae55ef909edbb893eba4becc8676dd8d6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setDate\:RTCZero}
{\xe \v RTCZero\:setDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setDate (uint8_t  {\i day}, uint8_t  {\i month}, uint8_t  {\i year})}}
\par
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 286 of file RTCZero.cpp.}\par
{
References setDay(), setMonth(), and setYear().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_ad84a83a503a798c3f90f667de21b8a44_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setDay\:RTCZero}
{\xe \v RTCZero\:setDay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setDay (uint8_t  {\i day})}}
\par
{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 259 of file RTCZero.cpp.}\par
{
References day().}\par
{
Referenced by setDate().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_aa1d8a2279ae41b6a7b50c5ccc974b29f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_aa1d8a2279ae41b6a7b50c5ccc974b29f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setEpoch\:RTCZero}
{\xe \v RTCZero\:setEpoch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setEpoch (uint32_t  {\i ts})}}
\par
{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 393 of file RTCZero.cpp.}\par
{
References EPOCH_TIME_OFF, and EPOCH_TIME_YEAR_OFF.}\par
{
Referenced by setY2kEpoch().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a5427b2b365b295516944a69b66e506ba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setHours\:RTCZero}
{\xe \v RTCZero\:setHours}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setHours (uint8_t  {\i hours})}}
\par
{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 241 of file RTCZero.cpp.}\par
{
Referenced by setTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a4bcc1288366d943f3328386c89d39bf3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setMinutes\:RTCZero}
{\xe \v RTCZero\:setMinutes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setMinutes (uint8_t  {\i minutes})}}
\par
{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 232 of file RTCZero.cpp.}\par
{
Referenced by setTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_adeb4f4fbae93c46e227646569113cbd1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setMonth\:RTCZero}
{\xe \v RTCZero\:setMonth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setMonth (uint8_t  {\i month})}}
\par
{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 268 of file RTCZero.cpp.}\par
{
References month().}\par
{
Referenced by setDate().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_af91e416057bf96c8ae94b053e94ec722_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_af91e416057bf96c8ae94b053e94ec722_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setSeconds\:RTCZero}
{\xe \v RTCZero\:setSeconds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setSeconds (uint8_t  {\i seconds})}}
\par
{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 223 of file RTCZero.cpp.}\par
{
Referenced by setTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a654ea54b599e9269369c3d329dd41685_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setTime\:RTCZero}
{\xe \v RTCZero\:setTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setTime (uint8_t  {\i hours}, uint8_t  {\i minutes}, uint8_t  {\i seconds})}}
\par
{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 250 of file RTCZero.cpp.}\par
{
References setHours(), setMinutes(), and setSeconds().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_a2bd00b1214877c926001a8d60acad72d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setY2kEpoch\:RTCZero}
{\xe \v RTCZero\:setY2kEpoch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setY2kEpoch (uint32_t  {\i ts})}}
\par
{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 415 of file RTCZero.cpp.}\par
{
References EPOCH_TIME_OFF, and setEpoch().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_aea1cc5a935bacd8430cb3be5a87281aa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setYear\:RTCZero}
{\xe \v RTCZero\:setYear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::setYear (uint8_t  {\i year})}}
\par
{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 277 of file RTCZero.cpp.}\par
{
References year().}\par
{
Referenced by setDate().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_ad71c689f526dd7e40c6f134b2a223b81_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_r_t_c_zero_ad71c689f526dd7e40c6f134b2a223b81_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v standbyMode\:RTCZero}
{\xe \v RTCZero\:standbyMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTCZero::standbyMode ()}}
\par
{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file RTCZero.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTCZero/src/{\b RTCZero.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/RTCZero/src/{\b RTCZero.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RunningStatistics Struct Reference\par \pard\plain 
{\tc\tcl2 \v RunningStatistics}
{\xe \v RunningStatistics}
{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
\par
{
{\f2 #include <RunningStatistics.h>}}\par
Collaboration diagram for RunningStatistics:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b input} (float inVal)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RunningStatistics} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWindowSecs} (float windowSecs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInitialValue} (float initialMean, float initialSigma=0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b mean} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b variance} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b sigma} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b CV} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b AverageSecs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FilterOnePoleCascade} {\b averageValue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FilterOnePoleCascade} {\b averageSquareValue}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 6 of file RunningStatistics.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v RunningStatistics\:RunningStatistics}
{\xe \v RunningStatistics\:RunningStatistics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RunningStatistics::RunningStatistics ()}}
\par
{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 4 of file RunningStatistics.cpp.}\par
{
References setInitialValue(), and setWindowSecs().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a5ba923774908f70a5827bcdc18f46477_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CV\:RunningStatistics}
{\xe \v RunningStatistics\:CV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RunningStatistics::CV ()}}
\par
{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file RunningStatistics.cpp.}\par
{
References mean(), and sigma().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a5de669afa689ee26e8c3c7286446ef54_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v input\:RunningStatistics}
{\xe \v RunningStatistics\:input}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RunningStatistics::input (float  {\i inVal})}}
\par
{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 21 of file RunningStatistics.cpp.}\par
{
References averageSquareValue, averageValue, and FilterOnePoleCascade::input().}\par
{
Referenced by testRunningStatistics().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_af17e8c856b42305ecb02762730e12919_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_af17e8c856b42305ecb02762730e12919_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v mean\:RunningStatistics}
{\xe \v RunningStatistics\:mean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RunningStatistics::mean ()}}
\par
{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 26 of file RunningStatistics.cpp.}\par
{
References averageValue, and FilterOnePoleCascade::output().}\par
{
Referenced by CV(), and testRunningStatistics().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a4001e3eb9ab7469014f541c16f0b30cd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a4001e3eb9ab7469014f541c16f0b30cd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setInitialValue\:RunningStatistics}
{\xe \v RunningStatistics\:setInitialValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RunningStatistics::setInitialValue (float  {\i initialMean}, float  {\i initialSigma} = {\f2 0})}}
\par
{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 16 of file RunningStatistics.cpp.}\par
{
References averageSquareValue, averageValue, and FilterOnePoleCascade::setToNewValue().}\par
{
Referenced by RunningStatistics(), and testRunningStatistics().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a0695a069bf0f534f3a1987699bdfb7ea_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a0695a069bf0f534f3a1987699bdfb7ea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setWindowSecs\:RunningStatistics}
{\xe \v RunningStatistics\:setWindowSecs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RunningStatistics::setWindowSecs (float  {\i windowSecs})}}
\par
{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 9 of file RunningStatistics.cpp.}\par
{
References AverageSecs, averageSquareValue, averageValue, and FilterOnePoleCascade::setRiseTime().}\par
{
Referenced by RunningStatistics().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a035fade92bd2f6fb0bbde8e4857c33f7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a035fade92bd2f6fb0bbde8e4857c33f7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sigma\:RunningStatistics}
{\xe \v RunningStatistics\:sigma}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RunningStatistics::sigma ()}}
\par
{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file RunningStatistics.cpp.}\par
{
References variance().}\par
{
Referenced by CV(), and testRunningStatistics().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a46189b5442a6bd5bbd303d239ca75a89_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a46189b5442a6bd5bbd303d239ca75a89_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v variance\:RunningStatistics}
{\xe \v RunningStatistics\:variance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RunningStatistics::variance ()}}
\par
{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file RunningStatistics.cpp.}\par
{
References averageSquareValue, averageValue, and FilterOnePoleCascade::output().}\par
{
Referenced by sigma().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a5401a1f86867e7de5987cbb14dc496df_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_running_statistics_a5401a1f86867e7de5987cbb14dc496df_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v AverageSecs\:RunningStatistics}
{\xe \v RunningStatistics\:AverageSecs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float RunningStatistics::AverageSecs}}
\par
{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 11 of file RunningStatistics.h.}\par
{
Referenced by setWindowSecs().}\par
}
{\xe \v averageSquareValue\:RunningStatistics}
{\xe \v RunningStatistics\:averageSquareValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FilterOnePoleCascade} RunningStatistics::averageSquareValue}}
\par
{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 14 of file RunningStatistics.h.}\par
{
Referenced by input(), setInitialValue(), setWindowSecs(), and variance().}\par
}
{\xe \v averageValue\:RunningStatistics}
{\xe \v RunningStatistics\:averageValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FilterOnePoleCascade} RunningStatistics::averageValue}}
\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 13 of file RunningStatistics.h.}\par
{
Referenced by input(), mean(), setInitialValue(), setWindowSecs(), and variance().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b RunningStatistics.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Filters/{\b RunningStatistics.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Sd2Card Class Reference\par \pard\plain 
{\tc\tcl2 \v Sd2Card}
{\xe \v Sd2Card}
{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw access to SD and SDHC flash memory cards. }}\par
{
{\f2 #include <Sd2Card.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Sd2Card} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b cardSize} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b erase} (uint32_t firstBlock, uint32_t lastBlock)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b eraseSingleBlockEnable} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b errorCode} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b errorData} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b init} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b init} (uint8_t sckRateID)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b init} (uint8_t sckRateID, uint8_t chipSelectPin, int8_t mosiPin=-1, int8_t misoPin=-1, int8_t clockPin=-1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b partialBlockRead} (uint8_t value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b partialBlockRead} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b readBlock} (uint32_t block, uint8_t *dst)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b readData} (uint32_t block, uint16_t offset, uint16_t count, uint8_t *dst)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b readCID} ({\b cid_t} *cid)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b readCSD} ({\b csd_t} *csd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readEnd} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b setSckRate} (uint8_t sckRateID)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b type} (void) const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b writeBlock} (uint32_t blockNumber, const uint8_t *src)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b writeData} (const uint8_t *src)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b writeStart} (uint32_t blockNumber, uint32_t eraseCount)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b writeStop} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enableCRC} (uint8_t mode)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw access to SD and SDHC flash memory cards. \par
}{
Definition at line 159 of file Sd2Card.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Sd2Card\:Sd2Card}
{\xe \v Sd2Card\:Sd2Card}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Sd2Card::Sd2Card (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construct an instance of {\b Sd2Card}. \par
}{
Definition at line 162 of file Sd2Card.h.}\par
{
References cardSize(), erase(), and eraseSingleBlockEnable().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_af85a5ec4f5f4ec89deb8936c3fd7de65_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v cardSize\:Sd2Card}
{\xe \v Sd2Card\:cardSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t Sd2Card::cardSize (void )}}
\par
{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine the size of an SD flash memory card.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The number of 512 byte data blocks in the card or zero if an error occurs. \par
}}{
Definition at line 195 of file Sd2Card.cpp.}\par
{
References csd1_t::c_size_high, csd2_t::c_size_high, csd1_t::c_size_low, csd2_t::c_size_low, csd1_t::c_size_mid, csd2_t::c_size_mid, csd1_t::c_size_mult_high, csd1_t::c_size_mult_low, csd1_t::csd_ver, csd2_t::csd_ver, csd1_t::read_bl_len, readCSD(), SD_CARD_ERROR_BAD_CSD, csd_t::v1, and csd_t::v2.}\par
{
Referenced by configure_sdcard(), and Sd2Card().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a862473431cc314238bfccdc531a70d3a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a862473431cc314238bfccdc531a70d3a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v enableCRC\:Sd2Card}
{\xe \v Sd2Card\:enableCRC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sd2Card::enableCRC (uint8_t  {\i mode})}}
\par
{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 785 of file Sd2Card.cpp.}\par
{
Referenced by type().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a9a84ec97d0c21e4bef8e41630a795b85_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v erase\:Sd2Card}
{\xe \v Sd2Card\:erase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::erase (uint32_t  {\i firstBlock}, uint32_t  {\i lastBlock})}}
\par
{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase a range of blocks.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i firstBlock} \cell }{The address of the first block in the range. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i lastBlock} \cell }{The address of the last block in the range.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function requests the SD card to do a flash erase for a range of blocks. The data on the card after an erase operation is either 0 or 1, depends on the card vendor. The card must support single block erase.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The value one, true, is returned for success and the value zero, false, is returned for failure. \par
}}{
Definition at line 236 of file Sd2Card.cpp.}\par
{
References CMD32, CMD33, CMD38, eraseSingleBlockEnable(), SD_CARD_ERROR_ERASE, SD_CARD_ERROR_ERASE_SINGLE_BLOCK, SD_CARD_ERROR_ERASE_TIMEOUT, SD_CARD_TYPE_SDHC, and SD_ERASE_TIMEOUT.}\par
{
Referenced by Sd2Card().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_af49fb720fad1d3ea9f5782da0d87fc0b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_af49fb720fad1d3ea9f5782da0d87fc0b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v eraseSingleBlockEnable\:Sd2Card}
{\xe \v Sd2Card\:eraseSingleBlockEnable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::eraseSingleBlockEnable (void )}}
\par
{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Determine if card supports single block erase.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The value one, true, is returned if single block erase is supported. The value zero, false, is returned if single block erase is not supported. \par
}}{
Definition at line 268 of file Sd2Card.cpp.}\par
{
References csd1_t::erase_blk_en, readCSD(), and csd_t::v1.}\par
{
Referenced by erase(), and Sd2Card().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a2e3998f6e910a2936d3ef54bf082b2ce_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a2e3998f6e910a2936d3ef54bf082b2ce_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v errorCode\:Sd2Card}
{\xe \v Sd2Card\:errorCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::errorCode (void ) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid error code for last error. See {\b Sd2Card.h} for a list of error codes. \par
}}{
Definition at line 169 of file Sd2Card.h.}\par
{
Referenced by configure_sdcard(), and log_data().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_adfa5b1a39875236dff591acbd560bfe7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v errorData\:Sd2Card}
{\xe \v Sd2Card\:errorData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::errorData (void ) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid error data for last error. \par
}}{
Definition at line 171 of file Sd2Card.h.}\par
{
Referenced by log_data().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a13fed56bd5bcfee862acb6de6924936c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v init\:Sd2Card}
{\xe \v Sd2Card\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::init (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize an SD flash memory card with default clock rate and chip select pin. See sd2Card::init(uint8_t sckRateID, uint8_t chipSelectPin). \par
}{
Definition at line 176 of file Sd2Card.h.}\par
{
References SD_CHIP_SELECT_PIN, and SPI_FULL_SPEED.}\par
{
Referenced by configure_sdcard(), and init().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_afaec9a22060626b02c07a09eff2e9113_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v init\:Sd2Card}
{\xe \v Sd2Card\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::init (uint8_t  {\i sckRateID}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize an SD flash memory card with the selected SPI clock rate and the default SD chip select pin. See sd2Card::init(uint8_t sckRateID, uint8_t chipSelectPin). \par
}{
Definition at line 184 of file Sd2Card.h.}\par
{
References init(), partialBlockRead(), and SD_CHIP_SELECT_PIN.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_ad99b2d2156c9746065c52839ef679354_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v init\:Sd2Card}
{\xe \v Sd2Card\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::init (uint8_t  {\i sckRateID}, uint8_t  {\i chipSelectPin}, int8_t  {\i mosiPin} = {\f2 -1}, int8_t  {\i misoPin} = {\f2 -1}, int8_t  {\i clockPin} = {\f2 -1})}}
\par
{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize an SD flash memory card.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i sckRateID} \cell }{SPI clock rate selector. See {\b setSckRate()}. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i chipSelectPin} \cell }{SD chip select pin number.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The value one, true, is returned for success and the value zero, false, is returned for failure. The reason for failure can be determined by calling {\b errorCode()} and {\b errorData()}. \par
}}{
Definition at line 283 of file Sd2Card.cpp.}\par
{
References ACMD41, CMD0, CMD58, CMD8, i, R1_IDLE_STATE, R1_ILLEGAL_COMMAND, R1_READY_STATE, SD_CARD_ERROR_ACMD41, SD_CARD_ERROR_CMD0, SD_CARD_ERROR_CMD58, SD_CARD_ERROR_CMD8, SD_CARD_TYPE_SD1, SD_CARD_TYPE_SD2, SD_CARD_TYPE_SDHC, SD_INIT_TIMEOUT, setSckRate(), SPI_MISO_PIN, SPI_MOSI_PIN, SPI_SCK_PIN, and type().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a204ef4cc35cc6e1d5f12a8cdd5f32518_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v partialBlockRead\:Sd2Card}
{\xe \v Sd2Card\:partialBlockRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sd2Card::partialBlockRead (uint8_t  {\i value})}}
\par
{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable or disable partial block reads.\par
Enabling partial block reads improves performance by allowing a block to be read over the SPI bus as several sub-blocks. Errors may occur if the time between reads is too long since the SD card may timeout. The SPI SS line will be held low until the entire block is read or {\b readEnd()} is called.\par
Use this for applications like the Adafruit Wave Shield.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i value} \cell }{The value TRUE (non-zero) or FALSE (zero).) \cell }
{\row }
}
}{
Definition at line 408 of file Sd2Card.cpp.}\par
{
References readEnd().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_aa279ac05b3f25acbf10cc424a25750da_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v partialBlockRead\:Sd2Card}
{\xe \v Sd2Card\:partialBlockRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::partialBlockRead (void ) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current value, true or false, for partial block read. \par
}{
Definition at line 190 of file Sd2Card.h.}\par
{
References readBlock(), and readData().}\par
{
Referenced by init().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a73ad7fee10e05439f6ec832ce0eb196f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a73ad7fee10e05439f6ec832ce0eb196f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readBlock\:Sd2Card}
{\xe \v Sd2Card\:readBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::readBlock (uint32_t  {\i block}, uint8_t *  {\i dst})}}
\par
{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a 512 byte block from an SD card device.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i block} \cell }{Logical block to be read. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i dst} \cell }{Pointer to the location that will receive the data.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The value one, true, is returned for success and the value zero, false, is returned for failure. \par
}}{
Definition at line 422 of file Sd2Card.cpp.}\par
{
References readData().}\par
{
Referenced by log_data(), partialBlockRead(), and read_sdcard().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_ae26d840449a42d45af464fb81b92e2ab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_ae26d840449a42d45af464fb81b92e2ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readCID\:Sd2Card}
{\xe \v Sd2Card\:readCID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::readCID ({\b cid_t} *  {\i cid}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a cards CID register. The CID contains card identification information such as Manufacturer ID, Product name, Product serial number and Manufacturing date. \par
}{
Definition at line 198 of file Sd2Card.h.}\par
{
References CMD10.}\par
}
{\xe \v readCSD\:Sd2Card}
{\xe \v Sd2Card\:readCSD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::readCSD ({\b csd_t} *  {\i csd}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read a cards CSD register. The CSD contains Card-Specific Data that provides information regarding access to the card's contents. \par
}{
Definition at line 204 of file Sd2Card.h.}\par
{
References CMD9, readEnd(), and setSckRate().}\par
{
Referenced by cardSize(), and eraseSingleBlockEnable().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a79845d8d4593cb3b1b7641ba27edddfb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a79845d8d4593cb3b1b7641ba27edddfb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readData\:Sd2Card}
{\xe \v Sd2Card\:readData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::readData (uint32_t  {\i block}, uint16_t  {\i offset}, uint16_t  {\i count}, uint8_t *  {\i dst})}}
\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read part of a 512 byte block from an SD card.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i block} \cell }{Logical block to be read. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i offset} \cell }{Number of bytes to skip at start of block \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{out\cell }{{\i dst} \cell }{Pointer to the location that will receive the data. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i count} \cell }{Number of bytes to read \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The value one, true, is returned for success and the value zero, false, is returned for failure. \par
}}{
Definition at line 436 of file Sd2Card.cpp.}\par
{
References CMD17, i, readEnd(), SD_CARD_ERROR_CMD17, SD_CARD_TYPE_SDHC, and type().}\par
{
Referenced by find_sdcard_tail(), partialBlockRead(), and readBlock().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_ae2d1396ad30081b4201cd372358ef699_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_ae2d1396ad30081b4201cd372358ef699_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readEnd\:Sd2Card}
{\xe \v Sd2Card\:readEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Sd2Card::readEnd (void )}}
\par
{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Skip remaining data in a block when in partial block read mode. \par
}{
Definition at line 503 of file Sd2Card.cpp.}\par
{
References i, and SD_CARD_ERROR_READ_REG.}\par
{
Referenced by partialBlockRead(), readCSD(), and readData().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a0de961537d051bbcafd87ed9fff5fe48_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setSckRate\:Sd2Card}
{\xe \v Sd2Card\:setSckRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::setSckRate (uint8_t  {\i sckRateID})}}
\par
{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the SPI clock rate.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i sckRateID} \cell }{A value in the range [0, 6].\cell }
{\row }
}
The SPI clock will be set to F_CPU/pow(2, 1 + sckRateID). The maximum SPI rate is F_CPU/2 for {\i sckRateID}  = 0 and the minimum rate is F_CPU/128 for {\i scsRateID}  = 6.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The value one, true, is returned for success and the value zero, false, is returned for an invalid value of {\i sckRateID} . \par
}}{
Definition at line 555 of file Sd2Card.cpp.}\par
{
References DATA_START_BLOCK, SD_CARD_ERROR_READ, SD_CARD_ERROR_READ_TIMEOUT, SD_CARD_ERROR_SCK_RATE, and SD_READ_TIMEOUT.}\par
{
Referenced by init(), and readCSD().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_ad849b8896de9abd4e24bd98f4204ccc4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v type\:Sd2Card}
{\xe \v Sd2Card\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::type (void ) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the card type: SD V1, SD V2 or SDHC \par
}{
Definition at line 210 of file Sd2Card.h.}\par
{
References CMD55, enableCRC(), writeBlock(), writeData(), writeStart(), and writeStop().}\par
{
Referenced by init(), readData(), writeBlock(), and writeStart().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a3ba97504f5928c932c346101d3dabfd2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a3ba97504f5928c932c346101d3dabfd2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v writeBlock\:Sd2Card}
{\xe \v Sd2Card\:writeBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::writeBlock (uint32_t  {\i blockNumber}, const uint8_t *  {\i src})}}
\par
{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes a 512 byte block to an SD card.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i blockNumber} \cell }{Logical block to be written. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i src} \cell }{Pointer to the location of the data to be written. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The value one, true, is returned for success and the value zero, false, is returned for failure. \par
}}{
Definition at line 628 of file Sd2Card.cpp.}\par
{
References CMD13, CMD24, DATA_START_BLOCK, SD_CARD_ERROR_CMD24, SD_CARD_ERROR_WRITE_BLOCK_ZERO, SD_CARD_ERROR_WRITE_PROGRAMMING, SD_CARD_ERROR_WRITE_TIMEOUT, SD_CARD_TYPE_SDHC, SD_WRITE_TIMEOUT, type(), and writeData().}\par
{
Referenced by log_data(), and type().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_ae9bdd6cff43b8b694584f9bae7e781b0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_ae9bdd6cff43b8b694584f9bae7e781b0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v writeData\:Sd2Card}
{\xe \v Sd2Card\:writeData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::writeData (const uint8_t *  {\i src})}}
\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write one data block in a multiple block write sequence \par
}{
Definition at line 664 of file Sd2Card.cpp.}\par
{
References DATA_RES_ACCEPTED, DATA_RES_MASK, i, SD_CARD_ERROR_WRITE, SD_CARD_ERROR_WRITE_MULTIPLE, SD_WRITE_TIMEOUT, and WRITE_MULTIPLE_TOKEN.}\par
{
Referenced by type(), and writeBlock().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_af602d107e1ead2d0971e9f4c7b744cf8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v writeStart\:Sd2Card}
{\xe \v Sd2Card\:writeStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::writeStart (uint32_t  {\i blockNumber}, uint32_t  {\i eraseCount})}}
\par
{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Start a write multiple blocks sequence.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i blockNumber} \cell }{Address of first block in sequence. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx1224
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx3061
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{in\cell }{{\i eraseCount} \cell }{The number of blocks to be pre-erased.\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid This function is used with {\b writeData()} and {\b writeStop()} for optimized multiple block writes.\par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The value one, true, is returned for success and the value zero, false, is returned for failure. \par
}}{
Definition at line 741 of file Sd2Card.cpp.}\par
{
References ACMD23, CMD25, SD_CARD_ERROR_ACMD23, SD_CARD_ERROR_CMD25, SD_CARD_ERROR_WRITE_BLOCK_ZERO, SD_CARD_TYPE_SDHC, and type().}\par
{
Referenced by type().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a82a21a07fdfe45c5c75d486a13cded8a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a82a21a07fdfe45c5c75d486a13cded8a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v writeStop\:Sd2Card}
{\xe \v Sd2Card\:writeStop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Sd2Card::writeStop (void )}}
\par
{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
End a write multiple blocks sequence.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid The value one, true, is returned for success and the value zero, false, is returned for failure. \par
}}{
Definition at line 772 of file Sd2Card.cpp.}\par
{
References SD_CARD_ERROR_STOP_TRAN, SD_WRITE_TIMEOUT, and STOP_TRAN_TOKEN.}\par
{
Referenced by type().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_sd2_card_a3a60481c0821606546a85d056bb96f47_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/SD-master/{\b Sd2Card.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/SD-master/{\b Sd2Card.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SerialFirmata Class Reference\par \pard\plain 
{\tc\tcl2 \v SerialFirmata}
{\xe \v SerialFirmata}
{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
\par
{
{\f2 #include <SerialFirmata.h>}}\par
Inheritance diagram for SerialFirmata:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_serial_firmata__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for SerialFirmata:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_serial_firmata__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SerialFirmata} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b handlePinMode} (byte pin, int mode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleCapability} (byte pin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b handleSysex} (byte command, byte argc, byte *argv)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkSerial} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 142 of file SerialFirmata.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v SerialFirmata\:SerialFirmata}
{\xe \v SerialFirmata\:SerialFirmata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SerialFirmata::SerialFirmata ()}}
\par
{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file SerialFirmata.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v checkSerial\:SerialFirmata}
{\xe \v SerialFirmata\:checkSerial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SerialFirmata::checkSerial ()}}
\par
{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 284 of file SerialFirmata.cpp.}\par
{
References END_SYSEX, Firmata, i, SERIAL_MESSAGE, SERIAL_REPLY, START_SYSEX, and FirmataClass::write().}\par
{
Referenced by update().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_serial_firmata_ab31a76a596ce2430ee3feac525da59f2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_serial_firmata_ab31a76a596ce2430ee3feac525da59f2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v handleCapability\:SerialFirmata}
{\xe \v SerialFirmata\:handleCapability}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SerialFirmata::handleCapability (byte  {\i pin}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b FirmataFeature} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACRY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 44 of file SerialFirmata.cpp.}\par
{
References Firmata, IS_PIN_SERIAL, PIN_MODE_SERIAL, and FirmataClass::write().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_serial_firmata_af383474fc3a6d1d372489046bbcabc3b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v handlePinMode\:SerialFirmata}
{\xe \v SerialFirmata\:handlePinMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean SerialFirmata::handlePinMode (byte  {\i pin}, int  {\i mode}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b FirmataFeature} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 34 of file SerialFirmata.cpp.}\par
{
References Firmata, PIN_MODE_SERIAL, and FirmataClass::setPinMode().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_serial_firmata_ace960dd7d082caf65f1f3488a7486ef5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v handleSysex\:SerialFirmata}
{\xe \v SerialFirmata\:handleSysex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean SerialFirmata::handleSysex (byte  {\i command}, byte  {\i argc}, byte *  {\i argv}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b FirmataFeature} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 52 of file SerialFirmata.cpp.}\par
{
References Firmata, i, MAX_SERIAL_PORTS, PIN_MODE_SERIAL, FirmataClass::sendString(), SERIAL_CLOSE, SERIAL_CONFIG, SERIAL_FLUSH, SERIAL_LISTEN, SERIAL_MESSAGE, SERIAL_MODE_MASK, SERIAL_PORT_ID_MASK, SERIAL_READ, SERIAL_READ_CONTINUOUSLY, SERIAL_STOP_READING, SERIAL_WRITE, FirmataClass::setPinMode(), SW_SERIAL0, SW_SERIAL1, SW_SERIAL2, and SW_SERIAL3.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_serial_firmata_a0e13bbb12bd52762cfe2f949bda161ee_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v reset\:SerialFirmata}
{\xe \v SerialFirmata\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SerialFirmata::reset (void ){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b FirmataFeature} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 215 of file SerialFirmata.cpp.}\par
{
References HW_SERIAL0, HW_SERIAL1, HW_SERIAL2, HW_SERIAL3, i, SERIAL_READ_ARR_LEN, SW_SERIAL0, SW_SERIAL1, SW_SERIAL2, and SW_SERIAL3.}\par
}
{\xe \v update\:SerialFirmata}
{\xe \v SerialFirmata\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SerialFirmata::update ()}}
\par
{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 210 of file SerialFirmata.cpp.}\par
{
References checkSerial().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_serial_firmata_a1095729d80e0b18340d6d6d5baca10fc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/utility/{\b SerialFirmata.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/utility/{\b SerialFirmata.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSAltitude Struct Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSAltitude}
{\xe \v TinyGPSAltitude}
{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
Inheritance diagram for TinyGPSAltitude:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_altitude__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for TinyGPSAltitude:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_altitude__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b meters} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b miles} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kilometers} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b feet} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 179 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v feet\:TinyGPSAltitude}
{\xe \v TinyGPSAltitude\:feet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSAltitude::feet (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file TinyGPS++.h.}\par
{
References _GPS_FEET_PER_METER.}\par
}
{\xe \v kilometers\:TinyGPSAltitude}
{\xe \v TinyGPSAltitude\:kilometers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSAltitude::kilometers (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file TinyGPS++.h.}\par
{
References _GPS_KM_PER_METER.}\par
}
{\xe \v meters\:TinyGPSAltitude}
{\xe \v TinyGPSAltitude\:meters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSAltitude::meters (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 181 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_altitude_a5a39d145bb1778814007206c765189f7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v miles\:TinyGPSAltitude}
{\xe \v TinyGPSAltitude\:miles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSAltitude::miles (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 182 of file TinyGPS++.h.}\par
{
References _GPS_MILES_PER_METER.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSCourse Struct Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSCourse}
{\xe \v TinyGPSCourse}
{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
Inheritance diagram for TinyGPSCourse:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_course__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for TinyGPSCourse:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_course__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b deg} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 174 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v deg\:TinyGPSCourse}
{\xe \v TinyGPSCourse\:deg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSCourse::deg (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 176 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_course_a76dc8ae6c2fe5ead9b44c8d53a3272ca_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSCustom Class Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSCustom}
{\xe \v TinyGPSCustom}
{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSCustom} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSCustom} ({\b TinyGPSPlus} &{\b gps}, const char *sentenceName, int termNumber)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ({\b TinyGPSPlus} &{\b gps}, const char *_sentenceName, int _termNumber)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isUpdated} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isValid} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b age} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b value} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TinyGPSPlus}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 188 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TinyGPSCustom\:TinyGPSCustom}
{\xe \v TinyGPSCustom\:TinyGPSCustom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TinyGPSCustom::TinyGPSCustom (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 191 of file TinyGPS++.h.}\par
{
References gps.}\par
}
{\xe \v TinyGPSCustom\:TinyGPSCustom}
{\xe \v TinyGPSCustom\:TinyGPSCustom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TinyGPSCustom::TinyGPSCustom ({\b TinyGPSPlus} &  {\i gps}, const char *  {\i sentenceName}, int  {\i termNumber})}}
\par
{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 458 of file TinyGPS++.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v age\:TinyGPSCustom}
{\xe \v TinyGPSCustom\:age}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSCustom::age () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 197 of file TinyGPS++.h.}\par
}
{\xe \v begin\:TinyGPSCustom}
{\xe \v TinyGPSCustom\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TinyGPSCustom::begin ({\b TinyGPSPlus} &  {\i gps}, const char *  {\i _sentenceName}, int  {\i _termNumber})}}
\par
{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 463 of file TinyGPS++.cpp.}\par
}
{\xe \v isUpdated\:TinyGPSCustom}
{\xe \v TinyGPSCustom\:isUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSCustom::isUpdated () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 195 of file TinyGPS++.h.}\par
}
{\xe \v isValid\:TinyGPSCustom}
{\xe \v TinyGPSCustom\:isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSCustom::isValid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 196 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tiny_g_p_s_custom_a06fad8448c014424bf96ed379b55da21_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v value\:TinyGPSCustom}
{\xe \v TinyGPSCustom\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* TinyGPSCustom::value (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 198 of file TinyGPS++.h.}\par
{
References _GPS_MAX_FIELD_SIZE.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tiny_g_p_s_custom_ac5ad40a3d9b6fe386b2309f972566674_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v TinyGPSPlus\:TinyGPSCustom}
{\xe \v TinyGPSCustom\:TinyGPSPlus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TinyGPSPlus}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 210 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSDate Struct Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSDate}
{\xe \v TinyGPSDate}
{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isValid} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isUpdated} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b age} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b value} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b year} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b month} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b day} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSDate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TinyGPSPlus}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 77 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TinyGPSDate\:TinyGPSDate}
{\xe \v TinyGPSDate\:TinyGPSDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TinyGPSDate::TinyGPSDate (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file TinyGPS++.h.}\par
{
References TinyGPSPlus::date.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v age\:TinyGPSDate}
{\xe \v TinyGPSDate\:age}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSDate::age () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_date_a7b92ac9058dbde1770eb52ce5da890c1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v day\:TinyGPSDate}
{\xe \v TinyGPSDate\:day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t TinyGPSDate::day ()}}
\par
{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 404 of file TinyGPS++.cpp.}\par
{
References TinyGPSPlus::date.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_date_ae8cc5f80c49e328f792d168a44062000_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isUpdated\:TinyGPSDate}
{\xe \v TinyGPSDate\:isUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSDate::isUpdated () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file TinyGPS++.h.}\par
}
{\xe \v isValid\:TinyGPSDate}
{\xe \v TinyGPSDate\:isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSDate::isValid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_date_a0ef145848ab03e4e9db0e2cf3a4c42cd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v month\:TinyGPSDate}
{\xe \v TinyGPSDate\:month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t TinyGPSDate::month ()}}
\par
{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 398 of file TinyGPS++.cpp.}\par
{
References TinyGPSPlus::date.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_date_a6f3c5b4e72ef28b010f94ac9016315f3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v value\:TinyGPSDate}
{\xe \v TinyGPSDate\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSDate::value (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file TinyGPS++.h.}\par
{
References TinyGPSPlus::date, day(), month(), and year().}\par
{
Referenced by read_GPS().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_date_a718150ae16f68afa9ae81f9d1b3ce3f4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_date_a718150ae16f68afa9ae81f9d1b3ce3f4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v year\:TinyGPSDate}
{\xe \v TinyGPSDate\:year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t TinyGPSDate::year ()}}
\par
{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 391 of file TinyGPS++.cpp.}\par
{
References TinyGPSPlus::date, and year().}\par
{
Referenced by read_GPS().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_date_ae2cc914fec377b429d99f01204f50d60_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_date_ae2cc914fec377b429d99f01204f50d60_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v TinyGPSPlus\:TinyGPSDate}
{\xe \v TinyGPSDate\:TinyGPSPlus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TinyGPSPlus}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSDecimal Struct Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSDecimal}
{\xe \v TinyGPSDecimal}
{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
Inheritance diagram for TinyGPSDecimal:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_decimal__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isValid} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isUpdated} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b age} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b value} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSDecimal} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TinyGPSPlus}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 126 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TinyGPSDecimal\:TinyGPSDecimal}
{\xe \v TinyGPSDecimal\:TinyGPSDecimal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TinyGPSDecimal::TinyGPSDecimal (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 135 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v age\:TinyGPSDecimal}
{\xe \v TinyGPSDecimal\:age}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSDecimal::age () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 132 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_decimal_ab80191a3e02c92ad3f674b5df2ab752f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isUpdated\:TinyGPSDecimal}
{\xe \v TinyGPSDecimal\:isUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSDecimal::isUpdated () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 131 of file TinyGPS++.h.}\par
}
{\xe \v isValid\:TinyGPSDecimal}
{\xe \v TinyGPSDecimal\:isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSDecimal::isValid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_decimal_a2a1d868525e903eb193b7a36cdd76984_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v value\:TinyGPSDecimal}
{\xe \v TinyGPSDecimal\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t TinyGPSDecimal::value (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_decimal_ac3ce80976e5d8456e9f211b910a6cb19_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v TinyGPSPlus\:TinyGPSDecimal}
{\xe \v TinyGPSDecimal\:TinyGPSPlus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TinyGPSPlus}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 128 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSInteger Struct Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSInteger}
{\xe \v TinyGPSInteger}
{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isValid} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isUpdated} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b age} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b value} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSInteger} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TinyGPSPlus}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 146 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TinyGPSInteger\:TinyGPSInteger}
{\xe \v TinyGPSInteger\:TinyGPSInteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TinyGPSInteger::TinyGPSInteger (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 155 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v age\:TinyGPSInteger}
{\xe \v TinyGPSInteger\:age}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSInteger::age () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 152 of file TinyGPS++.h.}\par
}
{\xe \v isUpdated\:TinyGPSInteger}
{\xe \v TinyGPSInteger\:isUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSInteger::isUpdated () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file TinyGPS++.h.}\par
}
{\xe \v isValid\:TinyGPSInteger}
{\xe \v TinyGPSInteger\:isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSInteger::isValid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_integer_aad411b5eb6cc16774ff0ff8d275df2fa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v value\:TinyGPSInteger}
{\xe \v TinyGPSInteger\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSInteger::value (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 153 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_integer_a67de7e76d61dbd25eb32f701d8ce867b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v TinyGPSPlus\:TinyGPSInteger}
{\xe \v TinyGPSInteger\:TinyGPSPlus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TinyGPSPlus}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSLocation Struct Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSLocation}
{\xe \v TinyGPSLocation}
{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isValid} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isUpdated} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b age} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b RawDegrees} & {\b rawLat} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b RawDegrees} & {\b rawLng} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lat} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lng} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSLocation} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TinyGPSPlus}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 53 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TinyGPSLocation\:TinyGPSLocation}
{\xe \v TinyGPSLocation\:TinyGPSLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TinyGPSLocation::TinyGPSLocation (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v age\:TinyGPSLocation}
{\xe \v TinyGPSLocation\:age}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSLocation::age () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file TinyGPS++.h.}\par
}
{\xe \v isUpdated\:TinyGPSLocation}
{\xe \v TinyGPSLocation\:isUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSLocation::isUpdated () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file TinyGPS++.h.}\par
}
{\xe \v isValid\:TinyGPSLocation}
{\xe \v TinyGPSLocation\:isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSLocation::isValid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_location_a783c2898915440f51a6df233aba51923_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v lat\:TinyGPSLocation}
{\xe \v TinyGPSLocation\:lat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSLocation::lat ()}}
\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 353 of file TinyGPS++.cpp.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_location_a86c3acea4f317b427eebb667e4d05a49_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v lng\:TinyGPSLocation}
{\xe \v TinyGPSLocation\:lng}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSLocation::lng ()}}
\par
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 360 of file TinyGPS++.cpp.}\par
{
References TinyGPSPlus::date, TinyGPSPlus::parseDecimal(), and TinyGPSPlus::time.}\par
{
Referenced by read_GPS().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_location_a544e9009a5580b2fd5466821a5e5b782_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_location_a544e9009a5580b2fd5466821a5e5b782_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v rawLat\:TinyGPSLocation}
{\xe \v TinyGPSLocation\:rawLat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b RawDegrees}& TinyGPSLocation::rawLat (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file TinyGPS++.h.}\par
}
{\xe \v rawLng\:TinyGPSLocation}
{\xe \v TinyGPSLocation\:rawLng}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b RawDegrees}& TinyGPSLocation::rawLng (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v TinyGPSPlus\:TinyGPSLocation}
{\xe \v TinyGPSLocation\:TinyGPSPlus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TinyGPSPlus}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSPlus Class Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSPlus}
{\xe \v TinyGPSPlus}
{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
Collaboration diagram for TinyGPSPlus:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tiny_g_p_s_plus__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSPlus} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b encode} (char c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSPlus} & {\b operator<<} (char c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b charsProcessed} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b sentencesWithFix} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b failedChecksum} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b passedChecksum} () const \par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b libraryVersion} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b distanceBetween} (double lat1, double long1, double lat2, double long2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b courseTo} (double lat1, double long1, double lat2, double long2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const char * {\b cardinal} (double {\b course})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int32_t {\b parseDecimal} (const char *term)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b parseDegrees} (const char *term, {\b RawDegrees} &deg)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSLocation} {\b location}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSDate} {\b date}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSTime} {\b time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSSpeed} {\b speed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSCourse} {\b course}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSAltitude} {\b altitude}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSInteger} {\b satellites}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSDecimal} {\b hdop}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TinyGPSCustom}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 214 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TinyGPSPlus\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:TinyGPSPlus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TinyGPSPlus::TinyGPSPlus ()}}
\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file TinyGPS++.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v cardinal\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:cardinal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * TinyGPSPlus::cardinal (double  {\i course}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 328 of file TinyGPS++.cpp.}\par
{
References parseDegrees().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tiny_g_p_s_plus_a8c9e9444552ff85a505ffc6933dda03c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v charsProcessed\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:charsProcessed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSPlus::charsProcessed () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 239 of file TinyGPS++.h.}\par
}
{\xe \v courseTo\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:courseTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSPlus::courseTo (double  {\i lat1}, double  {\i long1}, double  {\i lat2}, double  {\i long2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 308 of file TinyGPS++.cpp.}\par
}
{\xe \v distanceBetween\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:distanceBetween}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSPlus::distanceBetween (double  {\i lat1}, double  {\i long1}, double  {\i lat2}, double  {\i long2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 283 of file TinyGPS++.cpp.}\par
}
{\xe \v encode\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:encode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSPlus::encode (char  {\i c})}}
\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file TinyGPS++.cpp.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tiny_g_p_s_plus_ad7b78320b7e4967df17c6a27008a5154_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v failedChecksum\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:failedChecksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSPlus::failedChecksum () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 241 of file TinyGPS++.h.}\par
{
Referenced by print_sensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tiny_g_p_s_plus_a57dd7a4430d58f784e967ee2d76e574f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v libraryVersion\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:libraryVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static const char* TinyGPSPlus::libraryVersion (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 230 of file TinyGPS++.h.}\par
{
References _GPS_VERSION, and RawDegrees::deg.}\par
}
{\xe \v operator<<\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSPlus}& TinyGPSPlus::operator<< (char  {\i c}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 219 of file TinyGPS++.h.}\par
}
{\xe \v parseDecimal\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:parseDecimal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t TinyGPSPlus::parseDecimal (const char *  {\i term}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file TinyGPS++.cpp.}\par
{
Referenced by TinyGPSTime::centisecond(), and TinyGPSLocation::lng().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tiny_g_p_s_plus_a06d9bf0c1f0d0963511dc05e2f121121_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v parseDegrees\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:parseDegrees}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TinyGPSPlus::parseDegrees (const char *  {\i term}, {\b RawDegrees} &  {\i deg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file TinyGPS++.cpp.}\par
{
References RawDegrees::billionths, RawDegrees::deg, and RawDegrees::negative.}\par
{
Referenced by cardinal().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_tiny_g_p_s_plus_a00627eaffc625bf366e4c984014fbf29_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v passedChecksum\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:passedChecksum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSPlus::passedChecksum () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 242 of file TinyGPS++.h.}\par
{
References _GPS_MAX_FIELD_SIZE.}\par
}
{\xe \v sentencesWithFix\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:sentencesWithFix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSPlus::sentencesWithFix () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 240 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v TinyGPSCustom\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:TinyGPSCustom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TinyGPSCustom}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 257 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v altitude\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:altitude}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSAltitude} TinyGPSPlus::altitude}}
\par
{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 226 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
}
{\xe \v course\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:course}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSCourse} TinyGPSPlus::course}}
\par
{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 225 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
}
{\xe \v date\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSDate} TinyGPSPlus::date}}
\par
{\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 222 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSDate::day(), TinyGPSLocation::lng(), TinyGPSDate::month(), read_GPS(), TinyGPSDate::TinyGPSDate(), TinyGPSDate::value(), and TinyGPSDate::year().}\par
}
{\xe \v hdop\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:hdop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSDecimal} TinyGPSPlus::hdop}}
\par
{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 228 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
}
{\xe \v location\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:location}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSLocation} TinyGPSPlus::location}}
\par
{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 221 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
}
{\xe \v satellites\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:satellites}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSInteger} TinyGPSPlus::satellites}}
\par
{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 227 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
}
{\xe \v speed\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:speed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSSpeed} TinyGPSPlus::speed}}
\par
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 224 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
}
{\xe \v time\:TinyGPSPlus}
{\xe \v TinyGPSPlus\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSTime} TinyGPSPlus::time}}
\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 223 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSTime::centisecond(), TinyGPSTime::hour(), TinyGPSLocation::lng(), TinyGPSTime::minute(), read_GPS(), TinyGPSTime::second(), TinyGPSTime::TinyGPSTime(), and TinyGPSTime::value().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSSpeed Struct Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSSpeed}
{\xe \v TinyGPSSpeed}
{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
Inheritance diagram for TinyGPSSpeed:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_speed__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for TinyGPSSpeed:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_speed__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b knots} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mph} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mps} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kmph} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 166 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v kmph\:TinyGPSSpeed}
{\xe \v TinyGPSSpeed\:kmph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSSpeed::kmph (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 171 of file TinyGPS++.h.}\par
{
References _GPS_KMPH_PER_KNOT.}\par
}
{\xe \v knots\:TinyGPSSpeed}
{\xe \v TinyGPSSpeed\:knots}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSSpeed::knots (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 168 of file TinyGPS++.h.}\par
}
{\xe \v mph\:TinyGPSSpeed}
{\xe \v TinyGPSSpeed\:mph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSSpeed::mph (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 169 of file TinyGPS++.h.}\par
{
References _GPS_MPH_PER_KNOT.}\par
}
{\xe \v mps\:TinyGPSSpeed}
{\xe \v TinyGPSSpeed\:mps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TinyGPSSpeed::mps (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 170 of file TinyGPS++.h.}\par
{
References _GPS_MPS_PER_KNOT.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_speed_aacee536241e810cdf4ba7846d6c202cb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TinyGPSTime Struct Reference\par \pard\plain 
{\tc\tcl2 \v TinyGPSTime}
{\xe \v TinyGPSTime}
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
\par
{
{\f2 #include <TinyGPS++.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isValid} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isUpdated} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b age} () const \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b value} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b hour} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b minute} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b second} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b centisecond} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSTime} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TinyGPSPlus}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 101 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TinyGPSTime\:TinyGPSTime}
{\xe \v TinyGPSTime\:TinyGPSTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TinyGPSTime::TinyGPSTime (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file TinyGPS++.h.}\par
{
References setTime(), and TinyGPSPlus::time.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_time_abd6dd7a576fd42cd6980c92eec77ab1d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v age\:TinyGPSTime}
{\xe \v TinyGPSTime\:age}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSTime::age () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 107 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_time_a22b59e1d4b22435baa2a4446981f2dce_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v centisecond\:TinyGPSTime}
{\xe \v TinyGPSTime\:centisecond}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t TinyGPSTime::centisecond ()}}
\par
{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 428 of file TinyGPS++.cpp.}\par
{
References TinyGPSPlus::parseDecimal(), and TinyGPSPlus::time.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_time_a1f74ad4a2a53e0ee19f8e3a6b2bc985f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v hour\:TinyGPSTime}
{\xe \v TinyGPSTime\:hour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t TinyGPSTime::hour ()}}
\par
{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 410 of file TinyGPS++.cpp.}\par
{
References TinyGPSPlus::time.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_time_a37fdb629b6ed0e31134214c7d07df2b1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isUpdated\:TinyGPSTime}
{\xe \v TinyGPSTime\:isUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSTime::isUpdated () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file TinyGPS++.h.}\par
}
{\xe \v isValid\:TinyGPSTime}
{\xe \v TinyGPSTime\:isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool TinyGPSTime::isValid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file TinyGPS++.h.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_time_a85c38acaf804aecefc3f0358bf93d86a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v minute\:TinyGPSTime}
{\xe \v TinyGPSTime\:minute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t TinyGPSTime::minute ()}}
\par
{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 416 of file TinyGPS++.cpp.}\par
{
References TinyGPSPlus::time.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_time_aef83c20c14d404219299da2d7e35cdce_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v second\:TinyGPSTime}
{\xe \v TinyGPSTime\:second}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t TinyGPSTime::second ()}}
\par
{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 422 of file TinyGPS++.cpp.}\par
{
References TinyGPSPlus::time.}\par
{
Referenced by read_GPS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_time_a729cab36ced07eb5607503663fbe33e8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v value\:TinyGPSTime}
{\xe \v TinyGPSTime\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t TinyGPSTime::value (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file TinyGPS++.h.}\par
{
References hour(), minute(), second(), and TinyGPSPlus::time.}\par
{
Referenced by read_GPS().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_time_afcdb632fee9d144b1414c9d7b95719f1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_tiny_g_p_s_time_afcdb632fee9d144b1414c9d7b95719f1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v TinyGPSPlus\:TinyGPSTime}
{\xe \v TinyGPSTime\:TinyGPSPlus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TinyGPSPlus}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file TinyGPS++.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/{\b TinyGPS++.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WiFiClientStream Class Reference\par \pard\plain 
{\tc\tcl2 \v WiFiClientStream}
{\xe \v WiFiClientStream}
{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
\par
{
{\f2 #include <WiFiClientStream.h>}}\par
Inheritance diagram for WiFiClientStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_client_stream__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for WiFiClientStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_client_stream__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiClientStream} (IPAddress server_ip, uint16_t server_port)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b maintain} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b stop} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b connect_client} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b _time_connect} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 33 of file WiFiClientStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WiFiClientStream\:WiFiClientStream}
{\xe \v WiFiClientStream\:WiFiClientStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiClientStream::WiFiClientStream (IPAddress  {\i server_ip}, uint16_t  {\i server_port}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
create a WiFi stream with a TCP client \par
}{
Definition at line 75 of file WiFiClientStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v connect_client\:WiFiClientStream}
{\xe \v WiFiClientStream\:connect_client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool WiFiClientStream::connect_client (){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check if TCP client is connected \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if connected \par
}}{
Implements {\b WiFiStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 42 of file WiFiClientStream.h.}\par
{
References WiFiStream::_client, WiFiStream::_connected, WiFiStream::_currentHostConnectionCallback, WiFiStream::_port, WiFiStream::_remote_ip, HOST_CONNECTION_CONNECTED, MILLIS_RECONNECT, and stop().}\par
{
Referenced by maintain().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_client_stream_afb68ea613d492a7b3aebca60ed5a0da6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_client_stream_afb68ea613d492a7b3aebca60ed5a0da6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v maintain\:WiFiClientStream}
{\xe \v WiFiClientStream\:maintain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool WiFiClientStream::maintain (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maintain WiFi and TCP connection \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if WiFi and TCP connection are established \par
}}{
Implements {\b WiFiStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 81 of file WiFiClientStream.h.}\par
{
References connect_client().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_client_stream_a7fd2465acdbb07285fdac25c490c04d6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v stop\:WiFiClientStream}
{\xe \v WiFiClientStream\:stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void WiFiClientStream::stop (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stop client connection \par
}{
Implements {\b WiFiStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 89 of file WiFiClientStream.h.}\par
{
References WiFiStream::_client, WiFiStream::_connected, WiFiStream::_currentHostConnectionCallback, and HOST_CONNECTION_DISCONNECTED.}\par
{
Referenced by connect_client().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_client_stream_ac81b72c8c61f10a5f950d9deabc7ffeb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _time_connect\:WiFiClientStream}
{\xe \v WiFiClientStream\:_time_connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t WiFiClientStream::_time_connect = 0{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file WiFiClientStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/utility/{\b WiFiClientStream.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WiFiServerStream Class Reference\par \pard\plain 
{\tc\tcl2 \v WiFiServerStream}
{\xe \v WiFiServerStream}
{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
\par
{
{\f2 #include <WiFiServerStream.h>}}\par
Inheritance diagram for WiFiServerStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_server_stream__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for WiFiServerStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_server_stream__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiServerStream} (uint16_t server_port)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b maintain} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b stop} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b connect_client} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WiFiServer {\b _server} = WiFiServer(3030)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b _listening} = false\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 31 of file WiFiServerStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WiFiServerStream\:WiFiServerStream}
{\xe \v WiFiServerStream\:WiFiServerStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiServerStream::WiFiServerStream (uint16_t  {\i server_port}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
create a WiFi stream with a TCP server \par
}{
Definition at line 66 of file WiFiServerStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v connect_client\:WiFiServerStream}
{\xe \v WiFiServerStream\:connect_client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool WiFiServerStream::connect_client (){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check if TCP client is connected \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if connected \par
}}{
Implements {\b WiFiStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 41 of file WiFiServerStream.h.}\par
{
References WiFiStream::_client, WiFiStream::_connected, WiFiStream::_currentHostConnectionCallback, HOST_CONNECTION_CONNECTED, and stop().}\par
{
Referenced by maintain().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_server_stream_a664a448394b896b93ff631e488840e81_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_server_stream_a664a448394b896b93ff631e488840e81_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v maintain\:WiFiServerStream}
{\xe \v WiFiServerStream\:maintain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool WiFiServerStream::maintain (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maintain WiFi and TCP connection \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if WiFi and TCP connection are established \par
}}{
Implements {\b WiFiStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 72 of file WiFiServerStream.h.}\par
{
References WiFiStream::_port, connect_client(), and stop().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_server_stream_ad6a4282ab87a5a5b15a5cd1ae2fb2a94_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v stop\:WiFiServerStream}
{\xe \v WiFiServerStream\:stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void WiFiServerStream::stop (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stop client connection \par
}{
Implements {\b WiFiStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 92 of file WiFiServerStream.h.}\par
{
References WiFiStream::_client, WiFiStream::_connected, WiFiStream::_currentHostConnectionCallback, and HOST_CONNECTION_DISCONNECTED.}\par
{
Referenced by connect_client(), and maintain().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_server_stream_a5c70b0545e4150f64ddfe26aeb48a436_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _listening\:WiFiServerStream}
{\xe \v WiFiServerStream\:_listening}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool WiFiServerStream::_listening = false{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file WiFiServerStream.h.}\par
}
{\xe \v _server\:WiFiServerStream}
{\xe \v WiFiServerStream\:_server}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiServer WiFiServerStream::_server = WiFiServer(3030){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file WiFiServerStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/utility/{\b WiFiServerStream.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WiFiStream Class Reference\par \pard\plain 
{\tc\tcl2 \v WiFiStream}
{\xe \v WiFiStream}
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
\par
{
{\f2 #include <WiFiStream.h>}}\par
Inheritance diagram for WiFiStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for WiFiStream:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiStream} (uint16_t server_port)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiStream} (IPAddress server_ip, uint16_t server_port)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b attach} ({\b hostConnectionCallbackFunction} newFunction)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b config} (IPAddress {\b local_ip})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b config} (IPAddress {\b local_ip}, IPAddress gateway, IPAddress subnet)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b getLocalIP} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b maintain} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b stop} ()=0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b begin} (char *{\b ssid})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b begin} (char *{\b ssid}, uint8_t key_idx, const char *key)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b begin} (char *{\b ssid}, const char *passphrase)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b available} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b flush} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b peek} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b read} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b write} (uint8_t byte)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b connect_client} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WiFiClient {\b _client}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b _connected} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b hostConnectionCallbackFunction} {\b _currentHostConnectionCallback}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _local_ip}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _subnet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _gateway}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _remote_ip}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b _port}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b _key_idx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b _key} = nullptr\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b _passphrase} = nullptr\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b _ssid} = nullptr\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 35 of file WiFiStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WiFiStream\:WiFiStream}
{\xe \v WiFiStream\:WiFiStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiStream::WiFiStream (uint16_t  {\i server_port}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor for TCP server \par
}{
Definition at line 61 of file WiFiStream.h.}\par
}
{\xe \v WiFiStream\:WiFiStream}
{\xe \v WiFiStream\:WiFiStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiStream::WiFiStream (IPAddress  {\i server_ip}, uint16_t  {\i server_port}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
constructor for TCP client \par
}{
Definition at line 64 of file WiFiStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v attach\:WiFiStream}
{\xe \v WiFiStream\:attach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiStream::attach ({\b hostConnectionCallbackFunction}  {\i newFunction}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file WiFiStream.h.}\par
}
{\xe \v available\:WiFiStream}
{\xe \v WiFiStream\:available}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiStream::available (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 199 of file WiFiStream.h.}\par
{
References connect_client().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream_a238fc0fc25c4a9bda83e24257587dd64_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v begin\:WiFiStream}
{\xe \v WiFiStream\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiStream::begin (char *  {\i ssid}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
initialize WiFi without security (open) and initiate client connection if WiFi connection is already established \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid WL_CONNECTED if WiFi connection is established \par
}}{
Definition at line 154 of file WiFiStream.h.}\par
{
References ssid.}\par
}
{\xe \v begin\:WiFiStream}
{\xe \v WiFiStream\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiStream::begin (char *  {\i ssid}, uint8_t  {\i key_idx}, const char *  {\i key}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
initialize WiFi with WEP security and initiate client connection if WiFi connection is already established \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid WL_CONNECTED if WiFi connection is established \par
}}{
Definition at line 169 of file WiFiStream.h.}\par
{
References ssid.}\par
}
{\xe \v begin\:WiFiStream}
{\xe \v WiFiStream\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiStream::begin (char *  {\i ssid}, const char *  {\i passphrase}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
initialize WiFi with WPA-PSK security and initiate client connection if WiFi connection is already established \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid WL_CONNECTED if WiFi connection is established \par
}}{
Definition at line 185 of file WiFiStream.h.}\par
{
References ssid.}\par
}
{\xe \v config\:WiFiStream}
{\xe \v WiFiStream\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiStream::config (IPAddress  {\i local_ip}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
configure a static local IP address without defining the local network DHCP will be used as long as local IP address is not defined \par
}{
Definition at line 77 of file WiFiStream.h.}\par
{
References local_ip.}\par
}
{\xe \v config\:WiFiStream}
{\xe \v WiFiStream\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiStream::config (IPAddress  {\i local_ip}, IPAddress  {\i gateway}, IPAddress  {\i subnet}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
configure a static local IP address DHCP will be used as long as local IP address is not defined \par
}{
Definition at line 88 of file WiFiStream.h.}\par
{
References local_ip.}\par
}
{\xe \v connect_client\:WiFiStream}
{\xe \v WiFiStream\:connect_client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool WiFiStream::connect_client (){\f2 [protected]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check if TCP client is connected \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if connected \par
}}{
Implemented in {\b WiFiClientStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHI \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b WiFiServerStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by available(), peek(), read(), and write().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream_a2e530346a7edea0326ad2025be42aff1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v flush\:WiFiStream}
{\xe \v WiFiStream\:flush}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiStream::flush (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 204 of file WiFiStream.h.}\par
}
{\xe \v getLocalIP\:WiFiStream}
{\xe \v WiFiStream\:getLocalIP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiStream::getLocalIP (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid local IP address \par
}}{
Definition at line 103 of file WiFiStream.h.}\par
{
References maintain(), and stop().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream_a8134646bad1d06f4ce61813cafb652ed_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v maintain\:WiFiStream}
{\xe \v WiFiStream\:maintain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool WiFiStream::maintain (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maintain WiFi and TCP connection \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if WiFi and TCP connection are established \par
}}{
Implemented in {\b WiFiClientStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHK \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b WiFiServerStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by getLocalIP().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream_ac7c0c7f36c7cf6b46bebafcbf6b1253b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v peek\:WiFiStream}
{\xe \v WiFiStream\:peek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiStream::peek (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 209 of file WiFiStream.h.}\par
{
References connect_client().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream_a84ea0f80377001e0acf1385645ecaf1a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v read\:WiFiStream}
{\xe \v WiFiStream\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiStream::read (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 214 of file WiFiStream.h.}\par
{
References connect_client().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream_a238960bf0f7a3e3a7c60014a187fe577_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v stop\:WiFiStream}
{\xe \v WiFiStream\:stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void WiFiStream::stop (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
close TCP client connection \par
}{
Implemented in {\b WiFiServerStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHT \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b WiFiClientStream} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADHM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Referenced by getLocalIP().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream_a9438b7e07eae9f8a42af9060e7b330c7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v write\:WiFiStream}
{\xe \v WiFiStream\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t WiFiStream::write (uint8_t  {\i byte}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 219 of file WiFiStream.h.}\par
{
References connect_client().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_wi_fi_stream_a0a4dba3370af02570ef0d3429f1a6df2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _client\:WiFiStream}
{\xe \v WiFiStream\:_client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiClient WiFiStream::_client{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file WiFiStream.h.}\par
{
Referenced by WiFiServerStream::connect_client(), WiFiClientStream::connect_client(), WiFiClientStream::stop(), and WiFiServerStream::stop().}\par
}
{\xe \v _connected\:WiFiStream}
{\xe \v WiFiStream\:_connected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool WiFiStream::_connected = false{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file WiFiStream.h.}\par
{
Referenced by WiFiServerStream::connect_client(), WiFiClientStream::connect_client(), WiFiClientStream::stop(), and WiFiServerStream::stop().}\par
}
{\xe \v _currentHostConnectionCallback\:WiFiStream}
{\xe \v WiFiStream\:_currentHostConnectionCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b hostConnectionCallbackFunction} WiFiStream::_currentHostConnectionCallback{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file WiFiStream.h.}\par
{
Referenced by WiFiServerStream::connect_client(), WiFiClientStream::connect_client(), WiFiClientStream::stop(), and WiFiServerStream::stop().}\par
}
{\xe \v _gateway\:WiFiStream}
{\xe \v WiFiStream\:_gateway}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiStream::_gateway{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file WiFiStream.h.}\par
}
{\xe \v _key\:WiFiStream}
{\xe \v WiFiStream\:_key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* WiFiStream::_key = nullptr{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file WiFiStream.h.}\par
}
{\xe \v _key_idx\:WiFiStream}
{\xe \v WiFiStream\:_key_idx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t WiFiStream::_key_idx{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file WiFiStream.h.}\par
}
{\xe \v _local_ip\:WiFiStream}
{\xe \v WiFiStream\:_local_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiStream::_local_ip{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file WiFiStream.h.}\par
}
{\xe \v _passphrase\:WiFiStream}
{\xe \v WiFiStream\:_passphrase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* WiFiStream::_passphrase = nullptr{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file WiFiStream.h.}\par
}
{\xe \v _port\:WiFiStream}
{\xe \v WiFiStream\:_port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t WiFiStream::_port{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file WiFiStream.h.}\par
{
Referenced by WiFiClientStream::connect_client(), and WiFiServerStream::maintain().}\par
}
{\xe \v _remote_ip\:WiFiStream}
{\xe \v WiFiStream\:_remote_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiStream::_remote_ip{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file WiFiStream.h.}\par
{
Referenced by WiFiClientStream::connect_client().}\par
}
{\xe \v _ssid\:WiFiStream}
{\xe \v WiFiStream\:_ssid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* WiFiStream::_ssid = nullptr{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file WiFiStream.h.}\par
}
{\xe \v _subnet\:WiFiStream}
{\xe \v WiFiStream\:_subnet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiStream::_subnet{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file WiFiStream.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Weather_Balloon/library/Firmata/utility/{\b WiFiStream.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/EEPROM_anything.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/EEPROM_anything.h}
{\xe \v Weather_Balloon/EEPROM_anything.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <EEPROM.h>}\par
{\f2 #include <Arduino.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for EEPROM_anything.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_e_e_p_r_o_m__anything_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_e_e_p_r_o_m__anything_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > int {\b EEPROM_writeAnything} (int ee, const T &value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > int {\b EEPROM_readAnything} (int ee, T &value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v EEPROM_readAnything\:EEPROM_anything.h}
{\xe \v EEPROM_anything.h\:EEPROM_readAnything}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > int EEPROM_readAnything (int  {\i ee}, T &  {\i value})}}
\par
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 13 of file EEPROM_anything.h.}\par
{
References i.}\par
}
{\xe \v EEPROM_writeAnything\:EEPROM_anything.h}
{\xe \v EEPROM_anything.h\:EEPROM_writeAnything}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > int EEPROM_writeAnything (int  {\i ee}, const T &  {\i value})}}
\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 4 of file EEPROM_anything.h.}\par
{
References i.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_ADXL345-master/Adafruit_ADXL345_U.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_ADXL345-master/Adafruit_ADXL345_U.cpp}
{\xe \v Weather_Balloon/library/Adafruit_ADXL345-master/Adafruit_ADXL345_U.cpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
{\f2 #include <Wire.h>}\par
{\f2 #include <limits.h>}\par
{\f2 #include "Adafruit_ADXL345_U.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Adafruit_ADXL345_U.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___a_d_x_l345___u_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_ADXL345-master/Adafruit_ADXL345_U.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_ADXL345-master/Adafruit_ADXL345_U.h}
{\xe \v Weather_Balloon/library/Adafruit_ADXL345-master/Adafruit_ADXL345_U.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
{\f2 #include <Adafruit_Sensor.h>}\par
{\f2 #include <Wire.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Adafruit_ADXL345_U.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___a_d_x_l345___u_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___a_d_x_l345___u_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Adafruit_ADXL345_Unified}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_ADDRESS}\~ (0x53)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_DEVID}\~ (0x00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_THRESH_TAP}\~ (0x1D)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_OFSX}\~ (0x1E)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_OFSY}\~ (0x1F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_OFSZ}\~ (0x20)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_DUR}\~ (0x21)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_LATENT}\~ (0x22)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_WINDOW}\~ (0x23)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_THRESH_ACT}\~ (0x24)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_THRESH_INACT}\~ (0x25)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_TIME_INACT}\~ (0x26)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_ACT_INACT_CTL}\~ (0x27)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_THRESH_FF}\~ (0x28)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_TIME_FF}\~ (0x29)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_TAP_AXES}\~ (0x2A)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_ACT_TAP_STATUS}\~ (0x2B)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_BW_RATE}\~ (0x2C)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_POWER_CTL}\~ (0x2D)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_INT_ENABLE}\~ (0x2E)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_INT_MAP}\~ (0x2F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_INT_SOURCE}\~ (0x30)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_DATA_FORMAT}\~ (0x31)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_DATAX0}\~ (0x32)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_DATAX1}\~ (0x33)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_DATAY0}\~ (0x34)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_DATAY1}\~ (0x35)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_DATAZ0}\~ (0x36)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_DATAZ1}\~ (0x37)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_FIFO_CTL}\~ (0x38)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_REG_FIFO_STATUS}\~ (0x39)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_MG2G_MULTIPLIER}\~ (0.004)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b dataRate_t} \{ {\b ADXL345_DATARATE_3200_HZ} = 0b1111, 
{\b ADXL345_DATARATE_1600_HZ} = 0b1110, 
{\b ADXL345_DATARATE_800_HZ} = 0b1101, 
{\b ADXL345_DATARATE_400_HZ} = 0b1100, 
{\b ADXL345_DATARATE_200_HZ} = 0b1011, 
{\b ADXL345_DATARATE_100_HZ} = 0b1010, 
{\b ADXL345_DATARATE_50_HZ} = 0b1001, 
{\b ADXL345_DATARATE_25_HZ} = 0b1000, 
{\b ADXL345_DATARATE_12_5_HZ} = 0b0111, 
{\b ADXL345_DATARATE_6_25HZ} = 0b0110, 
{\b ADXL345_DATARATE_3_13_HZ} = 0b0101, 
{\b ADXL345_DATARATE_1_56_HZ} = 0b0100, 
{\b ADXL345_DATARATE_0_78_HZ} = 0b0011, 
{\b ADXL345_DATARATE_0_39_HZ} = 0b0010, 
{\b ADXL345_DATARATE_0_20_HZ} = 0b0001, 
{\b ADXL345_DATARATE_0_10_HZ} = 0b0000
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b range_t} \{ {\b ADXL345_RANGE_16_G} = 0b11, 
{\b ADXL345_RANGE_8_G} = 0b10, 
{\b ADXL345_RANGE_4_G} = 0b01, 
{\b ADXL345_RANGE_2_G} = 0b00
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ADXL345_ADDRESS\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_ADDRESS\~ (0x53)}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file Adafruit_ADXL345_U.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::read16(), Adafruit_ADXL345_Unified::readRegister(), and Adafruit_ADXL345_Unified::writeRegister().}\par
}
{\xe \v ADXL345_MG2G_MULTIPLIER\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_MG2G_MULTIPLIER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_MG2G_MULTIPLIER\~ (0.004)}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file Adafruit_ADXL345_U.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::getEvent().}\par
}
{\xe \v ADXL345_REG_ACT_INACT_CTL\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_ACT_INACT_CTL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_ACT_INACT_CTL\~ (0x27)}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_ACT_TAP_STATUS\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_ACT_TAP_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_ACT_TAP_STATUS\~ (0x2B)}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_BW_RATE\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_BW_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_BW_RATE\~ (0x2C)}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file Adafruit_ADXL345_U.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::getDataRate(), and Adafruit_ADXL345_Unified::setDataRate().}\par
}
{\xe \v ADXL345_REG_DATA_FORMAT\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_DATA_FORMAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_DATA_FORMAT\~ (0x31)}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file Adafruit_ADXL345_U.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::getRange(), and Adafruit_ADXL345_Unified::setRange().}\par
}
{\xe \v ADXL345_REG_DATAX0\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_DATAX0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_DATAX0\~ (0x32)}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file Adafruit_ADXL345_U.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::getX().}\par
}
{\xe \v ADXL345_REG_DATAX1\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_DATAX1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_DATAX1\~ (0x33)}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_DATAY0\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_DATAY0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_DATAY0\~ (0x34)}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file Adafruit_ADXL345_U.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::getY().}\par
}
{\xe \v ADXL345_REG_DATAY1\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_DATAY1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_DATAY1\~ (0x35)}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_DATAZ0\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_DATAZ0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_DATAZ0\~ (0x36)}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file Adafruit_ADXL345_U.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::getZ().}\par
}
{\xe \v ADXL345_REG_DATAZ1\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_DATAZ1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_DATAZ1\~ (0x37)}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_DEVID\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_DEVID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_DEVID\~ (0x00)}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file Adafruit_ADXL345_U.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::getDeviceID().}\par
}
{\xe \v ADXL345_REG_DUR\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_DUR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_DUR\~ (0x21)}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_FIFO_CTL\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_FIFO_CTL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_FIFO_CTL\~ (0x38)}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_FIFO_STATUS\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_FIFO_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_FIFO_STATUS\~ (0x39)}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_INT_ENABLE\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_INT_ENABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_INT_ENABLE\~ (0x2E)}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_INT_MAP\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_INT_MAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_INT_MAP\~ (0x2F)}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_INT_SOURCE\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_INT_SOURCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_INT_SOURCE\~ (0x30)}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_LATENT\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_LATENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_LATENT\~ (0x22)}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_OFSX\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_OFSX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_OFSX\~ (0x1E)}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_OFSY\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_OFSY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_OFSY\~ (0x1F)}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_OFSZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_OFSZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_OFSZ\~ (0x20)}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_POWER_CTL\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_POWER_CTL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_POWER_CTL\~ (0x2D)}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file Adafruit_ADXL345_U.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::begin().}\par
}
{\xe \v ADXL345_REG_TAP_AXES\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_TAP_AXES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_TAP_AXES\~ (0x2A)}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_THRESH_ACT\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_THRESH_ACT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_THRESH_ACT\~ (0x24)}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_THRESH_FF\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_THRESH_FF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_THRESH_FF\~ (0x28)}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_THRESH_INACT\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_THRESH_INACT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_THRESH_INACT\~ (0x25)}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_THRESH_TAP\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_THRESH_TAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_THRESH_TAP\~ (0x1D)}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_TIME_FF\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_TIME_FF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_TIME_FF\~ (0x29)}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_TIME_INACT\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_TIME_INACT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_TIME_INACT\~ (0x26)}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v ADXL345_REG_WINDOW\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_REG_WINDOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_REG_WINDOW\~ (0x23)}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file Adafruit_ADXL345_U.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v dataRate_t\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:dataRate_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b dataRate_t}}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v ADXL345_DATARATE_3200_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_3200_HZ}
{\b {\i ADXL345_DATARATE_3200_HZ{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
}}  \par
{\xe \v ADXL345_DATARATE_1600_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_1600_HZ}
{\b {\i ADXL345_DATARATE_1600_HZ{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
}}  \par
{\xe \v ADXL345_DATARATE_800_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_800_HZ}
{\b {\i ADXL345_DATARATE_800_HZ{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
}}  \par
{\xe \v ADXL345_DATARATE_400_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_400_HZ}
{\b {\i ADXL345_DATARATE_400_HZ{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
}}  \par
{\xe \v ADXL345_DATARATE_200_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_200_HZ}
{\b {\i ADXL345_DATARATE_200_HZ{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
}}  \par
{\xe \v ADXL345_DATARATE_100_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_100_HZ}
{\b {\i ADXL345_DATARATE_100_HZ{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
}}  \par
{\xe \v ADXL345_DATARATE_50_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_50_HZ}
{\b {\i ADXL345_DATARATE_50_HZ{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
}}  \par
{\xe \v ADXL345_DATARATE_25_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_25_HZ}
{\b {\i ADXL345_DATARATE_25_HZ{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
}}  \par
{\xe \v ADXL345_DATARATE_12_5_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_12_5_HZ}
{\b {\i ADXL345_DATARATE_12_5_HZ{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
}}  \par
{\xe \v ADXL345_DATARATE_6_25HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_6_25HZ}
{\b {\i ADXL345_DATARATE_6_25HZ{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
}}  \par
{\xe \v ADXL345_DATARATE_3_13_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_3_13_HZ}
{\b {\i ADXL345_DATARATE_3_13_HZ{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
}}  \par
{\xe \v ADXL345_DATARATE_1_56_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_1_56_HZ}
{\b {\i ADXL345_DATARATE_1_56_HZ{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
}}  \par
{\xe \v ADXL345_DATARATE_0_78_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_0_78_HZ}
{\b {\i ADXL345_DATARATE_0_78_HZ{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
}}  \par
{\xe \v ADXL345_DATARATE_0_39_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_0_39_HZ}
{\b {\i ADXL345_DATARATE_0_39_HZ{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
}}  \par
{\xe \v ADXL345_DATARATE_0_20_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_0_20_HZ}
{\b {\i ADXL345_DATARATE_0_20_HZ{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
}}  \par
{\xe \v ADXL345_DATARATE_0_10_HZ\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_DATARATE_0_10_HZ}
{\b {\i ADXL345_DATARATE_0_10_HZ{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
}}  \par
\par
}{
Definition at line 77 of file Adafruit_ADXL345_U.h.}\par
}
{\xe \v range_t\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:range_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b range_t}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v ADXL345_RANGE_16_G\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_RANGE_16_G}
{\b {\i ADXL345_RANGE_16_G{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
}}  \par
{\xe \v ADXL345_RANGE_8_G\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_RANGE_8_G}
{\b {\i ADXL345_RANGE_8_G{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
}}  \par
{\xe \v ADXL345_RANGE_4_G\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_RANGE_4_G}
{\b {\i ADXL345_RANGE_4_G{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
}}  \par
{\xe \v ADXL345_RANGE_2_G\:Adafruit_ADXL345_U.h}
{\xe \v Adafruit_ADXL345_U.h\:ADXL345_RANGE_2_G}
{\b {\i ADXL345_RANGE_2_G{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
}}  \par
\par
}{
Definition at line 98 of file Adafruit_ADXL345_U.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_ADXL345-master/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_ADXL345-master/README.md}
{\xe \v Weather_Balloon/library/Adafruit_ADXL345-master/README.md}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_Sensor-master/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_Sensor-master/README.md}
{\xe \v Weather_Balloon/library/Adafruit_Sensor-master/README.md}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_SHT31-master/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_SHT31-master/README.md}
{\xe \v Weather_Balloon/library/Adafruit_SHT31-master/README.md}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_TSL2561-master/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_TSL2561-master/README.md}
{\xe \v Weather_Balloon/library/Adafruit_TSL2561-master/README.md}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Arduino-DS3231-master/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Arduino-DS3231-master/README.md}
{\xe \v Weather_Balloon/library/Arduino-DS3231-master/README.md}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/arduino-ms5xxx-master/README.md}
{\xe \v Weather_Balloon/library/arduino-ms5xxx-master/README.md}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Arduino-Temperature-Control-Library/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Arduino-Temperature-Control-Library/README.md}
{\xe \v Weather_Balloon/library/Arduino-Temperature-Control-Library/README.md}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/arduino-ZeroRegs/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/arduino-ZeroRegs/README.md}
{\xe \v Weather_Balloon/library/arduino-ZeroRegs/README.md}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/LedControl-master/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/LedControl-master/README.md}
{\xe \v Weather_Balloon/library/LedControl-master/README.md}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTClib-master/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTClib-master/README.md}
{\xe \v Weather_Balloon/library/RTClib-master/README.md}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_LSM9DS1/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_LSM9DS1/README.md}
{\xe \v Weather_Balloon/library/SparkFun_LSM9DS1/README.md}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_MAX17043/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_MAX17043/README.md}
{\xe \v Weather_Balloon/library/SparkFun_MAX17043/README.md}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_Sensor-master/Adafruit_Sensor.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_Sensor-master/Adafruit_Sensor.h}
{\xe \v Weather_Balloon/library/Adafruit_Sensor-master/Adafruit_Sensor.h}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Adafruit_Sensor.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___sensor_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___sensor_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sensors_vec_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sensors_color_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sensors_event_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sensor_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Adafruit_Sensor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b sensors_vec_t.__unnamed__}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sensors_vec_t.__unnamed__.__unnamed__}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sensors_vec_t.__unnamed__.__unnamed__}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b sensors_color_t.__unnamed__}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sensors_color_t.__unnamed__.__unnamed__}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b sensors_event_t.__unnamed__}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SENSORS_GRAVITY_EARTH}\~ (9.80665F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SENSORS_GRAVITY_MOON}\~ (1.6F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SENSORS_GRAVITY_SUN}\~ (275.0F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SENSORS_GRAVITY_STANDARD}\~ ({\b SENSORS_GRAVITY_EARTH})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SENSORS_MAGFIELD_EARTH_MAX}\~ (60.0F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SENSORS_MAGFIELD_EARTH_MIN}\~ (30.0F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SENSORS_PRESSURE_SEALEVELHPA}\~ (1013.25F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SENSORS_DPS_TO_RADS}\~ (0.017453293F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SENSORS_GAUSS_TO_MICROTESLA}\~ (100)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b sensors_type_t} \{ {\b SENSOR_TYPE_ACCELEROMETER} = (1), 
{\b SENSOR_TYPE_MAGNETIC_FIELD} = (2), 
{\b SENSOR_TYPE_ORIENTATION} = (3), 
{\b SENSOR_TYPE_GYROSCOPE} = (4), 
{\b SENSOR_TYPE_LIGHT} = (5), 
{\b SENSOR_TYPE_PRESSURE} = (6), 
{\b SENSOR_TYPE_PROXIMITY} = (8), 
{\b SENSOR_TYPE_GRAVITY} = (9), 
{\b SENSOR_TYPE_LINEAR_ACCELERATION} = (10), 
{\b SENSOR_TYPE_ROTATION_VECTOR} = (11), 
{\b SENSOR_TYPE_RELATIVE_HUMIDITY} = (12), 
{\b SENSOR_TYPE_AMBIENT_TEMPERATURE} = (13), 
{\b SENSOR_TYPE_VOLTAGE} = (15), 
{\b SENSOR_TYPE_CURRENT} = (16), 
{\b SENSOR_TYPE_COLOR} = (17)
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v sensors_vec_t}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct sensors_vec_t\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct sensors_vec_s is used to return a vector in a common format. \par
}{
Definition at line 65 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr union {\b sensors_vec_t}{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\cell }{__unnamed__\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\cell }{reserved[3]\cell }{\cell }{\row }
{\qr int8_t{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\cell }{status\cell }{\cell }{\row }
}
{\xe \v sensors_color_t}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct sensors_color_t\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct sensors_color_s is used to return color data in a common format. \par
}{
Definition at line 85 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr union {\b sensors_color_t}{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\cell }{__unnamed__\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\cell }{rgba\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
24-bit RGBA value \par
}\cell }{\row }
}
{\xe \v sensors_event_t}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct sensors_event_t\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct sensor_event_s is used to provide a single sensor event in a common format. \par
}{
Definition at line 100 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr union {\b sensors_event_t}{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\cell }{__unnamed__\cell }{\cell }{\row }
{\qr int32_t{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\cell }{reserved0\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reserved \par
}\cell }{\row }
{\qr int32_t{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\cell }{sensor_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
unique sensor identifier \par
}\cell }{\row }
{\qr int32_t{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\cell }{timestamp\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
time is in milliseconds \par
}\cell }{\row }
{\qr int32_t{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\cell }{type\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sensor type \par
}\cell }{\row }
{\qr int32_t{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\cell }{version\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
must be sizeof(struct sensors_event_t) \par
}\cell }{\row }
}
{\xe \v sensor_t}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct sensor_t\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
struct sensor_s is used to describe basic information about a specific sensor. \par
}{
Definition at line 127 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\cell }{max_value\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
maximum value of this sensor's value in SI units \par
}\cell }{\row }
{\qr int32_t{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\cell }{min_delay\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
min delay in microseconds between events. zero = not a constant rate \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
\cell }{min_value\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
minimum value of this sensor's value in SI units \par
}\cell }{\row }
{\qr char{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\cell }{name[12]\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sensor name \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\cell }{resolution\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
smallest difference between two values reported by this sensor \par
}\cell }{\row }
{\qr int32_t{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
\cell }{sensor_id\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
unique sensor identifier \par
}\cell }{\row }
{\qr int32_t{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\cell }{type\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
this sensor's type (ex. SENSOR_TYPE_LIGHT) \par
}\cell }{\row }
{\qr int32_t{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\cell }{version\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
version of the hardware + driver \par
}\cell }{\row }
}
{\xe \v sensors_vec_t.__unnamed__}
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union sensors_vec_t.__unnamed__\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 66 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\b __unnamed__}{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\cell }{__unnamed__\cell }{\cell }{\row }
{\qr {\b __unnamed__}{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\cell }{__unnamed__\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\cell }{v[3]\cell }{\cell }{\row }
}
{\xe \v sensors_vec_t.__unnamed__.__unnamed__}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct sensors_vec_t.__unnamed__.__unnamed__\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 68 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\cell }{x\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\cell }{y\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\cell }{z\cell }{\cell }{\row }
}
{\xe \v sensors_vec_t.__unnamed__.__unnamed__}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct sensors_vec_t.__unnamed__.__unnamed__\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 74 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
\cell }{heading\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Angle between the longitudinal axis (the plane body) and magnetic north, measured clockwise when viewing from the top of the device. 0-359\'B0 \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\cell }{pitch\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotation around the lateral axis (the wing span, 'Y axis'). Pitch is positive and increasing when moving upwards. -180\'B0<=pitch<=180\'B0) \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\cell }{roll\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rotation around the longitudinal axis (the plane body, 'X axis'). Roll is positive and increasing when moving downward. -90\'B0<=roll<=90\'B0 \par
}\cell }{\row }
}
{\xe \v sensors_color_t.__unnamed__}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union sensors_color_t.__unnamed__\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 86 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\b __unnamed__}{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\cell }{__unnamed__\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
\cell }{c[3]\cell }{\cell }{\row }
}
{\xe \v sensors_color_t.__unnamed__.__unnamed__}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct sensors_color_t.__unnamed__.__unnamed__\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 89 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
\cell }{b\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Blue component \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
\cell }{g\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Green component \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
\cell }{r\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Red component \par
}\cell }{\row }
}
{\xe \v sensors_event_t.__unnamed__}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union sensors_event_t.__unnamed__\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 107 of file Adafruit_Sensor.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\b sensors_vec_t}{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\cell }{acceleration\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
acceleration values are in meter per second per second (m/s^2) \par
}\cell }{\row }
{\qr {\b sensors_color_t}{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
\cell }{color\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
color in RGB component values \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\cell }{current\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
current in milliamps (mA) \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
\cell }{data[4]\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
\cell }{distance\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
distance in centimeters \par
}\cell }{\row }
{\qr {\b sensors_vec_t}{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\cell }{gyro\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
gyroscope values are in rad/s \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\cell }{light\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
light in SI lux units \par
}\cell }{\row }
{\qr {\b sensors_vec_t}{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\cell }{magnetic\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
magnetic vector values are in micro-Tesla (uT) \par
}\cell }{\row }
{\qr {\b sensors_vec_t}{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
\cell }{orientation\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
orientation values are in degrees \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\cell }{pressure\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pressure in hectopascal (hPa) \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
\cell }{relative_humidity\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
relative humidity in percent \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
\cell }{temperature\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temperature is in degrees centigrade (Celsius) \par
}\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
\cell }{voltage\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
voltage in volts (V) \par
}\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v SENSORS_DPS_TO_RADS\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSORS_DPS_TO_RADS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SENSORS_DPS_TO_RADS\~ (0.017453293F)}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Degrees/s to rad/s multiplier \par
}{
Definition at line 41 of file Adafruit_Sensor.h.}\par
}
{\xe \v SENSORS_GAUSS_TO_MICROTESLA\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSORS_GAUSS_TO_MICROTESLA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SENSORS_GAUSS_TO_MICROTESLA\~ (100)}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gauss to micro-Tesla multiplier \par
}{
Definition at line 42 of file Adafruit_Sensor.h.}\par
}
{\xe \v SENSORS_GRAVITY_EARTH\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSORS_GRAVITY_EARTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SENSORS_GRAVITY_EARTH\~ (9.80665F)}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Earth's gravity in m/s^2 \par
}{
Definition at line 34 of file Adafruit_Sensor.h.}\par
}
{\xe \v SENSORS_GRAVITY_MOON\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSORS_GRAVITY_MOON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SENSORS_GRAVITY_MOON\~ (1.6F)}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The moon's gravity in m/s^2 \par
}{
Definition at line 35 of file Adafruit_Sensor.h.}\par
}
{\xe \v SENSORS_GRAVITY_STANDARD\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSORS_GRAVITY_STANDARD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SENSORS_GRAVITY_STANDARD\~ ({\b SENSORS_GRAVITY_EARTH})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file Adafruit_Sensor.h.}\par
{
Referenced by Adafruit_ADXL345_Unified::getEvent().}\par
}
{\xe \v SENSORS_GRAVITY_SUN\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSORS_GRAVITY_SUN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SENSORS_GRAVITY_SUN\~ (275.0F)}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The sun's gravity in m/s^2 \par
}{
Definition at line 36 of file Adafruit_Sensor.h.}\par
}
{\xe \v SENSORS_MAGFIELD_EARTH_MAX\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSORS_MAGFIELD_EARTH_MAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SENSORS_MAGFIELD_EARTH_MAX\~ (60.0F)}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Maximum magnetic field on Earth's surface \par
}{
Definition at line 38 of file Adafruit_Sensor.h.}\par
}
{\xe \v SENSORS_MAGFIELD_EARTH_MIN\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSORS_MAGFIELD_EARTH_MIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SENSORS_MAGFIELD_EARTH_MIN\~ (30.0F)}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Minimum magnetic field on Earth's surface \par
}{
Definition at line 39 of file Adafruit_Sensor.h.}\par
}
{\xe \v SENSORS_PRESSURE_SEALEVELHPA\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSORS_PRESSURE_SEALEVELHPA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SENSORS_PRESSURE_SEALEVELHPA\~ (1013.25F)}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Average sea level pressure is 1013.25 hPa \par
}{
Definition at line 40 of file Adafruit_Sensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v sensors_type_t\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:sensors_type_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b sensors_type_t}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor types \par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v SENSOR_TYPE_ACCELEROMETER\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_ACCELEROMETER}
{\b {\i SENSOR_TYPE_ACCELEROMETER{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gravity + linear acceleration \par
}{\xe \v SENSOR_TYPE_MAGNETIC_FIELD\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_MAGNETIC_FIELD}
{\b {\i SENSOR_TYPE_MAGNETIC_FIELD{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
}}  \par
{\xe \v SENSOR_TYPE_ORIENTATION\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_ORIENTATION}
{\b {\i SENSOR_TYPE_ORIENTATION{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
}}  \par
{\xe \v SENSOR_TYPE_GYROSCOPE\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_GYROSCOPE}
{\b {\i SENSOR_TYPE_GYROSCOPE{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
}}  \par
{\xe \v SENSOR_TYPE_LIGHT\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_LIGHT}
{\b {\i SENSOR_TYPE_LIGHT{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
}}  \par
{\xe \v SENSOR_TYPE_PRESSURE\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_PRESSURE}
{\b {\i SENSOR_TYPE_PRESSURE{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
}}  \par
{\xe \v SENSOR_TYPE_PROXIMITY\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_PROXIMITY}
{\b {\i SENSOR_TYPE_PROXIMITY{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
}}  \par
{\xe \v SENSOR_TYPE_GRAVITY\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_GRAVITY}
{\b {\i SENSOR_TYPE_GRAVITY{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
}}  \par
{\xe \v SENSOR_TYPE_LINEAR_ACCELERATION\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_LINEAR_ACCELERATION}
{\b {\i SENSOR_TYPE_LINEAR_ACCELERATION{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Acceleration not including gravity \par
}{\xe \v SENSOR_TYPE_ROTATION_VECTOR\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_ROTATION_VECTOR}
{\b {\i SENSOR_TYPE_ROTATION_VECTOR{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
}}  \par
{\xe \v SENSOR_TYPE_RELATIVE_HUMIDITY\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_RELATIVE_HUMIDITY}
{\b {\i SENSOR_TYPE_RELATIVE_HUMIDITY{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
}}  \par
{\xe \v SENSOR_TYPE_AMBIENT_TEMPERATURE\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_AMBIENT_TEMPERATURE}
{\b {\i SENSOR_TYPE_AMBIENT_TEMPERATURE{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
}}  \par
{\xe \v SENSOR_TYPE_VOLTAGE\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_VOLTAGE}
{\b {\i SENSOR_TYPE_VOLTAGE{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
}}  \par
{\xe \v SENSOR_TYPE_CURRENT\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_CURRENT}
{\b {\i SENSOR_TYPE_CURRENT{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
}}  \par
{\xe \v SENSOR_TYPE_COLOR\:Adafruit_Sensor.h}
{\xe \v Adafruit_Sensor.h\:SENSOR_TYPE_COLOR}
{\b {\i SENSOR_TYPE_COLOR{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
}}  \par
\par
}{
Definition at line 45 of file Adafruit_Sensor.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_SHT31-master/Adafruit_SHT31.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_SHT31-master/Adafruit_SHT31.cpp}
{\xe \v Weather_Balloon/library/Adafruit_SHT31-master/Adafruit_SHT31.cpp}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Adafruit_SHT31.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Adafruit_SHT31.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___s_h_t31_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_SHT31-master/Adafruit_SHT31.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_SHT31-master/Adafruit_SHT31.h}
{\xe \v Weather_Balloon/library/Adafruit_SHT31-master/Adafruit_SHT31.h}
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
{\f2 #include "Wire.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Adafruit_SHT31.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___s_h_t31_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___s_h_t31_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Adafruit_SHT31}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_DEFAULT_ADDR}\~ 0x44\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_MEAS_HIGHREP_STRETCH}\~ 0x2C06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_MEAS_MEDREP_STRETCH}\~ 0x2C0D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_MEAS_LOWREP_STRETCH}\~ 0x2C10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_MEAS_HIGHREP}\~ 0x2400\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_MEAS_MEDREP}\~ 0x240B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_MEAS_LOWREP}\~ 0x2416\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_READSTATUS}\~ 0xF32D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_CLEARSTATUS}\~ 0x3041\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_SOFTRESET}\~ 0x30A2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_HEATEREN}\~ 0x306D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_HEATERDIS}\~ 0x3066\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v SHT31_CLEARSTATUS\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_CLEARSTATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_CLEARSTATUS\~ 0x3041}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file Adafruit_SHT31.h.}\par
}
{\xe \v SHT31_DEFAULT_ADDR\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_DEFAULT_ADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_DEFAULT_ADDR\~ 0x44}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file Adafruit_SHT31.h.}\par
}
{\xe \v SHT31_HEATERDIS\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_HEATERDIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_HEATERDIS\~ 0x3066}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file Adafruit_SHT31.h.}\par
{
Referenced by Adafruit_SHT31::heater().}\par
}
{\xe \v SHT31_HEATEREN\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_HEATEREN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_HEATEREN\~ 0x306D}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file Adafruit_SHT31.h.}\par
{
Referenced by Adafruit_SHT31::heater().}\par
}
{\xe \v SHT31_MEAS_HIGHREP\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_MEAS_HIGHREP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_MEAS_HIGHREP\~ 0x2400}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file Adafruit_SHT31.h.}\par
{
Referenced by Adafruit_SHT31::readHumidity().}\par
}
{\xe \v SHT31_MEAS_HIGHREP_STRETCH\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_MEAS_HIGHREP_STRETCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_MEAS_HIGHREP_STRETCH\~ 0x2C06}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file Adafruit_SHT31.h.}\par
}
{\xe \v SHT31_MEAS_LOWREP\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_MEAS_LOWREP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_MEAS_LOWREP\~ 0x2416}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file Adafruit_SHT31.h.}\par
}
{\xe \v SHT31_MEAS_LOWREP_STRETCH\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_MEAS_LOWREP_STRETCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_MEAS_LOWREP_STRETCH\~ 0x2C10}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file Adafruit_SHT31.h.}\par
}
{\xe \v SHT31_MEAS_MEDREP\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_MEAS_MEDREP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_MEAS_MEDREP\~ 0x240B}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file Adafruit_SHT31.h.}\par
}
{\xe \v SHT31_MEAS_MEDREP_STRETCH\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_MEAS_MEDREP_STRETCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_MEAS_MEDREP_STRETCH\~ 0x2C0D}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 26 of file Adafruit_SHT31.h.}\par
}
{\xe \v SHT31_READSTATUS\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_READSTATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_READSTATUS\~ 0xF32D}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file Adafruit_SHT31.h.}\par
{
Referenced by Adafruit_SHT31::readStatus().}\par
}
{\xe \v SHT31_SOFTRESET\:Adafruit_SHT31.h}
{\xe \v Adafruit_SHT31.h\:SHT31_SOFTRESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_SOFTRESET\~ 0x30A2}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file Adafruit_SHT31.h.}\par
{
Referenced by Adafruit_SHT31::reset().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_SI1145_Library-master/Adafruit_SI1145.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_SI1145_Library-master/Adafruit_SI1145.cpp}
{\xe \v Weather_Balloon/library/Adafruit_SI1145_Library-master/Adafruit_SI1145.cpp}
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Adafruit_SI1145.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Adafruit_SI1145.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___s_i1145_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_SI1145_Library-master/Adafruit_SI1145.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_SI1145_Library-master/Adafruit_SI1145.h}
{\xe \v Weather_Balloon/library/Adafruit_SI1145_Library-master/Adafruit_SI1145.h}
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
{\f2 #include <Wire.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Adafruit_SI1145.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___s_i1145_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___s_i1145_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Adafruit_SI1145}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_QUERY}\~ 0x80\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_SET}\~ 0xA0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_NOP}\~ 0x0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_RESET}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_BUSADDR}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PS_FORCE}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_ALS_FORCE}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PSALS_FORCE}\~ 0x07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PS_PAUSE}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_ALS_PAUSE}\~ 0x0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PSALS_PAUSE}\~ 0xB\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PS_AUTO}\~ 0x0D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_ALS_AUTO}\~ 0x0E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PSALS_AUTO}\~ 0x0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_GET_CAL}\~ 0x12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_I2CADDR}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_CHLIST}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_CHLIST_ENUV}\~ 0x80\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_CHLIST_ENAUX}\~ 0x40\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_CHLIST_ENALSIR}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_CHLIST_ENALSVIS}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_CHLIST_ENPS1}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_CHLIST_ENPS2}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_CHLIST_ENPS3}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED12SEL}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED12SEL_PS2NONE}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED12SEL_PS2LED1}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED12SEL_PS2LED2}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED12SEL_PS2LED3}\~ 0x40\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED12SEL_PS1NONE}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED12SEL_PS1LED1}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED12SEL_PS1LED2}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED12SEL_PS1LED3}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSLED3SEL}\~ 0x03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSENCODE}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSENCODE}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PS1ADCMUX}\~ 0x07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PS2ADCMUX}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PS3ADCMUX}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSADCOUNTER}\~ 0x0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSADCGAIN}\~ 0x0B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSADCMISC}\~ 0x0C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSADCMISC_RANGE}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_PSADCMISC_PSMODE}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSIRADCMUX}\~ 0x0E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_AUXADCMUX}\~ 0x0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSVISADCOUNTER}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSVISADCGAIN}\~ 0x11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSVISADCMISC}\~ 0x12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSVISADCMISC_VISRANGE}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSIRADCOUNTER}\~ 0x1D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSIRADCGAIN}\~ 0x1E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSIRADCMISC}\~ 0x1F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ALSIRADCMISC_RANGE}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCCOUNTER_1CLK}\~ 0b00000000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCCOUNTER_7CLK}\~ 0b00010000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCCOUNTER_15CLK}\~ 0b00100000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCCOUNTER_31CLK}\~ 0b00110000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCCOUNTER_63CLK}\~ 0b01000000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCCOUNTER_127CLK}\~ 0b01010000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCCOUNTER_255CLK}\~ 0b01100000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCCOUNTER_511CLK}\~ 0b01110000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCMUX_SMALLIR}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_PARAM_ADCMUX_LARGEIR}\~ 0x03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PARTID}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_REVID}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_SEQID}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_INTCFG}\~ 0x03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_INTCFG_INTOE}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_INTCFG_INTMODE}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_IRQEN}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_IRQEN_ALSEVERYSAMPLE}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_IRQEN_PS1EVERYSAMPLE}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_IRQEN_PS2EVERYSAMPLE}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_IRQEN_PS3EVERYSAMPLE}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_IRQMODE1}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_IRQMODE2}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_HWKEY}\~ 0x07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_MEASRATE0}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_MEASRATE1}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PSRATE}\~ 0x0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PSLED21}\~ 0x0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PSLED3}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_UCOEFF0}\~ 0x13\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_UCOEFF1}\~ 0x14\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_UCOEFF2}\~ 0x15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_UCOEFF3}\~ 0x16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PARAMWR}\~ 0x17\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_COMMAND}\~ 0x18\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_RESPONSE}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_IRQSTAT}\~ 0x21\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_IRQSTAT_ALS}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_ALSVISDATA0}\~ 0x22\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_ALSVISDATA1}\~ 0x23\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_ALSIRDATA0}\~ 0x24\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_ALSIRDATA1}\~ 0x25\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PS1DATA0}\~ 0x26\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PS1DATA1}\~ 0x27\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PS2DATA0}\~ 0x28\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PS2DATA1}\~ 0x29\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PS3DATA0}\~ 0x2A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PS3DATA1}\~ 0x2B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_UVINDEX0}\~ 0x2C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_UVINDEX1}\~ 0x2D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_PARAMRD}\~ 0x2E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_REG_CHIPSTAT}\~ 0x30\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SI1145_ADDR}\~ 0x60\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v SI1145_ADDR\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_ADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_ADDR\~ 0x60}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 154 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::Adafruit_SI1145().}\par
}
{\xe \v SI1145_ALS_AUTO\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_ALS_AUTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_ALS_AUTO\~ 0x0E}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_ALS_FORCE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_ALS_FORCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_ALS_FORCE\~ 0x06}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_ALS_PAUSE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_ALS_PAUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_ALS_PAUSE\~ 0x0A}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_BUSADDR\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_BUSADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_BUSADDR\~ 0x02}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_GET_CAL\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_GET_CAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_GET_CAL\~ 0x12}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_NOP\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_NOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_NOP\~ 0x0}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::reset_uv().}\par
}
{\xe \v SI1145_PARAM_ADCCOUNTER_127CLK\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCCOUNTER_127CLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCCOUNTER_127CLK\~ 0b01010000}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_ADCCOUNTER_15CLK\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCCOUNTER_15CLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCCOUNTER_15CLK\~ 0b00100000}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_ADCCOUNTER_1CLK\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCCOUNTER_1CLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCCOUNTER_1CLK\~ 0b00000000}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_ADCCOUNTER_255CLK\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCCOUNTER_255CLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCCOUNTER_255CLK\~ 0b01100000}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_ADCCOUNTER_31CLK\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCCOUNTER_31CLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCCOUNTER_31CLK\~ 0b00110000}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_ADCCOUNTER_511CLK\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCCOUNTER_511CLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCCOUNTER_511CLK\~ 0b01110000}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ADCCOUNTER_63CLK\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCCOUNTER_63CLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCCOUNTER_63CLK\~ 0b01000000}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_ADCCOUNTER_7CLK\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCCOUNTER_7CLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCCOUNTER_7CLK\~ 0b00010000}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_ADCMUX_LARGEIR\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCMUX_LARGEIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCMUX_LARGEIR\~ 0x03}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ADCMUX_SMALLIR\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ADCMUX_SMALLIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ADCMUX_SMALLIR\~ 0x00}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ALSENCODE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSENCODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSENCODE\~ 0x06}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_ALSIRADCGAIN\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSIRADCGAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSIRADCGAIN\~ 0x1E}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ALSIRADCMISC\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSIRADCMISC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSIRADCMISC\~ 0x1F}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ALSIRADCMISC_RANGE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSIRADCMISC_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSIRADCMISC_RANGE\~ 0x20}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ALSIRADCMUX\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSIRADCMUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSIRADCMUX\~ 0x0E}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ALSIRADCOUNTER\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSIRADCOUNTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSIRADCOUNTER\~ 0x1D}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ALSVISADCGAIN\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSVISADCGAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSVISADCGAIN\~ 0x11}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ALSVISADCMISC\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSVISADCMISC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSVISADCMISC\~ 0x12}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ALSVISADCMISC_VISRANGE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSVISADCMISC_VISRANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSVISADCMISC_VISRANGE\~ 0x20}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_ALSVISADCOUNTER\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_ALSVISADCOUNTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_ALSVISADCOUNTER\~ 0x10}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_AUXADCMUX\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_AUXADCMUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_AUXADCMUX\~ 0x0F}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_CHLIST\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_CHLIST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_CHLIST\~ 0x01}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_CHLIST_ENALSIR\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_CHLIST_ENALSIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_CHLIST_ENALSIR\~ 0x20}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_CHLIST_ENALSVIS\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_CHLIST_ENALSVIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_CHLIST_ENALSVIS\~ 0x10}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_CHLIST_ENAUX\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_CHLIST_ENAUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_CHLIST_ENAUX\~ 0x40}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_CHLIST_ENPS1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_CHLIST_ENPS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_CHLIST_ENPS1\~ 0x01}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_CHLIST_ENPS2\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_CHLIST_ENPS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_CHLIST_ENPS2\~ 0x02}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_CHLIST_ENPS3\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_CHLIST_ENPS3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_CHLIST_ENPS3\~ 0x04}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_CHLIST_ENUV\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_CHLIST_ENUV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_CHLIST_ENUV\~ 0x80}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_I2CADDR\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_I2CADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_I2CADDR\~ 0x00}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PS1ADCMUX\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PS1ADCMUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PS1ADCMUX\~ 0x07}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_PS2ADCMUX\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PS2ADCMUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PS2ADCMUX\~ 0x08}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PS3ADCMUX\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PS3ADCMUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PS3ADCMUX\~ 0x09}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PSADCGAIN\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSADCGAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSADCGAIN\~ 0x0B}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_PSADCMISC\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSADCMISC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSADCMISC\~ 0x0C}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_PSADCMISC_PSMODE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSADCMISC_PSMODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSADCMISC_PSMODE\~ 0x04}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_PSADCMISC_RANGE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSADCMISC_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSADCMISC_RANGE\~ 0x20}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_PSADCOUNTER\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSADCOUNTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSADCOUNTER\~ 0x0A}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_PSENCODE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSENCODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSENCODE\~ 0x05}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PSLED12SEL\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED12SEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED12SEL\~ 0x02}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_PSLED12SEL_PS1LED1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED12SEL_PS1LED1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED12SEL_PS1LED1\~ 0x01}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_PARAM_PSLED12SEL_PS1LED2\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED12SEL_PS1LED2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED12SEL_PS1LED2\~ 0x02}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PSLED12SEL_PS1LED3\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED12SEL_PS1LED3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED12SEL_PS1LED3\~ 0x04}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PSLED12SEL_PS1NONE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED12SEL_PS1NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED12SEL_PS1NONE\~ 0x00}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PSLED12SEL_PS2LED1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED12SEL_PS2LED1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED12SEL_PS2LED1\~ 0x10}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PSLED12SEL_PS2LED2\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED12SEL_PS2LED2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED12SEL_PS2LED2\~ 0x20}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PSLED12SEL_PS2LED3\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED12SEL_PS2LED3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED12SEL_PS2LED3\~ 0x40}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PSLED12SEL_PS2NONE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED12SEL_PS2NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED12SEL_PS2NONE\~ 0x00}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_PSLED3SEL\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_PSLED3SEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_PSLED3SEL\~ 0x03}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PARAM_QUERY\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_QUERY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_QUERY\~ 0x80}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::readProx().}\par
}
{\xe \v SI1145_PARAM_SET\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PARAM_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PARAM_SET\~ 0xA0}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::readProx().}\par
}
{\xe \v SI1145_PS_AUTO\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PS_AUTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PS_AUTO\~ 0x0D}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PS_FORCE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PS_FORCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PS_FORCE\~ 0x05}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PS_PAUSE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PS_PAUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PS_PAUSE\~ 0x09}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PSALS_AUTO\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PSALS_AUTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PSALS_AUTO\~ 0x0F}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_PSALS_FORCE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PSALS_FORCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PSALS_FORCE\~ 0x07}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::force_convert().}\par
}
{\xe \v SI1145_PSALS_PAUSE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_PSALS_PAUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_PSALS_PAUSE\~ 0xB}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_ALSIRDATA0\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_ALSIRDATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_ALSIRDATA0\~ 0x24}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_ALSIRDATA1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_ALSIRDATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_ALSIRDATA1\~ 0x25}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 142 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_ALSVISDATA0\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_ALSVISDATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_ALSVISDATA0\~ 0x22}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 139 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_ALSVISDATA1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_ALSVISDATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_ALSVISDATA1\~ 0x23}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_CHIPSTAT\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_CHIPSTAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_CHIPSTAT\~ 0x30}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 152 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_COMMAND\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_COMMAND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_COMMAND\~ 0x18}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 134 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::force_convert(), Adafruit_SI1145::nop(), Adafruit_SI1145::readProx(), Adafruit_SI1145::reset(), and Adafruit_SI1145::reset_uv().}\par
}
{\xe \v SI1145_REG_HWKEY\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_HWKEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_HWKEY\~ 0x07}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::reset().}\par
}
{\xe \v SI1145_REG_INTCFG\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_INTCFG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_INTCFG\~ 0x03}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin(), and Adafruit_SI1145::reset().}\par
}
{\xe \v SI1145_REG_INTCFG_INTMODE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_INTCFG_INTMODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_INTCFG_INTMODE\~ 0x02}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_INTCFG_INTOE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_INTCFG_INTOE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_INTCFG_INTOE\~ 0x01}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_REG_IRQEN\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_IRQEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_IRQEN\~ 0x04}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin(), and Adafruit_SI1145::reset().}\par
}
{\xe \v SI1145_REG_IRQEN_ALSEVERYSAMPLE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_IRQEN_ALSEVERYSAMPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_IRQEN_ALSEVERYSAMPLE\~ 0x01}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_REG_IRQEN_PS1EVERYSAMPLE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_IRQEN_PS1EVERYSAMPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_IRQEN_PS1EVERYSAMPLE\~ 0x04}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_IRQEN_PS2EVERYSAMPLE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_IRQEN_PS2EVERYSAMPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_IRQEN_PS2EVERYSAMPLE\~ 0x08}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_IRQEN_PS3EVERYSAMPLE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_IRQEN_PS3EVERYSAMPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_IRQEN_PS3EVERYSAMPLE\~ 0x10}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_IRQMODE1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_IRQMODE1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_IRQMODE1\~ 0x05}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 120 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::reset().}\par
}
{\xe \v SI1145_REG_IRQMODE2\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_IRQMODE2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_IRQMODE2\~ 0x06}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::reset().}\par
}
{\xe \v SI1145_REG_IRQSTAT\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_IRQSTAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_IRQSTAT\~ 0x21}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 136 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::reset().}\par
}
{\xe \v SI1145_REG_IRQSTAT_ALS\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_IRQSTAT_ALS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_IRQSTAT_ALS\~ 0x01}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 137 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_MEASRATE0\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_MEASRATE0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_MEASRATE0\~ 0x08}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::reset().}\par
}
{\xe \v SI1145_REG_MEASRATE1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_MEASRATE1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_MEASRATE1\~ 0x09}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::reset().}\par
}
{\xe \v SI1145_REG_PARAMRD\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PARAMRD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PARAMRD\~ 0x2E}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::readProx().}\par
}
{\xe \v SI1145_REG_PARAMWR\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PARAMWR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PARAMWR\~ 0x17}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::readProx().}\par
}
{\xe \v SI1145_REG_PARTID\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PARTID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PARTID\~ 0x00}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_REG_PS1DATA0\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PS1DATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PS1DATA0\~ 0x26}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_PS1DATA1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PS1DATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PS1DATA1\~ 0x27}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_PS2DATA0\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PS2DATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PS2DATA0\~ 0x28}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 145 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_PS2DATA1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PS2DATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PS2DATA1\~ 0x29}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_PS3DATA0\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PS3DATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PS3DATA0\~ 0x2A}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_PS3DATA1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PS3DATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PS3DATA1\~ 0x2B}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_PSLED21\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PSLED21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PSLED21\~ 0x0F}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_REG_PSLED3\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PSLED3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PSLED3\~ 0x10}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 128 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_PSRATE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_PSRATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_PSRATE\~ 0x0A}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_RESPONSE\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_RESPONSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_RESPONSE\~ 0x20}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 135 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_REVID\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_REVID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_REVID\~ 0x01}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_SEQID\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_SEQID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_SEQID\~ 0x02}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 107 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_UCOEFF0\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_UCOEFF0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_UCOEFF0\~ 0x13}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 129 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_REG_UCOEFF1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_UCOEFF1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_UCOEFF1\~ 0x14}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_REG_UCOEFF2\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_UCOEFF2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_UCOEFF2\~ 0x15}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 131 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_REG_UCOEFF3\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_UCOEFF3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_UCOEFF3\~ 0x16}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 132 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::begin().}\par
}
{\xe \v SI1145_REG_UVINDEX0\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_UVINDEX0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_UVINDEX0\~ 0x2C}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 149 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_REG_UVINDEX1\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_REG_UVINDEX1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_REG_UVINDEX1\~ 0x2D}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file Adafruit_SI1145.h.}\par
}
{\xe \v SI1145_RESET\:Adafruit_SI1145.h}
{\xe \v Adafruit_SI1145.h\:SI1145_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SI1145_RESET\~ 0x01}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file Adafruit_SI1145.h.}\par
{
Referenced by Adafruit_SI1145::nop(), and Adafruit_SI1145::reset().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_TSL2561-master/Adafruit_TSL2561_U.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_TSL2561-master/Adafruit_TSL2561_U.cpp}
{\xe \v Weather_Balloon/library/Adafruit_TSL2561-master/Adafruit_TSL2561_U.cpp}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "pgmspace.h"}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include "Adafruit_TSL2561_U.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Adafruit_TSL2561_U.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___t_s_l2561___u_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_DELAY_INTTIME_13MS}\~ (15)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_DELAY_INTTIME_101MS}\~ (120)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_DELAY_INTTIME_402MS}\~ (450)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TSL2561_DELAY_INTTIME_101MS\:Adafruit_TSL2561_U.cpp}
{\xe \v Adafruit_TSL2561_U.cpp\:TSL2561_DELAY_INTTIME_101MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_DELAY_INTTIME_101MS\~ (120)}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file Adafruit_TSL2561_U.cpp.}\par
}
{\xe \v TSL2561_DELAY_INTTIME_13MS\:Adafruit_TSL2561_U.cpp}
{\xe \v Adafruit_TSL2561_U.cpp\:TSL2561_DELAY_INTTIME_13MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_DELAY_INTTIME_13MS\~ (15)}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file Adafruit_TSL2561_U.cpp.}\par
}
{\xe \v TSL2561_DELAY_INTTIME_402MS\:Adafruit_TSL2561_U.cpp}
{\xe \v Adafruit_TSL2561_U.cpp\:TSL2561_DELAY_INTTIME_402MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_DELAY_INTTIME_402MS\~ (450)}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file Adafruit_TSL2561_U.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_TSL2561-master/Adafruit_TSL2561_U.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_TSL2561-master/Adafruit_TSL2561_U.h}
{\xe \v Weather_Balloon/library/Adafruit_TSL2561-master/Adafruit_TSL2561_U.h}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <WProgram.h>}\par
{\f2 #include <Adafruit_Sensor.h>}\par
{\f2 #include <Wire.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Adafruit_TSL2561_U.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___t_s_l2561___u_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_adafruit___t_s_l2561___u_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Adafruit_TSL2561_Unified}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_VISIBLE}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_INFRARED}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_FULLSPECTRUM}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_ADDR_LOW}\~ (0x29)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_ADDR_FLOAT}\~ (0x39)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_ADDR_HIGH}\~ (0x49)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_PACKAGE_T_FN_CL}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_COMMAND_BIT}\~ (0x80)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_CLEAR_BIT}\~ (0x40)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_WORD_BIT}\~ (0x20)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_BLOCK_BIT}\~ (0x10)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_CONTROL_POWERON}\~ (0x03)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_CONTROL_POWEROFF}\~ (0x00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_LUXSCALE}\~ (14)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_RATIOSCALE}\~ (9)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_CHSCALE}\~ (10)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_CHSCALE_TINT0}\~ (0x7517)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_CHSCALE_TINT1}\~ (0x0FE7)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K1T}\~ (0x0040)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B1T}\~ (0x01f2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M1T}\~ (0x01be)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K2T}\~ (0x0080)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B2T}\~ (0x0214)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M2T}\~ (0x02d1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K3T}\~ (0x00c0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B3T}\~ (0x023f)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M3T}\~ (0x037b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K4T}\~ (0x0100)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B4T}\~ (0x0270)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M4T}\~ (0x03fe)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K5T}\~ (0x0138)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B5T}\~ (0x016f)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M5T}\~ (0x01fc)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K6T}\~ (0x019a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B6T}\~ (0x00d2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M6T}\~ (0x00fb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K7T}\~ (0x029a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B7T}\~ (0x0018)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M7T}\~ (0x0012)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K8T}\~ (0x029a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B8T}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M8T}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K1C}\~ (0x0043)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B1C}\~ (0x0204)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M1C}\~ (0x01ad)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K2C}\~ (0x0085)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B2C}\~ (0x0228)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M2C}\~ (0x02c1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K3C}\~ (0x00c8)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B3C}\~ (0x0253)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M3C}\~ (0x0363)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K4C}\~ (0x010a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B4C}\~ (0x0282)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M4C}\~ (0x03df)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K5C}\~ (0x014d)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B5C}\~ (0x0177)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M5C}\~ (0x01dd)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K6C}\~ (0x019a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B6C}\~ (0x0101)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M6C}\~ (0x0127)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K7C}\~ (0x029a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B7C}\~ (0x0037)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M7C}\~ (0x002b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_K8C}\~ (0x029a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_B8C}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_LUX_M8C}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_AGC_THI_13MS}\~ (4850)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_AGC_TLO_13MS}\~ (100)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_AGC_THI_101MS}\~ (36000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_AGC_TLO_101MS}\~ (200)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_AGC_THI_402MS}\~ (63000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_AGC_TLO_402MS}\~ (500)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_CLIPPING_13MS}\~ (4900)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_CLIPPING_101MS}\~ (37000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_CLIPPING_402MS}\~ (65000)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b TSL2561_REGISTER_CONTROL} = 0x00, 
{\b TSL2561_REGISTER_TIMING} = 0x01, 
{\b TSL2561_REGISTER_THRESHHOLDL_LOW} = 0x02, 
{\b TSL2561_REGISTER_THRESHHOLDL_HIGH} = 0x03, 
{\b TSL2561_REGISTER_THRESHHOLDH_LOW} = 0x04, 
{\b TSL2561_REGISTER_THRESHHOLDH_HIGH} = 0x05, 
{\b TSL2561_REGISTER_INTERRUPT} = 0x06, 
{\b TSL2561_REGISTER_CRC} = 0x08, 
{\b TSL2561_REGISTER_ID} = 0x0A, 
{\b TSL2561_REGISTER_CHAN0_LOW} = 0x0C, 
{\b TSL2561_REGISTER_CHAN0_HIGH} = 0x0D, 
{\b TSL2561_REGISTER_CHAN1_LOW} = 0x0E, 
{\b TSL2561_REGISTER_CHAN1_HIGH} = 0x0F
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b tsl2561IntegrationTime_t} \{ {\b TSL2561_INTEGRATIONTIME_13MS} = 0x00, 
{\b TSL2561_INTEGRATIONTIME_101MS} = 0x01, 
{\b TSL2561_INTEGRATIONTIME_402MS} = 0x02
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b tsl2561Gain_t} \{ {\b TSL2561_GAIN_1X} = 0x00, 
{\b TSL2561_GAIN_16X} = 0x10
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TSL2561_ADDR_FLOAT\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_ADDR_FLOAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_ADDR_FLOAT\~ (0x39)}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_ADDR_HIGH\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_ADDR_HIGH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_ADDR_HIGH\~ (0x49)}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_ADDR_LOW\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_ADDR_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_ADDR_LOW\~ (0x29)}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_AGC_THI_101MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_AGC_THI_101MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_AGC_THI_101MS\~ (36000)}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 136 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::getLuminosity().}\par
}
{\xe \v TSL2561_AGC_THI_13MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_AGC_THI_13MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_AGC_THI_13MS\~ (4850)}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 134 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::getLuminosity().}\par
}
{\xe \v TSL2561_AGC_THI_402MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_AGC_THI_402MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_AGC_THI_402MS\~ (63000)}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 138 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::getLuminosity().}\par
}
{\xe \v TSL2561_AGC_TLO_101MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_AGC_TLO_101MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_AGC_TLO_101MS\~ (200)}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 137 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::getLuminosity().}\par
}
{\xe \v TSL2561_AGC_TLO_13MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_AGC_TLO_13MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_AGC_TLO_13MS\~ (100)}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 135 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::getLuminosity().}\par
}
{\xe \v TSL2561_AGC_TLO_402MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_AGC_TLO_402MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_AGC_TLO_402MS\~ (500)}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 139 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::getLuminosity().}\par
}
{\xe \v TSL2561_BLOCK_BIT\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_BLOCK_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_BLOCK_BIT\~ (0x10)}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_CLEAR_BIT\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_CLEAR_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_CLEAR_BIT\~ (0x40)}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_CLIPPING_101MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_CLIPPING_101MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_CLIPPING_101MS\~ (37000)}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_CLIPPING_13MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_CLIPPING_13MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_CLIPPING_13MS\~ (4900)}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 142 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_CLIPPING_402MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_CLIPPING_402MS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_CLIPPING_402MS\~ (65000)}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_COMMAND_BIT\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_COMMAND_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_COMMAND_BIT\~ (0x80)}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::setGain(), and Adafruit_TSL2561_Unified::setIntegrationTime().}\par
}
{\xe \v TSL2561_CONTROL_POWEROFF\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_CONTROL_POWEROFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_CONTROL_POWEROFF\~ (0x00)}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_CONTROL_POWERON\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_CONTROL_POWERON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_CONTROL_POWERON\~ (0x03)}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_FULLSPECTRUM\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_FULLSPECTRUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_FULLSPECTRUM\~ 0}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_INFRARED\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_INFRARED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_INFRARED\~ 1}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_LUX_B1C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B1C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B1C\~ (0x0204)}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B1T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B1T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B1T\~ (0x01f2)}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B2C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B2C\~ (0x0228)}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B2T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B2T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B2T\~ (0x0214)}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B3C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B3C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B3C\~ (0x0253)}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B3T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B3T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B3T\~ (0x023f)}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B4C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B4C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B4C\~ (0x0282)}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 118 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B4T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B4T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B4T\~ (0x0270)}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B5C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B5C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B5C\~ (0x0177)}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B5T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B5T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B5T\~ (0x016f)}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B6C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B6C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B6C\~ (0x0101)}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B6T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B6T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B6T\~ (0x00d2)}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 98 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B7C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B7C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B7C\~ (0x0037)}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B7T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B7T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B7T\~ (0x0018)}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B8C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B8C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B8C\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_B8T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_B8T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_B8T\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_CHSCALE\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_CHSCALE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_CHSCALE\~ (10)}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_CHSCALE_TINT0\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_CHSCALE_TINT0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_CHSCALE_TINT0\~ (0x7517)}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_CHSCALE_TINT1\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_CHSCALE_TINT1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_CHSCALE_TINT1\~ (0x0FE7)}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K1C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K1C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K1C\~ (0x0043)}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 108 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K1T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K1T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K1T\~ (0x0040)}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K2C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K2C\~ (0x0085)}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K2T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K2T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K2T\~ (0x0080)}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K3C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K3C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K3C\~ (0x00c8)}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K3T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K3T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K3T\~ (0x00c0)}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K4C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K4C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K4C\~ (0x010a)}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K4T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K4T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K4T\~ (0x0100)}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K5C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K5C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K5C\~ (0x014d)}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 120 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K5T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K5T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K5T\~ (0x0138)}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K6C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K6C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K6C\~ (0x019a)}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K6T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K6T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K6T\~ (0x019a)}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K7C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K7C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K7C\~ (0x029a)}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K7T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K7T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K7T\~ (0x029a)}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K8C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K8C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K8C\~ (0x029a)}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 129 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_K8T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_K8T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_K8T\~ (0x029a)}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_LUXSCALE\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_LUXSCALE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_LUXSCALE\~ (14)}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M1C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M1C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M1C\~ (0x01ad)}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M1T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M1T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M1T\~ (0x01be)}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M2C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M2C\~ (0x02c1)}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M2T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M2T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M2T\~ (0x02d1)}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M3C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M3C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M3C\~ (0x0363)}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M3T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M3T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M3T\~ (0x037b)}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M4C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M4C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M4C\~ (0x03df)}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M4T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M4T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M4T\~ (0x03fe)}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M5C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M5C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M5C\~ (0x01dd)}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M5T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M5T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M5T\~ (0x01fc)}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M6C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M6C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M6C\~ (0x0127)}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M6T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M6T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M6T\~ (0x00fb)}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M7C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M7C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M7C\~ (0x002b)}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 128 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M7T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M7T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M7T\~ (0x0012)}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M8C\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M8C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M8C\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 131 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_M8T\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_M8T}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_M8T\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_LUX_RATIOSCALE\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_LUX_RATIOSCALE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_LUX_RATIOSCALE\~ (9)}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file Adafruit_TSL2561_U.h.}\par
{
Referenced by Adafruit_TSL2561_Unified::calculateLux().}\par
}
{\xe \v TSL2561_PACKAGE_T_FN_CL\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_PACKAGE_T_FN_CL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_PACKAGE_T_FN_CL}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_VISIBLE\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_VISIBLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_VISIBLE\~ 2}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v TSL2561_WORD_BIT\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_WORD_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_WORD_BIT\~ (0x20)}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file Adafruit_TSL2561_U.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
anonymous enum}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v TSL2561_REGISTER_CONTROL\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_CONTROL}
{\b {\i TSL2561_REGISTER_CONTROL{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
}}  \par
{\xe \v TSL2561_REGISTER_TIMING\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_TIMING}
{\b {\i TSL2561_REGISTER_TIMING{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
}}  \par
{\xe \v TSL2561_REGISTER_THRESHHOLDL_LOW\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_THRESHHOLDL_LOW}
{\b {\i TSL2561_REGISTER_THRESHHOLDL_LOW{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
}}  \par
{\xe \v TSL2561_REGISTER_THRESHHOLDL_HIGH\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_THRESHHOLDL_HIGH}
{\b {\i TSL2561_REGISTER_THRESHHOLDL_HIGH{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
}}  \par
{\xe \v TSL2561_REGISTER_THRESHHOLDH_LOW\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_THRESHHOLDH_LOW}
{\b {\i TSL2561_REGISTER_THRESHHOLDH_LOW{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
}}  \par
{\xe \v TSL2561_REGISTER_THRESHHOLDH_HIGH\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_THRESHHOLDH_HIGH}
{\b {\i TSL2561_REGISTER_THRESHHOLDH_HIGH{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
}}  \par
{\xe \v TSL2561_REGISTER_INTERRUPT\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_INTERRUPT}
{\b {\i TSL2561_REGISTER_INTERRUPT{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
}}  \par
{\xe \v TSL2561_REGISTER_CRC\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_CRC}
{\b {\i TSL2561_REGISTER_CRC{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
}}  \par
{\xe \v TSL2561_REGISTER_ID\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_ID}
{\b {\i TSL2561_REGISTER_ID{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
}}  \par
{\xe \v TSL2561_REGISTER_CHAN0_LOW\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_CHAN0_LOW}
{\b {\i TSL2561_REGISTER_CHAN0_LOW{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
}}  \par
{\xe \v TSL2561_REGISTER_CHAN0_HIGH\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_CHAN0_HIGH}
{\b {\i TSL2561_REGISTER_CHAN0_HIGH{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
}}  \par
{\xe \v TSL2561_REGISTER_CHAN1_LOW\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_CHAN1_LOW}
{\b {\i TSL2561_REGISTER_CHAN1_LOW{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
}}  \par
{\xe \v TSL2561_REGISTER_CHAN1_HIGH\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_REGISTER_CHAN1_HIGH}
{\b {\i TSL2561_REGISTER_CHAN1_HIGH{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
}}  \par
\par
}{
Definition at line 146 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v tsl2561Gain_t\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:tsl2561Gain_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b tsl2561Gain_t}}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v TSL2561_GAIN_1X\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_GAIN_1X}
{\b {\i TSL2561_GAIN_1X{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
}}  \par
{\xe \v TSL2561_GAIN_16X\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_GAIN_16X}
{\b {\i TSL2561_GAIN_16X{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
}}  \par
\par
}{
Definition at line 171 of file Adafruit_TSL2561_U.h.}\par
}
{\xe \v tsl2561IntegrationTime_t\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:tsl2561IntegrationTime_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b tsl2561IntegrationTime_t}}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v TSL2561_INTEGRATIONTIME_13MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_INTEGRATIONTIME_13MS}
{\b {\i TSL2561_INTEGRATIONTIME_13MS{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
}}  \par
{\xe \v TSL2561_INTEGRATIONTIME_101MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_INTEGRATIONTIME_101MS}
{\b {\i TSL2561_INTEGRATIONTIME_101MS{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
}}  \par
{\xe \v TSL2561_INTEGRATIONTIME_402MS\:Adafruit_TSL2561_U.h}
{\xe \v Adafruit_TSL2561_U.h\:TSL2561_INTEGRATIONTIME_402MS}
{\b {\i TSL2561_INTEGRATIONTIME_402MS{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
}}  \par
\par
}{
Definition at line 163 of file Adafruit_TSL2561_U.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Adafruit_TSL2561-master/pgmspace.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Adafruit_TSL2561-master/pgmspace.h}
{\xe \v Weather_Balloon/library/Adafruit_TSL2561-master/pgmspace.h}
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <inttypes.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for pgmspace.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pgmspace_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pgmspace_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PROGMEM}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PGM_P}\~ const char *\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PSTR}(str)\~ (str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b strcpy_P}(dest,  src)\~ strcpy((dest), (src))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b strcat_P}(dest,  src)\~ strcat((dest), (src))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b strcmp_P}(a,  b)\~ strcmp((a), (b))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_byte}(addr)\~ (*(const unsigned char *)(addr))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_word}(addr)\~ (*(const unsigned short *)(addr))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_dword}(addr)\~ (*(const unsigned long *)(addr))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_float}(addr)\~ (*(const float *)(addr))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_byte_near}(addr)\~ {\b pgm_read_byte}(addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_word_near}(addr)\~ {\b pgm_read_word}(addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_dword_near}(addr)\~ {\b pgm_read_dword}(addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_float_near}(addr)\~ {\b pgm_read_float}(addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_byte_far}(addr)\~ {\b pgm_read_byte}(addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_word_far}(addr)\~ {\b pgm_read_word}(addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_dword_far}(addr)\~ {\b pgm_read_dword}(addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_float_far}(addr)\~ {\b pgm_read_float}(addr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void {\b prog_void}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef char {\b prog_char}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef unsigned char {\b prog_uchar}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int8_t {\b prog_int8_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b prog_uint8_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int16_t {\b prog_int16_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint16_t {\b prog_uint16_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int32_t {\b prog_int32_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint32_t {\b prog_uint32_t}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mike Roberts\par
}{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LICENSE
\par}
{\tc\tcl2 \v LICENSE}
Software License Agreement (BSD License)\par
Copyright (c) 2013, Mike Roberts All rights reserved.\par
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Neither the name of the copyright holders nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\par}
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ''AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \par}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v PGM_P\:pgmspace.h}
{\xe \v pgmspace.h\:PGM_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PGM_P\~ const char *}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file pgmspace.h.}\par
}
{\xe \v pgm_read_byte\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_byte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_byte( addr)\~ (*(const unsigned char *)(addr))}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file pgmspace.h.}\par
{
Referenced by OneWire::crc8(), DateTime::DateTime(), DS3231::isAlarm2(), and DS3231::setDateTime().}\par
}
{\xe \v pgm_read_byte_far\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_byte_far}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_byte_far( addr)\~ {\b pgm_read_byte}(addr)}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file pgmspace.h.}\par
}
{\xe \v pgm_read_byte_near\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_byte_near}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_byte_near( addr)\~ {\b pgm_read_byte}(addr)}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file pgmspace.h.}\par
{
Referenced by LedControl::setChar(), and LedControl::setDigit().}\par
}
{\xe \v pgm_read_dword\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_dword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_dword( addr)\~ (*(const unsigned long *)(addr))}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file pgmspace.h.}\par
}
{\xe \v pgm_read_dword_far\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_dword_far}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_dword_far( addr)\~ {\b pgm_read_dword}(addr)}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file pgmspace.h.}\par
}
{\xe \v pgm_read_dword_near\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_dword_near}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_dword_near( addr)\~ {\b pgm_read_dword}(addr)}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file pgmspace.h.}\par
}
{\xe \v pgm_read_float\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_float}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_float( addr)\~ (*(const float *)(addr))}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file pgmspace.h.}\par
}
{\xe \v pgm_read_float_far\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_float_far}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_float_far( addr)\~ {\b pgm_read_float}(addr)}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file pgmspace.h.}\par
}
{\xe \v pgm_read_float_near\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_float_near}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_float_near( addr)\~ {\b pgm_read_float}(addr)}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file pgmspace.h.}\par
}
{\xe \v pgm_read_word\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_word}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_word( addr)\~ (*(const unsigned short *)(addr))}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file pgmspace.h.}\par
}
{\xe \v pgm_read_word_far\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_word_far}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_word_far( addr)\~ {\b pgm_read_word}(addr)}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file pgmspace.h.}\par
}
{\xe \v pgm_read_word_near\:pgmspace.h}
{\xe \v pgmspace.h\:pgm_read_word_near}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_word_near( addr)\~ {\b pgm_read_word}(addr)}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file pgmspace.h.}\par
}
{\xe \v PROGMEM\:pgmspace.h}
{\xe \v pgmspace.h\:PROGMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PROGMEM}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file pgmspace.h.}\par
{
Referenced by OneWire::search().}\par
}
{\xe \v PSTR\:pgmspace.h}
{\xe \v pgmspace.h\:PSTR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PSTR( str)\~ (str)}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file pgmspace.h.}\par
}
{\xe \v strcat_P\:pgmspace.h}
{\xe \v pgmspace.h\:strcat_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define strcat_P( dest,  src)\~ strcat((dest), (src))}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file pgmspace.h.}\par
}
{\xe \v strcmp_P\:pgmspace.h}
{\xe \v pgmspace.h\:strcmp_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define strcmp_P( a,  b)\~ strcmp((a), (b))}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file pgmspace.h.}\par
}
{\xe \v strcpy_P\:pgmspace.h}
{\xe \v pgmspace.h\:strcpy_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define strcpy_P( dest,  src)\~ strcpy((dest), (src))}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file pgmspace.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v prog_char\:pgmspace.h}
{\xe \v pgmspace.h\:prog_char}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef char {\b prog_char}}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file pgmspace.h.}\par
}
{\xe \v prog_int16_t\:pgmspace.h}
{\xe \v pgmspace.h\:prog_int16_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int16_t {\b prog_int16_t}}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file pgmspace.h.}\par
}
{\xe \v prog_int32_t\:pgmspace.h}
{\xe \v pgmspace.h\:prog_int32_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int32_t {\b prog_int32_t}}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file pgmspace.h.}\par
}
{\xe \v prog_int8_t\:pgmspace.h}
{\xe \v pgmspace.h\:prog_int8_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int8_t {\b prog_int8_t}}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file pgmspace.h.}\par
}
{\xe \v prog_uchar\:pgmspace.h}
{\xe \v pgmspace.h\:prog_uchar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef unsigned char {\b prog_uchar}}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file pgmspace.h.}\par
}
{\xe \v prog_uint16_t\:pgmspace.h}
{\xe \v pgmspace.h\:prog_uint16_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint16_t {\b prog_uint16_t}}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file pgmspace.h.}\par
}
{\xe \v prog_uint32_t\:pgmspace.h}
{\xe \v pgmspace.h\:prog_uint32_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint32_t {\b prog_uint32_t}}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file pgmspace.h.}\par
}
{\xe \v prog_uint8_t\:pgmspace.h}
{\xe \v pgmspace.h\:prog_uint8_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t {\b prog_uint8_t}}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file pgmspace.h.}\par
}
{\xe \v prog_void\:pgmspace.h}
{\xe \v pgmspace.h\:prog_void}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void {\b prog_void}}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file pgmspace.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Arduino-DS3231-master/DS3231.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Arduino-DS3231-master/DS3231.cpp}
{\xe \v Weather_Balloon/library/Arduino-DS3231-master/DS3231.cpp}
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
{\f2 #include <Wire.h>}\par
{\f2 #include "DS3231.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for DS3231.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_d_s3231_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint8_t daysArray[] {\b PROGMEM} = \{ 31,28,31,30,31,30,31,31,30,31,30,31 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v PROGMEM\:DS3231.cpp}
{\xe \v DS3231.cpp\:PROGMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint8_t dowArray [] PROGMEM = \{ 31,28,31,30,31,30,31,31,30,31,30,31 \}}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file DS3231.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Arduino-DS3231-master/DS3231.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Arduino-DS3231-master/DS3231.h}
{\xe \v Weather_Balloon/library/Arduino-DS3231-master/DS3231.h}
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for DS3231.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_d_s3231_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_d_s3231_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RTCDateTime}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RTCAlarmTime}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DS3231}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_ADDRESS}\~ (0x68)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_TIME}\~ (0x00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_ALARM_1}\~ (0x07)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_ALARM_2}\~ (0x0B)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_CONTROL}\~ (0x0E)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_STATUS}\~ (0x0F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_TEMPERATURE}\~ (0x11)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RTCDATETIME_STRUCT_H}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DS3231_sqw_t} \{ {\b DS3231_1HZ} = 0x00, 
{\b DS3231_4096HZ} = 0x01, 
{\b DS3231_8192HZ} = 0x02, 
{\b DS3231_32768HZ} = 0x03
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DS3231_alarm1_t} \{ {\b DS3231_EVERY_SECOND} = 0b00001111, 
{\b DS3231_MATCH_S} = 0b00001110, 
{\b DS3231_MATCH_M_S} = 0b00001100, 
{\b DS3231_MATCH_H_M_S} = 0b00001000, 
{\b DS3231_MATCH_DT_H_M_S} = 0b00000000, 
{\b DS3231_MATCH_DY_H_M_S} = 0b00010000
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DS3231_alarm2_t} \{ {\b DS3231_EVERY_MINUTE} = 0b00001110, 
{\b DS3231_MATCH_M} = 0b00001100, 
{\b DS3231_MATCH_H_M} = 0b00001000, 
{\b DS3231_MATCH_DT_H_M} = 0b00000000, 
{\b DS3231_MATCH_DY_H_M} = 0b00010000
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v RTCDateTime}
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct RTCDateTime\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 41 of file DS3231.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\cell }{day\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\cell }{dayOfWeek\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\cell }{hour\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\cell }{minute\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\cell }{month\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
\cell }{second\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\cell }{unixtime\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
\cell }{year\cell }{\cell }{\row }
}
{\xe \v RTCAlarmTime}
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct RTCAlarmTime\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 53 of file DS3231.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
\cell }{day\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\cell }{hour\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
\cell }{minute\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\cell }{second\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DS3231_ADDRESS\:DS3231.h}
{\xe \v DS3231.h\:DS3231_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_ADDRESS\~ (0x68)}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file DS3231.h.}\par
{
Referenced by RTC_DS3231::adjust(), RTC_DS3231::BBSQWEnable(), RTC_DS3231::enable32kHz(), RTC_DS3231::forceTempConv(), DS3231::getAlarm1(), DS3231::getAlarm2(), DS3231::getAlarmType1(), DS3231::getAlarmType2(), RTC_DS3231::getControlRegisterData(), DS3231::getDateTime(), RTC_DS3231::getTempAsFloat(), RTC_DS3231::getTempAsWord(), DS3231::isAlarm2(), RTC_DS3231::isrunning(), RTC_DS3231::now(), DS3231::readTemperature(), DS3231::setAlarm1(), DS3231::setAlarm2(), DS3231::setDateTime(), RTC_DS3231::SQWEnable(), and RTC_DS3231::SQWFrequency().}\par
}
{\xe \v DS3231_REG_ALARM_1\:DS3231.h}
{\xe \v DS3231.h\:DS3231_REG_ALARM_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_ALARM_1\~ (0x07)}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file DS3231.h.}\par
{
Referenced by DS3231::getAlarm1(), DS3231::getAlarmType1(), and DS3231::setAlarm1().}\par
}
{\xe \v DS3231_REG_ALARM_2\:DS3231.h}
{\xe \v DS3231.h\:DS3231_REG_ALARM_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_ALARM_2\~ (0x0B)}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file DS3231.h.}\par
{
Referenced by DS3231::getAlarm2(), DS3231::getAlarmType2(), and DS3231::setAlarm2().}\par
}
{\xe \v DS3231_REG_CONTROL\:DS3231.h}
{\xe \v DS3231.h\:DS3231_REG_CONTROL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_CONTROL\~ (0x0E)}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file DS3231.h.}\par
{
Referenced by DS3231::armAlarm1(), DS3231::armAlarm2(), RTC_DS3231::BBSQWEnable(), DS3231::enableOutput(), DS3231::forceConversion(), RTC_DS3231::forceTempConv(), RTC_DS3231::getControlRegisterData(), DS3231::getOutput(), DS3231::isArmed1(), DS3231::isArmed2(), DS3231::isOutput(), DS3231::setBattery(), DS3231::setOutput(), RTC_DS3231::SQWEnable(), and RTC_DS3231::SQWFrequency().}\par
}
{\xe \v DS3231_REG_STATUS\:DS3231.h}
{\xe \v DS3231.h\:DS3231_REG_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_STATUS\~ (0x0F)}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file DS3231.h.}\par
{
Referenced by DS3231::clearAlarm1(), DS3231::clearAlarm2(), DS3231::enable32kHz(), DS3231::is32kHz(), DS3231::isAlarm1(), and DS3231::isAlarm2().}\par
}
{\xe \v DS3231_REG_TEMPERATURE\:DS3231.h}
{\xe \v DS3231.h\:DS3231_REG_TEMPERATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_TEMPERATURE\~ (0x11)}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file DS3231.h.}\par
{
Referenced by DS3231::readTemperature().}\par
}
{\xe \v DS3231_REG_TIME\:DS3231.h}
{\xe \v DS3231.h\:DS3231_REG_TIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_TIME\~ (0x00)}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file DS3231.h.}\par
{
Referenced by DS3231::getDateTime(), and DS3231::setDateTime().}\par
}
{\xe \v RTCDATETIME_STRUCT_H\:DS3231.h}
{\xe \v DS3231.h\:RTCDATETIME_STRUCT_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RTCDATETIME_STRUCT_H}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file DS3231.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v DS3231_alarm1_t\:DS3231.h}
{\xe \v DS3231.h\:DS3231_alarm1_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DS3231_alarm1_t}}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v DS3231_EVERY_SECOND\:DS3231.h}
{\xe \v DS3231.h\:DS3231_EVERY_SECOND}
{\b {\i DS3231_EVERY_SECOND{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
}}  \par
{\xe \v DS3231_MATCH_S\:DS3231.h}
{\xe \v DS3231.h\:DS3231_MATCH_S}
{\b {\i DS3231_MATCH_S{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
}}  \par
{\xe \v DS3231_MATCH_M_S\:DS3231.h}
{\xe \v DS3231.h\:DS3231_MATCH_M_S}
{\b {\i DS3231_MATCH_M_S{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
}}  \par
{\xe \v DS3231_MATCH_H_M_S\:DS3231.h}
{\xe \v DS3231.h\:DS3231_MATCH_H_M_S}
{\b {\i DS3231_MATCH_H_M_S{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
}}  \par
{\xe \v DS3231_MATCH_DT_H_M_S\:DS3231.h}
{\xe \v DS3231.h\:DS3231_MATCH_DT_H_M_S}
{\b {\i DS3231_MATCH_DT_H_M_S{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
}}  \par
{\xe \v DS3231_MATCH_DY_H_M_S\:DS3231.h}
{\xe \v DS3231.h\:DS3231_MATCH_DY_H_M_S}
{\b {\i DS3231_MATCH_DY_H_M_S{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
}}  \par
\par
}{
Definition at line 70 of file DS3231.h.}\par
}
{\xe \v DS3231_alarm2_t\:DS3231.h}
{\xe \v DS3231.h\:DS3231_alarm2_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DS3231_alarm2_t}}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v DS3231_EVERY_MINUTE\:DS3231.h}
{\xe \v DS3231.h\:DS3231_EVERY_MINUTE}
{\b {\i DS3231_EVERY_MINUTE{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
}}  \par
{\xe \v DS3231_MATCH_M\:DS3231.h}
{\xe \v DS3231.h\:DS3231_MATCH_M}
{\b {\i DS3231_MATCH_M{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
}}  \par
{\xe \v DS3231_MATCH_H_M\:DS3231.h}
{\xe \v DS3231.h\:DS3231_MATCH_H_M}
{\b {\i DS3231_MATCH_H_M{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
}}  \par
{\xe \v DS3231_MATCH_DT_H_M\:DS3231.h}
{\xe \v DS3231.h\:DS3231_MATCH_DT_H_M}
{\b {\i DS3231_MATCH_DT_H_M{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
}}  \par
{\xe \v DS3231_MATCH_DY_H_M\:DS3231.h}
{\xe \v DS3231.h\:DS3231_MATCH_DY_H_M}
{\b {\i DS3231_MATCH_DY_H_M{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
}}  \par
\par
}{
Definition at line 80 of file DS3231.h.}\par
}
{\xe \v DS3231_sqw_t\:DS3231.h}
{\xe \v DS3231.h\:DS3231_sqw_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b DS3231_sqw_t}}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v DS3231_1HZ\:DS3231.h}
{\xe \v DS3231.h\:DS3231_1HZ}
{\b {\i DS3231_1HZ{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
}}  \par
{\xe \v DS3231_4096HZ\:DS3231.h}
{\xe \v DS3231.h\:DS3231_4096HZ}
{\b {\i DS3231_4096HZ{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
}}  \par
{\xe \v DS3231_8192HZ\:DS3231.h}
{\xe \v DS3231.h\:DS3231_8192HZ}
{\b {\i DS3231_8192HZ{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
}}  \par
{\xe \v DS3231_32768HZ\:DS3231.h}
{\xe \v DS3231.h\:DS3231_32768HZ}
{\b {\i DS3231_32768HZ{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
}}  \par
\par
}{
Definition at line 62 of file DS3231.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/LICENSE.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/arduino-ms5xxx-master/LICENSE.md}
{\xe \v Weather_Balloon/library/arduino-ms5xxx-master/LICENSE.md}
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_LSM9DS1/LICENSE.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_LSM9DS1/LICENSE.md}
{\xe \v Weather_Balloon/library/SparkFun_LSM9DS1/LICENSE.md}
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/src/MS5611.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/arduino-ms5xxx-master/src/MS5611.cpp}
{\xe \v Weather_Balloon/library/arduino-ms5xxx-master/src/MS5611.cpp}
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MS5611.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for MS5611.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_s5611_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/src/MS5611.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/arduino-ms5xxx-master/src/MS5611.h}
{\xe \v Weather_Balloon/library/arduino-ms5xxx-master/src/MS5611.h}
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MS5xxx.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for MS5611.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_s5611_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_s5611_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MS5611}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/src/MS5xxx.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/arduino-ms5xxx-master/src/MS5xxx.cpp}
{\xe \v Weather_Balloon/library/arduino-ms5xxx-master/src/MS5xxx.cpp}
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "MS5xxx.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for MS5xxx.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_s5xxx_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/arduino-ms5xxx-master/src/MS5xxx.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/arduino-ms5xxx-master/src/MS5xxx.h}
{\xe \v Weather_Balloon/library/arduino-ms5xxx-master/src/MS5xxx.h}
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
{\f2 #include <Wire.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for MS5xxx.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_s5xxx_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_s5xxx_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MS5xxx}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b I2C_MS5607}\~ 0x76\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b I2C_MS5611}\~ 0x77\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_RESET}\~ 0x1E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_ADC_READ}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_ADC_CONV}\~ 0x40\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_ADC_D1}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_ADC_D2}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_ADC_256}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_ADC_512}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_ADC_1024}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_ADC_2048}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_ADC_4096}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MS5xxx_CMD_PROM_RD}\~ 0xA0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v I2C_MS5607\:MS5xxx.h}
{\xe \v MS5xxx.h\:I2C_MS5607}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define I2C_MS5607\~ 0x76}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file MS5xxx.h.}\par
}
{\xe \v I2C_MS5611\:MS5xxx.h}
{\xe \v MS5xxx.h\:I2C_MS5611}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define I2C_MS5611\~ 0x77}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file MS5xxx.h.}\par
{
Referenced by MS5611::MS5611().}\par
}
{\xe \v MS5xxx_CMD_ADC_1024\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_ADC_1024}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_ADC_1024\~ 0x04}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file MS5xxx.h.}\par
{
Referenced by MS5xxx::read_adc().}\par
}
{\xe \v MS5xxx_CMD_ADC_2048\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_ADC_2048}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_ADC_2048\~ 0x06}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file MS5xxx.h.}\par
{
Referenced by MS5xxx::read_adc().}\par
}
{\xe \v MS5xxx_CMD_ADC_256\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_ADC_256}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_ADC_256\~ 0x00}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file MS5xxx.h.}\par
{
Referenced by MS5xxx::read_adc().}\par
}
{\xe \v MS5xxx_CMD_ADC_4096\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_ADC_4096}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_ADC_4096\~ 0x08}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file MS5xxx.h.}\par
{
Referenced by MS5xxx::read_adc(), MS5611::Readout(), and MS5xxx::Readout().}\par
}
{\xe \v MS5xxx_CMD_ADC_512\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_ADC_512}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_ADC_512\~ 0x02}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file MS5xxx.h.}\par
{
Referenced by MS5xxx::read_adc().}\par
}
{\xe \v MS5xxx_CMD_ADC_CONV\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_ADC_CONV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_ADC_CONV\~ 0x40}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file MS5xxx.h.}\par
{
Referenced by MS5xxx::read_adc().}\par
}
{\xe \v MS5xxx_CMD_ADC_D1\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_ADC_D1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_ADC_D1\~ 0x00}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file MS5xxx.h.}\par
{
Referenced by MS5611::Readout(), and MS5xxx::Readout().}\par
}
{\xe \v MS5xxx_CMD_ADC_D2\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_ADC_D2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_ADC_D2\~ 0x10}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file MS5xxx.h.}\par
{
Referenced by MS5611::Readout(), and MS5xxx::Readout().}\par
}
{\xe \v MS5xxx_CMD_ADC_READ\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_ADC_READ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_ADC_READ\~ 0x00}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file MS5xxx.h.}\par
{
Referenced by MS5xxx::read_adc().}\par
}
{\xe \v MS5xxx_CMD_PROM_RD\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_PROM_RD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_PROM_RD\~ 0xA0}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file MS5xxx.h.}\par
{
Referenced by MS5xxx::ReadProm().}\par
}
{\xe \v MS5xxx_CMD_RESET\:MS5xxx.h}
{\xe \v MS5xxx.h\:MS5xxx_CMD_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MS5xxx_CMD_RESET\~ 0x1E}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file MS5xxx.h.}\par
{
Referenced by MS5xxx::ReadProm().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Arduino-PID-Library/PID_v1.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Arduino-PID-Library/PID_v1.cpp}
{\xe \v Weather_Balloon/library/Arduino-PID-Library/PID_v1.cpp}
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
{\f2 #include <PID_v1.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for PID_v1.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_p_i_d__v1_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Arduino-PID-Library/PID_v1.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Arduino-PID-Library/PID_v1.h}
{\xe \v Weather_Balloon/library/Arduino-PID-Library/PID_v1.h}
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_p_i_d__v1_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PID}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LIBRARY_VERSION}\~ 1.1.1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b AUTOMATIC}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MANUAL}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIRECT}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REVERSE}\~ 1\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v AUTOMATIC\:PID_v1.h}
{\xe \v PID_v1.h\:AUTOMATIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define AUTOMATIC\~ 1}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 12 of file PID_v1.h.}\par
{
Referenced by PID::GetMode(), heater_control(), and PID::SetMode().}\par
}
{\xe \v DIRECT\:PID_v1.h}
{\xe \v PID_v1.h\:DIRECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIRECT\~ 0}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 14 of file PID_v1.h.}\par
}
{\xe \v LIBRARY_VERSION\:PID_v1.h}
{\xe \v PID_v1.h\:LIBRARY_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LIBRARY_VERSION\~ 1.1.1}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3 of file PID_v1.h.}\par
}
{\xe \v MANUAL\:PID_v1.h}
{\xe \v PID_v1.h\:MANUAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MANUAL\~ 0}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 13 of file PID_v1.h.}\par
{
Referenced by configure_PID(), PID::GetMode(), and heater_control().}\par
}
{\xe \v REVERSE\:PID_v1.h}
{\xe \v PID_v1.h\:REVERSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REVERSE\~ 1}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file PID_v1.h.}\par
{
Referenced by PID::SetTunings().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Arduino-Temperature-Control-Library/DallasTemperature.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Arduino-Temperature-Control-Library/DallasTemperature.cpp}
{\xe \v Weather_Balloon/library/Arduino-Temperature-Control-Library/DallasTemperature.cpp}
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "DallasTemperature.h"}\par
{\f2 #include "WConstants.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for DallasTemperature.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_dallas_temperature_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Arduino-Temperature-Control-Library/DallasTemperature.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Arduino-Temperature-Control-Library/DallasTemperature.h}
{\xe \v Weather_Balloon/library/Arduino-Temperature-Control-Library/DallasTemperature.h}
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <inttypes.h>}\par
{\f2 #include <OneWire.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for DallasTemperature.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_dallas_temperature_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_dallas_temperature_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DallasTemperature}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DALLASTEMPLIBVERSION}\~ "3.7.7"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRESNEW}\~ false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REQUIRESALARMS}\~ true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS18S20MODEL}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS18B20MODEL}\~ 0x28\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS1822MODEL}\~ 0x22\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS1825MODEL}\~ 0x3B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STARTCONVO}\~ 0x44\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COPYSCRATCH}\~ 0x48\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b READSCRATCH}\~ 0xBE\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WRITESCRATCH}\~ 0x4E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RECALLSCRATCH}\~ 0xB8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b READPOWERSUPPLY}\~ 0xB4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ALARMSEARCH}\~ 0xEC\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEMP_LSB}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEMP_MSB}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HIGH_ALARM_TEMP}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOW_ALARM_TEMP}\~ 3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CONFIGURATION}\~ 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INTERNAL_BYTE}\~ 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COUNT_REMAIN}\~ 6\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COUNT_PER_C}\~ 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCRATCHPAD_CRC}\~ 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEMP_9_BIT}\~ 0x1F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEMP_10_BIT}\~ 0x3F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEMP_11_BIT}\~ 0x5F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEMP_12_BIT}\~ 0x7F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEVICE_DISCONNECTED_C}\~ -127\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEVICE_DISCONNECTED_F}\~ -196.6\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEVICE_DISCONNECTED_RAW}\~ -7040\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef uint8_t {\b DeviceAddress}[8]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ALARMSEARCH\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:ALARMSEARCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ALARMSEARCH\~ 0xEC}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file DallasTemperature.h.}\par
}
{\xe \v CONFIGURATION\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:CONFIGURATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CONFIGURATION\~ 4}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getResolution(), DallasTemperature::setResolution(), and DallasTemperature::writeScratchPad().}\par
}
{\xe \v COPYSCRATCH\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:COPYSCRATCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COPYSCRATCH\~ 0x48}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::writeScratchPad().}\par
}
{\xe \v COUNT_PER_C\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:COUNT_PER_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COUNT_PER_C\~ 7}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getTempFByIndex().}\par
}
{\xe \v COUNT_REMAIN\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:COUNT_REMAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COUNT_REMAIN\~ 6}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getTempFByIndex().}\par
}
{\xe \v DALLASTEMPLIBVERSION\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:DALLASTEMPLIBVERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DALLASTEMPLIBVERSION\~ "3.7.7"}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 4 of file DallasTemperature.h.}\par
}
{\xe \v DEVICE_DISCONNECTED_C\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:DEVICE_DISCONNECTED_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEVICE_DISCONNECTED_C\~ -127}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getTempCByIndex(), DallasTemperature::rawToCelsius(), and DallasTemperature::rawToFahrenheit().}\par
}
{\xe \v DEVICE_DISCONNECTED_F\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:DEVICE_DISCONNECTED_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEVICE_DISCONNECTED_F\~ -196.6}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getTempFByIndex(), and DallasTemperature::rawToFahrenheit().}\par
}
{\xe \v DEVICE_DISCONNECTED_RAW\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:DEVICE_DISCONNECTED_RAW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEVICE_DISCONNECTED_RAW\~ -7040}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getTemp(), DallasTemperature::rawToCelsius(), and DallasTemperature::rawToFahrenheit().}\par
}
{\xe \v DS1822MODEL\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:DS1822MODEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS1822MODEL\~ 0x22}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::validFamily().}\par
}
{\xe \v DS1825MODEL\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:DS1825MODEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS1825MODEL\~ 0x3B}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::validFamily().}\par
}
{\xe \v DS18B20MODEL\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:DS18B20MODEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS18B20MODEL\~ 0x28}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 26 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::validFamily().}\par
}
{\xe \v DS18S20MODEL\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:DS18S20MODEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS18S20MODEL\~ 0x10}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getResolution(), DallasTemperature::getTempFByIndex(), DallasTemperature::setResolution(), DallasTemperature::validFamily(), and DallasTemperature::writeScratchPad().}\par
}
{\xe \v HIGH_ALARM_TEMP\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:HIGH_ALARM_TEMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HIGH_ALARM_TEMP\~ 2}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getUserData(), DallasTemperature::rawToFahrenheit(), DallasTemperature::setUserData(), and DallasTemperature::writeScratchPad().}\par
}
{\xe \v INTERNAL_BYTE\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:INTERNAL_BYTE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INTERNAL_BYTE\~ 5}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file DallasTemperature.h.}\par
}
{\xe \v LOW_ALARM_TEMP\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:LOW_ALARM_TEMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOW_ALARM_TEMP\~ 3}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getUserData(), DallasTemperature::rawToFahrenheit(), DallasTemperature::setUserData(), and DallasTemperature::writeScratchPad().}\par
}
{\xe \v READPOWERSUPPLY\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:READPOWERSUPPLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define READPOWERSUPPLY\~ 0xB4}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::readPowerSupply().}\par
}
{\xe \v READSCRATCH\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:READSCRATCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define READSCRATCH\~ 0xBE}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::readScratchPad().}\par
}
{\xe \v RECALLSCRATCH\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:RECALLSCRATCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RECALLSCRATCH\~ 0xB8}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file DallasTemperature.h.}\par
}
{\xe \v REQUIRESALARMS\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:REQUIRESALARMS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRESALARMS\~ true}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 18 of file DallasTemperature.h.}\par
}
{\xe \v REQUIRESNEW\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:REQUIRESNEW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REQUIRESNEW\~ false}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 13 of file DallasTemperature.h.}\par
}
{\xe \v SCRATCHPAD_CRC\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:SCRATCHPAD_CRC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCRATCHPAD_CRC\~ 8}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::isConnected().}\par
}
{\xe \v STARTCONVO\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:STARTCONVO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STARTCONVO\~ 0x44}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::requestTemperatures(), and DallasTemperature::requestTemperaturesByAddress().}\par
}
{\xe \v TEMP_10_BIT\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:TEMP_10_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEMP_10_BIT\~ 0x3F}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getResolution(), and DallasTemperature::setResolution().}\par
}
{\xe \v TEMP_11_BIT\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:TEMP_11_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEMP_11_BIT\~ 0x5F}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getResolution(), and DallasTemperature::setResolution().}\par
}
{\xe \v TEMP_12_BIT\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:TEMP_12_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEMP_12_BIT\~ 0x7F}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getResolution(), and DallasTemperature::setResolution().}\par
}
{\xe \v TEMP_9_BIT\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:TEMP_9_BIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEMP_9_BIT\~ 0x1F}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getResolution(), and DallasTemperature::setResolution().}\par
}
{\xe \v TEMP_LSB\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:TEMP_LSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEMP_LSB\~ 0}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getTempFByIndex().}\par
}
{\xe \v TEMP_MSB\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:TEMP_MSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEMP_MSB\~ 1}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::getTempFByIndex().}\par
}
{\xe \v WRITESCRATCH\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:WRITESCRATCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WRITESCRATCH\~ 0x4E}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file DallasTemperature.h.}\par
{
Referenced by DallasTemperature::writeScratchPad().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v DeviceAddress\:DallasTemperature.h}
{\xe \v DallasTemperature.h\:DeviceAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef uint8_t DeviceAddress[8]}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file DallasTemperature.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/arduino-ZeroRegs/src/ZeroRegs.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/arduino-ZeroRegs/src/ZeroRegs.cpp}
{\xe \v Weather_Balloon/library/arduino-ZeroRegs/src/ZeroRegs.cpp}
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ZeroRegs.h"}\par
{\f2 #include <samd.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ZeroRegs.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Port_Pin}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRINTFLAG}(x,  y)\~ do \{ if (x.bit.y) \{ opts.ser.print(" " #y); \} \} while(0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRINTHEX}(x)\~ do \{ opts.ser.print("0x"); opts.ser.print(x, HEX); \} while(0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRINTSCALE}(x)\~ (opts.ser.print(1 << (x)))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRINTPAD2}(x)\~ do \{ if (x < 10) \{ opts.ser.print("0"); \} opts.ser.print(x, DEC); \} while(0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WRITE8}(x,  y)\~ *((uint8_t*)&(x)) = uint8_t(y)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b READFUSE}(x,  y)\~ ((*((uint32_t *) x##_FUSES_##y##_ADDR) & x##_FUSES_##y##_Msk) >> x##_FUSES_##y##_Pos)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b READ2FUSES}(x,  y,  o)\~ ( ((*((uint32_t *) x##_FUSES_##y##_0_ADDR) & x##_FUSES_##y##_0_Msk) >> x##_FUSES_##y##_0_Pos) | (((*((uint32_t *) x##_FUSES_##y##_1_ADDR) & x##_FUSES_##y##_1_Msk) >> x##_FUSES_##y##_1_Pos) << o))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b READADDR32}(x)\~ (*((uint32_t*)(x)))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegAC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegADC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegDAC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegDMAC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegDSU} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegEIC_SENSE} ({\b ZeroRegOptions} &opts, uint8_t sense)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegEIC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegEVSYS} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegGCLK} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegI2S} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegMTB} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegNVMCTRL} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegPAC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegPM} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegPORT} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegRTC_MODE0} ({\b ZeroRegOptions} &opts, RtcMode0 &mode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegRTC_MODE1} ({\b ZeroRegOptions} &opts, RtcMode1 &mode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegRTC_MODE2} ({\b ZeroRegOptions} &opts, RtcMode2 &mode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegRTC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSBMATRIX} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSERCOM_I2CM} ({\b ZeroRegOptions} &opts, SercomI2cm &i2cm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSERCOM_I2CS} ({\b ZeroRegOptions} &opts, SercomI2cs &i2cs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSERCOM_SPI} ({\b ZeroRegOptions} &opts, SercomSpi &spi, bool master)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSERCOM_USART} ({\b ZeroRegOptions} &opts, SercomUsart &usart)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSERCOM} ({\b ZeroRegOptions} &opts, Sercom *sercom, uint8_t idx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSYSCTRL} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegTC} ({\b ZeroRegOptions} &opts, Tc *tc, uint8_t idx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegTCC} ({\b ZeroRegOptions} &opts, Tcc *tcc, uint8_t idx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegUSB} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegWDT} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegs} ({\b ZeroRegOptions} &opts)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Port_Pin} {\b port_pins} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const uint8_t {\b port_pin_count} = 43\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Port_Pin}
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Port_Pin\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 713 of file ZeroRegs.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\cell }{grp\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
\cell }{idx\cell }{\cell }{\row }
{\qr const char *{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
\cell }{name\cell }{\cell }{\row }
{\qr const char *{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
\cell }{pmux[8]\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v PRINTFLAG\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:PRINTFLAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRINTFLAG( x,  y)\~ do \{ if (x.bit.y) \{ opts.ser.print(" " #y); \} \} while(0)}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegEVSYS(), printZeroRegGCLK(), printZeroRegNVMCTRL(), printZeroRegPM(), printZeroRegPORT(), printZeroRegRTC_MODE0(), printZeroRegRTC_MODE1(), printZeroRegRTC_MODE2(), printZeroRegSERCOM_I2CM(), printZeroRegSERCOM_I2CS(), printZeroRegSERCOM_SPI(), printZeroRegSERCOM_USART(), printZeroRegSYSCTRL(), and printZeroRegWDT().}\par
}
{\xe \v PRINTHEX\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:PRINTHEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRINTHEX( x)\~ do \{ opts.ser.print("0x"); opts.ser.print(x, HEX); \} while(0)}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegNVMCTRL(), printZeroRegPORT(), printZeroRegRTC_MODE0(), printZeroRegRTC_MODE1(), printZeroRegRTC_MODE2(), printZeroRegSBMATRIX(), printZeroRegSERCOM_I2CM(), printZeroRegSERCOM_I2CS(), printZeroRegSERCOM_SPI(), printZeroRegSERCOM_USART(), and printZeroRegSYSCTRL().}\par
}
{\xe \v PRINTPAD2\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:PRINTPAD2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRINTPAD2( x)\~ do \{ if (x < 10) \{ opts.ser.print("0"); \} opts.ser.print(x, DEC); \} while(0)}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegEIC(), printZeroRegEVSYS(), printZeroRegGCLK(), printZeroRegPORT(), and printZeroRegRTC_MODE2().}\par
}
{\xe \v PRINTSCALE\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:PRINTSCALE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRINTSCALE( x)\~ (opts.ser.print(1 << (x)))}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegGCLK(), printZeroRegPM(), printZeroRegRTC_MODE0(), printZeroRegRTC_MODE1(), printZeroRegRTC_MODE2(), printZeroRegSYSCTRL(), and printZeroRegWDT().}\par
}
{\xe \v READ2FUSES\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:READ2FUSES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define READ2FUSES( x,  y,  o)\~ ( ((*((uint32_t *) x##_FUSES_##y##_0_ADDR) & x##_FUSES_##y##_0_Msk) >> x##_FUSES_##y##_0_Pos) | (((*((uint32_t *) x##_FUSES_##y##_1_ADDR) & x##_FUSES_##y##_1_Msk) >> x##_FUSES_##y##_1_Pos) << o))}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegWDT().}\par
}
{\xe \v READADDR32\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:READADDR32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define READADDR32( x)\~ (*((uint32_t*)(x)))}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegNVMCTRL().}\par
}
{\xe \v READFUSE\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:READFUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define READFUSE( x,  y)\~ ((*((uint32_t *) x##_FUSES_##y##_ADDR) & x##_FUSES_##y##_Msk) >> x##_FUSES_##y##_Pos)}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegNVMCTRL(), and printZeroRegWDT().}\par
}
{\xe \v WRITE8\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:WRITE8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WRITE8( x,  y)\~ *((uint8_t*)&(x)) = uint8_t(y)}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegEVSYS(), and printZeroRegGCLK().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v printZeroRegAC\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegAC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a147a30d688c41a0d39922ca6d2cd6bfb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegADC\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegADC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegADC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a67d77c008fc2ce98d2d78168aa64e9d8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegDAC\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegDAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegDAC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a1095e7bbe04b7d3f6b4d58d8e7a42df8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegDMAC\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegDMAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegDMAC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a9a5372cd2135bb853cfdbf3db45dd79c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegDSU\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegDSU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegDSU ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a06b2995104e4c1cbc2f61e11e3a3e484_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegEIC\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegEIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegEIC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file ZeroRegs.cpp.}\par
{
References PRINTPAD2, printZeroRegEIC_SENSE(), ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_ac587593ee2a9ae02c2cfc677fe773c28_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_ac587593ee2a9ae02c2cfc677fe773c28_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegEIC_SENSE\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegEIC_SENSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegEIC_SENSE ({\b ZeroRegOptions} &  {\i opts}, uint8_t  {\i sense})}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file ZeroRegs.cpp.}\par
{
References ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegEIC().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a8697ce31d1795964e7b71cea33415b12_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegEVSYS\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegEVSYS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegEVSYS ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 132 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTPAD2, ZeroRegOptions::ser, ZeroRegOptions::showDisabled, and WRITE8.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_aab346cdb76613ed12e521b2e3ab8e585_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegGCLK\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegGCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegGCLK ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 360 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTPAD2, PRINTSCALE, ZeroRegOptions::ser, ZeroRegOptions::showDisabled, and WRITE8.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a4f780af586626841f0bfd07761caae27_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegI2S\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegI2S}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegI2S ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 443 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_ad986e6312220f31739dbe2c5e4c9326d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegMTB\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegMTB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegMTB ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 448 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_aaac9e29b52fd1df890dfa14c2f502420_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegNVMCTRL\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegNVMCTRL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegNVMCTRL ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 453 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, READADDR32, READFUSE, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a6db7f49d374fa825b83040a5acaf04b2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegPAC\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegPAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegPAC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 549 of file ZeroRegs.cpp.}\par
{
References ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a78c2deb148266895a11f2862a9d27082_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegPM\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegPM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegPM ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 612 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTSCALE, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a1807ae19c29483ee063bd225c40e0d36_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegPORT\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegPORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegPORT ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 774 of file ZeroRegs.cpp.}\par
{
References Port_Pin::grp, Port_Pin::idx, Port_Pin::name, Port_Pin::pmux, port_pin_count, PRINTFLAG, PRINTHEX, PRINTPAD2, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_ac515fdec9d58f6339d3e38cc33c6f74f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegRTC\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegRTC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegRTC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 987 of file ZeroRegs.cpp.}\par
{
References printZeroRegRTC_MODE0(), printZeroRegRTC_MODE1(), and printZeroRegRTC_MODE2().}\par
{
Referenced by printZeroRegs().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_abd5756f7cbf2e09db78469867a6c5051_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_abd5756f7cbf2e09db78469867a6c5051_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegRTC_MODE0\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegRTC_MODE0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegRTC_MODE0 ({\b ZeroRegOptions} &  {\i opts}, RtcMode0 &  {\i mode})}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 814 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, PRINTSCALE, ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegRTC().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_af4b043f7c87e4ecaa152fab20b2bd672_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegRTC_MODE1\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegRTC_MODE1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegRTC_MODE1 ({\b ZeroRegOptions} &  {\i opts}, RtcMode1 &  {\i mode})}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 861 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, PRINTSCALE, ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegRTC().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_acba6ab3a1f0ca519efdad9af393fa315_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegRTC_MODE2\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegRTC_MODE2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegRTC_MODE2 ({\b ZeroRegOptions} &  {\i opts}, RtcMode2 &  {\i mode})}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 916 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, PRINTPAD2, PRINTSCALE, ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegRTC().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a380e1c86b97a256f10b4736f8d158ce8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegs\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegs ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1589 of file ZeroRegs.cpp.}\par
{
References printZeroRegAC(), printZeroRegADC(), printZeroRegDAC(), printZeroRegDMAC(), printZeroRegDSU(), printZeroRegEIC(), printZeroRegEVSYS(), printZeroRegGCLK(), printZeroRegI2S(), printZeroRegMTB(), printZeroRegNVMCTRL(), printZeroRegPAC(), printZeroRegPM(), printZeroRegPORT(), printZeroRegRTC(), printZeroRegSERCOM(), printZeroRegSYSCTRL(), printZeroRegTC(), printZeroRegTCC(), printZeroRegUSB(), and printZeroRegWDT().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_af97a7289c40861b813fab70cfb71db67_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegSBMATRIX\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegSBMATRIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSBMATRIX ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 997 of file ZeroRegs.cpp.}\par
{
References i, PRINTHEX, and ZeroRegOptions::ser.}\par
}
{\xe \v printZeroRegSERCOM\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegSERCOM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSERCOM ({\b ZeroRegOptions} &  {\i opts}, Sercom *  {\i sercom}, uint8_t  {\i idx})}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1285 of file ZeroRegs.cpp.}\par
{
References printZeroRegSERCOM_I2CM(), printZeroRegSERCOM_I2CS(), printZeroRegSERCOM_SPI(), printZeroRegSERCOM_USART(), ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a7db1a4f0d10e2e3efcd108837d85ee49_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a7db1a4f0d10e2e3efcd108837d85ee49_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegSERCOM_I2CM\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegSERCOM_I2CM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSERCOM_I2CM ({\b ZeroRegOptions} &  {\i opts}, SercomI2cm &  {\i i2cm})}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1020 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegSERCOM().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a50889259214cfbde5a4f90a97298d68d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegSERCOM_I2CS\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegSERCOM_I2CS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSERCOM_I2CS ({\b ZeroRegOptions} &  {\i opts}, SercomI2cs &  {\i i2cs})}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1071 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegSERCOM().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a3961ade3c339a628b7174340ef3a8b35_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegSERCOM_SPI\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegSERCOM_SPI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSERCOM_SPI ({\b ZeroRegOptions} &  {\i opts}, SercomSpi &  {\i spi}, bool  {\i master})}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1123 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegSERCOM().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a27f8c7ca875a60890ad70dea014e9df2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegSERCOM_USART\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegSERCOM_USART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSERCOM_USART ({\b ZeroRegOptions} &  {\i opts}, SercomUsart &  {\i usart})}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1204 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegSERCOM().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a612b4e1372fe5ad5fc4f7cab4ceb4ef3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegSYSCTRL\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegSYSCTRL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSYSCTRL ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1308 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, PRINTSCALE, ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a7b606cb3f1144532412356243668c1ce_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegTC\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegTC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegTC ({\b ZeroRegOptions} &  {\i opts}, Tc *  {\i tc}, uint8_t  {\i idx})}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1528 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a0f776ca1e5a274dd72257e015eba2f98_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegTCC\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegTCC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegTCC ({\b ZeroRegOptions} &  {\i opts}, Tcc *  {\i tcc}, uint8_t  {\i idx})}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1533 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_acdcf41658b0d0b0747a170019743e2b8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegUSB\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegUSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegUSB ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1538 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a0f50e185fe18ba9749b55a6d7ac781f1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegWDT\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:printZeroRegWDT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegWDT ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1543 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTSCALE, READ2FUSES, READFUSE, ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8cpp_a8dd36048a3979014ebb8d385046c91e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v port_pin_count\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:port_pin_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const uint8_t port_pin_count = 43}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 773 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegPORT().}\par
}
{\xe \v port_pins\:ZeroRegs.cpp}
{\xe \v ZeroRegs.cpp\:port_pins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Port_Pin} port_pins[]}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 719 of file ZeroRegs.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/arduino-ZeroRegs/src/ZeroRegs.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/arduino-ZeroRegs/src/ZeroRegs.h}
{\xe \v Weather_Balloon/library/arduino-ZeroRegs/src/ZeroRegs.h}
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ZeroRegs.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ZeroRegOptions}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegAC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegADC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegDAC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegDMAC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegDSU} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegEIC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegEVSYS} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegGCLK} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegI2S} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegMTB} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegNVMCTRL} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegPAC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegPM} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegPORT} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegRTC} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSBMATRIX} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSERCOM} ({\b ZeroRegOptions} &opts, Sercom *sercom, uint8_t idx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegSYSCTRL} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegTC} ({\b ZeroRegOptions} &opts, Tc *tc, uint8_t idx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegTCC} ({\b ZeroRegOptions} &opts, Tcc *tcc, uint8_t idx)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegUSB} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegWDT} ({\b ZeroRegOptions} &opts)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printZeroRegs} ({\b ZeroRegOptions} &opts)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v ZeroRegOptions}
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct ZeroRegOptions\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 36 of file ZeroRegs.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr Stream &{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
\cell }{ser\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\cell }{showDisabled\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v printZeroRegAC\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegAC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a147a30d688c41a0d39922ca6d2cd6bfb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegADC\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegADC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegADC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a67d77c008fc2ce98d2d78168aa64e9d8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegDAC\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegDAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegDAC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a1095e7bbe04b7d3f6b4d58d8e7a42df8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegDMAC\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegDMAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegDMAC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a9a5372cd2135bb853cfdbf3db45dd79c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegDSU\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegDSU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegDSU ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a06b2995104e4c1cbc2f61e11e3a3e484_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegEIC\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegEIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegEIC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file ZeroRegs.cpp.}\par
{
References PRINTPAD2, printZeroRegEIC_SENSE(), ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_ac587593ee2a9ae02c2cfc677fe773c28_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_ac587593ee2a9ae02c2cfc677fe773c28_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegEVSYS\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegEVSYS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegEVSYS ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 132 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTPAD2, ZeroRegOptions::ser, ZeroRegOptions::showDisabled, and WRITE8.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_aab346cdb76613ed12e521b2e3ab8e585_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegGCLK\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegGCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegGCLK ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 360 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTPAD2, PRINTSCALE, ZeroRegOptions::ser, ZeroRegOptions::showDisabled, and WRITE8.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a4f780af586626841f0bfd07761caae27_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegI2S\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegI2S}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegI2S ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 443 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_ad986e6312220f31739dbe2c5e4c9326d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegMTB\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegMTB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegMTB ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 448 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_aaac9e29b52fd1df890dfa14c2f502420_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegNVMCTRL\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegNVMCTRL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegNVMCTRL ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 453 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, READADDR32, READFUSE, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a6db7f49d374fa825b83040a5acaf04b2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegPAC\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegPAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegPAC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 549 of file ZeroRegs.cpp.}\par
{
References ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a78c2deb148266895a11f2862a9d27082_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegPM\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegPM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegPM ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 612 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTSCALE, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a1807ae19c29483ee063bd225c40e0d36_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegPORT\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegPORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegPORT ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 774 of file ZeroRegs.cpp.}\par
{
References Port_Pin::grp, Port_Pin::idx, Port_Pin::name, Port_Pin::pmux, port_pin_count, PRINTFLAG, PRINTHEX, PRINTPAD2, and ZeroRegOptions::ser.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_ac515fdec9d58f6339d3e38cc33c6f74f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegRTC\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegRTC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegRTC ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 987 of file ZeroRegs.cpp.}\par
{
References printZeroRegRTC_MODE0(), printZeroRegRTC_MODE1(), and printZeroRegRTC_MODE2().}\par
{
Referenced by printZeroRegs().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_abd5756f7cbf2e09db78469867a6c5051_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_abd5756f7cbf2e09db78469867a6c5051_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegs\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegs ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1589 of file ZeroRegs.cpp.}\par
{
References printZeroRegAC(), printZeroRegADC(), printZeroRegDAC(), printZeroRegDMAC(), printZeroRegDSU(), printZeroRegEIC(), printZeroRegEVSYS(), printZeroRegGCLK(), printZeroRegI2S(), printZeroRegMTB(), printZeroRegNVMCTRL(), printZeroRegPAC(), printZeroRegPM(), printZeroRegPORT(), printZeroRegRTC(), printZeroRegSERCOM(), printZeroRegSYSCTRL(), printZeroRegTC(), printZeroRegTCC(), printZeroRegUSB(), and printZeroRegWDT().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_af97a7289c40861b813fab70cfb71db67_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegSBMATRIX\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegSBMATRIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSBMATRIX ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 997 of file ZeroRegs.cpp.}\par
{
References i, PRINTHEX, and ZeroRegOptions::ser.}\par
}
{\xe \v printZeroRegSERCOM\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegSERCOM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSERCOM ({\b ZeroRegOptions} &  {\i opts}, Sercom *  {\i sercom}, uint8_t  {\i idx})}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1285 of file ZeroRegs.cpp.}\par
{
References printZeroRegSERCOM_I2CM(), printZeroRegSERCOM_I2CS(), printZeroRegSERCOM_SPI(), printZeroRegSERCOM_USART(), ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a7db1a4f0d10e2e3efcd108837d85ee49_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a7db1a4f0d10e2e3efcd108837d85ee49_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegSYSCTRL\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegSYSCTRL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegSYSCTRL ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1308 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTHEX, PRINTSCALE, ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a7b606cb3f1144532412356243668c1ce_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegTC\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegTC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegTC ({\b ZeroRegOptions} &  {\i opts}, Tc *  {\i tc}, uint8_t  {\i idx})}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1528 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a0f776ca1e5a274dd72257e015eba2f98_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegTCC\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegTCC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegTCC ({\b ZeroRegOptions} &  {\i opts}, Tcc *  {\i tcc}, uint8_t  {\i idx})}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1533 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_acdcf41658b0d0b0747a170019743e2b8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegUSB\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegUSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegUSB ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1538 of file ZeroRegs.cpp.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a0f50e185fe18ba9749b55a6d7ac781f1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printZeroRegWDT\:ZeroRegs.h}
{\xe \v ZeroRegs.h\:printZeroRegWDT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printZeroRegWDT ({\b ZeroRegOptions} &  {\i opts})}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1543 of file ZeroRegs.cpp.}\par
{
References PRINTFLAG, PRINTSCALE, READ2FUSES, READFUSE, ZeroRegOptions::ser, and ZeroRegOptions::showDisabled.}\par
{
Referenced by printZeroRegs().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_zero_regs_8h_a8dd36048a3979014ebb8d385046c91e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/FilterDerivative.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/FilterDerivative.cpp}
{\xe \v Weather_Balloon/library/Filters/FilterDerivative.cpp}
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FilterDerivative.h"}\par
{\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for FilterDerivative.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_derivative_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testFilterDerivative} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v testFilterDerivative\:FilterDerivative.cpp}
{\xe \v FilterDerivative.cpp\:testFilterDerivative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testFilterDerivative ()}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file FilterDerivative.cpp.}\par
{
References FilterDerivative::input(), and FilterDerivative::output().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_derivative_8cpp_aa733c0d9f97d55c0efedef0adf130c76_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/FilterDerivative.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/FilterDerivative.h}
{\xe \v Weather_Balloon/library/Filters/FilterDerivative.h}
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_derivative_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FilterDerivative}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testFilterDerivative} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v testFilterDerivative\:FilterDerivative.h}
{\xe \v FilterDerivative.h\:testFilterDerivative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testFilterDerivative ()}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file FilterDerivative.cpp.}\par
{
References FilterDerivative::input(), and FilterDerivative::output().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_derivative_8h_aa733c0d9f97d55c0efedef0adf130c76_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/FilterOnePole.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/FilterOnePole.cpp}
{\xe \v Weather_Balloon/library/Filters/FilterOnePole.cpp}
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FilterOnePole.h"}\par
{\f2 #include "FloatDefine.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for FilterOnePole.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_one_pole_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/FilterOnePole.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/FilterOnePole.h}
{\xe \v Weather_Balloon/library/Filters/FilterOnePole.h}
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for FilterOnePole.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_one_pole_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_one_pole_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FilterOnePole}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FilterOnePoleCascade}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b FILTER_TYPE} \{ {\b HIGHPASS}, 
{\b LOWPASS}, 
{\b INTEGRATOR}, 
{\b DIFFERENTIATOR}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v FILTER_TYPE\:FilterOnePole.h}
{\xe \v FilterOnePole.h\:FILTER_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b FILTER_TYPE}}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v HIGHPASS\:FilterOnePole.h}
{\xe \v FilterOnePole.h\:HIGHPASS}
{\b {\i HIGHPASS{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
}}  \par
{\xe \v LOWPASS\:FilterOnePole.h}
{\xe \v FilterOnePole.h\:LOWPASS}
{\b {\i LOWPASS{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
}}  \par
{\xe \v INTEGRATOR\:FilterOnePole.h}
{\xe \v FilterOnePole.h\:INTEGRATOR}
{\b {\i INTEGRATOR{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
}}  \par
{\xe \v DIFFERENTIATOR\:FilterOnePole.h}
{\xe \v FilterOnePole.h\:DIFFERENTIATOR}
{\b {\i DIFFERENTIATOR{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
}}  \par
\par
}{
Definition at line 6 of file FilterOnePole.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/Filters.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/Filters.h}
{\xe \v Weather_Balloon/library/Filters/Filters.h}
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FilterOnePole.h"}\par
{\f2 #include "FilterTwoPole.h"}\par
{\f2 #include "FilterDerivative.h"}\par
{\f2 #include "RunningStatistics.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Filters.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filters_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/FilterTwoPole.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/FilterTwoPole.cpp}
{\xe \v Weather_Balloon/library/Filters/FilterTwoPole.cpp}
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FilterTwoPole.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for FilterTwoPole.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_two_pole_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/FilterTwoPole.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/FilterTwoPole.h}
{\xe \v Weather_Balloon/library/Filters/FilterTwoPole.h}
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for FilterTwoPole.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_two_pole_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filter_two_pole_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FilterTwoPole}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ATTODUINO}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OSCILLATOR_TYPE} \{ {\b LOWPASS_BESSEL}, 
{\b LOWPASS_BUTTERWORTH}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ATTODUINO\:FilterTwoPole.h}
{\xe \v FilterTwoPole.h\:ATTODUINO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ATTODUINO}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 4 of file FilterTwoPole.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v OSCILLATOR_TYPE\:FilterTwoPole.h}
{\xe \v FilterTwoPole.h\:OSCILLATOR_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b OSCILLATOR_TYPE}}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v LOWPASS_BESSEL\:FilterTwoPole.h}
{\xe \v FilterTwoPole.h\:LOWPASS_BESSEL}
{\b {\i LOWPASS_BESSEL{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
}}  \par
{\xe \v LOWPASS_BUTTERWORTH\:FilterTwoPole.h}
{\xe \v FilterTwoPole.h\:LOWPASS_BUTTERWORTH}
{\b {\i LOWPASS_BUTTERWORTH{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
}}  \par
\par
}{
Definition at line 6 of file FilterTwoPole.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/FloatDefine.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/FloatDefine.h}
{\xe \v Weather_Balloon/library/Filters/FloatDefine.h}
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_float_define_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/RunningStatistics.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/RunningStatistics.cpp}
{\xe \v Weather_Balloon/library/Filters/RunningStatistics.cpp}
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "RunningStatistics.h"}\par
{\f2 #include "FloatDefine.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RunningStatistics.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_running_statistics_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testRunningStatistics} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v testRunningStatistics\:RunningStatistics.cpp}
{\xe \v RunningStatistics.cpp\:testRunningStatistics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testRunningStatistics ()}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file RunningStatistics.cpp.}\par
{
References RunningStatistics::input(), RunningStatistics::mean(), RunningStatistics::setInitialValue(), and RunningStatistics::sigma().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_running_statistics_8cpp_a67f264182f870b0259cd82e82e5e32cf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Filters/RunningStatistics.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Filters/RunningStatistics.h}
{\xe \v Weather_Balloon/library/Filters/RunningStatistics.h}
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FilterOnePole.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RunningStatistics.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_running_statistics_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_running_statistics_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RunningStatistics}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testRunningStatistics} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v testRunningStatistics\:RunningStatistics.h}
{\xe \v RunningStatistics.h\:testRunningStatistics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testRunningStatistics ()}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file RunningStatistics.cpp.}\par
{
References RunningStatistics::input(), RunningStatistics::mean(), RunningStatistics::setInitialValue(), and RunningStatistics::sigma().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_running_statistics_8h_a67f264182f870b0259cd82e82e5e32cf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/Boards.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/Boards.h}
{\xe \v Weather_Balloon/library/Firmata/Boards.h}
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <inttypes.h>}\par
{\f2 #include "WProgram.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Boards.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_boards_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_boards_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_SERVOS}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b digitalPinHasPWM}(p)      \~ IS_PIN_DIGITAL(p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IS_PIN_SPI}(p)                  \~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IS_PIN_SERIAL}(p)            \~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_PWM_RESOLUTION}\~ 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TOTAL_PORTS}\~ ((TOTAL_PINS + 7) / 8)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned char {\b unused}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEFAULT_PWM_RESOLUTION\:Boards.h}
{\xe \v Boards.h\:DEFAULT_PWM_RESOLUTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_PWM_RESOLUTION\~ 8}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 751 of file Boards.h.}\par
}
{\xe \v digitalPinHasPWM\:Boards.h}
{\xe \v Boards.h\:digitalPinHasPWM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define digitalPinHasPWM( p)\~ IS_PIN_DIGITAL(p)}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file Boards.h.}\par
}
{\xe \v IS_PIN_SERIAL\:Boards.h}
{\xe \v Boards.h\:IS_PIN_SERIAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IS_PIN_SERIAL( p)\~ 0}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 747 of file Boards.h.}\par
{
Referenced by SerialFirmata::handleCapability().}\par
}
{\xe \v IS_PIN_SPI\:Boards.h}
{\xe \v Boards.h\:IS_PIN_SPI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IS_PIN_SPI( p)\~ 0}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 743 of file Boards.h.}\par
}
{\xe \v MAX_SERVOS\:Boards.h}
{\xe \v Boards.h\:MAX_SERVOS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_SERVOS\~ 0}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file Boards.h.}\par
}
{\xe \v TOTAL_PORTS\:Boards.h}
{\xe \v Boards.h\:TOTAL_PORTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TOTAL_PORTS\~ ((TOTAL_PINS + 7) / 8)}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 831 of file Boards.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v unused\:Boards.h}
{\xe \v Boards.h\:unused}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned char unused}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 758 of file Boards.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/examples/StandardFirmataBLE/bleConfig.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/examples/StandardFirmataBLE/bleConfig.h}
{\xe \v Weather_Balloon/library/Firmata/examples/StandardFirmataBLE/bleConfig.h}
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_BLE_LOCAL_NAME}\~ "FIRMATA"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v FIRMATA_BLE_LOCAL_NAME\:bleConfig.h}
{\xe \v bleConfig.h\:FIRMATA_BLE_LOCAL_NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_BLE_LOCAL_NAME\~ "FIRMATA"}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file bleConfig.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/examples/StandardFirmataEthernet/ethernetConfig.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/examples/StandardFirmataEthernet/ethernetConfig.h}
{\xe \v Weather_Balloon/library/Firmata/examples/StandardFirmataEthernet/ethernetConfig.h}
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <SPI.h>}\par
{\f2 #include <Ethernet.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ethernetConfig.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "ethernet_config_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WIZ5100_ETHERNET}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b remote_ip}\~ IPAddress(10, 0, 0, 3)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b remote_port}\~ 3030\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b local_ip}\~ IPAddress(10, 0, 0, 15)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IS_IGNORE_PIN}(p)\~ (({\b IS_PIN_SPI}(p) || (p) == 4) || (p) == 10)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
EthernetClient {\b client}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const byte {\b mac} [] = \{0x90, 0xA2, 0xDA, 0x00, 0x53, 0xE5\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v IS_IGNORE_PIN\:ethernetConfig.h}
{\xe \v ethernetConfig.h\:IS_IGNORE_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IS_IGNORE_PIN( p)\~ (({\b IS_PIN_SPI}(p) || (p) == 4) || (p) == 10)}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file ethernetConfig.h.}\par
}
{\xe \v local_ip\:ethernetConfig.h}
{\xe \v ethernetConfig.h\:local_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define local_ip\~ IPAddress(10, 0, 0, 15)}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file ethernetConfig.h.}\par
{
Referenced by WiFiStream::config().}\par
}
{\xe \v remote_ip\:ethernetConfig.h}
{\xe \v ethernetConfig.h\:remote_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define remote_ip\~ IPAddress(10, 0, 0, 3)}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file ethernetConfig.h.}\par
}
{\xe \v remote_port\:ethernetConfig.h}
{\xe \v ethernetConfig.h\:remote_port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define remote_port\~ 3030}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file ethernetConfig.h.}\par
}
{\xe \v WIZ5100_ETHERNET\:ethernetConfig.h}
{\xe \v ethernetConfig.h\:WIZ5100_ETHERNET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WIZ5100_ETHERNET}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file ethernetConfig.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v client\:ethernetConfig.h}
{\xe \v ethernetConfig.h\:client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EthernetClient client}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file ethernetConfig.h.}\par
}
{\xe \v mac\:ethernetConfig.h}
{\xe \v ethernetConfig.h\:mac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const byte mac[] = \{0x90, 0xA2, 0xDA, 0x00, 0x53, 0xE5\}}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file ethernetConfig.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/examples/StandardFirmataWiFi/wifiConfig.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/examples/StandardFirmataWiFi/wifiConfig.h}
{\xe \v Weather_Balloon/library/Firmata/examples/StandardFirmataWiFi/wifiConfig.h}
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERVER_PORT}\~ 3030\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WIFI_WPA_SECURITY}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiServerStream} {\b stream} ({\b SERVER_PORT})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b ssid} [] = "your_network_name"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b wpa_passphrase} [] = "your_wpa_passphrase"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v SERVER_PORT\:wifiConfig.h}
{\xe \v wifiConfig.h\:SERVER_PORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERVER_PORT\~ 3030}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file wifiConfig.h.}\par
}
{\xe \v WIFI_WPA_SECURITY\:wifiConfig.h}
{\xe \v wifiConfig.h\:WIFI_WPA_SECURITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WIFI_WPA_SECURITY}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file wifiConfig.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v stream\:wifiConfig.h}
{\xe \v wifiConfig.h\:stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WiFiServerStream} stream ({\b SERVER_PORT} )}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ssid\:wifiConfig.h}
{\xe \v wifiConfig.h\:ssid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char ssid[] = "your_network_name"}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file wifiConfig.h.}\par
{
Referenced by WiFiStream::begin().}\par
}
{\xe \v wpa_passphrase\:wifiConfig.h}
{\xe \v wifiConfig.h\:wpa_passphrase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char wpa_passphrase[] = "your_wpa_passphrase"}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file wifiConfig.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/Firmata.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/Firmata.cpp}
{\xe \v Weather_Balloon/library/Firmata/Firmata.cpp}
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Firmata.h"}\par
{\f2 #include "HardwareSerial.h"}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Firmata.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_firmata_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FirmataClass} {\b Firmata}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v Firmata\:Firmata.cpp}
{\xe \v Firmata.cpp\:Firmata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FirmataClass} Firmata}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 669 of file Firmata.cpp.}\par
{
Referenced by SerialFirmata::checkSerial(), SerialFirmata::handleCapability(), SerialFirmata::handlePinMode(), SerialFirmata::handleSysex(), and FirmataClass::parse().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/Firmata.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/Firmata.h}
{\xe \v Weather_Balloon/library/Firmata/Firmata.h}
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Boards.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Firmata.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_firmata_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_firmata_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FirmataClass}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_PROTOCOL_MAJOR_VERSION}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_PROTOCOL_MINOR_VERSION}\~ 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_PROTOCOL_BUGFIX_VERSION}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_FIRMWARE_MAJOR_VERSION}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_FIRMWARE_MINOR_VERSION}\~ 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_FIRMWARE_BUGFIX_VERSION}\~ 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_MAJOR_VERSION}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_MINOR_VERSION}\~ 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_BUGFIX_VERSION}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_DATA_BYTES}\~ 64\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIGITAL_MESSAGE}\~ 0x90\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANALOG_MESSAGE}\~ 0xE0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REPORT_ANALOG}\~ 0xC0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REPORT_DIGITAL}\~ 0xD0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SET_PIN_MODE}\~ 0xF4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SET_DIGITAL_PIN_VALUE}\~ 0xF5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REPORT_VERSION}\~ 0xF9\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYSTEM_RESET}\~ 0xFF\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b START_SYSEX}\~ 0xF0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b END_SYSEX}\~ 0xF7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_MESSAGE}\~ 0x60\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENCODER_DATA}\~ 0x61\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERVO_CONFIG}\~ 0x70\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRING_DATA}\~ 0x71\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STEPPER_DATA}\~ 0x72\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ONEWIRE_DATA}\~ 0x73\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHIFT_DATA}\~ 0x75\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b I2C_REQUEST}\~ 0x76\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b I2C_REPLY}\~ 0x77\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b I2C_CONFIG}\~ 0x78\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXTENDED_ANALOG}\~ 0x6F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_STATE_QUERY}\~ 0x6D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_STATE_RESPONSE}\~ 0x6E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CAPABILITY_QUERY}\~ 0x6B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CAPABILITY_RESPONSE}\~ 0x6C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANALOG_MAPPING_QUERY}\~ 0x69\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANALOG_MAPPING_RESPONSE}\~ 0x6A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REPORT_FIRMWARE}\~ 0x79\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SAMPLING_INTERVAL}\~ 0x7A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCHEDULER_DATA}\~ 0x7B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYSEX_NON_REALTIME}\~ 0x7E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYSEX_REALTIME}\~ 0x7F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_STRING}\~ 0x71\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYSEX_I2C_REQUEST}\~ 0x76\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYSEX_I2C_REPLY}\~ 0x77\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SYSEX_SAMPLING_INTERVAL}\~ 0x7A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_ANALOG}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_PWM}\~ 0x03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_SERVO}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_SHIFT}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_I2C}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_ONEWIRE}\~ 0x07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_STEPPER}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_ENCODER}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_SERIAL}\~ 0x0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_PULLUP}\~ 0x0B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_MODE_IGNORE}\~ 0x7F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TOTAL_PIN_MODES}\~ 13\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ANALOG}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PWM}\~ 0x03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERVO}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHIFT}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b I2C}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ONEWIRE}\~ 0x07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STEPPER}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENCODER}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IGNORE}\~ 0x7F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b setFirmwareVersion}(x,  y)  \~ setFirmwareNameAndVersion(__FILE__, x, y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b callbackFunction}) (byte, int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b systemResetCallbackFunction}) (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b stringCallbackFunction}) (char *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b sysexCallbackFunction}) (byte command, byte argc, byte *argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FirmataClass} {\b Firmata}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ANALOG\:Firmata.h}
{\xe \v Firmata.h\:ANALOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANALOG\~ 0x02}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file Firmata.h.}\par
}
{\xe \v ANALOG_MAPPING_QUERY\:Firmata.h}
{\xe \v Firmata.h\:ANALOG_MAPPING_QUERY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANALOG_MAPPING_QUERY\~ 0x69}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file Firmata.h.}\par
}
{\xe \v ANALOG_MAPPING_RESPONSE\:Firmata.h}
{\xe \v Firmata.h\:ANALOG_MAPPING_RESPONSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANALOG_MAPPING_RESPONSE\~ 0x6A}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file Firmata.h.}\par
}
{\xe \v ANALOG_MESSAGE\:Firmata.h}
{\xe \v Firmata.h\:ANALOG_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ANALOG_MESSAGE\~ 0xE0}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file Firmata.h.}\par
{
Referenced by FirmataClass::attach(), FirmataClass::parse(), and FirmataClass::sendAnalog().}\par
}
{\xe \v CAPABILITY_QUERY\:Firmata.h}
{\xe \v Firmata.h\:CAPABILITY_QUERY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CAPABILITY_QUERY\~ 0x6B}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file Firmata.h.}\par
}
{\xe \v CAPABILITY_RESPONSE\:Firmata.h}
{\xe \v Firmata.h\:CAPABILITY_RESPONSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CAPABILITY_RESPONSE\~ 0x6C}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file Firmata.h.}\par
}
{\xe \v DIGITAL_MESSAGE\:Firmata.h}
{\xe \v Firmata.h\:DIGITAL_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIGITAL_MESSAGE\~ 0x90}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file Firmata.h.}\par
{
Referenced by FirmataClass::attach(), FirmataClass::parse(), and FirmataClass::sendDigitalPort().}\par
}
{\xe \v ENCODER\:Firmata.h}
{\xe \v Firmata.h\:ENCODER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENCODER\~ 0x09}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file Firmata.h.}\par
}
{\xe \v ENCODER_DATA\:Firmata.h}
{\xe \v Firmata.h\:ENCODER_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENCODER_DATA\~ 0x61}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file Firmata.h.}\par
}
{\xe \v END_SYSEX\:Firmata.h}
{\xe \v Firmata.h\:END_SYSEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define END_SYSEX\~ 0xF7}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file Firmata.h.}\par
{
Referenced by SerialFirmata::checkSerial(), FirmataClass::endSysex(), and FirmataClass::parse().}\par
}
{\xe \v EXTENDED_ANALOG\:Firmata.h}
{\xe \v Firmata.h\:EXTENDED_ANALOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXTENDED_ANALOG\~ 0x6F}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file Firmata.h.}\par
}
{\xe \v FIRMATA_BUGFIX_VERSION\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_BUGFIX_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_BUGFIX_VERSION\~ 1}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file Firmata.h.}\par
}
{\xe \v FIRMATA_FIRMWARE_BUGFIX_VERSION\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_FIRMWARE_BUGFIX_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_FIRMWARE_BUGFIX_VERSION\~ 4}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file Firmata.h.}\par
}
{\xe \v FIRMATA_FIRMWARE_MAJOR_VERSION\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_FIRMWARE_MAJOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_FIRMWARE_MAJOR_VERSION\~ 2}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file Firmata.h.}\par
{
Referenced by FirmataClass::blinkVersion().}\par
}
{\xe \v FIRMATA_FIRMWARE_MINOR_VERSION\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_FIRMWARE_MINOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_FIRMWARE_MINOR_VERSION\~ 5}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file Firmata.h.}\par
{
Referenced by FirmataClass::blinkVersion().}\par
}
{\xe \v FIRMATA_MAJOR_VERSION\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_MAJOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_MAJOR_VERSION\~ 2}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file Firmata.h.}\par
}
{\xe \v FIRMATA_MINOR_VERSION\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_MINOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_MINOR_VERSION\~ 5}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file Firmata.h.}\par
}
{\xe \v FIRMATA_PROTOCOL_BUGFIX_VERSION\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_PROTOCOL_BUGFIX_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_PROTOCOL_BUGFIX_VERSION\~ 1}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file Firmata.h.}\par
}
{\xe \v FIRMATA_PROTOCOL_MAJOR_VERSION\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_PROTOCOL_MAJOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_PROTOCOL_MAJOR_VERSION\~ 2}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file Firmata.h.}\par
{
Referenced by FirmataClass::printVersion().}\par
}
{\xe \v FIRMATA_PROTOCOL_MINOR_VERSION\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_PROTOCOL_MINOR_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_PROTOCOL_MINOR_VERSION\~ 5}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file Firmata.h.}\par
{
Referenced by FirmataClass::printVersion().}\par
}
{\xe \v FIRMATA_STRING\:Firmata.h}
{\xe \v Firmata.h\:FIRMATA_STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_STRING\~ 0x71}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file Firmata.h.}\par
}
{\xe \v I2C\:Firmata.h}
{\xe \v Firmata.h\:I2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define I2C\~ 0x06}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file Firmata.h.}\par
}
{\xe \v I2C_CONFIG\:Firmata.h}
{\xe \v Firmata.h\:I2C_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define I2C_CONFIG\~ 0x78}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file Firmata.h.}\par
}
{\xe \v I2C_REPLY\:Firmata.h}
{\xe \v Firmata.h\:I2C_REPLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define I2C_REPLY\~ 0x77}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file Firmata.h.}\par
}
{\xe \v I2C_REQUEST\:Firmata.h}
{\xe \v Firmata.h\:I2C_REQUEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define I2C_REQUEST\~ 0x76}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file Firmata.h.}\par
}
{\xe \v IGNORE\:Firmata.h}
{\xe \v Firmata.h\:IGNORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IGNORE\~ 0x7F}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 118 of file Firmata.h.}\par
}
{\xe \v MAX_DATA_BYTES\:Firmata.h}
{\xe \v Firmata.h\:MAX_DATA_BYTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_DATA_BYTES\~ 64}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file Firmata.h.}\par
{
Referenced by FirmataClass::setPinState().}\par
}
{\xe \v ONEWIRE\:Firmata.h}
{\xe \v Firmata.h\:ONEWIRE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ONEWIRE\~ 0x07}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file Firmata.h.}\par
}
{\xe \v ONEWIRE_DATA\:Firmata.h}
{\xe \v Firmata.h\:ONEWIRE_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ONEWIRE_DATA\~ 0x73}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file Firmata.h.}\par
}
{\xe \v PIN_MODE_ANALOG\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_ANALOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_ANALOG\~ 0x02}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file Firmata.h.}\par
}
{\xe \v PIN_MODE_ENCODER\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_ENCODER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_ENCODER\~ 0x09}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file Firmata.h.}\par
}
{\xe \v PIN_MODE_I2C\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_I2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_I2C\~ 0x06}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file Firmata.h.}\par
}
{\xe \v PIN_MODE_IGNORE\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_IGNORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_IGNORE\~ 0x7F}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 107 of file Firmata.h.}\par
{
Referenced by FirmataClass::setPinMode().}\par
}
{\xe \v PIN_MODE_ONEWIRE\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_ONEWIRE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_ONEWIRE\~ 0x07}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file Firmata.h.}\par
}
{\xe \v PIN_MODE_PULLUP\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_PULLUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_PULLUP\~ 0x0B}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file Firmata.h.}\par
}
{\xe \v PIN_MODE_PWM\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_PWM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_PWM\~ 0x03}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 98 of file Firmata.h.}\par
}
{\xe \v PIN_MODE_SERIAL\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_SERIAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_SERIAL\~ 0x0A}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file Firmata.h.}\par
{
Referenced by SerialFirmata::handleCapability(), SerialFirmata::handlePinMode(), and SerialFirmata::handleSysex().}\par
}
{\xe \v PIN_MODE_SERVO\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_SERVO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_SERVO\~ 0x04}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file Firmata.h.}\par
}
{\xe \v PIN_MODE_SHIFT\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_SHIFT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_SHIFT\~ 0x05}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file Firmata.h.}\par
}
{\xe \v PIN_MODE_STEPPER\:Firmata.h}
{\xe \v Firmata.h\:PIN_MODE_STEPPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_MODE_STEPPER\~ 0x08}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file Firmata.h.}\par
}
{\xe \v PIN_STATE_QUERY\:Firmata.h}
{\xe \v Firmata.h\:PIN_STATE_QUERY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_STATE_QUERY\~ 0x6D}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file Firmata.h.}\par
}
{\xe \v PIN_STATE_RESPONSE\:Firmata.h}
{\xe \v Firmata.h\:PIN_STATE_RESPONSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_STATE_RESPONSE\~ 0x6E}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file Firmata.h.}\par
}
{\xe \v PWM\:Firmata.h}
{\xe \v Firmata.h\:PWM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PWM\~ 0x03}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file Firmata.h.}\par
}
{\xe \v REPORT_ANALOG\:Firmata.h}
{\xe \v Firmata.h\:REPORT_ANALOG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REPORT_ANALOG\~ 0xC0}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file Firmata.h.}\par
{
Referenced by FirmataClass::attach(), and FirmataClass::parse().}\par
}
{\xe \v REPORT_DIGITAL\:Firmata.h}
{\xe \v Firmata.h\:REPORT_DIGITAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REPORT_DIGITAL\~ 0xD0}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file Firmata.h.}\par
{
Referenced by FirmataClass::attach(), and FirmataClass::parse().}\par
}
{\xe \v REPORT_FIRMWARE\:Firmata.h}
{\xe \v Firmata.h\:REPORT_FIRMWARE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REPORT_FIRMWARE\~ 0x79}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file Firmata.h.}\par
{
Referenced by FirmataClass::available(), and FirmataClass::printFirmwareVersion().}\par
}
{\xe \v REPORT_VERSION\:Firmata.h}
{\xe \v Firmata.h\:REPORT_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REPORT_VERSION\~ 0xF9}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file Firmata.h.}\par
{
Referenced by FirmataClass::parse(), and FirmataClass::printVersion().}\par
}
{\xe \v SAMPLING_INTERVAL\:Firmata.h}
{\xe \v Firmata.h\:SAMPLING_INTERVAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SAMPLING_INTERVAL\~ 0x7A}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file Firmata.h.}\par
}
{\xe \v SCHEDULER_DATA\:Firmata.h}
{\xe \v Firmata.h\:SCHEDULER_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCHEDULER_DATA\~ 0x7B}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file Firmata.h.}\par
}
{\xe \v SERIAL_MESSAGE\:Firmata.h}
{\xe \v Firmata.h\:SERIAL_MESSAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_MESSAGE\~ 0x60}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file Firmata.h.}\par
{
Referenced by SerialFirmata::checkSerial(), and SerialFirmata::handleSysex().}\par
}
{\xe \v SERVO\:Firmata.h}
{\xe \v Firmata.h\:SERVO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERVO\~ 0x04}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file Firmata.h.}\par
}
{\xe \v SERVO_CONFIG\:Firmata.h}
{\xe \v Firmata.h\:SERVO_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERVO_CONFIG\~ 0x70}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file Firmata.h.}\par
}
{\xe \v SET_DIGITAL_PIN_VALUE\:Firmata.h}
{\xe \v Firmata.h\:SET_DIGITAL_PIN_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SET_DIGITAL_PIN_VALUE\~ 0xF5}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file Firmata.h.}\par
{
Referenced by FirmataClass::attach(), and FirmataClass::parse().}\par
}
{\xe \v SET_PIN_MODE\:Firmata.h}
{\xe \v Firmata.h\:SET_PIN_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SET_PIN_MODE\~ 0xF4}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file Firmata.h.}\par
{
Referenced by FirmataClass::attach(), and FirmataClass::parse().}\par
}
{\xe \v setFirmwareVersion\:Firmata.h}
{\xe \v Firmata.h\:setFirmwareVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define setFirmwareVersion( x,  y)\~ setFirmwareNameAndVersion(__FILE__, x, y)}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 222 of file Firmata.h.}\par
}
{\xe \v SHIFT\:Firmata.h}
{\xe \v Firmata.h\:SHIFT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHIFT\~ 0x05}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file Firmata.h.}\par
}
{\xe \v SHIFT_DATA\:Firmata.h}
{\xe \v Firmata.h\:SHIFT_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHIFT_DATA\~ 0x75}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file Firmata.h.}\par
}
{\xe \v START_SYSEX\:Firmata.h}
{\xe \v Firmata.h\:START_SYSEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define START_SYSEX\~ 0xF0}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file Firmata.h.}\par
{
Referenced by SerialFirmata::checkSerial(), FirmataClass::detach(), FirmataClass::parse(), and FirmataClass::startSysex().}\par
}
{\xe \v STEPPER\:Firmata.h}
{\xe \v Firmata.h\:STEPPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STEPPER\~ 0x08}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file Firmata.h.}\par
}
{\xe \v STEPPER_DATA\:Firmata.h}
{\xe \v Firmata.h\:STEPPER_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STEPPER_DATA\~ 0x72}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file Firmata.h.}\par
}
{\xe \v STRING_DATA\:Firmata.h}
{\xe \v Firmata.h\:STRING_DATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRING_DATA\~ 0x71}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file Firmata.h.}\par
{
Referenced by FirmataClass::attach(), FirmataClass::available(), FirmataClass::detach(), and FirmataClass::sendString().}\par
}
{\xe \v SYSEX_I2C_REPLY\:Firmata.h}
{\xe \v Firmata.h\:SYSEX_I2C_REPLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYSEX_I2C_REPLY\~ 0x77}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file Firmata.h.}\par
}
{\xe \v SYSEX_I2C_REQUEST\:Firmata.h}
{\xe \v Firmata.h\:SYSEX_I2C_REQUEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYSEX_I2C_REQUEST\~ 0x76}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file Firmata.h.}\par
}
{\xe \v SYSEX_NON_REALTIME\:Firmata.h}
{\xe \v Firmata.h\:SYSEX_NON_REALTIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYSEX_NON_REALTIME\~ 0x7E}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file Firmata.h.}\par
}
{\xe \v SYSEX_REALTIME\:Firmata.h}
{\xe \v Firmata.h\:SYSEX_REALTIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYSEX_REALTIME\~ 0x7F}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file Firmata.h.}\par
}
{\xe \v SYSEX_SAMPLING_INTERVAL\:Firmata.h}
{\xe \v Firmata.h\:SYSEX_SAMPLING_INTERVAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYSEX_SAMPLING_INTERVAL\~ 0x7A}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file Firmata.h.}\par
}
{\xe \v SYSTEM_RESET\:Firmata.h}
{\xe \v Firmata.h\:SYSTEM_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SYSTEM_RESET\~ 0xFF}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file Firmata.h.}\par
{
Referenced by FirmataClass::attach(), FirmataClass::detach(), and FirmataClass::parse().}\par
}
{\xe \v TOTAL_PIN_MODES\:Firmata.h}
{\xe \v Firmata.h\:TOTAL_PIN_MODES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TOTAL_PIN_MODES\~ 13}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 108 of file Firmata.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v callbackFunction\:Firmata.h}
{\xe \v Firmata.h\:callbackFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* callbackFunction) (byte, int)}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file Firmata.h.}\par
}
{\xe \v stringCallbackFunction\:Firmata.h}
{\xe \v Firmata.h\:stringCallbackFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* stringCallbackFunction) (char *)}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file Firmata.h.}\par
}
{\xe \v sysexCallbackFunction\:Firmata.h}
{\xe \v Firmata.h\:sysexCallbackFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* sysexCallbackFunction) (byte command, byte argc, byte *argv)}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file Firmata.h.}\par
}
{\xe \v systemResetCallbackFunction\:Firmata.h}
{\xe \v Firmata.h\:systemResetCallbackFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* systemResetCallbackFunction) (void)}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file Firmata.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v Firmata\:Firmata.h}
{\xe \v Firmata.h\:Firmata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FirmataClass} Firmata}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 669 of file Firmata.cpp.}\par
{
Referenced by SerialFirmata::checkSerial(), SerialFirmata::handleCapability(), SerialFirmata::handlePinMode(), SerialFirmata::handleSysex(), and FirmataClass::parse().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/readme.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/readme.md}
{\xe \v Weather_Balloon/library/Firmata/readme.md}
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/test/readme.md File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/test/readme.md}
{\xe \v Weather_Balloon/library/Firmata/test/readme.md}
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/BLEStream.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/BLEStream.cpp}
{\xe \v Weather_Balloon/library/Firmata/utility/BLEStream.cpp}
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/BLEStream.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/BLEStream.h}
{\xe \v Weather_Balloon/library/Firmata/utility/BLEStream.h}
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
{\f2 #include <BLEPeripheral.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for BLEStream.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_b_l_e_stream_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BLEStream}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _MAX_ATTR_DATA_LEN_}\~ BLE_ATTRIBUTE_MAX_VALUE_LENGTH\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BLESTREAM_TXBUFFER_FLUSH_INTERVAL}\~ 80\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BLESTREAM_MIN_FLUSH_INTERVAL}\~ 8\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v _MAX_ATTR_DATA_LEN_\:BLEStream.h}
{\xe \v BLEStream.h\:_MAX_ATTR_DATA_LEN_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _MAX_ATTR_DATA_LEN_\~ BLE_ATTRIBUTE_MAX_VALUE_LENGTH}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file BLEStream.h.}\par
}
{\xe \v BLESTREAM_MIN_FLUSH_INTERVAL\:BLEStream.h}
{\xe \v BLEStream.h\:BLESTREAM_MIN_FLUSH_INTERVAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BLESTREAM_MIN_FLUSH_INTERVAL\~ 8}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file BLEStream.h.}\par
{
Referenced by BLEStream::setFlushInterval().}\par
}
{\xe \v BLESTREAM_TXBUFFER_FLUSH_INTERVAL\:BLEStream.h}
{\xe \v BLEStream.h\:BLESTREAM_TXBUFFER_FLUSH_INTERVAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BLESTREAM_TXBUFFER_FLUSH_INTERVAL\~ 80}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file BLEStream.h.}\par
{
Referenced by BLEStream::BLEStream().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/EthernetClientStream.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/EthernetClientStream.cpp}
{\xe \v Weather_Balloon/library/Firmata/utility/EthernetClientStream.cpp}
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/EthernetClientStream.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/EthernetClientStream.h}
{\xe \v Weather_Balloon/library/Firmata/utility/EthernetClientStream.h}
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <inttypes.h>}\par
{\f2 #include <Stream.h>}\par
{\f2 #include "firmataDebug.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for EthernetClientStream.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_ethernet_client_stream_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EthernetClientStream}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MILLIS_RECONNECT}\~ 5000\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MILLIS_RECONNECT\:EthernetClientStream.h}
{\xe \v EthernetClientStream.h\:MILLIS_RECONNECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MILLIS_RECONNECT\~ 5000}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file EthernetClientStream.h.}\par
{
Referenced by EthernetClientStream::maintain().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/firmataDebug.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/firmataDebug.h}
{\xe \v Weather_Balloon/library/Firmata/utility/firmataDebug.h}
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "firmata_debug_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG_BEGIN}(baud)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG_PRINTLN}(x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG_PRINT}(x)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG_BEGIN\:firmataDebug.h}
{\xe \v firmataDebug.h\:DEBUG_BEGIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG_BEGIN( baud)}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 9 of file firmataDebug.h.}\par
}
{\xe \v DEBUG_PRINT\:firmataDebug.h}
{\xe \v firmataDebug.h\:DEBUG_PRINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG_PRINT( x)}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 11 of file firmataDebug.h.}\par
}
{\xe \v DEBUG_PRINTLN\:firmataDebug.h}
{\xe \v firmataDebug.h\:DEBUG_PRINTLN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG_PRINTLN( x)}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 10 of file firmataDebug.h.}\par
{
Referenced by EthernetClientStream::maintain().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/FirmataFeature.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/FirmataFeature.h}
{\xe \v Weather_Balloon/library/Firmata/utility/FirmataFeature.h}
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Firmata.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for FirmataFeature.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_firmata_feature_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_firmata_feature_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FirmataFeature}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/SerialFirmata.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/SerialFirmata.cpp}
{\xe \v Weather_Balloon/library/Firmata/utility/SerialFirmata.cpp}
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "SerialFirmata.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SerialFirmata.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_serial_firmata_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/SerialFirmata.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/SerialFirmata.h}
{\xe \v Weather_Balloon/library/Firmata/utility/SerialFirmata.h}
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Firmata.h>}\par
{\f2 #include "FirmataFeature.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SerialFirmata.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_serial_firmata_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_serial_firmata_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SerialFirmata}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIRMATA_SERIAL_FEATURE}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HW_SERIAL0}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HW_SERIAL1}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HW_SERIAL2}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HW_SERIAL3}\~ 0x03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SW_SERIAL0}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SW_SERIAL1}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SW_SERIAL2}\~ 0x0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SW_SERIAL3}\~ 0x0B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_PORT_ID_MASK}\~ 0x0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_SERIAL_PORTS}\~ 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_READ_ARR_LEN}\~ 12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RES_RX1}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RES_TX1}\~ 0x03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RES_RX2}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RES_TX2}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RES_RX3}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RES_TX3}\~ 0x07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_CONFIG}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_WRITE}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_READ}\~ 0x30\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_REPLY}\~ 0x40\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_CLOSE}\~ 0x50\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_FLUSH}\~ 0x60\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_LISTEN}\~ 0x70\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_READ_CONTINUOUSLY}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_STOP_READING}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SERIAL_MODE_MASK}\~ 0xF0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v FIRMATA_SERIAL_FEATURE\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:FIRMATA_SERIAL_FEATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIRMATA_SERIAL_FEATURE}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file SerialFirmata.h.}\par
}
{\xe \v HW_SERIAL0\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:HW_SERIAL0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HW_SERIAL0\~ 0x00}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::reset().}\par
}
{\xe \v HW_SERIAL1\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:HW_SERIAL1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HW_SERIAL1\~ 0x01}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::reset().}\par
}
{\xe \v HW_SERIAL2\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:HW_SERIAL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HW_SERIAL2\~ 0x02}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::reset().}\par
}
{\xe \v HW_SERIAL3\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:HW_SERIAL3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HW_SERIAL3\~ 0x03}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::reset().}\par
}
{\xe \v MAX_SERIAL_PORTS\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:MAX_SERIAL_PORTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_SERIAL_PORTS\~ 8}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v RES_RX1\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:RES_RX1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RES_RX1\~ 0x02}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file SerialFirmata.h.}\par
}
{\xe \v RES_RX2\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:RES_RX2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RES_RX2\~ 0x04}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file SerialFirmata.h.}\par
}
{\xe \v RES_RX3\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:RES_RX3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RES_RX3\~ 0x06}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file SerialFirmata.h.}\par
}
{\xe \v RES_TX1\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:RES_TX1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RES_TX1\~ 0x03}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file SerialFirmata.h.}\par
}
{\xe \v RES_TX2\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:RES_TX2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RES_TX2\~ 0x05}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file SerialFirmata.h.}\par
}
{\xe \v RES_TX3\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:RES_TX3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RES_TX3\~ 0x07}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file SerialFirmata.h.}\par
}
{\xe \v SERIAL_CLOSE\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_CLOSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_CLOSE\~ 0x50}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SERIAL_CONFIG\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_CONFIG\~ 0x10}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SERIAL_FLUSH\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_FLUSH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_FLUSH\~ 0x60}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SERIAL_LISTEN\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_LISTEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_LISTEN\~ 0x70}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SERIAL_MODE_MASK\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_MODE_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_MODE_MASK\~ 0xF0}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SERIAL_PORT_ID_MASK\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_PORT_ID_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_PORT_ID_MASK\~ 0x0F}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SERIAL_READ\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_READ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_READ\~ 0x30}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SERIAL_READ_ARR_LEN\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_READ_ARR_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_READ_ARR_LEN\~ 12}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::reset().}\par
}
{\xe \v SERIAL_READ_CONTINUOUSLY\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_READ_CONTINUOUSLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_READ_CONTINUOUSLY\~ 0x00}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SERIAL_REPLY\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_REPLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_REPLY\~ 0x40}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::checkSerial().}\par
}
{\xe \v SERIAL_STOP_READING\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_STOP_READING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_STOP_READING\~ 0x01}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SERIAL_WRITE\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SERIAL_WRITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SERIAL_WRITE\~ 0x20}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex().}\par
}
{\xe \v SW_SERIAL0\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SW_SERIAL0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SW_SERIAL0\~ 0x08}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex(), and SerialFirmata::reset().}\par
}
{\xe \v SW_SERIAL1\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SW_SERIAL1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SW_SERIAL1\~ 0x09}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex(), and SerialFirmata::reset().}\par
}
{\xe \v SW_SERIAL2\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SW_SERIAL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SW_SERIAL2\~ 0x0A}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex(), and SerialFirmata::reset().}\par
}
{\xe \v SW_SERIAL3\:SerialFirmata.h}
{\xe \v SerialFirmata.h\:SW_SERIAL3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SW_SERIAL3\~ 0x0B}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file SerialFirmata.h.}\par
{
Referenced by SerialFirmata::handleSysex(), and SerialFirmata::reset().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/WiFiClientStream.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/WiFiClientStream.h}
{\xe \v Weather_Balloon/library/Firmata/utility/WiFiClientStream.h}
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WiFiStream.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for WiFiClientStream.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_wi_fi_client_stream_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WiFiClientStream}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MILLIS_RECONNECT}\~ 5000\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MILLIS_RECONNECT\:WiFiClientStream.h}
{\xe \v WiFiClientStream.h\:MILLIS_RECONNECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MILLIS_RECONNECT\~ 5000}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file WiFiClientStream.h.}\par
{
Referenced by WiFiClientStream::connect_client().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/WiFiServerStream.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/WiFiServerStream.h}
{\xe \v Weather_Balloon/library/Firmata/utility/WiFiServerStream.h}
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WiFiStream.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for WiFiServerStream.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_wi_fi_server_stream_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WiFiServerStream}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/WiFiStream.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/WiFiStream.cpp}
{\xe \v Weather_Balloon/library/Firmata/utility/WiFiStream.cpp}
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Firmata/utility/WiFiStream.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Firmata/utility/WiFiStream.h}
{\xe \v Weather_Balloon/library/Firmata/utility/WiFiStream.h}
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <inttypes.h>}\par
{\f2 #include <Stream.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for WiFiStream.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_wi_fi_stream_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_wi_fi_stream_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WiFiStream}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HOST_CONNECTION_DISCONNECTED}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HOST_CONNECTION_CONNECTED}\~ 1\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b hostConnectionCallbackFunction}) (byte)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v HOST_CONNECTION_CONNECTED\:WiFiStream.h}
{\xe \v WiFiStream.h\:HOST_CONNECTION_CONNECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HOST_CONNECTION_CONNECTED\~ 1}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file WiFiStream.h.}\par
{
Referenced by WiFiServerStream::connect_client(), and WiFiClientStream::connect_client().}\par
}
{\xe \v HOST_CONNECTION_DISCONNECTED\:WiFiStream.h}
{\xe \v WiFiStream.h\:HOST_CONNECTION_DISCONNECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HOST_CONNECTION_DISCONNECTED\~ 0}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file WiFiStream.h.}\par
{
Referenced by WiFiClientStream::stop(), and WiFiServerStream::stop().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v hostConnectionCallbackFunction\:WiFiStream.h}
{\xe \v WiFiStream.h\:hostConnectionCallbackFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* hostConnectionCallbackFunction) (byte)}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file WiFiStream.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/LedControl-master/src/LedControl.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/LedControl-master/src/LedControl.cpp}
{\xe \v Weather_Balloon/library/LedControl-master/src/LedControl.cpp}
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LedControl.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for LedControl.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_led_control_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_NOOP}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DIGIT0}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DIGIT1}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DIGIT2}\~ 3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DIGIT3}\~ 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DIGIT4}\~ 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DIGIT5}\~ 6\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DIGIT6}\~ 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DIGIT7}\~ 8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DECODEMODE}\~ 9\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_INTENSITY}\~ 10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_SCANLIMIT}\~ 11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_SHUTDOWN}\~ 12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OP_DISPLAYTEST}\~ 15\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v OP_DECODEMODE\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DECODEMODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DECODEMODE\~ 9}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file LedControl.cpp.}\par
{
Referenced by LedControl::LedControl().}\par
}
{\xe \v OP_DIGIT0\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DIGIT0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DIGIT0\~ 1}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file LedControl.cpp.}\par
}
{\xe \v OP_DIGIT1\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DIGIT1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DIGIT1\~ 2}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file LedControl.cpp.}\par
}
{\xe \v OP_DIGIT2\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DIGIT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DIGIT2\~ 3}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file LedControl.cpp.}\par
}
{\xe \v OP_DIGIT3\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DIGIT3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DIGIT3\~ 4}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file LedControl.cpp.}\par
}
{\xe \v OP_DIGIT4\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DIGIT4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DIGIT4\~ 5}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file LedControl.cpp.}\par
}
{\xe \v OP_DIGIT5\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DIGIT5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DIGIT5\~ 6}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file LedControl.cpp.}\par
}
{\xe \v OP_DIGIT6\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DIGIT6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DIGIT6\~ 7}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file LedControl.cpp.}\par
}
{\xe \v OP_DIGIT7\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DIGIT7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DIGIT7\~ 8}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file LedControl.cpp.}\par
}
{\xe \v OP_DISPLAYTEST\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_DISPLAYTEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_DISPLAYTEST\~ 15}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file LedControl.cpp.}\par
{
Referenced by LedControl::LedControl().}\par
}
{\xe \v OP_INTENSITY\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_INTENSITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_INTENSITY\~ 10}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file LedControl.cpp.}\par
{
Referenced by LedControl::setIntensity().}\par
}
{\xe \v OP_NOOP\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_NOOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_NOOP\~ 0}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file LedControl.cpp.}\par
}
{\xe \v OP_SCANLIMIT\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_SCANLIMIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_SCANLIMIT\~ 11}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file LedControl.cpp.}\par
{
Referenced by LedControl::setScanLimit().}\par
}
{\xe \v OP_SHUTDOWN\:LedControl.cpp}
{\xe \v LedControl.cpp\:OP_SHUTDOWN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OP_SHUTDOWN\~ 12}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file LedControl.cpp.}\par
{
Referenced by LedControl::shutdown().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/LedControl-master/src/LedControl.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/LedControl-master/src/LedControl.h}
{\xe \v Weather_Balloon/library/LedControl-master/src/LedControl.h}
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <avr/pgmspace.h>}\par
{\f2 #include <WProgram.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for LedControl.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_led_control_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_led_control_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LedControl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/MAG3110/MAG3110.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/MAG3110/MAG3110.cpp}
{\xe \v Weather_Balloon/library/MAG3110/MAG3110.cpp}
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
{\f2 #include "MAG3110.h"}\par
{\f2 #include <Wire.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for MAG3110.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_a_g3110_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAG_ADDR}\~ 0x0E\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MAG_ADDR\:MAG3110.cpp}
{\xe \v MAG3110.cpp\:MAG_ADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAG_ADDR\~ 0x0E}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 5 of file MAG3110.cpp.}\par
{
Referenced by MAG3110::config(), MAG3110::read_x(), MAG3110::read_y(), and MAG3110::read_z().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/MAG3110/MAG3110.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/MAG3110/MAG3110.h}
{\xe \v Weather_Balloon/library/MAG3110/MAG3110.h}
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_a_g3110_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MAG3110}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/OneWire2/OneWire.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/OneWire2/OneWire.cpp}
{\xe \v Weather_Balloon/library/OneWire2/OneWire.cpp}
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "OneWire.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for OneWire.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_one_wire_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/OneWire2/OneWire.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/OneWire2/OneWire.h}
{\xe \v Weather_Balloon/library/OneWire2/OneWire.h}
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <inttypes.h>}\par
{\f2 #include "WProgram.h"}\par
{\f2 #include "pins_arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for OneWire.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_one_wire_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_one_wire_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OneWire}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ONEWIRE_SEARCH}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ONEWIRE_CRC}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ONEWIRE_CRC8_TABLE}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ONEWIRE_CRC16}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FALSE}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TRUE}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_TO_BASEREG}(pin)                      \~ (0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIN_TO_BITMASK}(pin)                      \~ (pin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IO_REG_TYPE}\~ unsigned int\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IO_REG_ASM}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIRECT_READ}(base,  pin)                \~ digitalRead(pin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIRECT_WRITE_LOW}(base,  pin)      \~ digitalWrite(pin, LOW)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIRECT_WRITE_HIGH}(base,  pin)    \~ digitalWrite(pin, HIGH)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIRECT_MODE_INPUT}(base,  pin)    \~ pinMode(pin,INPUT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DIRECT_MODE_OUTPUT}(base,  pin)  \~ pinMode(pin,OUTPUT)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DIRECT_MODE_INPUT\:OneWire.h}
{\xe \v OneWire.h\:DIRECT_MODE_INPUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIRECT_MODE_INPUT( base,  pin)\~ pinMode(pin,INPUT)}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 247 of file OneWire.h.}\par
{
Referenced by OneWire::depower(), OneWire::read_bit(), OneWire::reset(), OneWire::write(), and OneWire::write_bytes().}\par
}
{\xe \v DIRECT_MODE_OUTPUT\:OneWire.h}
{\xe \v OneWire.h\:DIRECT_MODE_OUTPUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIRECT_MODE_OUTPUT( base,  pin)\~ pinMode(pin,OUTPUT)}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 248 of file OneWire.h.}\par
{
Referenced by OneWire::read_bit(), OneWire::reset(), and OneWire::write_bit().}\par
}
{\xe \v DIRECT_READ\:OneWire.h}
{\xe \v OneWire.h\:DIRECT_READ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIRECT_READ( base,  pin)\~ digitalRead(pin)}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 244 of file OneWire.h.}\par
{
Referenced by OneWire::read_bit(), and OneWire::reset().}\par
}
{\xe \v DIRECT_WRITE_HIGH\:OneWire.h}
{\xe \v OneWire.h\:DIRECT_WRITE_HIGH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIRECT_WRITE_HIGH( base,  pin)\~ digitalWrite(pin, HIGH)}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 246 of file OneWire.h.}\par
{
Referenced by OneWire::write_bit().}\par
}
{\xe \v DIRECT_WRITE_LOW\:OneWire.h}
{\xe \v OneWire.h\:DIRECT_WRITE_LOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DIRECT_WRITE_LOW( base,  pin)\~ digitalWrite(pin, LOW)}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 245 of file OneWire.h.}\par
{
Referenced by OneWire::read_bit(), OneWire::reset(), OneWire::write(), OneWire::write_bit(), and OneWire::write_bytes().}\par
}
{\xe \v FALSE\:OneWire.h}
{\xe \v OneWire.h\:FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FALSE\~ 0}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file OneWire.h.}\par
{
Referenced by OneWire::reset_search(), OneWire::search(), and OneWire::target_search().}\par
}
{\xe \v IO_REG_ASM\:OneWire.h}
{\xe \v OneWire.h\:IO_REG_ASM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IO_REG_ASM}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 243 of file OneWire.h.}\par
{
Referenced by OneWire::read_bit(), OneWire::reset(), and OneWire::write_bit().}\par
}
{\xe \v IO_REG_TYPE\:OneWire.h}
{\xe \v OneWire.h\:IO_REG_TYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IO_REG_TYPE\~ unsigned int}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 242 of file OneWire.h.}\par
{
Referenced by OneWire::read_bit(), OneWire::reset(), and OneWire::write_bit().}\par
}
{\xe \v ONEWIRE_CRC\:OneWire.h}
{\xe \v OneWire.h\:ONEWIRE_CRC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ONEWIRE_CRC\~ 1}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file OneWire.h.}\par
}
{\xe \v ONEWIRE_CRC16\:OneWire.h}
{\xe \v OneWire.h\:ONEWIRE_CRC16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ONEWIRE_CRC16\~ 1}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file OneWire.h.}\par
}
{\xe \v ONEWIRE_CRC8_TABLE\:OneWire.h}
{\xe \v OneWire.h\:ONEWIRE_CRC8_TABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ONEWIRE_CRC8_TABLE\~ 1}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file OneWire.h.}\par
}
{\xe \v ONEWIRE_SEARCH\:OneWire.h}
{\xe \v OneWire.h\:ONEWIRE_SEARCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ONEWIRE_SEARCH\~ 1}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file OneWire.h.}\par
}
{\xe \v PIN_TO_BASEREG\:OneWire.h}
{\xe \v OneWire.h\:PIN_TO_BASEREG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_TO_BASEREG( pin)\~ (0)}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 240 of file OneWire.h.}\par
{
Referenced by OneWire::OneWire().}\par
}
{\xe \v PIN_TO_BITMASK\:OneWire.h}
{\xe \v OneWire.h\:PIN_TO_BITMASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIN_TO_BITMASK( pin)\~ (pin)}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 241 of file OneWire.h.}\par
{
Referenced by OneWire::OneWire().}\par
}
{\xe \v TRUE\:OneWire.h}
{\xe \v OneWire.h\:TRUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TRUE\~ 1}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file OneWire.h.}\par
{
Referenced by OneWire::search().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTClib-master/RTC_DS1307.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTClib-master/RTC_DS1307.cpp}
{\xe \v Weather_Balloon/library/RTClib-master/RTC_DS1307.cpp}
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <WProgram.h>}\par
{\f2 #include <avr/pgmspace.h>}\par
{\f2 #include <Wire.h>}\par
{\f2 #include "RTClib.h"}\par
{\f2 #include "RTC_DS1307.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RTC_DS1307.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c___d_s1307_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS1307_ADDRESS}\~ 0x68\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SEND}(x)\~ send(x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RECEIVE}(x)\~ receive(x)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DS1307_ADDRESS\:RTC_DS1307.cpp}
{\xe \v RTC_DS1307.cpp\:DS1307_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS1307_ADDRESS\~ 0x68}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file RTC_DS1307.cpp.}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS1307::isrunning(), and RTC_DS1307::now().}\par
}
{\xe \v RECEIVE\:RTC_DS1307.cpp}
{\xe \v RTC_DS1307.cpp\:RECEIVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RECEIVE( x)\~ receive(x)}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file RTC_DS1307.cpp.}\par
}
{\xe \v SEND\:RTC_DS1307.cpp}
{\xe \v RTC_DS1307.cpp\:SEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SEND( x)\~ send(x)}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 18 of file RTC_DS1307.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTClib-master/RTC_DS1307.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTClib-master/RTC_DS1307.h}
{\xe \v Weather_Balloon/library/RTClib-master/RTC_DS1307.h}
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <RTClib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RTC_DS1307.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c___d_s1307_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c___d_s1307_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RTC_DS1307}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTClib-master/RTC_DS3231.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTClib-master/RTC_DS3231.cpp}
{\xe \v Weather_Balloon/library/RTClib-master/RTC_DS3231.cpp}
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <WProgram.h>}\par
{\f2 #include <avr/pgmspace.h>}\par
{\f2 #include <Wire.h>}\par
{\f2 #include "RTClib.h"}\par
{\f2 #include "RTC_DS3231.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RTC_DS3231.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c___d_s3231_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SEND}(x)\~ send(x)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RECEIVE}(x)\~ receive(x)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v RECEIVE\:RTC_DS3231.cpp}
{\xe \v RTC_DS3231.cpp\:RECEIVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RECEIVE( x)\~ receive(x)}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file RTC_DS3231.cpp.}\par
}
{\xe \v SEND\:RTC_DS3231.cpp}
{\xe \v RTC_DS3231.cpp\:SEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SEND( x)\~ send(x)}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file RTC_DS3231.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTClib-master/RTC_DS3231.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTClib-master/RTC_DS3231.h}
{\xe \v Weather_Balloon/library/RTClib-master/RTC_DS3231.h}
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <RTClib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RTC_DS3231.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c___d_s3231_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c___d_s3231_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RTC_DS3231}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_ADDRESS}\~ 0x68\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_SECONDS}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_MINUTES}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_HOURS}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_DAYOFWEEK}\~ 0x03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_DAYOFMONTH}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_MONTH}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_YEAR}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_A1SECONDS}\~ 0x07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_A1MINUTES}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_A1HOURS}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_A1DAYDATE}\~ 0x0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_A2MINUTES}\~ 0x0B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_A2HOURS}\~ 0x0C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_A2DAYDATE}\~ 0x0D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_CONTROL}\~ 0x0E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_STATUS_CTL}\~ 0x0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_AGING}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_TEMP_MSB}\~ 0x11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_REG_TEMP_LSB}\~ 0x12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_SQW_FREQ_1}\~ 0b00000000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_SQW_FREQ_1024}\~ 0b00001000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_SQW_FREQ_4096}\~ 0b00010000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS3231_SQW_FREQ_8192}\~ 0b00011000\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DS3231_ADDRESS\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_ADDRESS\~ 0x68}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_A1DAYDATE\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_A1DAYDATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_A1DAYDATE\~ 0x0A}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_A1HOURS\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_A1HOURS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_A1HOURS\~ 0x09}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_A1MINUTES\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_A1MINUTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_A1MINUTES\~ 0x08}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_A1SECONDS\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_A1SECONDS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_A1SECONDS\~ 0x07}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_A2DAYDATE\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_A2DAYDATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_A2DAYDATE\~ 0x0D}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_A2HOURS\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_A2HOURS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_A2HOURS\~ 0x0C}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_A2MINUTES\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_A2MINUTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_A2MINUTES\~ 0x0B}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_AGING\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_AGING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_AGING\~ 0x10}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_CONTROL\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_CONTROL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_CONTROL\~ 0x0E}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_DAYOFMONTH\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_DAYOFMONTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_DAYOFMONTH\~ 0x04}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_DAYOFWEEK\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_DAYOFWEEK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_DAYOFWEEK\~ 0x03}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_HOURS\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_HOURS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_HOURS\~ 0x02}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_MINUTES\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_MINUTES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_MINUTES\~ 0x01}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_MONTH\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_MONTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_MONTH\~ 0x05}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_SECONDS\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_SECONDS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_SECONDS\~ 0x00}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file RTC_DS3231.h.}\par
{
Referenced by RTC_DS3231::adjust(), and RTC_DS3231::now().}\par
}
{\xe \v DS3231_REG_STATUS_CTL\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_STATUS_CTL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_STATUS_CTL\~ 0x0F}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file RTC_DS3231.h.}\par
{
Referenced by RTC_DS3231::enable32kHz(), and RTC_DS3231::isrunning().}\par
}
{\xe \v DS3231_REG_TEMP_LSB\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_TEMP_LSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_TEMP_LSB\~ 0x12}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_REG_TEMP_MSB\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_TEMP_MSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_TEMP_MSB\~ 0x11}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file RTC_DS3231.h.}\par
{
Referenced by RTC_DS3231::getTempAsFloat(), and RTC_DS3231::getTempAsWord().}\par
}
{\xe \v DS3231_REG_YEAR\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_REG_YEAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_REG_YEAR\~ 0x06}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_SQW_FREQ_1\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_SQW_FREQ_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_SQW_FREQ_1\~ 0b00000000}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_SQW_FREQ_1024\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_SQW_FREQ_1024}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_SQW_FREQ_1024\~ 0b00001000}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_SQW_FREQ_4096\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_SQW_FREQ_4096}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_SQW_FREQ_4096\~ 0b00010000}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file RTC_DS3231.h.}\par
}
{\xe \v DS3231_SQW_FREQ_8192\:RTC_DS3231.h}
{\xe \v RTC_DS3231.h\:DS3231_SQW_FREQ_8192}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS3231_SQW_FREQ_8192\~ 0b00011000}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file RTC_DS3231.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTClib-master/RTC_DS3234.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTClib-master/RTC_DS3234.cpp}
{\xe \v Weather_Balloon/library/RTClib-master/RTC_DS3234.cpp}
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <WProgram.h>}\par
{\f2 #include <avr/pgmspace.h>}\par
{\f2 #include <SPI.h>}\par
{\f2 #include "RTClib.h"}\par
{\f2 #include "RTC_DS3234.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RTC_DS3234.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c___d_s3234_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b CONTROL_R} = 0x0e\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b CONTROL_W} = 0x8e\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b CONTROL_STATUS_R} = 0x0f\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b CONTROL_STATUS_W} = 0x8f\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b SECONDS_R} = 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b SECONDS_W} = 0x80\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b EOSC} = 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b OSF} = 7\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v CONTROL_R\:RTC_DS3234.cpp}
{\xe \v RTC_DS3234.cpp\:CONTROL_R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CONTROL_R = 0x0e}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file RTC_DS3234.cpp.}\par
{
Referenced by RTC_DS3234::isrunning().}\par
}
{\xe \v CONTROL_STATUS_R\:RTC_DS3234.cpp}
{\xe \v RTC_DS3234.cpp\:CONTROL_STATUS_R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CONTROL_STATUS_R = 0x0f}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 21 of file RTC_DS3234.cpp.}\par
}
{\xe \v CONTROL_STATUS_W\:RTC_DS3234.cpp}
{\xe \v RTC_DS3234.cpp\:CONTROL_STATUS_W}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CONTROL_STATUS_W = 0x8f}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file RTC_DS3234.cpp.}\par
{
Referenced by RTC_DS3234::begin().}\par
}
{\xe \v CONTROL_W\:RTC_DS3234.cpp}
{\xe \v RTC_DS3234.cpp\:CONTROL_W}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CONTROL_W = 0x8e}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file RTC_DS3234.cpp.}\par
{
Referenced by RTC_DS3234::begin().}\par
}
{\xe \v EOSC\:RTC_DS3234.cpp}
{\xe \v RTC_DS3234.cpp\:EOSC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int EOSC = 7}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file RTC_DS3234.cpp.}\par
}
{\xe \v OSF\:RTC_DS3234.cpp}
{\xe \v RTC_DS3234.cpp\:OSF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int OSF = 7}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file RTC_DS3234.cpp.}\par
{
Referenced by RTC_DS3234::isrunning().}\par
}
{\xe \v SECONDS_R\:RTC_DS3234.cpp}
{\xe \v RTC_DS3234.cpp\:SECONDS_R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int SECONDS_R = 0x00}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file RTC_DS3234.cpp.}\par
{
Referenced by RTC_DS3234::now().}\par
}
{\xe \v SECONDS_W\:RTC_DS3234.cpp}
{\xe \v RTC_DS3234.cpp\:SECONDS_W}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int SECONDS_W = 0x80}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file RTC_DS3234.cpp.}\par
{
Referenced by RTC_DS3234::adjust().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTClib-master/RTC_DS3234.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTClib-master/RTC_DS3234.h}
{\xe \v Weather_Balloon/library/RTClib-master/RTC_DS3234.h}
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <RTClib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RTC_DS3234.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c___d_s3234_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c___d_s3234_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RTC_DS3234}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTClib-master/RTClib.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTClib-master/RTClib.cpp}
{\xe \v Weather_Balloon/library/RTClib-master/RTClib.cpp}
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <avr/pgmspace.h>}\par
{\f2 #include "RTClib.h"}\par
{\f2 #include <WProgram.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RTClib.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_clib_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SECONDS_PER_DAY}\~ 86400L\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SECONDS_FROM_1970_TO_2000}\~ 946684800\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bcd2bin} (uint8_t val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bin2bcd} (uint8_t val)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b i} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b months} [] = \{ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v SECONDS_FROM_1970_TO_2000\:RTClib.cpp}
{\xe \v RTClib.cpp\:SECONDS_FROM_1970_TO_2000}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SECONDS_FROM_1970_TO_2000\~ 946684800}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 8 of file RTClib.cpp.}\par
{
Referenced by DateTime::DateTime(), and DateTime::unixtime().}\par
}
{\xe \v SECONDS_PER_DAY\:RTClib.cpp}
{\xe \v RTClib.cpp\:SECONDS_PER_DAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SECONDS_PER_DAY\~ 86400L}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 7 of file RTClib.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v bcd2bin\:RTClib.cpp}
{\xe \v RTClib.cpp\:bcd2bin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t bcd2bin (uint8_t  {\i val})}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file RTClib.cpp.}\par
{
Referenced by RTC_DS3231::enable32kHz(), RTC_DS1307::now(), RTC_DS3234::now(), and RTC_DS3231::now().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_clib_8cpp_a916290df5459cfa1a9d590946ed552ac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v bin2bcd\:RTClib.cpp}
{\xe \v RTClib.cpp\:bin2bcd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t bin2bcd (uint8_t  {\i val})}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file RTClib.cpp.}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS3234::adjust(), and RTC_DS3231::adjust().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_clib_8cpp_ab89a9f89f9d868e129c69675bf78d9b6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v i\:RTClib.cpp}
{\xe \v RTClib.cpp\:i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int i = 0}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 18 of file RTClib.cpp.}\par
{
Referenced by Atmosphere(), FirmataClass::available(), beep_piezo(), LSM9DS1::calibrateMag(), check_landing(), check_launch(), SerialFirmata::checkSerial(), LedControl::clearDisplay(), compare_buffers(), configure_ds18b20(), configure_GPS_NMEA(), OneWire::crc16(), Adafruit_SHT31::crc8(), OneWire::crc8(), MS5xxx::CRCcodeTest(), dayShortStr(), EEPROM_readAnything(), EEPROM_writeAnything(), find_sdcard_tail(), DS3231::getAlarm1(), DS3231::getAlarm2(), DS3231::getAlarmType1(), DS3231::getAlarmType2(), RTC_DS3231::getControlRegisterData(), DS3231::getDateTime(), GPS_CRC(), SerialFirmata::handleSysex(), LSM9DS1::I2CreadBytes(), Sd2Card::init(), LSM9DS1::init(), DS3231::isAlarm2(), LedControl::LedControl(), log_data(), makeTime(), monthShortStr(), FirmataClass::printFirmwareVersion(), printZeroRegSBMATRIX(), DallasTemperature::rawToFahrenheit(), OneWire::read_bytes(), read_sdcard(), Sd2Card::readData(), Sd2Card::readEnd(), Adafruit_SHT31::readHumidity(), MS5xxx::ReadProm(), DallasTemperature::readScratchPad(), SerialFirmata::reset(), OneWire::reset_search(), sd_calc_crc(), OneWire::search(), OneWire::select(), FirmataClass::sendSysex(), LedControl::setChar(), BLEStream::setFlushInterval(), FirmataClass::setPinState(), DallasTemperature::setResolution(), LSM9DS1::SPIreadBytes(), OneWire::target_search(), FilterOnePoleCascade::test(), test_logging(), OneWire::write_bytes(), and Sd2Card::writeData().}\par
}
{\xe \v months\:RTClib.cpp}
{\xe \v RTClib.cpp\:months}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* months[] = \{ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" \}}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 158 of file RTClib.cpp.}\par
{
Referenced by DateTime::toString().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTClib-master/RTClib.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTClib-master/RTClib.h}
{\xe \v Weather_Balloon/library/RTClib-master/RTClib.h}
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_clib_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DateTime}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RTC_Millis}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bcd2bin} (uint8_t val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b bin2bcd} (uint8_t val)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v bcd2bin\:RTClib.h}
{\xe \v RTClib.h\:bcd2bin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t bcd2bin (uint8_t  {\i val})}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file RTClib.cpp.}\par
{
Referenced by RTC_DS3231::enable32kHz(), RTC_DS1307::now(), RTC_DS3234::now(), and RTC_DS3231::now().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_clib_8h_a916290df5459cfa1a9d590946ed552ac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v bin2bcd\:RTClib.h}
{\xe \v RTClib.h\:bin2bcd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t bin2bcd (uint8_t  {\i val})}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file RTClib.cpp.}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS3234::adjust(), and RTC_DS3231::adjust().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_clib_8h_ab89a9f89f9d868e129c69675bf78d9b6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTCZero/src/RTCZero.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTCZero/src/RTCZero.cpp}
{\xe \v Weather_Balloon/library/RTCZero/src/RTCZero.cpp}
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <time.h>}\par
{\f2 #include "RTCZero.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RTCZero.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c_zero_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EPOCH_TIME_OFF}\~ 946684800\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EPOCH_TIME_YEAR_OFF}\~ 100\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RTC_Handler} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b voidFuncPtr} {\b RTC_callBack} = NULL\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v EPOCH_TIME_OFF\:RTCZero.cpp}
{\xe \v RTCZero.cpp\:EPOCH_TIME_OFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EPOCH_TIME_OFF\~ 946684800}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file RTCZero.cpp.}\par
{
Referenced by RTCZero::getY2kEpoch(), RTCZero::setEpoch(), and RTCZero::setY2kEpoch().}\par
}
{\xe \v EPOCH_TIME_YEAR_OFF\:RTCZero.cpp}
{\xe \v RTCZero.cpp\:EPOCH_TIME_YEAR_OFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EPOCH_TIME_YEAR_OFF\~ 100}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file RTCZero.cpp.}\par
{
Referenced by RTCZero::getEpoch(), and RTCZero::setEpoch().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v RTC_Handler\:RTCZero.cpp}
{\xe \v RTCZero.cpp\:RTC_Handler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RTC_Handler (void )}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file RTCZero.cpp.}\par
{
References RTC_callBack.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v RTC_callBack\:RTCZero.cpp}
{\xe \v RTCZero.cpp\:RTC_callBack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b voidFuncPtr} RTC_callBack = NULL}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file RTCZero.cpp.}\par
{
Referenced by RTCZero::attachInterrupt(), RTCZero::detachInterrupt(), and RTC_Handler().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/RTCZero/src/RTCZero.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/RTCZero/src/RTCZero.h}
{\xe \v Weather_Balloon/library/RTCZero/src/RTCZero.h}
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for RTCZero.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c_zero_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_r_t_c_zero_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RTCZero}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b voidFuncPtr}) (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v voidFuncPtr\:RTCZero.h}
{\xe \v RTCZero.h\:voidFuncPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* voidFuncPtr) (void)}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file RTCZero.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SD-master/Sd2Card.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SD-master/Sd2Card.cpp}
{\xe \v Weather_Balloon/library/SD-master/Sd2Card.cpp}
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
{\f2 #include "Sd2Card.h"}\par
{\f2 #include <SPI.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Sd2Card.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_sd2_card_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b USE_SPI_LIB}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b nop}\~ asm volatile ("nop\\n\\t")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v nop\:Sd2Card.cpp}
{\xe \v Sd2Card.cpp\:nop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define nop\~ asm volatile ("nop\\n\\t")}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
nop to tune soft SPI timing \par
}{
Definition at line 40 of file Sd2Card.cpp.}\par
}
{\xe \v USE_SPI_LIB\:Sd2Card.cpp}
{\xe \v Sd2Card.cpp\:USE_SPI_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define USE_SPI_LIB}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file Sd2Card.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SD-master/Sd2Card.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SD-master/Sd2Card.h}
{\xe \v Weather_Balloon/library/SD-master/Sd2Card.h}
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Sd2PinMap.h"}\par
{\f2 #include "SdInfo.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Sd2Card.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_sd2_card_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_sd2_card_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Sd2Card}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raw access to SD and SDHC flash memory cards. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b USE_SPI_LIB}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MEGA_SOFT_SPI}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SD_PROTECT_BLOCK_ZERO}\~ 1\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SPI_FULL_SPEED} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SPI_HALF_SPEED} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SPI_QUARTER_SPEED} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CHIP_SELECT_PIN} = SS_PIN\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SPI_MOSI_PIN} = MOSI_PIN\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SPI_MISO_PIN} = MISO_PIN\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SPI_SCK_PIN} = SCK_PIN\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t const {\b SD_INIT_TIMEOUT} = 2000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t const {\b SD_ERASE_TIMEOUT} = 10000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t const {\b SD_READ_TIMEOUT} = 300\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t const {\b SD_WRITE_TIMEOUT} = 600\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_CMD0} = 0X1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_CMD8} = 0X2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_CMD17} = 0X3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_CMD24} = 0X4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_CMD25} = 0X05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_CMD58} = 0X06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_ACMD23} = 0X07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_ACMD41} = 0X08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_BAD_CSD} = 0X09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_ERASE} = 0X0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_ERASE_SINGLE_BLOCK} = 0X0B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_ERASE_TIMEOUT} = 0X0C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_READ} = 0X0D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_READ_REG} = 0X0E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_READ_TIMEOUT} = 0X0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_STOP_TRAN} = 0X10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_WRITE} = 0X11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_WRITE_BLOCK_ZERO} = 0X12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_WRITE_MULTIPLE} = 0X13\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_WRITE_PROGRAMMING} = 0X14\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_WRITE_TIMEOUT} = 0X15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_ERROR_SCK_RATE} = 0X16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_TYPE_SD1} = 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_TYPE_SD2} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b SD_CARD_TYPE_SDHC} = 3\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Sd2Card} class \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MEGA_SOFT_SPI\:Sd2Card.h}
{\xe \v Sd2Card.h\:MEGA_SOFT_SPI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MEGA_SOFT_SPI\~ 0}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define MEGA_SOFT_SPI non-zero to use software SPI on Mega Arduinos. Pins used are SS 10, MOSI 11, MISO 12, and SCK 13.\par
MEGA_SOFT_SPI allows an unmodified Adafruit GPS Shield to be used on Mega Arduinos. Software SPI works well with GPS Shield V1.1 but many SD cards will fail with GPS Shield V1.0. \par
}{
Definition at line 47 of file Sd2Card.h.}\par
}
{\xe \v SD_PROTECT_BLOCK_ZERO\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_PROTECT_BLOCK_ZERO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SD_PROTECT_BLOCK_ZERO\~ 1}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
optimize loops for hardware SPI Protect block zero from write if nonzero \par
}{
Definition at line 91 of file Sd2Card.h.}\par
}
{\xe \v USE_SPI_LIB\:Sd2Card.h}
{\xe \v Sd2Card.h\:USE_SPI_LIB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define USE_SPI_LIB}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
USE_SPI_LIB: if set, use the SPI library bundled with Arduino IDE, otherwise run with a standalone driver for AVR. \par
}{
Definition at line 38 of file Sd2Card.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v SD_CARD_ERROR_ACMD23\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_ACMD23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_ACMD23 = 0X07}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_WR_BLK_ERASE_COUNT failed \par
}{
Definition at line 115 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeStart().}\par
}
{\xe \v SD_CARD_ERROR_ACMD41\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_ACMD41}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_ACMD41 = 0X08}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card's ACMD41 initialization process timeout \par
}{
Definition at line 117 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SD_CARD_ERROR_BAD_CSD\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_BAD_CSD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_BAD_CSD = 0X09}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card returned a bad CSR version field \par
}{
Definition at line 119 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::cardSize().}\par
}
{\xe \v SD_CARD_ERROR_CMD0\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_CMD0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_CMD0 = 0X1}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
timeout error for command CMD0 \par
}{
Definition at line 103 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SD_CARD_ERROR_CMD17\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_CMD17}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_CMD17 = 0X3}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card returned an error response for CMD17 (read block) \par
}{
Definition at line 107 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::readData().}\par
}
{\xe \v SD_CARD_ERROR_CMD24\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_CMD24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_CMD24 = 0X4}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card returned an error response for CMD24 (write block) \par
}{
Definition at line 109 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeBlock().}\par
}
{\xe \v SD_CARD_ERROR_CMD25\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_CMD25}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_CMD25 = 0X05}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WRITE_MULTIPLE_BLOCKS command failed \par
}{
Definition at line 111 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeStart().}\par
}
{\xe \v SD_CARD_ERROR_CMD58\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_CMD58}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_CMD58 = 0X06}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card returned an error response for CMD58 (read OCR) \par
}{
Definition at line 113 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SD_CARD_ERROR_CMD8\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_CMD8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_CMD8 = 0X2}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CMD8 was not accepted - not a valid SD card \par
}{
Definition at line 105 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SD_CARD_ERROR_ERASE\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_ERASE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_ERASE = 0X0A}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
erase block group command failed \par
}{
Definition at line 121 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::erase().}\par
}
{\xe \v SD_CARD_ERROR_ERASE_SINGLE_BLOCK\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_ERASE_SINGLE_BLOCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_ERASE_SINGLE_BLOCK = 0X0B}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card not capable of single block erase \par
}{
Definition at line 123 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::erase().}\par
}
{\xe \v SD_CARD_ERROR_ERASE_TIMEOUT\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_ERASE_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_ERASE_TIMEOUT = 0X0C}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase sequence timed out \par
}{
Definition at line 125 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::erase().}\par
}
{\xe \v SD_CARD_ERROR_READ\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_READ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_READ = 0X0D}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card returned an error token instead of read data \par
}{
Definition at line 127 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::setSckRate().}\par
}
{\xe \v SD_CARD_ERROR_READ_REG\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_READ_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_READ_REG = 0X0E}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read CID or CSD failed \par
}{
Definition at line 129 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::readEnd().}\par
}
{\xe \v SD_CARD_ERROR_READ_TIMEOUT\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_READ_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_READ_TIMEOUT = 0X0F}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
timeout while waiting for start of read data \par
}{
Definition at line 131 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::setSckRate().}\par
}
{\xe \v SD_CARD_ERROR_SCK_RATE\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_SCK_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_SCK_RATE = 0X16}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
incorrect rate selected \par
}{
Definition at line 145 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::setSckRate().}\par
}
{\xe \v SD_CARD_ERROR_STOP_TRAN\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_STOP_TRAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_STOP_TRAN = 0X10}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card did not accept STOP_TRAN_TOKEN \par
}{
Definition at line 133 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeStop().}\par
}
{\xe \v SD_CARD_ERROR_WRITE\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_WRITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_WRITE = 0X11}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card returned an error token as a response to a write operation \par
}{
Definition at line 135 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeData().}\par
}
{\xe \v SD_CARD_ERROR_WRITE_BLOCK_ZERO\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_WRITE_BLOCK_ZERO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_WRITE_BLOCK_ZERO = 0X12}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
attempt to write protected block zero \par
}{
Definition at line 137 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeBlock(), and Sd2Card::writeStart().}\par
}
{\xe \v SD_CARD_ERROR_WRITE_MULTIPLE\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_WRITE_MULTIPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_WRITE_MULTIPLE = 0X13}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card did not go ready for a multiple block write \par
}{
Definition at line 139 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeData().}\par
}
{\xe \v SD_CARD_ERROR_WRITE_PROGRAMMING\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_WRITE_PROGRAMMING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_WRITE_PROGRAMMING = 0X14}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
card returned an error to a CMD13 status check after a write \par
}{
Definition at line 141 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeBlock().}\par
}
{\xe \v SD_CARD_ERROR_WRITE_TIMEOUT\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_ERROR_WRITE_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_ERROR_WRITE_TIMEOUT = 0X15}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
timeout occurred during write programming \par
}{
Definition at line 143 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeBlock().}\par
}
{\xe \v SD_CARD_TYPE_SD1\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_TYPE_SD1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_TYPE_SD1 = 1}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard capacity V1 SD card \par
}{
Definition at line 149 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SD_CARD_TYPE_SD2\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_TYPE_SD2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_TYPE_SD2 = 2}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Standard capacity V2 SD card \par
}{
Definition at line 151 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SD_CARD_TYPE_SDHC\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CARD_TYPE_SDHC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CARD_TYPE_SDHC = 3}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
High Capacity SD card \par
}{
Definition at line 153 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::erase(), Sd2Card::init(), Sd2Card::readData(), Sd2Card::writeBlock(), and Sd2Card::writeStart().}\par
}
{\xe \v SD_CHIP_SELECT_PIN\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_CHIP_SELECT_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SD_CHIP_SELECT_PIN = SS_PIN}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD Chip Select pin\par
Warning if this pin is redefined the hardware SS will pin will be enabled as an output by init(). An avr processor will not function as an SPI master unless SS is set to output mode.The default chip select pin for the SD card is SS. \par
}{
Definition at line 65 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SD_ERASE_TIMEOUT\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_ERASE_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t const SD_ERASE_TIMEOUT = 10000}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
erase timeout ms \par
}{
Definition at line 95 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::erase().}\par
}
{\xe \v SD_INIT_TIMEOUT\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_INIT_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t const SD_INIT_TIMEOUT = 2000}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
init timeout ms \par
}{
Definition at line 93 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SD_READ_TIMEOUT\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_READ_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t const SD_READ_TIMEOUT = 300}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
read timeout ms \par
}{
Definition at line 97 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::setSckRate().}\par
}
{\xe \v SD_WRITE_TIMEOUT\:Sd2Card.h}
{\xe \v Sd2Card.h\:SD_WRITE_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t const SD_WRITE_TIMEOUT = 600}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write time out ms \par
}{
Definition at line 99 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::writeBlock(), Sd2Card::writeData(), and Sd2Card::writeStop().}\par
}
{\xe \v SPI_FULL_SPEED\:Sd2Card.h}
{\xe \v Sd2Card.h\:SPI_FULL_SPEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SPI_FULL_SPEED = 0}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set SCK to max rate of F_CPU/2. See {\b Sd2Card::setSckRate()}. \par
}{
Definition at line 29 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SPI_HALF_SPEED\:Sd2Card.h}
{\xe \v Sd2Card.h\:SPI_HALF_SPEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SPI_HALF_SPEED = 1}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set SCK rate to F_CPU/4. See {\b Sd2Card::setSckRate()}. \par
}{
Definition at line 31 of file Sd2Card.h.}\par
{
Referenced by configure_sdcard().}\par
}
{\xe \v SPI_MISO_PIN\:Sd2Card.h}
{\xe \v Sd2Card.h\:SPI_MISO_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SPI_MISO_PIN = MISO_PIN}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Master In Slave Out pin \par
}{
Definition at line 70 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SPI_MOSI_PIN\:Sd2Card.h}
{\xe \v Sd2Card.h\:SPI_MOSI_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SPI_MOSI_PIN = MOSI_PIN}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Master Out Slave In pin \par
}{
Definition at line 68 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v SPI_QUARTER_SPEED\:Sd2Card.h}
{\xe \v Sd2Card.h\:SPI_QUARTER_SPEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SPI_QUARTER_SPEED = 2}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set SCK rate to F_CPU/8. {\b Sd2Card::setSckRate()}. \par
}{
Definition at line 33 of file Sd2Card.h.}\par
}
{\xe \v SPI_SCK_PIN\:Sd2Card.h}
{\xe \v Sd2Card.h\:SPI_SCK_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const SPI_SCK_PIN = SCK_PIN}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SPI Clock pin \par
}{
Definition at line 72 of file Sd2Card.h.}\par
{
Referenced by Sd2Card::init().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SD-master/Sd2PinMap.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SD-master/Sd2PinMap.h}
{\xe \v Weather_Balloon/library/SD-master/Sd2PinMap.h}
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_sd2_pin_map_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SD-master/SdInfo.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SD-master/SdInfo.h}
{\xe \v Weather_Balloon/library/SD-master/SdInfo.h}
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SdInfo.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_sd_info_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_sd_info_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b cid_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b csd1_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b csd2_t}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b csd_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD0} = 0X00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD8} = 0X08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD9} = 0X09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD10} = 0X0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD13} = 0X0D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD17} = 0X11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD24} = 0X18\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD25} = 0X19\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD32} = 0X20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD33} = 0X21\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD38} = 0X26\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD55} = 0X37\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b CMD58} = 0X3A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b ACMD23} = 0X17\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b ACMD41} = 0X29\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b R1_READY_STATE} = 0X00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b R1_IDLE_STATE} = 0X01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b R1_ILLEGAL_COMMAND} = 0X04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b DATA_START_BLOCK} = 0XFE\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b STOP_TRAN_TOKEN} = 0XFD\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b WRITE_MULTIPLE_TOKEN} = 0XFC\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b DATA_RES_MASK} = 0X1F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t const {\b DATA_RES_ACCEPTED} = 0X05\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v cid_t}
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct cid_t\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 86 of file SdInfo.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr unsigned{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
\cell }{always1: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
\cell }{crc: 7\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
\cell }{mdt_month: 4\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
\cell }{mdt_year_high: 4\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
\cell }{mdt_year_low:4\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
\cell }{mid\cell }{\cell }{\row }
{\qr char{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
\cell }{oid[2]\cell }{\cell }{\row }
{\qr char{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
\cell }{pnm[5]\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
\cell }{prv_m: 4\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
\cell }{prv_n: 4\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
\cell }{psn\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
\cell }{reserved: 4\cell }{\cell }{\row }
}
{\xe \v csd1_t}
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct csd1_t\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 110 of file SdInfo.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr unsigned{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
\cell }{always1: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
\cell }{c_size_high: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
\cell }{c_size_low:2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
\cell }{c_size_mid\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
\cell }{c_size_mult_high: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
\cell }{c_size_mult_low: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
\cell }{ccc_high\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
\cell }{ccc_low: 4\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
\cell }{copy: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
\cell }{crc: 7\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
\cell }{csd_ver: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
\cell }{dsr_imp: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
\cell }{erase_blk_en: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
\cell }{file_format: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
\cell }{file_format_grp: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
\cell }{nsac\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
\cell }{perm_write_protect: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
\cell }{r2w_factor: 3\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
\cell }{read_bl_len: 4\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
\cell }{read_bl_partial: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
\cell }{read_blk_misalign:1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
\cell }{reserved1: 6\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
\cell }{reserved2: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
\cell }{reserved3: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
\cell }{reserved4: 5\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
\cell }{reserved5: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
\cell }{sector_size_high: 6\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
\cell }{sector_size_low: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
\cell }{taac\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
\cell }{tmp_write_protect: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
\cell }{tran_speed\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
\cell }{vdd_r_curr_max: 3\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
\cell }{vdd_r_curr_min: 3\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
\cell }{vdd_w_cur_max: 3\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
\cell }{vdd_w_curr_min: 3\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
\cell }{wp_grp_enable: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
\cell }{wp_grp_size: 7\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
\cell }{write_bl_len_high: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
\cell }{write_bl_len_low: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
\cell }{write_blk_misalign: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
\cell }{write_partial: 1\cell }{\cell }{\row }
}
{\xe \v csd2_t}
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct csd2_t\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 171 of file SdInfo.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr unsigned{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
\cell }{always1: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
\cell }{c_size_high: 6\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
\cell }{c_size_low\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
\cell }{c_size_mid\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
\cell }{ccc_high\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
\cell }{ccc_low: 4\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
\cell }{copy: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
\cell }{crc: 7\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
\cell }{csd_ver: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
\cell }{dsr_imp: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
\cell }{erase_blk_en: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
\cell }{file_format: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
\cell }{file_format_grp: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
\cell }{nsac\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
\cell }{perm_write_protect: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
\cell }{r2w_factor: 3\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
\cell }{read_bl_len: 4\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
\cell }{read_bl_partial: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
\cell }{read_blk_misalign:1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
\cell }{reserved1: 6\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
\cell }{reserved2: 4\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
\cell }{reserved3: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
\cell }{reserved4: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
\cell }{reserved5: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
\cell }{reserved6: 5\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
\cell }{reserved7: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
\cell }{sector_size_high: 6\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
\cell }{sector_size_low: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
\cell }{taac\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
\cell }{tmp_write_protect: 1\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
\cell }{tran_speed\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
\cell }{wp_grp_enable: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
\cell }{wp_grp_size: 7\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
\cell }{write_bl_len_high: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
\cell }{write_bl_len_low: 2\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
\cell }{write_blk_misalign: 1\cell }{\cell }{\row }
{\qr unsigned{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
\cell }{write_partial: 1\cell }{\cell }{\row }
}
{\xe \v csd_t}
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
union csd_t\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 228 of file SdInfo.h.}\par
}
Collaboration diagram for csd_t:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "unioncsd__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\b csd1_t}{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
\cell }{v1\cell }{\cell }{\row }
{\qr {\b csd2_t}{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
\cell }{v2\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v ACMD23\:SdInfo.h}
{\xe \v SdInfo.h\:ACMD23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const ACMD23 = 0X17}}
\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SET_WR_BLK_ERASE_COUNT - Set the number of write blocks to be pre-erased before writing \par
}{
Definition at line 64 of file SdInfo.h.}\par
{
Referenced by Sd2Card::writeStart().}\par
}
{\xe \v ACMD41\:SdInfo.h}
{\xe \v SdInfo.h\:ACMD41}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const ACMD41 = 0X29}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SD_SEND_OP_COMD - Sends host capacity support information and activates the card's initialization process \par
}{
Definition at line 67 of file SdInfo.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v CMD0\:SdInfo.h}
{\xe \v SdInfo.h\:CMD0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD0 = 0X00}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
GO_IDLE_STATE - init card in spi mode if CS low \par
}{
Definition at line 36 of file SdInfo.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v CMD10\:SdInfo.h}
{\xe \v SdInfo.h\:CMD10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD10 = 0X0A}}
\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_CID - read the card identification information (CID register) \par
}{
Definition at line 42 of file SdInfo.h.}\par
{
Referenced by Sd2Card::readCID().}\par
}
{\xe \v CMD13\:SdInfo.h}
{\xe \v SdInfo.h\:CMD13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD13 = 0X0D}}
\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_STATUS - read the card status register \par
}{
Definition at line 44 of file SdInfo.h.}\par
{
Referenced by Sd2Card::writeBlock().}\par
}
{\xe \v CMD17\:SdInfo.h}
{\xe \v SdInfo.h\:CMD17}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD17 = 0X11}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
READ_BLOCK - read a single data block from the card \par
}{
Definition at line 46 of file SdInfo.h.}\par
{
Referenced by Sd2Card::readData().}\par
}
{\xe \v CMD24\:SdInfo.h}
{\xe \v SdInfo.h\:CMD24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD24 = 0X18}}
\par
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WRITE_BLOCK - write a single data block to the card \par
}{
Definition at line 48 of file SdInfo.h.}\par
{
Referenced by Sd2Card::writeBlock().}\par
}
{\xe \v CMD25\:SdInfo.h}
{\xe \v SdInfo.h\:CMD25}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD25 = 0X19}}
\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WRITE_MULTIPLE_BLOCK - write blocks of data until a STOP_TRANSMISSION \par
}{
Definition at line 50 of file SdInfo.h.}\par
{
Referenced by Sd2Card::writeStart().}\par
}
{\xe \v CMD32\:SdInfo.h}
{\xe \v SdInfo.h\:CMD32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD32 = 0X20}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ERASE_WR_BLK_START - sets the address of the first block to be erased \par
}{
Definition at line 52 of file SdInfo.h.}\par
{
Referenced by Sd2Card::erase().}\par
}
{\xe \v CMD33\:SdInfo.h}
{\xe \v SdInfo.h\:CMD33}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD33 = 0X21}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ERASE_WR_BLK_END - sets the address of the last block of the continuous range to be erased \par
}{
Definition at line 55 of file SdInfo.h.}\par
{
Referenced by Sd2Card::erase().}\par
}
{\xe \v CMD38\:SdInfo.h}
{\xe \v SdInfo.h\:CMD38}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD38 = 0X26}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ERASE - erase all previously selected blocks \par
}{
Definition at line 57 of file SdInfo.h.}\par
{
Referenced by Sd2Card::erase().}\par
}
{\xe \v CMD55\:SdInfo.h}
{\xe \v SdInfo.h\:CMD55}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD55 = 0X37}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
APP_CMD - escape for application specific command \par
}{
Definition at line 59 of file SdInfo.h.}\par
{
Referenced by Sd2Card::type().}\par
}
{\xe \v CMD58\:SdInfo.h}
{\xe \v SdInfo.h\:CMD58}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD58 = 0X3A}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
READ_OCR - read the OCR register of a card \par
}{
Definition at line 61 of file SdInfo.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v CMD8\:SdInfo.h}
{\xe \v SdInfo.h\:CMD8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD8 = 0X08}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_IF_COND - verify SD Memory Card interface operating condition. \par
}{
Definition at line 38 of file SdInfo.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v CMD9\:SdInfo.h}
{\xe \v SdInfo.h\:CMD9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const CMD9 = 0X09}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SEND_CSD - read the Card Specific Data (CSD register) \par
}{
Definition at line 40 of file SdInfo.h.}\par
{
Referenced by Sd2Card::readCSD().}\par
}
{\xe \v DATA_RES_ACCEPTED\:SdInfo.h}
{\xe \v SdInfo.h\:DATA_RES_ACCEPTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const DATA_RES_ACCEPTED = 0X05}}
\par
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
write data accepted token \par
}{
Definition at line 84 of file SdInfo.h.}\par
{
Referenced by Sd2Card::writeData().}\par
}
{\xe \v DATA_RES_MASK\:SdInfo.h}
{\xe \v SdInfo.h\:DATA_RES_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const DATA_RES_MASK = 0X1F}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
mask for data response tokens after a write block operation \par
}{
Definition at line 82 of file SdInfo.h.}\par
{
Referenced by Sd2Card::writeData().}\par
}
{\xe \v DATA_START_BLOCK\:SdInfo.h}
{\xe \v SdInfo.h\:DATA_START_BLOCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const DATA_START_BLOCK = 0XFE}}
\par
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
start data token for read or write single block \par
}{
Definition at line 76 of file SdInfo.h.}\par
{
Referenced by Sd2Card::setSckRate(), and Sd2Card::writeBlock().}\par
}
{\xe \v R1_IDLE_STATE\:SdInfo.h}
{\xe \v SdInfo.h\:R1_IDLE_STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const R1_IDLE_STATE = 0X01}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
status for card in the idle state \par
}{
Definition at line 72 of file SdInfo.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v R1_ILLEGAL_COMMAND\:SdInfo.h}
{\xe \v SdInfo.h\:R1_ILLEGAL_COMMAND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const R1_ILLEGAL_COMMAND = 0X04}}
\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
status bit for illegal command \par
}{
Definition at line 74 of file SdInfo.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v R1_READY_STATE\:SdInfo.h}
{\xe \v SdInfo.h\:R1_READY_STATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const R1_READY_STATE = 0X00}}
\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
status for card in the ready state \par
}{
Definition at line 70 of file SdInfo.h.}\par
{
Referenced by Sd2Card::init().}\par
}
{\xe \v STOP_TRAN_TOKEN\:SdInfo.h}
{\xe \v SdInfo.h\:STOP_TRAN_TOKEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const STOP_TRAN_TOKEN = 0XFD}}
\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stop token for write multiple blocks \par
}{
Definition at line 78 of file SdInfo.h.}\par
{
Referenced by Sd2Card::writeStop().}\par
}
{\xe \v WRITE_MULTIPLE_TOKEN\:SdInfo.h}
{\xe \v SdInfo.h\:WRITE_MULTIPLE_TOKEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t const WRITE_MULTIPLE_TOKEN = 0XFC}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
start data token for write multiple blocks \par
}{
Definition at line 80 of file SdInfo.h.}\par
{
Referenced by Sd2Card::writeData().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_LSM9DS1/src/LSM9DS1_Registers.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_LSM9DS1/src/LSM9DS1_Registers.h}
{\xe \v Weather_Balloon/library/SparkFun_LSM9DS1/src/LSM9DS1_Registers.h}
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_l_s_m9_d_s1___registers_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ACT_THS}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ACT_DUR}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_CFG_XL}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_THS_X_XL}\~ 0x07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_THS_Y_XL}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_THS_Z_XL}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_DUR_XL}\~ 0x0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REFERENCE_G}\~ 0x0B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT1_CTRL}\~ 0x0C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT2_CTRL}\~ 0x0D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WHO_AM_I_XG}\~ 0x0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG1_G}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG2_G}\~ 0x11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG3_G}\~ 0x12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ORIENT_CFG_G}\~ 0x13\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_SRC_G}\~ 0x14\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_TEMP_L}\~ 0x15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_TEMP_H}\~ 0x16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STATUS_REG_0}\~ 0x17\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_X_L_G}\~ 0x18\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_X_H_G}\~ 0x19\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Y_L_G}\~ 0x1A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Y_H_G}\~ 0x1B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Z_L_G}\~ 0x1C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Z_H_G}\~ 0x1D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG4}\~ 0x1E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG5_XL}\~ 0x1F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG6_XL}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG7_XL}\~ 0x21\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG8}\~ 0x22\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG9}\~ 0x23\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG10}\~ 0x24\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_SRC_XL}\~ 0x26\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STATUS_REG_1}\~ 0x27\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_X_L_XL}\~ 0x28\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_X_H_XL}\~ 0x29\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Y_L_XL}\~ 0x2A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Y_H_XL}\~ 0x2B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Z_L_XL}\~ 0x2C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Z_H_XL}\~ 0x2D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIFO_CTRL}\~ 0x2E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FIFO_SRC}\~ 0x2F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_CFG_G}\~ 0x30\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_THS_XH_G}\~ 0x31\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_THS_XL_G}\~ 0x32\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_THS_YH_G}\~ 0x33\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_THS_YL_G}\~ 0x34\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_THS_ZH_G}\~ 0x35\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_THS_ZL_G}\~ 0x36\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_GEN_DUR_G}\~ 0x37\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OFFSET_X_REG_L_M}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OFFSET_X_REG_H_M}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OFFSET_Y_REG_L_M}\~ 0x07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OFFSET_Y_REG_H_M}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OFFSET_Z_REG_L_M}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OFFSET_Z_REG_H_M}\~ 0x0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WHO_AM_I_M}\~ 0x0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG1_M}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG2_M}\~ 0x21\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG3_M}\~ 0x22\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG4_M}\~ 0x23\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CTRL_REG5_M}\~ 0x24\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STATUS_REG_M}\~ 0x27\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_X_L_M}\~ 0x28\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_X_H_M}\~ 0x29\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Y_L_M}\~ 0x2A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Y_H_M}\~ 0x2B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Z_L_M}\~ 0x2C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OUT_Z_H_M}\~ 0x2D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_CFG_M}\~ 0x30\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_SRC_M}\~ 0x30\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_THS_L_M}\~ 0x32\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INT_THS_H_M}\~ 0x33\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WHO_AM_I_AG_RSP}\~ 0x68\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WHO_AM_I_M_RSP}\~ 0x3D\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ACT_DUR\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:ACT_DUR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ACT_DUR\~ 0x05}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configInactivity().}\par
}
{\xe \v ACT_THS\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:ACT_THS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ACT_THS\~ 0x04}}
\par
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configInactivity().}\par
}
{\xe \v CTRL_REG10\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG10\~ 0x24}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file LSM9DS1_Registers.h.}\par
}
{\xe \v CTRL_REG1_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG1_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG1_G\~ 0x10}}
\par
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initGyro(), LSM9DS1::setGyroODR(), and LSM9DS1::setGyroScale().}\par
}
{\xe \v CTRL_REG1_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG1_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG1_M\~ 0x20}}
\par
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initMag(), and LSM9DS1::setMagODR().}\par
}
{\xe \v CTRL_REG2_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG2_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG2_G\~ 0x11}}
\par
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initGyro().}\par
}
{\xe \v CTRL_REG2_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG2_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG2_M\~ 0x21}}
\par
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initMag(), and LSM9DS1::setMagScale().}\par
}
{\xe \v CTRL_REG3_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG3_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG3_G\~ 0x12}}
\par
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initGyro().}\par
}
{\xe \v CTRL_REG3_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG3_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG3_M\~ 0x22}}
\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initMag().}\par
}
{\xe \v CTRL_REG4\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG4\~ 0x1E}}
\par
{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initGyro().}\par
}
{\xe \v CTRL_REG4_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG4_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG4_M\~ 0x23}}
\par
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initMag().}\par
}
{\xe \v CTRL_REG5_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG5_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG5_M\~ 0x24}}
\par
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initMag().}\par
}
{\xe \v CTRL_REG5_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG5_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG5_XL\~ 0x1F}}
\par
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initAccel().}\par
}
{\xe \v CTRL_REG6_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG6_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG6_XL\~ 0x20}}
\par
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initAccel(), LSM9DS1::setAccelODR(), and LSM9DS1::setAccelScale().}\par
}
{\xe \v CTRL_REG7_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG7_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG7_XL\~ 0x21}}
\par
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initAccel().}\par
}
{\xe \v CTRL_REG8\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG8\~ 0x22}}
\par
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configInt().}\par
}
{\xe \v CTRL_REG9\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:CTRL_REG9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CTRL_REG9\~ 0x23}}
\par
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::enableFIFO(), and LSM9DS1::sleepGyro().}\par
}
{\xe \v FIFO_CTRL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:FIFO_CTRL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIFO_CTRL\~ 0x2E}}
\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::setFIFO().}\par
}
{\xe \v FIFO_SRC\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:FIFO_SRC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FIFO_SRC\~ 0x2F}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::calibrate(), and LSM9DS1::getFIFOSamples().}\par
}
{\xe \v INT1_CTRL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT1_CTRL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT1_CTRL\~ 0x0C}}
\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file LSM9DS1_Registers.h.}\par
}
{\xe \v INT2_CTRL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT2_CTRL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT2_CTRL\~ 0x0D}}
\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file LSM9DS1_Registers.h.}\par
}
{\xe \v INT_CFG_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_CFG_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_CFG_M\~ 0x30}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configMagInt().}\par
}
{\xe \v INT_GEN_CFG_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_CFG_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_CFG_G\~ 0x30}}
\par
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configGyroInt().}\par
}
{\xe \v INT_GEN_CFG_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_CFG_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_CFG_XL\~ 0x06}}
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configAccelInt().}\par
}
{\xe \v INT_GEN_DUR_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_DUR_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_DUR_G\~ 0x37}}
\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configGyroThs().}\par
}
{\xe \v INT_GEN_DUR_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_DUR_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_DUR_XL\~ 0x0A}}
\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configAccelThs().}\par
}
{\xe \v INT_GEN_SRC_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_SRC_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_SRC_G\~ 0x14}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::getGyroIntSrc().}\par
}
{\xe \v INT_GEN_SRC_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_SRC_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_SRC_XL\~ 0x26}}
\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::getAccelIntSrc().}\par
}
{\xe \v INT_GEN_THS_X_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_THS_X_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_THS_X_XL\~ 0x07}}
\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configAccelThs().}\par
}
{\xe \v INT_GEN_THS_XH_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_THS_XH_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_THS_XH_G\~ 0x31}}
\par
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configGyroThs().}\par
}
{\xe \v INT_GEN_THS_XL_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_THS_XL_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_THS_XL_G\~ 0x32}}
\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file LSM9DS1_Registers.h.}\par
}
{\xe \v INT_GEN_THS_Y_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_THS_Y_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_THS_Y_XL\~ 0x08}}
\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file LSM9DS1_Registers.h.}\par
}
{\xe \v INT_GEN_THS_YH_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_THS_YH_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_THS_YH_G\~ 0x33}}
\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file LSM9DS1_Registers.h.}\par
}
{\xe \v INT_GEN_THS_YL_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_THS_YL_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_THS_YL_G\~ 0x34}}
\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file LSM9DS1_Registers.h.}\par
}
{\xe \v INT_GEN_THS_Z_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_THS_Z_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_THS_Z_XL\~ 0x09}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file LSM9DS1_Registers.h.}\par
}
{\xe \v INT_GEN_THS_ZH_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_THS_ZH_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_THS_ZH_G\~ 0x35}}
\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file LSM9DS1_Registers.h.}\par
}
{\xe \v INT_GEN_THS_ZL_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_GEN_THS_ZL_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_GEN_THS_ZL_G\~ 0x36}}
\par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file LSM9DS1_Registers.h.}\par
}
{\xe \v INT_SRC_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_SRC_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_SRC_M\~ 0x30}}
\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::getMagIntSrc().}\par
}
{\xe \v INT_THS_H_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_THS_H_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_THS_H_M\~ 0x33}}
\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configMagThs().}\par
}
{\xe \v INT_THS_L_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:INT_THS_L_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INT_THS_L_M\~ 0x32}}
\par
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::configMagThs().}\par
}
{\xe \v OFFSET_X_REG_H_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OFFSET_X_REG_H_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OFFSET_X_REG_H_M\~ 0x06}}
\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::magOffset().}\par
}
{\xe \v OFFSET_X_REG_L_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OFFSET_X_REG_L_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OFFSET_X_REG_L_M\~ 0x05}}
\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::magOffset().}\par
}
{\xe \v OFFSET_Y_REG_H_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OFFSET_Y_REG_H_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OFFSET_Y_REG_H_M\~ 0x08}}
\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OFFSET_Y_REG_L_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OFFSET_Y_REG_L_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OFFSET_Y_REG_L_M\~ 0x07}}
\par
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OFFSET_Z_REG_H_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OFFSET_Z_REG_H_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OFFSET_Z_REG_H_M\~ 0x0A}}
\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OFFSET_Z_REG_L_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OFFSET_Z_REG_L_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OFFSET_Z_REG_L_M\~ 0x09}}
\par
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file LSM9DS1_Registers.h.}\par
}
{\xe \v ORIENT_CFG_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:ORIENT_CFG_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ORIENT_CFG_G\~ 0x13}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::initGyro().}\par
}
{\xe \v OUT_TEMP_H\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_TEMP_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_TEMP_H\~ 0x16}}
\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_TEMP_L\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_TEMP_L}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_TEMP_L\~ 0x15}}
\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::readTemp().}\par
}
{\xe \v OUT_X_H_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_X_H_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_X_H_G\~ 0x19}}
\par
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_X_H_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_X_H_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_X_H_M\~ 0x29}}
\par
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_X_H_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_X_H_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_X_H_XL\~ 0x29}}
\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_X_L_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_X_L_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_X_L_G\~ 0x18}}
\par
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::readGyro().}\par
}
{\xe \v OUT_X_L_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_X_L_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_X_L_M\~ 0x28}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::readMag().}\par
}
{\xe \v OUT_X_L_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_X_L_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_X_L_XL\~ 0x28}}
\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::readAccel().}\par
}
{\xe \v OUT_Y_H_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Y_H_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Y_H_G\~ 0x1B}}
\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Y_H_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Y_H_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Y_H_M\~ 0x2B}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 98 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Y_H_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Y_H_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Y_H_XL\~ 0x2B}}
\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Y_L_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Y_L_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Y_L_G\~ 0x1A}}
\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Y_L_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Y_L_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Y_L_M\~ 0x2A}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Y_L_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Y_L_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Y_L_XL\~ 0x2A}}
\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Z_H_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Z_H_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Z_H_G\~ 0x1D}}
\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Z_H_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Z_H_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Z_H_M\~ 0x2D}}
\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Z_H_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Z_H_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Z_H_XL\~ 0x2D}}
\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Z_L_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Z_L_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Z_L_G\~ 0x1C}}
\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Z_L_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Z_L_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Z_L_M\~ 0x2C}}
\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file LSM9DS1_Registers.h.}\par
}
{\xe \v OUT_Z_L_XL\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:OUT_Z_L_XL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OUT_Z_L_XL\~ 0x2C}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file LSM9DS1_Registers.h.}\par
}
{\xe \v REFERENCE_G\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:REFERENCE_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REFERENCE_G\~ 0x0B}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file LSM9DS1_Registers.h.}\par
}
{\xe \v STATUS_REG_0\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:STATUS_REG_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STATUS_REG_0\~ 0x17}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::getInactivity().}\par
}
{\xe \v STATUS_REG_1\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:STATUS_REG_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STATUS_REG_1\~ 0x27}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::accelAvailable(), LSM9DS1::gyroAvailable(), and LSM9DS1::tempAvailable().}\par
}
{\xe \v STATUS_REG_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:STATUS_REG_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STATUS_REG_M\~ 0x27}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::magAvailable().}\par
}
{\xe \v WHO_AM_I_AG_RSP\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:WHO_AM_I_AG_RSP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WHO_AM_I_AG_RSP\~ 0x68}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::begin().}\par
}
{\xe \v WHO_AM_I_M\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:WHO_AM_I_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WHO_AM_I_M\~ 0x0F}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::begin().}\par
}
{\xe \v WHO_AM_I_M_RSP\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:WHO_AM_I_M_RSP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WHO_AM_I_M_RSP\~ 0x3D}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::begin().}\par
}
{\xe \v WHO_AM_I_XG\:LSM9DS1_Registers.h}
{\xe \v LSM9DS1_Registers.h\:WHO_AM_I_XG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WHO_AM_I_XG\~ 0x0F}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file LSM9DS1_Registers.h.}\par
{
Referenced by LSM9DS1::begin().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_LSM9DS1/src/LSM9DS1_Types.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_LSM9DS1/src/LSM9DS1_Types.h}
{\xe \v Weather_Balloon/library/SparkFun_LSM9DS1/src/LSM9DS1_Types.h}
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "LSM9DS1_Registers.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for LSM9DS1_Types.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_l_s_m9_d_s1___types_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_l_s_m9_d_s1___types_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b gyroSettings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b deviceSettings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b accelSettings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b magSettings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b temperatureSettings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IMUSettings}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b interface_mode} \{ {\b IMU_MODE_SPI}, 
{\b IMU_MODE_I2C}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b accel_scale} \{ {\b A_SCALE_2G}, 
{\b A_SCALE_16G}, 
{\b A_SCALE_4G}, 
{\b A_SCALE_8G}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b gyro_scale} \{ {\b G_SCALE_245DPS}, 
{\b G_SCALE_500DPS}, 
{\b G_SCALE_2000DPS}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b mag_scale} \{ {\b M_SCALE_4GS}, 
{\b M_SCALE_8GS}, 
{\b M_SCALE_12GS}, 
{\b M_SCALE_16GS}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b gyro_odr} \{ {\b G_ODR_PD}, 
{\b G_ODR_149}, 
{\b G_ODR_595}, 
{\b G_ODR_119}, 
{\b G_ODR_238}, 
{\b G_ODR_476}, 
{\b G_ODR_952}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b accel_odr} \{ {\b XL_POWER_DOWN}, 
{\b XL_ODR_10}, 
{\b XL_ODR_50}, 
{\b XL_ODR_119}, 
{\b XL_ODR_238}, 
{\b XL_ODR_476}, 
{\b XL_ODR_952}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b accel_abw} \{ {\b A_ABW_408}, 
{\b A_ABW_211}, 
{\b A_ABW_105}, 
{\b A_ABW_50}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b mag_odr} \{ {\b M_ODR_0625}, 
{\b M_ODR_125}, 
{\b M_ODR_250}, 
{\b M_ODR_5}, 
{\b M_ODR_10}, 
{\b M_ODR_20}, 
{\b M_ODR_40}, 
{\b M_ODR_80}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b interrupt_select} \{ {\b XG_INT1} = INT1_CTRL, 
{\b XG_INT2} = INT2_CTRL
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b interrupt_generators} \{ {\b INT_DRDY_XL} = (1<<0), 
{\b INT_DRDY_G} = (1<<1), 
{\b INT1_BOOT} = (1<<2), 
{\b INT2_DRDY_TEMP} = (1<<2), 
{\b INT_FTH} = (1<<3), 
{\b INT_OVR} = (1<<4), 
{\b INT_FSS5} = (1<<5), 
{\b INT_IG_XL} = (1<<6), 
{\b INT1_IG_G} = (1<<7), 
{\b INT2_INACT} = (1<<7)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b accel_interrupt_generator} \{ {\b XLIE_XL} = (1<<0), 
{\b XHIE_XL} = (1<<1), 
{\b YLIE_XL} = (1<<2), 
{\b YHIE_XL} = (1<<3), 
{\b ZLIE_XL} = (1<<4), 
{\b ZHIE_XL} = (1<<5), 
{\b GEN_6D} = (1<<6)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b gyro_interrupt_generator} \{ {\b XLIE_G} = (1<<0), 
{\b XHIE_G} = (1<<1), 
{\b YLIE_G} = (1<<2), 
{\b YHIE_G} = (1<<3), 
{\b ZLIE_G} = (1<<4), 
{\b ZHIE_G} = (1<<5)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b mag_interrupt_generator} \{ {\b ZIEN} = (1<<5), 
{\b YIEN} = (1<<6), 
{\b XIEN} = (1<<7)
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b h_lactive} \{ {\b INT_ACTIVE_HIGH}, 
{\b INT_ACTIVE_LOW}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b pp_od} \{ {\b INT_PUSH_PULL}, 
{\b INT_OPEN_DRAIN}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b fifoMode_type} \{ {\b FIFO_OFF} = 0, 
{\b FIFO_THS} = 1, 
{\b FIFO_CONT_TRIGGER} = 3, 
{\b FIFO_OFF_TRIGGER} = 4, 
{\b FIFO_CONT} = 5
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v gyroSettings}
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct gyroSettings\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 177 of file LSM9DS1_Types.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
\cell }{bandwidth\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
\cell }{enabled\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
\cell }{enableX\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
\cell }{enableY\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
\cell }{enableZ\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
\cell }{flipX\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
\cell }{flipY\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
\cell }{flipZ\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
\cell }{HPFCutoff\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
\cell }{HPFEnable\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
\cell }{latchInterrupt\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
\cell }{lowPowerEnable\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
\cell }{orientation\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
\cell }{sampleRate\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
\cell }{scale\cell }{\cell }{\row }
}
{\xe \v deviceSettings}
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct deviceSettings\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 198 of file LSM9DS1_Types.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
\cell }{agAddress\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
\cell }{commInterface\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
\cell }{mAddress\cell }{\cell }{\row }
}
{\xe \v accelSettings}
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct accelSettings\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 205 of file LSM9DS1_Types.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr int8_t{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
\cell }{bandwidth\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
\cell }{enabled\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
\cell }{enableX\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
\cell }{enableY\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
\cell }{enableZ\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
\cell }{highResBandwidth\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
\cell }{highResEnable\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
\cell }{sampleRate\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
\cell }{scale\cell }{\cell }{\row }
}
{\xe \v magSettings}
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct magSettings\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 220 of file LSM9DS1_Types.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
\cell }{enabled\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
\cell }{lowPowerEnable\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
\cell }{operatingMode\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
\cell }{sampleRate\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
\cell }{scale\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
\cell }{tempCompensationEnable\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
\cell }{XYPerformance\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
\cell }{ZPerformance\cell }{\cell }{\row }
}
{\xe \v temperatureSettings}
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct temperatureSettings\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 234 of file LSM9DS1_Types.h.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
\cell }{enabled\cell }{\cell }{\row }
}
{\xe \v IMUSettings}
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct IMUSettings\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 240 of file LSM9DS1_Types.h.}\par
}
Collaboration diagram for IMUSettings:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_i_m_u_settings__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr {\b accelSettings}{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
\cell }{accel\cell }{\cell }{\row }
{\qr {\b deviceSettings}{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
\cell }{device\cell }{\cell }{\row }
{\qr {\b gyroSettings}{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
\cell }{gyro\cell }{\cell }{\row }
{\qr {\b magSettings}{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
\cell }{mag\cell }{\cell }{\row }
{\qr {\b temperatureSettings}{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
\cell }{temp\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v accel_abw\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:accel_abw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b accel_abw}}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v A_ABW_408\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:A_ABW_408}
{\b {\i A_ABW_408{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
}}  \par
{\xe \v A_ABW_211\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:A_ABW_211}
{\b {\i A_ABW_211{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
}}  \par
{\xe \v A_ABW_105\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:A_ABW_105}
{\b {\i A_ABW_105{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
}}  \par
{\xe \v A_ABW_50\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:A_ABW_50}
{\b {\i A_ABW_50{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
}}  \par
\par
}{
Definition at line 86 of file LSM9DS1_Types.h.}\par
}
{\xe \v accel_interrupt_generator\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:accel_interrupt_generator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b accel_interrupt_generator}}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v XLIE_XL\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XLIE_XL}
{\b {\i XLIE_XL{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
}}  \par
{\xe \v XHIE_XL\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XHIE_XL}
{\b {\i XHIE_XL{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
}}  \par
{\xe \v YLIE_XL\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:YLIE_XL}
{\b {\i YLIE_XL{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
}}  \par
{\xe \v YHIE_XL\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:YHIE_XL}
{\b {\i YHIE_XL{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
}}  \par
{\xe \v ZLIE_XL\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:ZLIE_XL}
{\b {\i ZLIE_XL{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
}}  \par
{\xe \v ZHIE_XL\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:ZHIE_XL}
{\b {\i ZHIE_XL{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
}}  \par
{\xe \v GEN_6D\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:GEN_6D}
{\b {\i GEN_6D{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
}}  \par
\par
}{
Definition at line 128 of file LSM9DS1_Types.h.}\par
}
{\xe \v accel_odr\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:accel_odr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b accel_odr}}}
\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v XL_POWER_DOWN\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XL_POWER_DOWN}
{\b {\i XL_POWER_DOWN{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
}}  \par
{\xe \v XL_ODR_10\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XL_ODR_10}
{\b {\i XL_ODR_10{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
}}  \par
{\xe \v XL_ODR_50\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XL_ODR_50}
{\b {\i XL_ODR_50{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
}}  \par
{\xe \v XL_ODR_119\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XL_ODR_119}
{\b {\i XL_ODR_119{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
}}  \par
{\xe \v XL_ODR_238\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XL_ODR_238}
{\b {\i XL_ODR_238{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
}}  \par
{\xe \v XL_ODR_476\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XL_ODR_476}
{\b {\i XL_ODR_476{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
}}  \par
{\xe \v XL_ODR_952\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XL_ODR_952}
{\b {\i XL_ODR_952{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
}}  \par
\par
}{
Definition at line 74 of file LSM9DS1_Types.h.}\par
}
{\xe \v accel_scale\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:accel_scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b accel_scale}}}
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v A_SCALE_2G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:A_SCALE_2G}
{\b {\i A_SCALE_2G{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
}}  \par
{\xe \v A_SCALE_16G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:A_SCALE_16G}
{\b {\i A_SCALE_16G{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
}}  \par
{\xe \v A_SCALE_4G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:A_SCALE_4G}
{\b {\i A_SCALE_4G{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
}}  \par
{\xe \v A_SCALE_8G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:A_SCALE_8G}
{\b {\i A_SCALE_8G{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
}}  \par
\par
}{
Definition at line 36 of file LSM9DS1_Types.h.}\par
}
{\xe \v fifoMode_type\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:fifoMode_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b fifoMode_type}}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v FIFO_OFF\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:FIFO_OFF}
{\b {\i FIFO_OFF{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
}}  \par
{\xe \v FIFO_THS\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:FIFO_THS}
{\b {\i FIFO_THS{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
}}  \par
{\xe \v FIFO_CONT_TRIGGER\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:FIFO_CONT_TRIGGER}
{\b {\i FIFO_CONT_TRIGGER{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
}}  \par
{\xe \v FIFO_OFF_TRIGGER\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:FIFO_OFF_TRIGGER}
{\b {\i FIFO_OFF_TRIGGER{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
}}  \par
{\xe \v FIFO_CONT\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:FIFO_CONT}
{\b {\i FIFO_CONT{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
}}  \par
\par
}{
Definition at line 168 of file LSM9DS1_Types.h.}\par
}
{\xe \v gyro_interrupt_generator\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:gyro_interrupt_generator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b gyro_interrupt_generator}}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v XLIE_G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XLIE_G}
{\b {\i XLIE_G{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
}}  \par
{\xe \v XHIE_G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XHIE_G}
{\b {\i XHIE_G{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
}}  \par
{\xe \v YLIE_G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:YLIE_G}
{\b {\i YLIE_G{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
}}  \par
{\xe \v YHIE_G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:YHIE_G}
{\b {\i YHIE_G{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
}}  \par
{\xe \v ZLIE_G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:ZLIE_G}
{\b {\i ZLIE_G{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
}}  \par
{\xe \v ZHIE_G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:ZHIE_G}
{\b {\i ZHIE_G{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
}}  \par
\par
}{
Definition at line 139 of file LSM9DS1_Types.h.}\par
}
{\xe \v gyro_odr\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:gyro_odr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b gyro_odr}}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v G_ODR_PD\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_ODR_PD}
{\b {\i G_ODR_PD{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
}}  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TODO. \par
}{\xe \v G_ODR_149\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_ODR_149}
{\b {\i G_ODR_149{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
}}  \par
{\xe \v G_ODR_595\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_ODR_595}
{\b {\i G_ODR_595{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
}}  \par
{\xe \v G_ODR_119\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_ODR_119}
{\b {\i G_ODR_119{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
}}  \par
{\xe \v G_ODR_238\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_ODR_238}
{\b {\i G_ODR_238{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
}}  \par
{\xe \v G_ODR_476\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_ODR_476}
{\b {\i G_ODR_476{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
}}  \par
{\xe \v G_ODR_952\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_ODR_952}
{\b {\i G_ODR_952{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
}}  \par
\par
}{
Definition at line 62 of file LSM9DS1_Types.h.}\par
}
{\xe \v gyro_scale\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:gyro_scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b gyro_scale}}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v G_SCALE_245DPS\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_SCALE_245DPS}
{\b {\i G_SCALE_245DPS{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
}}  \par
{\xe \v G_SCALE_500DPS\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_SCALE_500DPS}
{\b {\i G_SCALE_500DPS{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
}}  \par
{\xe \v G_SCALE_2000DPS\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:G_SCALE_2000DPS}
{\b {\i G_SCALE_2000DPS{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
}}  \par
\par
}{
Definition at line 45 of file LSM9DS1_Types.h.}\par
}
{\xe \v h_lactive\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:h_lactive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b h_lactive}}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v INT_ACTIVE_HIGH\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_ACTIVE_HIGH}
{\b {\i INT_ACTIVE_HIGH{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
}}  \par
{\xe \v INT_ACTIVE_LOW\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_ACTIVE_LOW}
{\b {\i INT_ACTIVE_LOW{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
}}  \par
\par
}{
Definition at line 156 of file LSM9DS1_Types.h.}\par
}
{\xe \v interface_mode\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:interface_mode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b interface_mode}}}
\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v IMU_MODE_SPI\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:IMU_MODE_SPI}
{\b {\i IMU_MODE_SPI{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
}}  \par
{\xe \v IMU_MODE_I2C\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:IMU_MODE_I2C}
{\b {\i IMU_MODE_I2C{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
}}  \par
\par
}{
Definition at line 29 of file LSM9DS1_Types.h.}\par
}
{\xe \v interrupt_generators\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:interrupt_generators}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b interrupt_generators}}}
\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v INT_DRDY_XL\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_DRDY_XL}
{\b {\i INT_DRDY_XL{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
}}  \par
{\xe \v INT_DRDY_G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_DRDY_G}
{\b {\i INT_DRDY_G{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
}}  \par
{\xe \v INT1_BOOT\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT1_BOOT}
{\b {\i INT1_BOOT{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
}}  \par
{\xe \v INT2_DRDY_TEMP\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT2_DRDY_TEMP}
{\b {\i INT2_DRDY_TEMP{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
}}  \par
{\xe \v INT_FTH\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_FTH}
{\b {\i INT_FTH{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
}}  \par
{\xe \v INT_OVR\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_OVR}
{\b {\i INT_OVR{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
}}  \par
{\xe \v INT_FSS5\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_FSS5}
{\b {\i INT_FSS5{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
}}  \par
{\xe \v INT_IG_XL\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_IG_XL}
{\b {\i INT_IG_XL{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
}}  \par
{\xe \v INT1_IG_G\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT1_IG_G}
{\b {\i INT1_IG_G{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
}}  \par
{\xe \v INT2_INACT\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT2_INACT}
{\b {\i INT2_INACT{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
}}  \par
\par
}{
Definition at line 114 of file LSM9DS1_Types.h.}\par
}
{\xe \v interrupt_select\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:interrupt_select}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b interrupt_select}}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v XG_INT1\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XG_INT1}
{\b {\i XG_INT1{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
}}  \par
{\xe \v XG_INT2\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XG_INT2}
{\b {\i XG_INT2{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
}}  \par
\par
}{
Definition at line 108 of file LSM9DS1_Types.h.}\par
}
{\xe \v mag_interrupt_generator\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:mag_interrupt_generator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b mag_interrupt_generator}}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v ZIEN\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:ZIEN}
{\b {\i ZIEN{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
}}  \par
{\xe \v YIEN\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:YIEN}
{\b {\i YIEN{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
}}  \par
{\xe \v XIEN\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:XIEN}
{\b {\i XIEN{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
}}  \par
\par
}{
Definition at line 149 of file LSM9DS1_Types.h.}\par
}
{\xe \v mag_odr\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:mag_odr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b mag_odr}}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v M_ODR_0625\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_ODR_0625}
{\b {\i M_ODR_0625{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
}}  \par
{\xe \v M_ODR_125\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_ODR_125}
{\b {\i M_ODR_125{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
}}  \par
{\xe \v M_ODR_250\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_ODR_250}
{\b {\i M_ODR_250{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
}}  \par
{\xe \v M_ODR_5\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_ODR_5}
{\b {\i M_ODR_5{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
}}  \par
{\xe \v M_ODR_10\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_ODR_10}
{\b {\i M_ODR_10{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
}}  \par
{\xe \v M_ODR_20\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_ODR_20}
{\b {\i M_ODR_20{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
}}  \par
{\xe \v M_ODR_40\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_ODR_40}
{\b {\i M_ODR_40{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
}}  \par
{\xe \v M_ODR_80\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_ODR_80}
{\b {\i M_ODR_80{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
}}  \par
\par
}{
Definition at line 96 of file LSM9DS1_Types.h.}\par
}
{\xe \v mag_scale\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:mag_scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b mag_scale}}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v M_SCALE_4GS\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_SCALE_4GS}
{\b {\i M_SCALE_4GS{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
}}  \par
{\xe \v M_SCALE_8GS\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_SCALE_8GS}
{\b {\i M_SCALE_8GS{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
}}  \par
{\xe \v M_SCALE_12GS\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_SCALE_12GS}
{\b {\i M_SCALE_12GS{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
}}  \par
{\xe \v M_SCALE_16GS\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:M_SCALE_16GS}
{\b {\i M_SCALE_16GS{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
}}  \par
\par
}{
Definition at line 53 of file LSM9DS1_Types.h.}\par
}
{\xe \v pp_od\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:pp_od}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b pp_od}}}
\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v INT_PUSH_PULL\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_PUSH_PULL}
{\b {\i INT_PUSH_PULL{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
}}  \par
{\xe \v INT_OPEN_DRAIN\:LSM9DS1_Types.h}
{\xe \v LSM9DS1_Types.h\:INT_OPEN_DRAIN}
{\b {\i INT_OPEN_DRAIN{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
}}  \par
\par
}{
Definition at line 162 of file LSM9DS1_Types.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp}
{\xe \v Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.cpp}
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "SparkFunLSM9DS1.h"}\par
{\f2 #include "LSM9DS1_Registers.h"}\par
{\f2 #include "LSM9DS1_Types.h"}\par
{\f2 #include <Wire.h>}\par
{\f2 #include <SPI.h>}\par
{\f2 #include "WProgram.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SparkFunLSM9DS1.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_spark_fun_l_s_m9_d_s1_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LSM9DS1_COMMUNICATION_TIMEOUT}\~ 1000\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b magSensitivity} [4] = \{0.00014, 0.00029, 0.00043, 0.00058\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v LSM9DS1_COMMUNICATION_TIMEOUT\:SparkFunLSM9DS1.cpp}
{\xe \v SparkFunLSM9DS1.cpp\:LSM9DS1_COMMUNICATION_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LSM9DS1_COMMUNICATION_TIMEOUT\~ 1000}}
\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file SparkFunLSM9DS1.cpp.}\par
{
Referenced by LSM9DS1::I2CreadByte(), and LSM9DS1::I2CreadBytes().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v magSensitivity\:SparkFunLSM9DS1.cpp}
{\xe \v SparkFunLSM9DS1.cpp\:magSensitivity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float magSensitivity[4] = \{0.00014, 0.00029, 0.00043, 0.00058\}}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file SparkFunLSM9DS1.cpp.}\par
{
Referenced by LSM9DS1::calcmRes().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h}
{\xe \v Weather_Balloon/library/SparkFun_LSM9DS1/src/SparkFunLSM9DS1.h}
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
{\f2 #include "pins_arduino.h"}\par
{\f2 #include "LSM9DS1_Registers.h"}\par
{\f2 #include "LSM9DS1_Types.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SparkFunLSM9DS1.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_spark_fun_l_s_m9_d_s1_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_spark_fun_l_s_m9_d_s1_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LSM9DS1}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LSM9DS1_AG_ADDR}(sa0)\~ ((sa0) == 0 ? 0x6A : 0x6B)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LSM9DS1_M_ADDR}(sa1)\~ ((sa1) == 0 ? 0x1C : 0x1E)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b lsm9ds1_axis} \{ {\b X_AXIS}, 
{\b Y_AXIS}, 
{\b Z_AXIS}, 
{\b ALL_AXIS}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v LSM9DS1_AG_ADDR\:SparkFunLSM9DS1.h}
{\xe \v SparkFunLSM9DS1.h\:LSM9DS1_AG_ADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LSM9DS1_AG_ADDR( sa0)\~ ((sa0) == 0 ? 0x6A : 0x6B)}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file SparkFunLSM9DS1.h.}\par
{
Referenced by LSM9DS1::LSM9DS1().}\par
}
{\xe \v LSM9DS1_M_ADDR\:SparkFunLSM9DS1.h}
{\xe \v SparkFunLSM9DS1.h\:LSM9DS1_M_ADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LSM9DS1_M_ADDR( sa1)\~ ((sa1) == 0 ? 0x1C : 0x1E)}}
\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file SparkFunLSM9DS1.h.}\par
{
Referenced by LSM9DS1::LSM9DS1().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v lsm9ds1_axis\:SparkFunLSM9DS1.h}
{\xe \v SparkFunLSM9DS1.h\:lsm9ds1_axis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b lsm9ds1_axis}}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v X_AXIS\:SparkFunLSM9DS1.h}
{\xe \v SparkFunLSM9DS1.h\:X_AXIS}
{\b {\i X_AXIS{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
}}  \par
{\xe \v Y_AXIS\:SparkFunLSM9DS1.h}
{\xe \v SparkFunLSM9DS1.h\:Y_AXIS}
{\b {\i Y_AXIS{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
}}  \par
{\xe \v Z_AXIS\:SparkFunLSM9DS1.h}
{\xe \v SparkFunLSM9DS1.h\:Z_AXIS}
{\b {\i Z_AXIS{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
}}  \par
{\xe \v ALL_AXIS\:SparkFunLSM9DS1.h}
{\xe \v SparkFunLSM9DS1.h\:ALL_AXIS}
{\b {\i ALL_AXIS{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
}}  \par
\par
}{
Definition at line 38 of file SparkFunLSM9DS1.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp}
{\xe \v Weather_Balloon/library/SparkFun_MAX17043/examples/MAX17043_Simple.cpp}
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "SparkFunMAX17043/SparkFunMAX17043.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for MAX17043_Simple.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_a_x17043___simple_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setup} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loop} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b voltage} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soc} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alert}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v loop\:MAX17043_Simple.cpp}
{\xe \v MAX17043_Simple.cpp\:loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loop ()}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file MAX17043_Simple.cpp.}\par
{
References alert, MAX17043::getAlert(), MAX17043::getSOC(), MAX17043::getVoltage(), lipo, soc, and voltage.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_a_x17043___simple_8cpp_afe461d27b9c48d5921c00d521181f12f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setup\:MAX17043_Simple.cpp}
{\xe \v MAX17043_Simple.cpp\:setup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setup ()}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file MAX17043_Simple.cpp.}\par
{
References alert, MAX17043::begin(), lipo, MAX17043::quickStart(), MAX17043::setThreshold(), soc, and voltage.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_m_a_x17043___simple_8cpp_a4fc01d736fe50cf5b977f755b675f11d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v alert\:MAX17043_Simple.cpp}
{\xe \v MAX17043_Simple.cpp\:alert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool alert}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file MAX17043_Simple.cpp.}\par
{
Referenced by loop(), and setup().}\par
}
{\xe \v soc\:MAX17043_Simple.cpp}
{\xe \v MAX17043_Simple.cpp\:soc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soc = 0}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file MAX17043_Simple.cpp.}\par
{
Referenced by MAX17043::getSOC(), loop(), and setup().}\par
}
{\xe \v voltage\:MAX17043_Simple.cpp}
{\xe \v MAX17043_Simple.cpp\:voltage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double voltage = 0}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file MAX17043_Simple.cpp.}\par
{
Referenced by loop(), and setup().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_MAX17043/SparkFunMAX17043.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_MAX17043/SparkFunMAX17043.cpp}
{\xe \v Weather_Balloon/library/SparkFun_MAX17043/SparkFunMAX17043.cpp}
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "SparkFunMAX17043.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SparkFunMAX17043.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_spark_fun_m_a_x17043_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_VCELL}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_SOC}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_MODE}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_VERSION}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_CONFIG}\~ 0x0C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_COMMAND}\~ 0xFE\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_CONFIG_SLEEP}\~ 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_CONFIG_ALERT}\~ 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_CONFIG_THRESHOLD}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_MODE_QUICKSTART}\~ 0x4000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_COMMAND_POR}\~ 0x5400\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX17043_ADDRESS}\~ 0x36\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MAX17043} {\b lipo}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MAX17043_ADDRESS\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_ADDRESS\~ 0x36}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file SparkFunMAX17043.cpp.}\par
{
Referenced by MAX17043::setCompensation().}\par
}
{\xe \v MAX17043_COMMAND\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_COMMAND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_COMMAND\~ 0xFE}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file SparkFunMAX17043.cpp.}\par
{
Referenced by MAX17043::reset().}\par
}
{\xe \v MAX17043_COMMAND_POR\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_COMMAND_POR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_COMMAND_POR\~ 0x5400}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file SparkFunMAX17043.cpp.}\par
{
Referenced by MAX17043::reset().}\par
}
{\xe \v MAX17043_CONFIG\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_CONFIG\~ 0x0C}}
\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file SparkFunMAX17043.cpp.}\par
{
Referenced by MAX17043::clearAlert(), MAX17043::getAlert(), MAX17043::getCompensation(), MAX17043::getConfigRegister(), MAX17043::getThreshold(), MAX17043::setCompensation(), MAX17043::setThreshold(), MAX17043::sleep(), and MAX17043::wake().}\par
}
{\xe \v MAX17043_CONFIG_ALERT\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_CONFIG_ALERT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_CONFIG_ALERT\~ 5}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file SparkFunMAX17043.cpp.}\par
}
{\xe \v MAX17043_CONFIG_SLEEP\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_CONFIG_SLEEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_CONFIG_SLEEP\~ 7}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file SparkFunMAX17043.cpp.}\par
}
{\xe \v MAX17043_CONFIG_THRESHOLD\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_CONFIG_THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_CONFIG_THRESHOLD\~ 0}}
\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file SparkFunMAX17043.cpp.}\par
}
{\xe \v MAX17043_MODE\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_MODE\~ 0x06}}
\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file SparkFunMAX17043.cpp.}\par
{
Referenced by MAX17043::quickStart().}\par
}
{\xe \v MAX17043_MODE_QUICKSTART\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_MODE_QUICKSTART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_MODE_QUICKSTART\~ 0x4000}}
\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file SparkFunMAX17043.cpp.}\par
{
Referenced by MAX17043::quickStart().}\par
}
{\xe \v MAX17043_SOC\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_SOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_SOC\~ 0x04}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file SparkFunMAX17043.cpp.}\par
{
Referenced by MAX17043::getSOC().}\par
}
{\xe \v MAX17043_VCELL\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_VCELL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_VCELL\~ 0x02}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 27 of file SparkFunMAX17043.cpp.}\par
{
Referenced by MAX17043::getVoltage().}\par
}
{\xe \v MAX17043_VERSION\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:MAX17043_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX17043_VERSION\~ 0x08}}
\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file SparkFunMAX17043.cpp.}\par
{
Referenced by MAX17043::getVersion().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v lipo\:SparkFunMAX17043.cpp}
{\xe \v SparkFunMAX17043.cpp\:lipo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MAX17043} lipo}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 242 of file SparkFunMAX17043.cpp.}\par
{
Referenced by loop(), and setup().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/SparkFun_MAX17043/SparkFunMAX17043.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/SparkFun_MAX17043/SparkFunMAX17043.h}
{\xe \v Weather_Balloon/library/SparkFun_MAX17043/SparkFunMAX17043.h}
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
{\f2 #include <Wire.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for SparkFunMAX17043.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_spark_fun_m_a_x17043_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_spark_fun_m_a_x17043_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MAX17043}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MAX17043} {\b lipo}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v lipo\:SparkFunMAX17043.h}
{\xe \v SparkFunMAX17043.h\:lipo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MAX17043} lipo}}
\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 242 of file SparkFunMAX17043.cpp.}\par
{
Referenced by loop(), and setup().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Time-master/DateStrings.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Time-master/DateStrings.cpp}
{\xe \v Weather_Balloon/library/Time-master/DateStrings.cpp}
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string.h>}\par
{\f2 #include "TimeLib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for DateStrings.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_date_strings_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PROGMEM}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PGM_P}\~ const char *\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_byte}(addr)\~ (*(const unsigned char *)(addr))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pgm_read_word}(addr)\~ (*(const unsigned char **)(addr))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b strcpy_P}(dest,  src)\~ strcpy((dest), (src))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b dt_SHORT_STR_LEN}\~ 3\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b monthStr} (uint8_t {\b month})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b monthShortStr} (uint8_t {\b month})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b dayStr} (uint8_t {\b day})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b dayShortStr} (uint8_t {\b day})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char monthStr0[] {\b PROGMEM} = ""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b PROGMEM} char *const {\b PROGMEM} {\b monthNames_P} []\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b PROGMEM} char *const {\b PROGMEM} {\b dayNames_P} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v dt_SHORT_STR_LEN\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:dt_SHORT_STR_LEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define dt_SHORT_STR_LEN\~ 3}}
\par
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 26 of file DateStrings.cpp.}\par
{
Referenced by dayShortStr(), and monthShortStr().}\par
}
{\xe \v PGM_P\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:PGM_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PGM_P\~ const char *}}
\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file DateStrings.cpp.}\par
{
Referenced by dayStr(), and monthStr().}\par
}
{\xe \v pgm_read_byte\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:pgm_read_byte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_byte( addr)\~ (*(const unsigned char *)(addr))}}
\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 18 of file DateStrings.cpp.}\par
{
Referenced by dayShortStr(), and monthShortStr().}\par
}
{\xe \v pgm_read_word\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:pgm_read_word}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pgm_read_word( addr)\~ (*(const unsigned char **)(addr))}}
\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file DateStrings.cpp.}\par
{
Referenced by dayStr(), and monthStr().}\par
}
{\xe \v PROGMEM\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:PROGMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PROGMEM}}
\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 16 of file DateStrings.cpp.}\par
}
{\xe \v strcpy_P\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:strcpy_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define strcpy_P( dest,  src)\~ strcpy((dest), (src))}}
\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file DateStrings.cpp.}\par
{
Referenced by dayStr(), and monthStr().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v dayShortStr\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:dayShortStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* dayShortStr (uint8_t  {\i day})}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file DateStrings.cpp.}\par
{
References dt_SHORT_STR_LEN, i, and pgm_read_byte.}\par
}
{\xe \v dayStr\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:dayStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* dayStr (uint8_t  {\i day})}}
\par
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file DateStrings.cpp.}\par
{
References dayNames_P, PGM_P, pgm_read_word, and strcpy_P.}\par
}
{\xe \v monthShortStr\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:monthShortStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* monthShortStr (uint8_t  {\i month})}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file DateStrings.cpp.}\par
{
References dt_SHORT_STR_LEN, i, and pgm_read_byte.}\par
}
{\xe \v monthStr\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:monthStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* monthStr (uint8_t  {\i month})}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file DateStrings.cpp.}\par
{
References monthNames_P, PGM_P, pgm_read_word, and strcpy_P.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v dayNames_P\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:dayNames_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b PROGMEM} char* const {\b PROGMEM} dayNames_P[]}}
\par
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
\{\par
   dayStr0,dayStr1,dayStr2,dayStr3,dayStr4,dayStr5,dayStr6,dayStr7\par
\}\par
}
{
Definition at line 61 of file DateStrings.cpp.}\par
{
Referenced by dayStr().}\par
}
{\xe \v monthNames_P\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:monthNames_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b PROGMEM} char* const {\b PROGMEM} monthNames_P[]}}
\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
\{\par
    monthStr0,monthStr1,monthStr2,monthStr3,monthStr4,monthStr5,monthStr6,\par
    monthStr7,monthStr8,monthStr9,monthStr10,monthStr11,monthStr12\par
\}\par
}
{
Definition at line 44 of file DateStrings.cpp.}\par
{
Referenced by monthStr().}\par
}
{\xe \v PROGMEM\:DateStrings.cpp}
{\xe \v DateStrings.cpp\:PROGMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char dayShortNames_P [] PROGMEM = ""}}
\par
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file DateStrings.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Time-master/Time.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Time-master/Time.cpp}
{\xe \v Weather_Balloon/library/Time-master/Time.cpp}
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <WProgram.h>}\par
{\f2 #include "TimeLib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Time.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LEAP_YEAR}(Y)      \~ ( ((1970+Y)>0) && !((1970+Y)%4) && ( ((1970+Y)%100) || !((1970+Y)%400) ) )\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b refreshCache} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hour} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hour} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hourFormat12} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hourFormat12} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b isAM} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b isAM} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b isPM} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b isPM} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b minute} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b minute} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b second} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b second} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b day} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b day} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b weekday} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b weekday} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b month} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b month} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b year} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b year} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b breakTime} (time_t timeInput, tmElements_t &tm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
time_t {\b makeTime} (tmElements_t &tm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
time_t {\b now} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTime} (time_t t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTime} (int hr, int min, int sec, int dy, int mnth, int yr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adjustTime} (long adjustment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
timeStatus_t {\b timeStatus} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSyncProvider} (getExternalTime getTimeFunction)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSyncInterval} (time_t interval)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
getExternalTime {\b getTimePtr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v LEAP_YEAR\:Time.cpp}
{\xe \v Time.cpp\:LEAP_YEAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LEAP_YEAR( Y)\~ ( ((1970+Y)>0) && !((1970+Y)%4) && ( ((1970+Y)%100) || !((1970+Y)%400) ) )}}
\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file Time.cpp.}\par
{
Referenced by breakTime(), and makeTime().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v adjustTime\:Time.cpp}
{\xe \v Time.cpp\:adjustTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adjustTime (long  {\i adjustment})}}
\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 302 of file Time.cpp.}\par
}
{\xe \v breakTime\:Time.cpp}
{\xe \v Time.cpp\:breakTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void breakTime (time_t  {\i timeInput}, tmElements_t &  {\i tm})}}
\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file Time.cpp.}\par
{
References LEAP_YEAR, month(), and year().}\par
{
Referenced by refreshCache().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_af08cc091ce5590067f695e51bfdefd17_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_af08cc091ce5590067f695e51bfdefd17_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v day\:Time.cpp}
{\xe \v Time.cpp\:day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int day ()}}
\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file Time.cpp.}\par
{
References now().}\par
{
Referenced by DS3231::isAlarm2(), RTCZero::setAlarmDay(), DS3231::setDateTime(), RTCZero::setDay(), and TinyGPSDate::value().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a075786e0a525a2bba638889efcc42385_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a075786e0a525a2bba638889efcc42385_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v day\:Time.cpp}
{\xe \v Time.cpp\:day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int day (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file Time.cpp.}\par
{
References refreshCache().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a51dcd9f072551ba8f47449a4e7f78c29_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v hour\:Time.cpp}
{\xe \v Time.cpp\:hour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hour ()}}
\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file Time.cpp.}\par
{
References now().}\par
{
Referenced by DS3231::isAlarm2(), isPM(), DS3231::setDateTime(), and TinyGPSTime::value().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a721ff0d06e8367ee5d2c5cf1a2c40ab5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a721ff0d06e8367ee5d2c5cf1a2c40ab5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v hour\:Time.cpp}
{\xe \v Time.cpp\:hour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hour (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file Time.cpp.}\par
{
References refreshCache().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_ac4706d0cffc9e111a6c6a757b462e88e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v hourFormat12\:Time.cpp}
{\xe \v Time.cpp\:hourFormat12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hourFormat12 ()}}
\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file Time.cpp.}\par
{
References now().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a5a99d1c070206fef196539dec629443e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v hourFormat12\:Time.cpp}
{\xe \v Time.cpp\:hourFormat12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hourFormat12 (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file Time.cpp.}\par
{
References refreshCache().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a3cf3a2a5bc98d77739dd1c8c4c0909b9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isAM\:Time.cpp}
{\xe \v Time.cpp\:isAM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t isAM ()}}
\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file Time.cpp.}\par
{
References isPM(), and now().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a93f95d54044b6bea7e53d820c2b3ac45_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isAM\:Time.cpp}
{\xe \v Time.cpp\:isAM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t isAM (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file Time.cpp.}\par
{
References isPM().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a4334ceb57e1ed381be82347e196aabc6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isPM\:Time.cpp}
{\xe \v Time.cpp\:isPM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t isPM ()}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file Time.cpp.}\par
{
References now().}\par
{
Referenced by isAM().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a25dad3cd574983eff789b04781e57de8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a25dad3cd574983eff789b04781e57de8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v isPM\:Time.cpp}
{\xe \v Time.cpp\:isPM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t isPM (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file Time.cpp.}\par
{
References hour().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_af53f46c9c1e0ad141f99045e3f96d688_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v makeTime\:Time.cpp}
{\xe \v Time.cpp\:makeTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_t makeTime (tmElements_t &  {\i tm})}}
\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 204 of file Time.cpp.}\par
{
References i, and LEAP_YEAR.}\par
{
Referenced by setTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a0b205c43ee3c17d8d84a83b6f2f77bc8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v minute\:Time.cpp}
{\xe \v Time.cpp\:minute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int minute ()}}
\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file Time.cpp.}\par
{
References now().}\par
{
Referenced by DS3231::setDateTime(), and TinyGPSTime::value().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_adf618b3bac7dcfac69d4e1f5a68159b7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_adf618b3bac7dcfac69d4e1f5a68159b7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v minute\:Time.cpp}
{\xe \v Time.cpp\:minute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int minute (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file Time.cpp.}\par
{
References refreshCache().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a88285e3771bcb970424122a6ee4b40fa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v month\:Time.cpp}
{\xe \v Time.cpp\:month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int month ()}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file Time.cpp.}\par
{
References now().}\par
{
Referenced by breakTime(), DS3231::isAlarm2(), RTCZero::setAlarmMonth(), DS3231::setDateTime(), RTCZero::setMonth(), and TinyGPSDate::value().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a3f3be7ce4301fc1896efac6f0952f772_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a3f3be7ce4301fc1896efac6f0952f772_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v month\:Time.cpp}
{\xe \v Time.cpp\:month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int month (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 128 of file Time.cpp.}\par
{
References refreshCache().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a726c707dded9d78cf076554eceb956ec_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v now\:Time.cpp}
{\xe \v Time.cpp\:now}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_t now ()}}
\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 250 of file Time.cpp.}\par
{
References getTimePtr, and setTime().}\par
{
Referenced by RTC_Millis::begin(), PID::Compute(), day(), hour(), hourFormat12(), FilterTwoPole::input(), isAM(), isPM(), minute(), month(), DallasTemperature::requestTemperaturesByAddress(), second(), setSyncProvider(), FilterOnePole::test(), FilterTwoPole::test(), FilterOnePoleCascade::test(), timeStatus(), weekday(), and year().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_adea6c108853185c1d856fa38ec74992c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_adea6c108853185c1d856fa38ec74992c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v refreshCache\:Time.cpp}
{\xe \v Time.cpp\:refreshCache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void refreshCache (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file Time.cpp.}\par
{
References breakTime().}\par
{
Referenced by day(), hour(), hourFormat12(), minute(), month(), second(), weekday(), and year().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a1f13327e0831cde49d525fe035d55fd8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a1f13327e0831cde49d525fe035d55fd8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v second\:Time.cpp}
{\xe \v Time.cpp\:second}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int second ()}}
\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file Time.cpp.}\par
{
References now().}\par
{
Referenced by DS3231::setDateTime(), and TinyGPSTime::value().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_aed5657208944fe098e4e5f3380e0a1f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_aed5657208944fe098e4e5f3380e0a1f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v second\:Time.cpp}
{\xe \v Time.cpp\:second}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int second (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file Time.cpp.}\par
{
References refreshCache().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a10a4dd811353baa12dadadee7c7e5099_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setSyncInterval\:Time.cpp}
{\xe \v Time.cpp\:setSyncInterval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setSyncInterval (time_t  {\i interval})}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 318 of file Time.cpp.}\par
}
{\xe \v setSyncProvider\:Time.cpp}
{\xe \v Time.cpp\:setSyncProvider}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setSyncProvider (getExternalTime  {\i getTimeFunction})}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 312 of file Time.cpp.}\par
{
References getTimePtr, and now().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_afb0bd098acb0d2ab18392313c38c636d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setTime\:Time.cpp}
{\xe \v Time.cpp\:setTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setTime (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 274 of file Time.cpp.}\par
{
Referenced by now(), setTime(), and TinyGPSTime::TinyGPSTime().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a1ce752bee962425a697f513db46964d4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v setTime\:Time.cpp}
{\xe \v Time.cpp\:setTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setTime (int  {\i hr}, int  {\i min}, int  {\i sec}, int  {\i dy}, int  {\i mnth}, int  {\i yr})}}
\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 286 of file Time.cpp.}\par
{
References makeTime(), and setTime().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a6b60a4747bafcd553c95a2110649c31d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v timeStatus\:Time.cpp}
{\xe \v Time.cpp\:timeStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
timeStatus_t timeStatus ()}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 307 of file Time.cpp.}\par
{
References now().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a9d95a01859478796c4d60525bdaa9c59_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v weekday\:Time.cpp}
{\xe \v Time.cpp\:weekday}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int weekday ()}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file Time.cpp.}\par
{
References now().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a73117e8164575afa4e25dab22d4f3ff0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v weekday\:Time.cpp}
{\xe \v Time.cpp\:weekday}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int weekday (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file Time.cpp.}\par
{
References refreshCache().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a397d9b2a739891092b487211668b496f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v year\:Time.cpp}
{\xe \v Time.cpp\:year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int year ()}}
\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file Time.cpp.}\par
{
References now().}\par
{
Referenced by breakTime(), DS3231::isAlarm2(), RTCZero::setAlarmYear(), DS3231::setDateTime(), RTCZero::setYear(), TinyGPSDate::value(), and TinyGPSDate::year().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a98bf680dbfa28f79514ba50d33fee63f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a98bf680dbfa28f79514ba50d33fee63f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v year\:Time.cpp}
{\xe \v Time.cpp\:year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int year (time_t  {\i t})}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 137 of file Time.cpp.}\par
{
References refreshCache().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8cpp_a8608865f8292c0505e02b67fd1cf39e8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v getTimePtr\:Time.cpp}
{\xe \v Time.cpp\:getTimePtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
getExternalTime getTimePtr}}
\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 242 of file Time.cpp.}\par
{
Referenced by now(), and setSyncProvider().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Time-master/Time.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Time-master/Time.h}
{\xe \v Weather_Balloon/library/Time-master/Time.h}
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "TimeLib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Time.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/Time-master/TimeLib.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/Time-master/TimeLib.h}
{\xe \v Weather_Balloon/library/Time-master/TimeLib.h}
{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_time_lib_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/TinyGPS++.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/TinyGPSPlus-0.94b/TinyGPS++.cpp}
{\xe \v Weather_Balloon/library/TinyGPSPlus-0.94b/TinyGPS++.cpp}
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "TinyGPS++.h"}\par
{\f2 #include <string.h>}\par
{\f2 #include <ctype.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for TinyGPS++.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_tiny_g_p_s_09_09_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPRMCterm}\~ "GPRMC"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPGGAterm}\~ "GPGGA"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMBINE}(sentence_type,  term_number)\~ (((unsigned)(sentence_type) << 5) | term_number)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v _GPGGAterm\:TinyGPS++.cpp}
{\xe \v TinyGPS++.cpp\:_GPGGAterm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPGGAterm\~ "GPGGA"}}
\par
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file TinyGPS++.cpp.}\par
}
{\xe \v _GPRMCterm\:TinyGPS++.cpp}
{\xe \v TinyGPS++.cpp\:_GPRMCterm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPRMCterm\~ "GPRMC"}}
\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file TinyGPS++.cpp.}\par
}
{\xe \v COMBINE\:TinyGPS++.cpp}
{\xe \v TinyGPS++.cpp\:COMBINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMBINE( sentence_type,  term_number)\~ (((unsigned)(sentence_type) << 5) | term_number)}}
\par
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 153 of file TinyGPS++.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/library/TinyGPSPlus-0.94b/TinyGPS++.h File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/library/TinyGPSPlus-0.94b/TinyGPS++.h}
{\xe \v Weather_Balloon/library/TinyGPSPlus-0.94b/TinyGPS++.h}
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "WProgram.h"}\par
{\f2 #include <limits.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for TinyGPS++.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_tiny_g_p_s_09_09_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_tiny_g_p_s_09_09_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RawDegrees}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TinyGPSLocation}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TinyGPSDate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TinyGPSTime}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TinyGPSDecimal}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TinyGPSInteger}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TinyGPSSpeed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TinyGPSCourse}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TinyGPSAltitude}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TinyGPSCustom}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TinyGPSPlus}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPS_VERSION}\~ "0.92"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPS_MPH_PER_KNOT}\~ 1.15077945\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPS_MPS_PER_KNOT}\~ 0.51444444\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPS_KMPH_PER_KNOT}\~ 1.852\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPS_MILES_PER_METER}\~ 0.00062137112\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPS_KM_PER_METER}\~ 0.001\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPS_FEET_PER_METER}\~ 3.2808399\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GPS_MAX_FIELD_SIZE}\~ 15\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v _GPS_FEET_PER_METER\:TinyGPS++.h}
{\xe \v TinyGPS++.h\:_GPS_FEET_PER_METER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPS_FEET_PER_METER\~ 3.2808399}}
\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSAltitude::feet().}\par
}
{\xe \v _GPS_KM_PER_METER\:TinyGPS++.h}
{\xe \v TinyGPS++.h\:_GPS_KM_PER_METER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPS_KM_PER_METER\~ 0.001}}
\par
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSAltitude::kilometers().}\par
}
{\xe \v _GPS_KMPH_PER_KNOT\:TinyGPS++.h}
{\xe \v TinyGPS++.h\:_GPS_KMPH_PER_KNOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPS_KMPH_PER_KNOT\~ 1.852}}
\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSSpeed::kmph().}\par
}
{\xe \v _GPS_MAX_FIELD_SIZE\:TinyGPS++.h}
{\xe \v TinyGPS++.h\:_GPS_MAX_FIELD_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPS_MAX_FIELD_SIZE\~ 15}}
\par
{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSPlus::passedChecksum(), and TinyGPSCustom::value().}\par
}
{\xe \v _GPS_MILES_PER_METER\:TinyGPS++.h}
{\xe \v TinyGPS++.h\:_GPS_MILES_PER_METER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPS_MILES_PER_METER\~ 0.00062137112}}
\par
{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSAltitude::miles().}\par
}
{\xe \v _GPS_MPH_PER_KNOT\:TinyGPS++.h}
{\xe \v TinyGPS++.h\:_GPS_MPH_PER_KNOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPS_MPH_PER_KNOT\~ 1.15077945}}
\par
{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSSpeed::mph().}\par
}
{\xe \v _GPS_MPS_PER_KNOT\:TinyGPS++.h}
{\xe \v TinyGPS++.h\:_GPS_MPS_PER_KNOT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPS_MPS_PER_KNOT\~ 0.51444444}}
\par
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSSpeed::mps().}\par
}
{\xe \v _GPS_VERSION\:TinyGPS++.h}
{\xe \v TinyGPS++.h\:_GPS_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GPS_VERSION\~ "0.92"}}
\par
{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file TinyGPS++.h.}\par
{
Referenced by TinyGPSPlus::libraryVersion().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Weather_Balloon/Weather_Balloon.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Weather_Balloon/Weather_Balloon.cpp}
{\xe \v Weather_Balloon/Weather_Balloon.cpp}
{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
{\f2 #include <Wire.h>}\par
{\f2 #include <util/atomic.h>}\par
{\f2 #include <avr/cpufunc.h>}\par
{\f2 #include <avr/interrupt.h>}\par
{\f2 #include <avr/sleep.h>}\par
{\f2 #include <avr/power.h>}\par
{\f2 #include <avr/wdt.h>}\par
{\f2 #include "Adafruit_SI1145.h"}\par
{\f2 #include "OneWire.h"}\par
{\f2 #include "DallasTemperature.h"}\par
{\f2 #include "MAG3110.h"}\par
{\f2 #include <Adafruit_Sensor.h>}\par
{\f2 #include <Adafruit_ADXL345_U.h>}\par
{\f2 #include <MS5xxx.h>}\par
{\f2 #include "Adafruit_SHT31.h"}\par
{\f2 #include "Sd2Card.h"}\par
{\f2 #include "Adafruit_TSL2561_U.h"}\par
{\f2 #include "SparkFunMAX17043.h"}\par
{\f2 #include "SparkFunLSM9DS1.h"}\par
{\f2 #include "TinyGPS++.h"}\par
{\f2 #include "DS3231.h"}\par
{\f2 #include "PID_v1.h"}\par
{\f2 #include <EEPROM.h>}\par
{\f2 #include "EEPROM_anything.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Weather_Balloon.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sd_data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b eeprom_struct}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.found}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.pwm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.sht31}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.battery}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.ms5607}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.tsl}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.accel}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.mag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.gyro}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.geiger}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.gps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b data_struct.enabled}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ONE_WIRE_BUS}\~ 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UV_PIN}\~ A0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CO2_PIN}\~ A3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PIEZO_PIN}\~ A2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GREEN_LED}\~ 22\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b YELLOW_LED}\~ 23\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RED_LED}\~ 24\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAIN_HEATER_PIN}\~ 45\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_HEATER_PIN}\~ 44\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UV_HEATER_PIN}\~ 11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TSL2561_HEATER_PIN}\~ 46\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CUSTOM_HEATER_PIN}\~ 12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHT31_HEATER_PIN}\~ 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GEIGER_PWR_PIN}\~ 39\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SAMPLE_TIME}\~ 1000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DS18B20_RESOLUTION}\~ 11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADXL345_CORRECTION}\~ 0.911265\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LSM9DS1_M}\~ 0x1E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LSM9DS1_AG}\~ 0x6B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DECLINATION}\~ -8.58\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRINT_RAW}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_SBYTE_1}\~ 0xA0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_SBYTE_2}\~ 0xA1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_END_1}\~ 0x0D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_END_2}\~ 0x0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_RESTART}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_CONFIG_NMEA}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_CONFIG_OUT}\~ 0x09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_CONFIG_PWR}\~ 0x12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_CONFIG_WAAS}\~ 0x37\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_ACK}\~ 0x83\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_NACK}\~ 0x84\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GPS_PRECISION}\~ 2.5\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b beep_piezo} (unsigned long, unsigned long, unsigned int)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_GPS_NMEA} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_GPS_WAAS} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b find_sdcard_tail} (const uint32_t, const uint32_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b flash_landing} (uint16_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , size_t N> size_t {\b countof} (T(&array)[N])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b sd_calc_crc} (const uint8_t *src, const uint8_t block_size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_TSL2561} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISR} (PCINT1_vect)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISR} (PCINT2_vect)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISR} (INT4_vect)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ISR} (WDT_vect)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_button} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_geiger} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b compare_buffers} (uint8_t *first, uint8_t *{\b second}, uint16_t bytes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_ds18b20} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_ms5607} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_LSM9DS1} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_sht31} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_found} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_sdcard} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_PID} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b piezo_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b tsl2561_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ms5607_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sht31_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b geiger_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sd_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b gps_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ds18b20_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dof_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b led_power} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b power_sensors} (bool power)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b watchdog_sleep} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b watchdog_reset_only} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b disable_peripherals} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enter_sleep} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b location_alarm} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b count_down_led} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setup} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_GPS} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printAttitude} (float ax, float ay, float az, float mx, float my, float mz)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readSensors} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b GPS_CRC} (uint8_t *payload, uint16_t length)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adjust_heaters} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b check_battery} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b heater_control} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_sensors} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b power_control} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset_sdcard} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b EEPROM_read} (uint16_t uiAddress)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EEPROM_update} (uint16_t uiAddress, uint8_t ucData)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_configuration} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b test_logging} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b log_data} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_sdcard} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b queue_altitude} (float altitude)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b queue_pressure} (float pressure)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b check_launch} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b check_decent} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b check_landing} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b configure_write} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b check_alarms} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_serial_help} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Atmosphere} (const double alt, double &sigma, double &delta, double &theta)    \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_alt_threshold} (float altitude, String entered)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_pressure_threshold} (float pressure)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_launch_timeout} (uint32_t timeout)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_location_timeout} (uint32_t timeout)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_serial} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pet_watchdog} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loop} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DEBUG} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DEBUG_MORE} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint16_t {\b watchdog} = 10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b FT2METERS} = 0.3048\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b KELVIN2RANKINE} = 1.8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b PSF2NSM} = 47.880258\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b SCF2KCM} = 515.379\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b TZERO} = 288.15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b PZERO} = 101325.0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b RHOZERO} = 1.225\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b AZERO} = 340.294\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b hyster} = 0.5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b over_ambient} = 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b data_struct} {\b dataLog}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint16_t {\b x_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint16_t {\b y_count}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile uint16_t {\b z_count} = 0\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b geiger}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b INTERNAL_ADDR} [8] = \{0x28, 0x70, 0x95, 0x22, 0x05, 0x00, 0x00, 0xA1\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b TSL2561_ADDR} [8] = \{0x28, 0x57, 0x8C, 0x22, 0x05, 0x00, 0x00, 0x1D\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b UV_ADDR} [8] = \{0x28, 0xFF, 0xB6, 0x50, 0x6A, 0x14, 0x03, 0xB9\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b GPS_ADDR} [8] = \{0x28, 0xFF, 0x4D, 0x7F, 0x6F, 0x14, 0x04, 0x33\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b MAIN_ADDR} [8] = \{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b EXTERNAL_ADDR} [8] = \{0x28, 0xFF, 0x8C, 0x54, 0x6F, 0x14, 0x04, 0x38\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b CUSTOM_ADDR} [8] = \{0x28, 0x1B, 0x46, 0x6E, 0x00, 0x00, 0x00, 0x4D\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b main} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b internal} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b external} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b gps} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tsl2561} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b uv} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b custom} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b num_found} = 0\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b temp_sensors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b pressure_alarm} = 82553\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b altitude_alarm} = 1800\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b launched} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b decent} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b altitude_time} = 120\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b launch_time} = 120\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b location_time} = 240\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DEBUG} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DEBUG_MORE} = false\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b configuration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b pressure_alarm} = 82553\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b altitude_alarm} = 1800\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b launched} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b alarm} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b decent} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b altitude_time} = 120\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b launch_time} = 120\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b location_time} = 240\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DEBUG} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DEBUG_MORE} = false\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b default_config}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b count_at_altitude} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b pressure_hist} [120]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b altitude_hist} [120]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b pressure_hist_head} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b pressure_hist_tail} = -1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b altitude_hist_head} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b altitude_hist_tail} = -1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OneWire} {\b oneWire} ({\b ONE_WIRE_BUS})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MS5xxx} ms5607 & {\b Wire}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_SHT31} {\b sht31} = {\b Adafruit_SHT31}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_TSL2561_Unified} {\b tsl} = {\b Adafruit_TSL2561_Unified}({\b TSL2561_ADDR_FLOAT}, 12345)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MAX17043} {\b fuel_gauge}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LSM9DS1} {\b DOF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Sd2Card} {\b sdcard}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DS3231} {\b clock}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RTCDateTime} {\b date_time}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b sd_data} {\b sdcard_data}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b eeprom_struct} {\b eeprom}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSPlus} {\b gps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TinyGPSCustom} {\b vdop} ({\b gps},"GPGSA", 17)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pwm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b setpoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kp} = 176.47\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ki} = 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kd} = 1.75\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b gps_vPID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pwm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b setpoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kp} = 176.47\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ki} = 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kd} = 1.75\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b uv_vPID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pwm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b setpoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kp} = 176.47\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ki} = 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kd} = 1.75\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b tsl_vPID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pwm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b setpoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kp} = 176.47\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ki} = 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kd} = 1.75\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b sht_vPID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pwm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b setpoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kp} = 176.47\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ki} = 7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kd} = 1.75\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b custom_vPID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \{\par

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pwm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b setpoint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kp} = 352.94\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ki} = 30\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Kd} = 9\par
}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b main_vPID}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Heat_Enable} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b set_clock} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
volatile bool {\b reset_flag} = false\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v data_struct}
{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 158 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
\cell }{accel\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
\cell }{alarm\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
\cell }{battery\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
\cell }{enabled\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
\cell }{found\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
\cell }{geiger\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
\cell }{gps\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
\cell }{gyro\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
\cell }{heater_max\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
\cell }{launched\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
\cell }{mag\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
\cell }{ms5607\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
\cell }{pwm\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
\cell }{sht31\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
\cell }{temp\cell }{\cell }{\row }
{\qr struct {\b data_struct}{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
\cell }{tsl\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
\cell }{unix_time\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
\cell }{uv\cell }{\cell }{\row }
}
{\xe \v sd_data}
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct sd_data\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 416 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint32_t{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
\cell }{blocks\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
\cell }{buffer[512]\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
\cell }{crc\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
\cell }{crc_errors\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
\cell }{current_block\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
\cell }{hold_buffer[512]\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
\cell }{num_packed\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
\cell }{write_errors\cell }{\cell }{\row }
}
{\xe \v eeprom_struct}
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct eeprom_struct\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 443 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
\cell }{address\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
\cell }{queue_loc\cell }{\cell }{\row }
}
{\xe \v data_struct.found}
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.found\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 159 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
\cell }{DS18B20\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
\cell }{GPS\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
\cell }{LSM9DS1\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
\cell }{MS5607\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
\cell }{SHT31\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
\cell }{TSL2561\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
\cell }{UV\cell }{\cell }{\row }
}
{\xe \v data_struct.temp}
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.temp\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 182 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
\cell }{clock\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
\cell }{custom\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
\cell }{external\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
\cell }{gps\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
\cell }{internal\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
\cell }{main\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
\cell }{ms5607\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
\cell }{sht31\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
\cell }{tsl2561\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
\cell }{uv\cell }{\cell }{\row }
}
{\xe \v data_struct.pwm}
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.pwm\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 196 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
\cell }{gps\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
\cell }{main\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
\cell }{sht31\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
\cell }{tsl2561\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
\cell }{uv\cell }{\cell }{\row }
}
{\xe \v data_struct.sht31}
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.sht31\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 200 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
\cell }{humidity\cell }{\cell }{\row }
}
{\xe \v data_struct.battery}
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.battery\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 209 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
\cell }{soc\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
\cell }{voltage\cell }{\cell }{\row }
}
{\xe \v data_struct.ms5607}
{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.ms5607\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 214 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr double{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
\cell }{pressure\cell }{\cell }{\row }
}
{\xe \v data_struct.tsl}
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.tsl\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 219 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
\cell }{broadband\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
\cell }{ir\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
\cell }{lux\cell }{\cell }{\row }
}
{\xe \v data_struct.accel}
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.accel\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 225 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
\cell }{x\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\cell }{y\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
\cell }{z\cell }{\cell }{\row }
}
{\xe \v data_struct.mag}
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.mag\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 229 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
\cell }{x\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\cell }{y\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
\cell }{z\cell }{\cell }{\row }
}
{\xe \v data_struct.gyro}
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.gyro\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 233 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr float{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
\cell }{x\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\cell }{y\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
\cell }{z\cell }{\cell }{\row }
}
{\xe \v data_struct.geiger}
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.geiger\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 238 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
\cell }{x\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\cell }{y\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
\cell }{z\cell }{\cell }{\row }
}
{\xe \v data_struct.gps}
{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.gps\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 247 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr double{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
\cell }{altitude\cell }{\cell }{\row }
{\qr double{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
\cell }{course\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
\cell }{date\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
\cell }{hdop\cell }{\cell }{\row }
{\qr double{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
\cell }{lat\cell }{\cell }{\row }
{\qr double{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
\cell }{lng\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
\cell }{sats\cell }{\cell }{\row }
{\qr double{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
\cell }{speed\cell }{\cell }{\row }
{\qr uint32_t{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
\cell }{time\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
\cell }{vdop\cell }{\cell }{\row }
}
{\xe \v data_struct.enabled}
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct data_struct.enabled\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 272 of file Weather_Balloon.cpp.}\par
}
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
\cell }{DS18B20\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
\cell }{GPS\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
\cell }{LSM9DS1\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
\cell }{MS5607\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
\cell }{SHT31\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
\cell }{TSL2561\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
\cell }{UV\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ADXL345_CORRECTION\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:ADXL345_CORRECTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADXL345_CORRECTION\~ 0.911265}}
\par
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file Weather_Balloon.cpp.}\par
}
{\xe \v CO2_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:CO2_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CO2_PIN\~ A3}}
\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file Weather_Balloon.cpp.}\par
}
{\xe \v CUSTOM_HEATER_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:CUSTOM_HEATER_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CUSTOM_HEATER_PIN\~ 12}}
\par
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control().}\par
}
{\xe \v DECLINATION\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:DECLINATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DECLINATION\~ -8.58}}
\par
{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 153 of file Weather_Balloon.cpp.}\par
{
Referenced by printAttitude().}\par
}
{\xe \v DS18B20_RESOLUTION\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:DS18B20_RESOLUTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DS18B20_RESOLUTION\~ 11}}
\par
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_ds18b20().}\par
}
{\xe \v GEIGER_PWR_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GEIGER_PWR_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GEIGER_PWR_PIN\~ 39}}
\par
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 115 of file Weather_Balloon.cpp.}\par
{
Referenced by geiger_power(), and power_sensors().}\par
}
{\xe \v GPS_ACK\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_ACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_ACK\~ 0x83}}
\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 505 of file Weather_Balloon.cpp.}\par
}
{\xe \v GPS_CONFIG_NMEA\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_CONFIG_NMEA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_CONFIG_NMEA\~ 0x08}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 500 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_GPS_NMEA().}\par
}
{\xe \v GPS_CONFIG_OUT\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_CONFIG_OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_CONFIG_OUT\~ 0x09}}
\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 501 of file Weather_Balloon.cpp.}\par
}
{\xe \v GPS_CONFIG_PWR\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_CONFIG_PWR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_CONFIG_PWR\~ 0x12}}
\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 502 of file Weather_Balloon.cpp.}\par
}
{\xe \v GPS_CONFIG_WAAS\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_CONFIG_WAAS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_CONFIG_WAAS\~ 0x37}}
\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 503 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_GPS_WAAS().}\par
}
{\xe \v GPS_END_1\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_END_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_END_1\~ 0x0D}}
\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 495 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_GPS_NMEA(), and configure_GPS_WAAS().}\par
}
{\xe \v GPS_END_2\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_END_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_END_2\~ 0x0A}}
\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 496 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_GPS_NMEA(), and configure_GPS_WAAS().}\par
}
{\xe \v GPS_HEATER_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_HEATER_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_HEATER_PIN\~ 44}}
\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and power_sensors().}\par
}
{\xe \v GPS_NACK\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_NACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_NACK\~ 0x84}}
\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 506 of file Weather_Balloon.cpp.}\par
}
{\xe \v GPS_PRECISION\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_PRECISION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_PRECISION\~ 2.5}}
\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 509 of file Weather_Balloon.cpp.}\par
}
{\xe \v GPS_RESTART\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_RESTART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_RESTART\~ 0x01}}
\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 499 of file Weather_Balloon.cpp.}\par
}
{\xe \v GPS_SBYTE_1\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_SBYTE_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_SBYTE_1\~ 0xA0}}
\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 493 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_GPS_NMEA(), and configure_GPS_WAAS().}\par
}
{\xe \v GPS_SBYTE_2\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_SBYTE_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GPS_SBYTE_2\~ 0xA1}}
\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 494 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_GPS_NMEA(), and configure_GPS_WAAS().}\par
}
{\xe \v GREEN_LED\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GREEN_LED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GREEN_LED\~ 22}}
\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_sdcard(), count_down_led(), and led_power().}\par
}
{\xe \v LSM9DS1_AG\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:LSM9DS1_AG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LSM9DS1_AG\~ 0x6B}}
\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_LSM9DS1().}\par
}
{\xe \v LSM9DS1_M\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:LSM9DS1_M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LSM9DS1_M\~ 0x1E}}
\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_LSM9DS1().}\par
}
{\xe \v MAIN_HEATER_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:MAIN_HEATER_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAIN_HEATER_PIN\~ 45}}
\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 108 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and power_sensors().}\par
}
{\xe \v ONE_WIRE_BUS\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:ONE_WIRE_BUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ONE_WIRE_BUS\~ 4}}
\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file Weather_Balloon.cpp.}\par
}
{\xe \v PIEZO_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:PIEZO_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PIEZO_PIN\~ A2}}
\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file Weather_Balloon.cpp.}\par
{
Referenced by check_alarms(), location_alarm(), loop(), and setup().}\par
}
{\xe \v PRINT_RAW\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:PRINT_RAW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRINT_RAW}}
\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 156 of file Weather_Balloon.cpp.}\par
}
{\xe \v RED_LED\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:RED_LED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RED_LED\~ 24}}
\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_sdcard(), count_down_led(), and led_power().}\par
}
{\xe \v SAMPLE_TIME\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:SAMPLE_TIME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SAMPLE_TIME\~ 1000}}
\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file Weather_Balloon.cpp.}\par
{
Referenced by configure_PID().}\par
}
{\xe \v SHT31_HEATER_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:SHT31_HEATER_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHT31_HEATER_PIN\~ 5}}
\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and power_sensors().}\par
}
{\xe \v TSL2561_HEATER_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:TSL2561_HEATER_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TSL2561_HEATER_PIN\~ 46}}
\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and power_sensors().}\par
}
{\xe \v UV_HEATER_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:UV_HEATER_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UV_HEATER_PIN\~ 11}}
\par
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and power_sensors().}\par
}
{\xe \v UV_PIN\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:UV_PIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UV_PIN\~ A0}}
\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file Weather_Balloon.cpp.}\par
{
Referenced by readSensors(), and setup().}\par
}
{\xe \v YELLOW_LED\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:YELLOW_LED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define YELLOW_LED\~ 23}}
\par
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file Weather_Balloon.cpp.}\par
{
Referenced by count_down_led(), led_power(), and read_GPS().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v adjust_heaters\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:adjust_heaters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void adjust_heaters ()}}
\par
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1846 of file Weather_Balloon.cpp.}\par
}
{\xe \v Atmosphere\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:Atmosphere}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Atmosphere (const double  {\i alt}, double &  {\i sigma}, double &  {\i delta}, double &  {\i theta})}}
\par
{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3163 of file Weather_Balloon.cpp.}\par
{
References i.}\par
{
Referenced by set_alt_threshold().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a15ac45cd15b43e174eeb8f4272f0c875_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v beep_piezo\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:beep_piezo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void beep_piezo (unsigned long  {\i freq}, unsigned long  {\i millisecs}, unsigned int  {\i pin})}}
\par
{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1432 of file Weather_Balloon.cpp.}\par
{
References i.}\par
{
Referenced by check_alarms(), location_alarm(), loop(), and setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a538a7506e344ec9bf046564b160e9e7f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v check_alarms\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:check_alarms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void check_alarms ()}}
\par
{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3103 of file Weather_Balloon.cpp.}\par
{
References beep_piezo(), configuration, flash_landing(), led_power(), location_alarm(), PIEZO_PIN, piezo_power(), power_sensors(), watchdog, and watchdog_sleep().}\par
{
Referenced by loop().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a3f16b26bef419adf4e427a66af7fad37_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a3f16b26bef419adf4e427a66af7fad37_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v check_battery\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:check_battery}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void check_battery ()}}
\par
{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1852 of file Weather_Balloon.cpp.}\par
{
References data_struct::battery, Heat_Enable, and watchdog.}\par
{
Referenced by loop().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ad3d8902d8758d33ba2a536403243f47c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v check_decent\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:check_decent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void check_decent ()}}
\par
{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3043 of file Weather_Balloon.cpp.}\par
{
References altitude_hist, altitude_hist_head, altitude_hist_tail, configuration, pressure_hist, pressure_hist_head, and pressure_hist_tail.}\par
}
{\xe \v check_landing\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:check_landing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void check_landing ()}}
\par
{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3063 of file Weather_Balloon.cpp.}\par
{
References altitude_hist, configuration, i, pressure_hist, and watchdog.}\par
{
Referenced by loop().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a15e6d9ae56a77e3b476ba9804077a809_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v check_launch\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:check_launch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void check_launch ()}}
\par
{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3000 of file Weather_Balloon.cpp.}\par
{
References altitude_hist, configuration, i, pressure_hist, and watchdog.}\par
{
Referenced by loop().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ad470b7ae913b35bcd1e424b925a0277b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v compare_buffers\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:compare_buffers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool compare_buffers (uint8_t *  {\i first}, uint8_t *  {\i second}, uint16_t  {\i bytes})}}
\par
{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 748 of file Weather_Balloon.cpp.}\par
{
References configuration, and i.}\par
{
Referenced by configure_ds18b20().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_af4255510c1c5b3a92802bd817bb379c6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_button\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_button ()}}
\par
{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 688 of file Weather_Balloon.cpp.}\par
{
Referenced by setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a7a7c74cf298c3aefb3d55c6e9b926321_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_ds18b20\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_ds18b20}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_ds18b20 ()}}
\par
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 770 of file Weather_Balloon.cpp.}\par
{
References compare_buffers(), configuration, DS18B20_RESOLUTION, data_struct::enabled, data_struct::found, i, and temp_sensors.}\par
{
Referenced by setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a0493b2a2e791c613e271755e39c7ff02_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a0493b2a2e791c613e271755e39c7ff02_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_geiger\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_geiger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_geiger ()}}
\par
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 708 of file Weather_Balloon.cpp.}\par
{
Referenced by setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ad38c713e780279c311e2e78a03b4f5bf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_GPS_NMEA\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_GPS_NMEA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_GPS_NMEA ()}}
\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1772 of file Weather_Balloon.cpp.}\par
{
References GPS_CONFIG_NMEA, GPS_CRC(), GPS_END_1, GPS_END_2, GPS_SBYTE_1, GPS_SBYTE_2, and i.}\par
{
Referenced by setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a807f93d1e791a191cfeceae0e12e02ed_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a807f93d1e791a191cfeceae0e12e02ed_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_GPS_WAAS\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_GPS_WAAS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_GPS_WAAS ()}}
\par
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1822 of file Weather_Balloon.cpp.}\par
{
References GPS_CONFIG_WAAS, GPS_CRC(), GPS_END_1, GPS_END_2, GPS_SBYTE_1, and GPS_SBYTE_2.}\par
{
Referenced by setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_aebe7b86629932aff68df05ed2eb74682_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_aebe7b86629932aff68df05ed2eb74682_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_LSM9DS1\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_LSM9DS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_LSM9DS1 ()}}
\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 884 of file Weather_Balloon.cpp.}\par
{
References deviceSettings::agAddress, LSM9DS1::begin(), LSM9DS1::calibrate(), LSM9DS1::calibrateMag(), deviceSettings::commInterface, IMUSettings::device, data_struct::enabled, data_struct::found, IMU_MODE_I2C, LSM9DS1_AG, LSM9DS1_M, deviceSettings::mAddress, and LSM9DS1::settings.}\par
{
Referenced by setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a2c2e98945e78daa792b87b30868c3907_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a2c2e98945e78daa792b87b30868c3907_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_ms5607\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_ms5607}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_ms5607 ()}}
\par
{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 868 of file Weather_Balloon.cpp.}\par
{
References data_struct::enabled, and data_struct::found.}\par
{
Referenced by setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a94cd393dc19bb016dfea24631d4a3615_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_PID\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_PID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_PID ()}}
\par
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 981 of file Weather_Balloon.cpp.}\par
{
References MANUAL, and SAMPLE_TIME.}\par
{
Referenced by setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a24d559ff8c4c36c0c5b27749ec0f1db7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_sdcard\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_sdcard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_sdcard ()}}
\par
{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 946 of file Weather_Balloon.cpp.}\par
{
References sd_data::blocks, Sd2Card::cardSize(), configuration, sd_data::current_block, Sd2Card::errorCode(), find_sdcard_tail(), GREEN_LED, Sd2Card::init(), RED_LED, and SPI_HALF_SPEED.}\par
{
Referenced by setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_aec2dcfe4cd6ca84e8df5730d179fdc6f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_aec2dcfe4cd6ca84e8df5730d179fdc6f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_sht31\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_sht31}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_sht31 ()}}
\par
{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 909 of file Weather_Balloon.cpp.}\par
{
References Adafruit_SHT31::begin(), data_struct::enabled, and data_struct::found.}\par
{
Referenced by setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_abb8700028b489f20622252823d383f2d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_abb8700028b489f20622252823d383f2d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_TSL2561\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_TSL2561}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_TSL2561 (void )}}
\par
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 556 of file Weather_Balloon.cpp.}\par
{
References Adafruit_TSL2561_Unified::begin(), Adafruit_TSL2561_Unified::enableAutoRange(), data_struct::enabled, data_struct::found, Adafruit_TSL2561_Unified::setIntegrationTime(), and TSL2561_INTEGRATIONTIME_101MS.}\par
{
Referenced by setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a3f8e34eb2b9d824174dced9eefeecf90_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a3f8e34eb2b9d824174dced9eefeecf90_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v configure_write\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configure_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void configure_write ()}}
\par
{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3099 of file Weather_Balloon.cpp.}\par
}
{\xe \v count_down_led\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:count_down_led}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void count_down_led ()}}
\par
{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1252 of file Weather_Balloon.cpp.}\par
{
References GREEN_LED, led_power(), RED_LED, and YELLOW_LED.}\par
{
Referenced by setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a381ac8dbd73c0461a2bc7169fbc63e61_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a381ac8dbd73c0461a2bc7169fbc63e61_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v countof\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:countof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T , size_t N> size_t countof (T(&)  {\i array}[N])}}
\par
{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 528 of file Weather_Balloon.cpp.}\par
}
{\xe \v disable_peripherals\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:disable_peripherals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void disable_peripherals ()}}
\par
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1206 of file Weather_Balloon.cpp.}\par
{
Referenced by location_alarm().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a822a13dcab2c88f65ce6db0a3039596d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v dof_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:dof_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dof_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1098 of file Weather_Balloon.cpp.}\par
{
Referenced by power_sensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a4e9c8d405702380dcc2cb85707283b71_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ds18b20_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:ds18b20_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ds18b20_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1086 of file Weather_Balloon.cpp.}\par
{
Referenced by power_sensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_af2d24e60ddd98c1e2d7ebb921f6d7f46_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v EEPROM_read\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:EEPROM_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t EEPROM_read (uint16_t  {\i uiAddress})}}
\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2233 of file Weather_Balloon.cpp.}\par
{
Referenced by EEPROM_update().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a507cc28668dfd87892b99466e32b4b0b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v EEPROM_update\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:EEPROM_update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EEPROM_update (uint16_t  {\i uiAddress}, uint8_t  {\i ucData})}}
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2247 of file Weather_Balloon.cpp.}\par
{
References EEPROM_read().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a36234eb6bc49c0c10ed75b5fddadc4da_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v enter_sleep\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:enter_sleep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void enter_sleep (void )}}
\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1219 of file Weather_Balloon.cpp.}\par
{
Referenced by location_alarm().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a38dae68379e12eee7b465eac207d9e27_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v find_sdcard_tail\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:find_sdcard_tail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t find_sdcard_tail (const uint32_t  {\i first} = {\f2 1}, const uint32_t  {\i last} = {\f2 sdcard_data.blocks})}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2278 of file Weather_Balloon.cpp.}\par
{
References sd_data::buffer, configuration, sd_data::current_block, dataLog, i, and Sd2Card::readData().}\par
{
Referenced by configure_sdcard().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a276e156004c668500daa7aaa9a770585_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a276e156004c668500daa7aaa9a770585_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v flash_landing\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:flash_landing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void flash_landing (uint16_t  {\i time})}}
\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1422 of file Weather_Balloon.cpp.}\par
{
Referenced by check_alarms(), location_alarm(), loop(), and setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_af51f9e3565b0bfa3e28998f39b6a5217_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v geiger_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:geiger_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void geiger_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1052 of file Weather_Balloon.cpp.}\par
{
References GEIGER_PWR_PIN.}\par
{
Referenced by power_sensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ae30e39a79eefe72511818815ea7276eb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v GPS_CRC\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:GPS_CRC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t GPS_CRC (uint8_t *  {\i payload}, uint16_t  {\i length})}}
\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1754 of file Weather_Balloon.cpp.}\par
{
References i.}\par
{
Referenced by configure_GPS_NMEA(), and configure_GPS_WAAS().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a83c4c9265bfb7ab061bf1313dfad3857_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v gps_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:gps_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void gps_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1074 of file Weather_Balloon.cpp.}\par
{
Referenced by power_sensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a4535edf461b17f1e616af9db0447dc01_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v heater_control\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:heater_control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void heater_control ()}}
\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1872 of file Weather_Balloon.cpp.}\par
{
References AUTOMATIC, configuration, CUSTOM_HEATER_PIN, custom_vPID, data_struct::found, data_struct::gps, GPS_HEATER_PIN, gps_vPID, Heat_Enable, hyster, MAIN_HEATER_PIN, main_vPID, MANUAL, over_ambient, data_struct::sht31, SHT31_HEATER_PIN, sht_vPID, data_struct::temp, temp_sensors, TSL2561_HEATER_PIN, tsl_vPID, data_struct::uv, UV_HEATER_PIN, uv_vPID, and watchdog.}\par
{
Referenced by loop().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_aef763e1e054693bbaf47392b64590d72_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ISR\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:ISR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ISR (PCINT1_vect )}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 582 of file Weather_Balloon.cpp.}\par
{
References geiger.}\par
}
{\xe \v ISR\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:ISR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ISR (PCINT2_vect )}}
\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 612 of file Weather_Balloon.cpp.}\par
{
References geiger.}\par
}
{\xe \v ISR\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:ISR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ISR (INT4_vect )}}
\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 637 of file Weather_Balloon.cpp.}\par
{
References reset_flag.}\par
}
{\xe \v ISR\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:ISR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ISR (WDT_vect )}}
\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 683 of file Weather_Balloon.cpp.}\par
}
{\xe \v led_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:led_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void led_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1110 of file Weather_Balloon.cpp.}\par
{
References GREEN_LED, RED_LED, and YELLOW_LED.}\par
{
Referenced by check_alarms(), count_down_led(), power_sensors(), and setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a63f902cc1f2e24f8a484f7ef780dda08_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v location_alarm\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:location_alarm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void location_alarm ()}}
\par
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1235 of file Weather_Balloon.cpp.}\par
{
References beep_piezo(), disable_peripherals(), enter_sleep(), flash_landing(), PIEZO_PIN, piezo_power(), and watchdog_sleep().}\par
{
Referenced by check_alarms(), and setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a6cc16c4213f4098ade81a6c9a7919bf7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a6cc16c4213f4098ade81a6c9a7919bf7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v log_data\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:log_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void log_data ()}}
\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2413 of file Weather_Balloon.cpp.}\par
{
References sd_data::blocks, sd_data::buffer, configuration, sd_data::crc_errors, sd_data::current_block, dataLog, Sd2Card::errorCode(), Sd2Card::errorData(), data_struct::geiger, geiger, sd_data::hold_buffer, i, sd_data::num_packed, Sd2Card::readBlock(), reset_sdcard(), sd_calc_crc(), test_logging(), watchdog, sd_data::write_errors, and Sd2Card::writeBlock().}\par
{
Referenced by loop().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a66d17868f5a5bcc68dc70243bb439959_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a66d17868f5a5bcc68dc70243bb439959_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v loop\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loop ()}}
\par
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3330 of file Weather_Balloon.cpp.}\par
{
References data_struct::alarm, beep_piezo(), check_alarms(), check_battery(), check_landing(), check_launch(), configuration, default_config, flash_landing(), data_struct::gps, gps_vPID, heater_control(), data_struct::launched, log_data(), main_vPID, data_struct::ms5607, pet_watchdog(), PIEZO_PIN, print_sensors(), data_struct::pwm, queue_altitude(), queue_pressure(), read_sdcard(), read_serial(), readSensors(), reset_flag, data_struct::sht31, sht_vPID, tsl_vPID, data_struct::uv, uv_vPID, and watchdog.}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_afe461d27b9c48d5921c00d521181f12f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v ms5607_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:ms5607_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ms5607_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1025 of file Weather_Balloon.cpp.}\par
{
Referenced by power_sensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_aa705df77518e8cb907ba58c825af7531_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v pet_watchdog\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:pet_watchdog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pet_watchdog ()}}
\par
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3317 of file Weather_Balloon.cpp.}\par
{
References watchdog.}\par
{
Referenced by loop().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_abdf5b290d72a0f43221cc3461db70810_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v piezo_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:piezo_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void piezo_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1000 of file Weather_Balloon.cpp.}\par
{
Referenced by check_alarms(), location_alarm(), power_sensors(), and setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a8cc7d86d6ef1fa4f680bfe19b3246307_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v power_control\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:power_control}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void power_control ()}}
\par
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2223 of file Weather_Balloon.cpp.}\par
}
{\xe \v power_sensors\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:power_sensors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void power_sensors (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1126 of file Weather_Balloon.cpp.}\par
{
References dof_power(), ds18b20_power(), geiger_power(), GEIGER_PWR_PIN, GPS_HEATER_PIN, gps_power(), led_power(), MAIN_HEATER_PIN, ms5607_power(), piezo_power(), sd_power(), SHT31_HEATER_PIN, sht31_power(), TSL2561_HEATER_PIN, tsl2561_power(), and UV_HEATER_PIN.}\par
{
Referenced by check_alarms(), and setup().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a36e4683d7523a3b1e303d70a2989af58_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a36e4683d7523a3b1e303d70a2989af58_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v print_found\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:print_found}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_found ()}}
\par
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 928 of file Weather_Balloon.cpp.}\par
{
References data_struct::found, and temp_sensors.}\par
{
Referenced by setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ab21671796ffdb5448be7facdbae0a1fa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v print_sensors\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:print_sensors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_sensors ()}}
\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2091 of file Weather_Balloon.cpp.}\par
{
References data_struct::accel, data_struct::battery, RTCDateTime::day, TinyGPSPlus::failedChecksum(), data_struct::geiger, data_struct::gps, data_struct::gyro, RTCDateTime::hour, data_struct::mag, RTCDateTime::minute, RTCDateTime::month, data_struct::ms5607, RTCDateTime::second, data_struct::sht31, data_struct::temp, data_struct::tsl, RTCDateTime::unixtime, data_struct::uv, and RTCDateTime::year.}\par
{
Referenced by loop(), and test_logging().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a8644e7f4d35c348e0292bc7062c5147c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a8644e7f4d35c348e0292bc7062c5147c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v print_serial_help\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:print_serial_help}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_serial_help ()}}
\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3140 of file Weather_Balloon.cpp.}\par
{
Referenced by read_serial().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a23601be8cb3753e62a44c58a70575fe8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v printAttitude\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:printAttitude}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printAttitude (float  {\i ax}, float  {\i ay}, float  {\i az}, float  {\i mx}, float  {\i my}, float  {\i mz})}}
\par
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1566 of file Weather_Balloon.cpp.}\par
{
References DECLINATION.}\par
}
{\xe \v queue_altitude\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:queue_altitude}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void queue_altitude (float  {\i altitude})}}
\par
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2840 of file Weather_Balloon.cpp.}\par
{
References altitude_hist, altitude_hist_head, altitude_hist_tail, and watchdog.}\par
{
Referenced by loop().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_aef169403f1360281f7d4532c26949b6a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v queue_pressure\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:queue_pressure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void queue_pressure (float  {\i pressure})}}
\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2920 of file Weather_Balloon.cpp.}\par
{
References pressure_hist, pressure_hist_head, pressure_hist_tail, and watchdog.}\par
{
Referenced by loop().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_adeef8e326e21e271b7542e6e7c4e4bd9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v read_configuration\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:read_configuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_configuration ()}}
\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2270 of file Weather_Balloon.cpp.}\par
{
References configuration.}\par
}
{\xe \v read_GPS\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:read_GPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_GPS ()}}
\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1458 of file Weather_Balloon.cpp.}\par
{
References TinyGPSDate::age(), TinyGPSTime::age(), TinyGPSDecimal::age(), TinyGPSPlus::altitude, configuration, TinyGPSPlus::course, TinyGPSPlus::date, TinyGPSDate::day(), TinyGPSCourse::deg(), TinyGPSPlus::encode(), data_struct::gps, TinyGPSPlus::hdop, TinyGPSTime::hour(), TinyGPSLocation::isValid(), TinyGPSDate::isValid(), TinyGPSTime::isValid(), TinyGPSDecimal::isValid(), TinyGPSInteger::isValid(), TinyGPSCustom::isValid(), TinyGPSLocation::lat(), TinyGPSLocation::lng(), TinyGPSPlus::location, TinyGPSAltitude::meters(), TinyGPSTime::minute(), TinyGPSDate::month(), TinyGPSSpeed::mps(), TinyGPSPlus::satellites, TinyGPSTime::second(), set_clock, DS3231::setDateTime(), TinyGPSPlus::speed, TinyGPSPlus::time, TinyGPSDate::value(), TinyGPSTime::value(), TinyGPSDecimal::value(), TinyGPSInteger::value(), TinyGPSCustom::value(), vdop, TinyGPSDate::year(), and YELLOW_LED.}\par
{
Referenced by readSensors().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ab14d778dd0d52177eb147802a870639d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ab14d778dd0d52177eb147802a870639d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v read_sdcard\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:read_sdcard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_sdcard ()}}
\par
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2653 of file Weather_Balloon.cpp.}\par
{
References data_struct::accel, data_struct::alarm, data_struct::battery, sd_data::blocks, sd_data::buffer, sd_data::current_block, dataLog, data_struct::found, data_struct::geiger, data_struct::gps, data_struct::gyro, data_struct::heater_max, i, data_struct::launched, data_struct::mag, data_struct::ms5607, sd_data::num_packed, data_struct::pwm, Sd2Card::readBlock(), sd_calc_crc(), data_struct::sht31, data_struct::temp, data_struct::tsl, data_struct::unix_time, and data_struct::uv.}\par
{
Referenced by loop(), and read_serial().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a450f53a446d117859c49aeaac6c31f9f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a450f53a446d117859c49aeaac6c31f9f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v read_serial\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:read_serial}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_serial ()}}
\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3242 of file Weather_Balloon.cpp.}\par
{
References configuration, DEBUG, print_serial_help(), read_sdcard(), and set_alt_threshold().}\par
{
Referenced by loop().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a65d5c1fd6eda6f08406245b655c69907_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a65d5c1fd6eda6f08406245b655c69907_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v readSensors\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:readSensors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readSensors ()}}
\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1596 of file Weather_Balloon.cpp.}\par
{
References data_struct::accel, LSM9DS1::ax, LSM9DS1::ay, LSM9DS1::az, data_struct::battery, LSM9DS1::calcAccel(), LSM9DS1::calcGyro(), LSM9DS1::calcMag(), Adafruit_TSL2561_Unified::calculateLux(), configuration, DS3231::forceConversion(), data_struct::found, DS3231::getDateTime(), Adafruit_TSL2561_Unified::getLuminosity(), MAX17043::getSOC(), MAX17043::getVoltage(), data_struct::gps, LSM9DS1::gx, LSM9DS1::gy, data_struct::gyro, LSM9DS1::gz, data_struct::mag, data_struct::ms5607, LSM9DS1::mx, LSM9DS1::my, LSM9DS1::mz, read_GPS(), LSM9DS1::readAccel(), LSM9DS1::readGyro(), Adafruit_SHT31::readHumidity(), LSM9DS1::readMag(), Adafruit_SHT31::readTemperature(), DS3231::readTemperature(), data_struct::sht31, data_struct::temp, temp_sensors, data_struct::tsl, data_struct::unix_time, RTCDateTime::unixtime, data_struct::uv, UV_PIN, and watchdog.}\par
{
Referenced by loop().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ad40ccf803c2eff76d7e0e7a24c9937ef_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ad40ccf803c2eff76d7e0e7a24c9937ef_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v reset_sdcard\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:reset_sdcard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void reset_sdcard ()}}
\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2228 of file Weather_Balloon.cpp.}\par
{
Referenced by log_data().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_acbeafc32c286c932b7f4e012cf3ef829_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sd_calc_crc\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:sd_calc_crc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t sd_calc_crc (const uint8_t *  {\i src}, const uint8_t  {\i block_size})}}
\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 536 of file Weather_Balloon.cpp.}\par
{
References i.}\par
{
Referenced by log_data(), and read_sdcard().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a3d30b497ce4c43d95b30a95944f9d8be_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sd_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:sd_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void sd_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1062 of file Weather_Balloon.cpp.}\par
{
Referenced by power_sensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_aeea7cb9977724d0eff70fb24d03ef572_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v set_alt_threshold\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:set_alt_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void set_alt_threshold (float  {\i altitude}, String  {\i entered})}}
\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3207 of file Weather_Balloon.cpp.}\par
{
References Atmosphere(), configuration, and PZERO.}\par
{
Referenced by read_serial().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ad125fd2e1dac4c129e6735549100fc2b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ad125fd2e1dac4c129e6735549100fc2b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v set_launch_timeout\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:set_launch_timeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void set_launch_timeout (uint32_t  {\i timeout})}}
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3235 of file Weather_Balloon.cpp.}\par
}
{\xe \v set_location_timeout\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:set_location_timeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void set_location_timeout (uint32_t  {\i timeout})}}
\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3238 of file Weather_Balloon.cpp.}\par
}
{\xe \v set_pressure_threshold\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:set_pressure_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void set_pressure_threshold (float  {\i pressure})}}
\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 3231 of file Weather_Balloon.cpp.}\par
}
{\xe \v setup\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:setup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setup ()}}
\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1274 of file Weather_Balloon.cpp.}\par
{
References beep_piezo(), MAX17043::begin(), DS3231::begin(), configuration, configure_button(), configure_ds18b20(), configure_geiger(), configure_GPS_NMEA(), configure_GPS_WAAS(), configure_LSM9DS1(), configure_ms5607(), configure_PID(), configure_sdcard(), configure_sht31(), configure_TSL2561(), count_down_led(), default_config, flash_landing(), Heat_Enable, led_power(), location_alarm(), PIEZO_PIN, piezo_power(), power_sensors(), print_found(), MAX17043::quickStart(), reset_flag, UV_PIN, watchdog, watchdog_reset_only(), and watchdog_sleep().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a4fc01d736fe50cf5b977f755b675f11d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v sht31_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:sht31_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void sht31_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1038 of file Weather_Balloon.cpp.}\par
{
Referenced by power_sensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a19d08a06df1dca8e8a9be91e9de13f33_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v test_logging\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:test_logging}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void test_logging ()}}
\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 2397 of file Weather_Balloon.cpp.}\par
{
References sd_data::buffer, dataLog, i, and print_sensors().}\par
{
Referenced by log_data().}\par
{
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a22feff51a4b8144a2264bc812eedaddb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a22feff51a4b8144a2264bc812eedaddb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v tsl2561_power\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:tsl2561_power}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tsl2561_power (bool  {\i power})}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1012 of file Weather_Balloon.cpp.}\par
{
Referenced by power_sensors().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_aa1ddd1a74edee558cd1f5bbf58c32eba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v watchdog_reset_only\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:watchdog_reset_only}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void watchdog_reset_only ()}}
\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1183 of file Weather_Balloon.cpp.}\par
{
Referenced by setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_ac41bb5082e170a29d9fac793b99d2888_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\xe \v watchdog_sleep\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:watchdog_sleep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void watchdog_sleep ()}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1161 of file Weather_Balloon.cpp.}\par
{
Referenced by check_alarms(), location_alarm(), and setup().}\par
{
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_weather___balloon_8cpp_a905910daced665e99b1c14fa51ef9938_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v altitude_hist\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:altitude_hist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float altitude_hist[120]}}
\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 375 of file Weather_Balloon.cpp.}\par
{
Referenced by check_decent(), check_landing(), check_launch(), and queue_altitude().}\par
}
{\xe \v altitude_hist_head\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:altitude_hist_head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t altitude_hist_head = 0}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 380 of file Weather_Balloon.cpp.}\par
{
Referenced by check_decent(), and queue_altitude().}\par
}
{\xe \v altitude_hist_tail\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:altitude_hist_tail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t altitude_hist_tail = -1}}
\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 381 of file Weather_Balloon.cpp.}\par
{
Referenced by check_decent(), and queue_altitude().}\par
}
{\xe \v AZERO\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:AZERO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double AZERO = 340.294}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file Weather_Balloon.cpp.}\par
}
{\xe \v clock\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:clock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DS3231} clock}}
\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 413 of file Weather_Balloon.cpp.}\par
{
Referenced by Adafruit_ADXL345_Unified::Adafruit_ADXL345_Unified().}\par
}
{\xe \v configuration\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:configuration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}   configuration}}
\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by check_alarms(), check_decent(), check_landing(), check_launch(), compare_buffers(), configure_ds18b20(), configure_sdcard(), find_sdcard_tail(), heater_control(), log_data(), loop(), read_configuration(), read_GPS(), read_serial(), readSensors(), set_alt_threshold(), and setup().}\par
}
{\xe \v count_at_altitude\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:count_at_altitude}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t count_at_altitude = 0}}
\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 371 of file Weather_Balloon.cpp.}\par
}
{\xe \v custom_vPID\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:custom_vPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PID} PID_custom & custom_vPID}}
\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 490 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control().}\par
}
{\xe \v dataLog\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:dataLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b data_struct} dataLog}}
\par
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 290 of file Weather_Balloon.cpp.}\par
{
Referenced by find_sdcard_tail(), log_data(), read_sdcard(), and test_logging().}\par
}
{\xe \v date_time\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:date_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RTCDateTime} date_time}}
\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 414 of file Weather_Balloon.cpp.}\par
}
{\xe \v DEBUG\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DEBUG = false}}
\par
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 11 of file Weather_Balloon.cpp.}\par
{
Referenced by read_serial().}\par
}
{\xe \v DEBUG_MORE\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:DEBUG_MORE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool DEBUG_MORE = false}}
\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 12 of file Weather_Balloon.cpp.}\par
}
{\xe \v default_config\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:default_config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}   default_config}}
\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by loop(), and setup().}\par
}
{\xe \v DOF\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:DOF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LSM9DS1} DOF}}
\par
{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 409 of file Weather_Balloon.cpp.}\par
}
{\xe \v eeprom\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:eeprom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b eeprom_struct} eeprom}}
\par
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 451 of file Weather_Balloon.cpp.}\par
}
{\xe \v FT2METERS\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:FT2METERS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double FT2METERS = 0.3048}}
\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file Weather_Balloon.cpp.}\par
}
{\xe \v fuel_gauge\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:fuel_gauge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MAX17043} fuel_gauge}}
\par
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 407 of file Weather_Balloon.cpp.}\par
}
{\xe \v geiger\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:geiger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}   geiger}}
\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by ISR(), and log_data().}\par
}
{\xe \v gps\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:gps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSPlus} gps}}
\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 456 of file Weather_Balloon.cpp.}\par
{
Referenced by TinyGPSCustom::TinyGPSCustom().}\par
}
{\xe \v gps_vPID\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:gps_vPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PID} PID_gps & gps_vPID}}
\par
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 486 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and loop().}\par
}
{\xe \v Heat_Enable\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:Heat_Enable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Heat_Enable = false}}
\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 519 of file Weather_Balloon.cpp.}\par
{
Referenced by check_battery(), heater_control(), and setup().}\par
}
{\xe \v hyster\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:hyster}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float hyster = 0.5}}
\par
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control().}\par
}
{\xe \v KELVIN2RANKINE\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:KELVIN2RANKINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double KELVIN2RANKINE = 1.8}}
\par
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file Weather_Balloon.cpp.}\par
}
{\xe \v main_vPID\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:main_vPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PID} PID_main & main_vPID}}
\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 485 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and loop().}\par
}
{\xe \v oneWire\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:oneWire}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DallasTemperature} DS18B20 & oneWire}}
\par
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 394 of file Weather_Balloon.cpp.}\par
}
{\xe \v over_ambient\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:over_ambient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float over_ambient = 2}}
\par
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control().}\par
}
{\xe \v pressure_hist\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:pressure_hist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float pressure_hist[120]}}
\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 374 of file Weather_Balloon.cpp.}\par
{
Referenced by check_decent(), check_landing(), check_launch(), and queue_pressure().}\par
}
{\xe \v pressure_hist_head\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:pressure_hist_head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t pressure_hist_head = 0}}
\par
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 378 of file Weather_Balloon.cpp.}\par
{
Referenced by check_decent(), and queue_pressure().}\par
}
{\xe \v pressure_hist_tail\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:pressure_hist_tail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t pressure_hist_tail = -1}}
\par
{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 379 of file Weather_Balloon.cpp.}\par
{
Referenced by check_decent(), and queue_pressure().}\par
}
{\xe \v PSF2NSM\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:PSF2NSM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double PSF2NSM = 47.880258}}
\par
{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file Weather_Balloon.cpp.}\par
}
{\xe \v PZERO\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:PZERO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double PZERO = 101325.0}}
\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file Weather_Balloon.cpp.}\par
{
Referenced by set_alt_threshold().}\par
}
{\xe \v reset_flag\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:reset_flag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile bool reset_flag = false}}
\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 524 of file Weather_Balloon.cpp.}\par
{
Referenced by ISR(), loop(), and setup().}\par
}
{\xe \v RHOZERO\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:RHOZERO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double RHOZERO = 1.225}}
\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file Weather_Balloon.cpp.}\par
}
{\xe \v SCF2KCM\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:SCF2KCM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double SCF2KCM = 515.379}}
\par
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file Weather_Balloon.cpp.}\par
}
{\xe \v sdcard\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:sdcard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Sd2Card} sdcard}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 411 of file Weather_Balloon.cpp.}\par
}
{\xe \v sdcard_data\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:sdcard_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b sd_data} sdcard_data}}
\par
{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 441 of file Weather_Balloon.cpp.}\par
}
{\xe \v set_clock\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:set_clock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool set_clock = false}}
\par
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 522 of file Weather_Balloon.cpp.}\par
{
Referenced by read_GPS().}\par
}
{\xe \v sht31\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:sht31}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Adafruit_SHT31} sht31 = {\b Adafruit_SHT31}()}}
\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 403 of file Weather_Balloon.cpp.}\par
}
{\xe \v sht_vPID\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:sht_vPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PID} PID_sht & sht_vPID}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 489 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and loop().}\par
}
{\xe \v temp_sensors\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:temp_sensors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct \{ ... \}   temp_sensors}}
\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by configure_ds18b20(), heater_control(), print_found(), and readSensors().}\par
}
{\xe \v tsl\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:tsl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Adafruit_TSL2561_Unified} tsl = {\b Adafruit_TSL2561_Unified}({\b TSL2561_ADDR_FLOAT}, 12345)}}
\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 405 of file Weather_Balloon.cpp.}\par
}
{\xe \v tsl_vPID\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:tsl_vPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PID} PID_tsl & tsl_vPID}}
\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 488 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and loop().}\par
}
{\xe \v TZERO\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:TZERO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double TZERO = 288.15}}
\par
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file Weather_Balloon.cpp.}\par
}
{\xe \v uv_vPID\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:uv_vPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PID} PID_uv & uv_vPID}}
\par
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 487 of file Weather_Balloon.cpp.}\par
{
Referenced by heater_control(), and loop().}\par
}
{\xe \v vdop\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:vdop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TinyGPSCustom} vdop({\b gps},"GPGSA", 17)}}
\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by read_GPS().}\par
}
{\xe \v watchdog\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:watchdog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
volatile uint16_t watchdog = 10}}
\par
{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 13 of file Weather_Balloon.cpp.}\par
{
Referenced by check_alarms(), check_battery(), check_landing(), check_launch(), heater_control(), log_data(), loop(), pet_watchdog(), queue_altitude(), queue_pressure(), readSensors(), and setup().}\par
}
{\xe \v Wire\:Weather_Balloon.cpp}
{\xe \v Weather_Balloon.cpp\:Wire}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MS5xxx} ms5607& Wire}}
\par
{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 400 of file Weather_Balloon.cpp.}\par
{
Referenced by RTC_DS1307::adjust(), RTC_DS3231::adjust(), RTC_DS3231::BBSQWEnable(), MAX17043::begin(), Adafruit_SHT31::begin(), DS3231::begin(), Adafruit_ADXL345_Unified::begin(), Adafruit_SI1145::begin(), Adafruit_TSL2561_Unified::begin(), MAG3110::config(), RTC_DS3231::enable32kHz(), RTC_DS3231::forceTempConv(), DS3231::getAlarm1(), DS3231::getAlarm2(), DS3231::getAlarmType1(), DS3231::getAlarmType2(), RTC_DS3231::getControlRegisterData(), DS3231::getDateTime(), RTC_DS3231::getTempAsFloat(), RTC_DS3231::getTempAsWord(), LSM9DS1::I2CreadByte(), LSM9DS1::I2CreadBytes(), LSM9DS1::I2CwriteByte(), LSM9DS1::initI2C(), DS3231::isAlarm2(), RTC_DS1307::isrunning(), RTC_DS3231::isrunning(), RTC_DS1307::now(), RTC_DS3231::now(), Adafruit_ADXL345_Unified::read16(), MAG3110::read_x(), MAG3110::read_y(), MAG3110::read_z(), Adafruit_SHT31::readHumidity(), Adafruit_SI1145::readProx(), Adafruit_ADXL345_Unified::readRegister(), Adafruit_SHT31::readStatus(), DS3231::readTemperature(), DS3231::setAlarm1(), DS3231::setAlarm2(), MAX17043::setCompensation(), DS3231::setDateTime(), RTC_DS3231::SQWEnable(), RTC_DS3231::SQWFrequency(), and Adafruit_ADXL345_Unified::writeRegister().}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}